parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158128
  time (eval):    0.0406841
  gflops (eval):  125.064
  gflops (total): 120.385
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158128,0.0406841,125.064,120.385

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190564
  gflops (total): 26.7002
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429643
  gflops (eval):  118.427
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429643,118.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2488
  maximum absolute entry in einsum_ir solution: 40.2488
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00160197
  time (eval):    0.0422771
  gflops (eval):  120.352
  gflops (total): 115.958
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00160197,0.0422771,120.352,115.958

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190304
  gflops (total): 26.7368
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435503
  gflops (eval):  116.833
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435503,116.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6202
  maximum absolute entry in einsum_ir solution: 37.6202
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158425
  time (eval):    0.0407159
  gflops (eval):  124.966
  gflops (total): 120.286
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158425,0.0407159,124.966,120.286

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193545
  gflops (total): 26.289
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434967
  gflops (eval):  116.977
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434967,116.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4405
  maximum absolute entry in einsum_ir solution: 38.4405
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157465
  time (eval):    0.0436914
  gflops (eval):  116.456
  gflops (total): 112.405
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157465,0.0436914,116.456,112.405

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189948
  gflops (total): 26.7868
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434048
  gflops (eval):  117.225
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434048,117.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4481
  maximum absolute entry in einsum_ir solution: 37.4481
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159642
  time (eval):    0.0432584
  gflops (eval):  117.622
  gflops (total): 113.435
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159642,0.0432584,117.622,113.435

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188578
  gflops (total): 26.9814
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432728
  gflops (eval):  117.582
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432728,117.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8977
  maximum absolute entry in einsum_ir solution: 41.8977
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00188745
  time (eval):    0.0408989
  gflops (eval):  124.407
  gflops (total): 118.919
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00188745,0.0408989,124.407,118.919

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191812
  gflops (total): 26.5265
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.5265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0440152
  gflops (eval):  115.599
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0440152,115.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0592
  maximum absolute entry in einsum_ir solution: 40.0592
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0018866
  time (eval):    0.0405453
  gflops (eval):  125.492
  gflops (total): 119.912
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0018866,0.0405453,125.492,119.912

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191187
  gflops (total): 26.6133
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043323
  gflops (eval):  117.446
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043323,117.446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8535
  maximum absolute entry in einsum_ir solution: 39.8535
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00170148
  time (eval):    0.0405191
  gflops (eval):  125.573
  gflops (total): 120.513
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00170148,0.0405191,125.573,120.513

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189817
  gflops (total): 26.8054
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435527
  gflops (eval):  116.827
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435527,116.827,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4532
  maximum absolute entry in einsum_ir solution: 37.4532
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00166583
  time (eval):    0.0415442
  gflops (eval):  122.475
  gflops (total): 117.753
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00166583,0.0415442,122.475,117.753

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.18989
  gflops (total): 26.7951
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0439988
  gflops (eval):  115.642
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0439988,115.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4682
  maximum absolute entry in einsum_ir solution: 38.4682
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159662
  time (eval):    0.0410588
  gflops (eval):  123.923
  gflops (total): 119.284
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159662,0.0410588,123.923,119.284

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191227
  gflops (total): 26.6078
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435987
  gflops (eval):  116.703
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435987,116.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1914
  maximum absolute entry in einsum_ir solution: 39.1914
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159987
  time (eval):    0.0401684
  gflops (eval):  126.67
  gflops (total): 121.818
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159987,0.0401684,126.67,121.818

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190585
  gflops (total): 26.6973
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434776
  gflops (eval):  117.028
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434776,117.028,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5247
  maximum absolute entry in einsum_ir solution: 37.5247
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158341
  time (eval):    0.0430418
  gflops (eval):  118.213
  gflops (total): 114.019
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158341,0.0430418,118.213,114.019

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189559
  gflops (total): 26.8419
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435876
  gflops (eval):  116.733
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435876,116.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0728
  maximum absolute entry in einsum_ir solution: 38.0728
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158817
  time (eval):    0.0410556
  gflops (eval):  123.932
  gflops (total): 119.317
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158817,0.0410556,123.932,119.317

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188935
  gflops (total): 26.9306
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431145
  gflops (eval):  118.014
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431145,118.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.639
  maximum absolute entry in einsum_ir solution: 38.639
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00210665
  time (eval):    0.0418605
  gflops (eval):  121.549
  gflops (total): 115.726
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00210665,0.0418605,121.549,115.726

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.192142
  gflops (total): 26.481
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437274
  gflops (eval):  116.36
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437274,116.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1599
  maximum absolute entry in einsum_ir solution: 42.1599
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158113
  time (eval):    0.0440028
  gflops (eval):  115.632
  gflops (total): 111.621
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158113,0.0440028,115.632,111.621

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191922
  gflops (total): 26.5114
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.5114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434394
  gflops (eval):  117.131
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434394,117.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6725
  maximum absolute entry in einsum_ir solution: 36.6725
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159391
  time (eval):    0.0408881
  gflops (eval):  124.44
  gflops (total): 119.771
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159391,0.0408881,124.44,119.771

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190505
  gflops (total): 26.7085
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437392
  gflops (eval):  116.329
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437392,116.329,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1109
  maximum absolute entry in einsum_ir solution: 42.1109
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157023
  time (eval):    0.0425237
  gflops (eval):  119.654
  gflops (total): 115.393
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157023,0.0425237,119.654,115.393

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190093
  gflops (total): 26.7664
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435829
  gflops (eval):  116.746
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435829,116.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7
  maximum absolute entry in einsum_ir solution: 38.7
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015899
  time (eval):    0.0429862
  gflops (eval):  118.366
  gflops (total): 114.145
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015899,0.0429862,118.366,114.145

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190512
  gflops (total): 26.7076
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043465
  gflops (eval):  117.062
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043465,117.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8748
  maximum absolute entry in einsum_ir solution: 42.8748
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157712
  time (eval):    0.0416741
  gflops (eval):  122.093
  gflops (total): 117.641
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157712,0.0416741,122.093,117.641

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.192317
  gflops (total): 26.4569
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.4569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429672
  gflops (eval):  118.419
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429672,118.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8897
  maximum absolute entry in einsum_ir solution: 38.8897
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158237
  time (eval):    0.0410102
  gflops (eval):  124.07
  gflops (total): 119.46
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158237,0.0410102,124.07,119.46

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193035
  gflops (total): 26.3586
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.3586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438525
  gflops (eval):  116.028
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0438525,116.028,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8966
  maximum absolute entry in einsum_ir solution: 38.8966
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159202
  time (eval):    0.0435475
  gflops (eval):  116.841
  gflops (total): 112.72
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159202,0.0435475,116.841,112.72

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188718
  gflops (total): 26.9615
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434249
  gflops (eval):  117.17
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434249,117.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4958
  maximum absolute entry in einsum_ir solution: 38.4958
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00171153
  time (eval):    0.0431155
  gflops (eval):  118.011
  gflops (total): 113.506
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00171153,0.0431155,118.011,113.506

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191316
  gflops (total): 26.5953
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.5953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437736
  gflops (eval):  116.237
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437736,116.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8929
  maximum absolute entry in einsum_ir solution: 37.8929
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00164162
  time (eval):    0.0413355
  gflops (eval):  123.093
  gflops (total): 118.391
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00164162,0.0413355,123.093,118.391

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193203
  gflops (total): 26.3356
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.3356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434972
  gflops (eval):  116.976
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434972,116.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9637
  maximum absolute entry in einsum_ir solution: 35.9637
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162576
  time (eval):    0.0429738
  gflops (eval):  118.4
  gflops (total): 114.084
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00162576,0.0429738,118.4,114.084

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19038
  gflops (total): 26.7262
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7262

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433588
  gflops (eval):  117.349
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433588,117.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0925
  maximum absolute entry in einsum_ir solution: 39.0925
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157621
  time (eval):    0.0412871
  gflops (eval):  123.238
  gflops (total): 118.706
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157621,0.0412871,123.238,118.706

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19033
  gflops (total): 26.7332
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435319
  gflops (eval):  116.883
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435319,116.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7486
  maximum absolute entry in einsum_ir solution: 41.7486
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156281
  time (eval):    0.0405599
  gflops (eval):  125.447
  gflops (total): 120.793
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00156281,0.0405599,125.447,120.793

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190526
  gflops (total): 26.7057
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0441024
  gflops (eval):  115.371
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0441024,115.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1032
  maximum absolute entry in einsum_ir solution: 35.1032
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00169209
  time (eval):    0.0419266
  gflops (eval):  121.358
  gflops (total): 116.65
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00169209,0.0419266,121.358,116.65

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190108
  gflops (total): 26.7643
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434639
  gflops (eval):  117.065
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434639,117.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1409
  maximum absolute entry in einsum_ir solution: 38.1409
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00168257
  time (eval):    0.0411569
  gflops (eval):  123.627
  gflops (total): 118.772
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00168257,0.0411569,123.627,118.772

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188975
  gflops (total): 26.9248
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432892
  gflops (eval):  117.538
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432892,117.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3888
  maximum absolute entry in einsum_ir solution: 37.3888
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157569
  time (eval):    0.0418608
  gflops (eval):  121.548
  gflops (total): 117.139
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157569,0.0418608,121.548,117.139

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189943
  gflops (total): 26.7876
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436012
  gflops (eval):  116.697
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436012,116.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4325
  maximum absolute entry in einsum_ir solution: 37.4325
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159079
  time (eval):    0.0412479
  gflops (eval):  123.355
  gflops (total): 118.774
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159079,0.0412479,123.355,118.774

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.187497
  gflops (total): 27.1371
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,27.1371

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432652
  gflops (eval):  117.603
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432652,117.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5238
  maximum absolute entry in einsum_ir solution: 41.5238
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157434
  time (eval):    0.0412562
  gflops (eval):  123.33
  gflops (total): 118.796
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157434,0.0412562,123.33,118.796

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190333
  gflops (total): 26.7328
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434493
  gflops (eval):  117.105
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434493,117.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.746
  maximum absolute entry in einsum_ir solution: 38.746
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0016928
  time (eval):    0.0413206
  gflops (eval):  123.138
  gflops (total): 118.291
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0016928,0.0413206,123.138,118.291

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191696
  gflops (total): 26.5426
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.5426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433719
  gflops (eval):  117.314
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433719,117.314,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1835
  maximum absolute entry in einsum_ir solution: 40.1835
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00174073
  time (eval):    0.0411063
  gflops (eval):  123.78
  gflops (total): 118.751
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00174073,0.0411063,123.78,118.751

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189757
  gflops (total): 26.8139
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435859
  gflops (eval):  116.738
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435859,116.738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1698
  maximum absolute entry in einsum_ir solution: 37.1698
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00176057
  time (eval):    0.0409303
  gflops (eval):  124.312
  gflops (total): 119.185
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00176057,0.0409303,124.312,119.185

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188411
  gflops (total): 27.0055
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,27.0055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436968
  gflops (eval):  116.441
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436968,116.441,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2189
  maximum absolute entry in einsum_ir solution: 41.2189
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158516
  time (eval):    0.0437632
  gflops (eval):  116.265
  gflops (total): 112.201
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158516,0.0437632,116.265,112.201

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190367
  gflops (total): 26.728
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437247
  gflops (eval):  116.367
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437247,116.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8314
  maximum absolute entry in einsum_ir solution: 40.8314
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158745
  time (eval):    0.0415406
  gflops (eval):  122.485
  gflops (total): 117.977
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158745,0.0415406,122.485,117.977

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.18982
  gflops (total): 26.805
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432833
  gflops (eval):  117.554
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432833,117.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6795
  maximum absolute entry in einsum_ir solution: 35.6795
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157867
  time (eval):    0.0424395
  gflops (eval):  119.891
  gflops (total): 115.591
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157867,0.0424395,119.891,115.591

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191052
  gflops (total): 26.6321
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438388
  gflops (eval):  116.064
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0438388,116.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9195
  maximum absolute entry in einsum_ir solution: 40.9195
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00169648
  time (eval):    0.0437129
  gflops (eval):  116.398
  gflops (total): 112.05
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00169648,0.0437129,116.398,112.05

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189194
  gflops (total): 26.8936
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8936

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436113
  gflops (eval):  116.67
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436113,116.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4161
  maximum absolute entry in einsum_ir solution: 39.4161
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157314
  time (eval):    0.0412016
  gflops (eval):  123.493
  gflops (total): 118.951
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157314,0.0412016,123.493,118.951

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189998
  gflops (total): 26.7798
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0452306
  gflops (eval):  112.493
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0452306,112.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6348
  maximum absolute entry in einsum_ir solution: 35.6348
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159323
  time (eval):    0.0423766
  gflops (eval):  120.069
  gflops (total): 115.718
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159323,0.0423766,120.069,115.718

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191162
  gflops (total): 26.6167
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432868
  gflops (eval):  117.544
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432868,117.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0765
  maximum absolute entry in einsum_ir solution: 37.0765
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00167484
  time (eval):    0.0430397
  gflops (eval):  118.219
  gflops (total): 113.791
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00167484,0.0430397,118.219,113.791

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188187
  gflops (total): 27.0375
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,27.0375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433788
  gflops (eval):  117.295
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433788,117.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2289
  maximum absolute entry in einsum_ir solution: 43.2289
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015978
  time (eval):    0.0420704
  gflops (eval):  120.943
  gflops (total): 116.518
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015978,0.0420704,120.943,116.518

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.18968
  gflops (total): 26.8247
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429638
  gflops (eval):  118.428
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429638,118.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5065
  maximum absolute entry in einsum_ir solution: 39.5065
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159658
  time (eval):    0.0418468
  gflops (eval):  121.589
  gflops (total): 117.121
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159658,0.0418468,121.589,117.121

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193132
  gflops (total): 26.3453
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.3453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0439347
  gflops (eval):  115.811
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0439347,115.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5121
  maximum absolute entry in einsum_ir solution: 38.5121
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157672
  time (eval):    0.0413541
  gflops (eval):  123.038
  gflops (total): 118.519
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157672,0.0413541,123.038,118.519

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19116
  gflops (total): 26.6171
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043451
  gflops (eval):  117.1
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043451,117.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0237
  maximum absolute entry in einsum_ir solution: 37.0237
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158287
  time (eval):    0.0407775
  gflops (eval):  124.777
  gflops (total): 120.115
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158287,0.0407775,124.777,120.115

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190345
  gflops (total): 26.731
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433131
  gflops (eval):  117.473
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433131,117.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8131
  maximum absolute entry in einsum_ir solution: 37.8131
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015766
  time (eval):    0.0429695
  gflops (eval):  118.412
  gflops (total): 114.221
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015766,0.0429695,118.412,114.221

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190878
  gflops (total): 26.6564
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434714
  gflops (eval):  117.045
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434714,117.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.7131
  maximum absolute entry in einsum_ir solution: 40.7131
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015685
  time (eval):    0.0430737
  gflops (eval):  118.126
  gflops (total): 113.976
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015685,0.0430737,118.126,113.976

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188423
  gflops (total): 27.0036
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,27.0036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433364
  gflops (eval):  117.41
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433364,117.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4675
  maximum absolute entry in einsum_ir solution: 34.4675
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158322
  time (eval):    0.0422158
  gflops (eval):  120.526
  gflops (total): 116.17
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158322,0.0422158,120.526,116.17

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190389
  gflops (total): 26.7249
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435811
  gflops (eval):  116.75
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435811,116.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5229
  maximum absolute entry in einsum_ir solution: 40.5229
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159023
  time (eval):    0.0429464
  gflops (eval):  118.476
  gflops (total): 114.246
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159023,0.0429464,118.476,114.246

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189517
  gflops (total): 26.8479
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043768
  gflops (eval):  116.252
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043768,116.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0026
  maximum absolute entry in einsum_ir solution: 38.0026
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159063
  time (eval):    0.0429841
  gflops (eval):  118.372
  gflops (total): 114.148
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159063,0.0429841,118.372,114.148

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190372
  gflops (total): 26.7272
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433193
  gflops (eval):  117.456
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433193,117.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5118
  maximum absolute entry in einsum_ir solution: 41.5118
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158437
  time (eval):    0.0422518
  gflops (eval):  120.424
  gflops (total): 116.071
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158437,0.0422518,120.424,116.071

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19045
  gflops (total): 26.7163
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.04366
  gflops (eval):  116.54
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.04366,116.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6618
  maximum absolute entry in einsum_ir solution: 38.6618
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162574
  time (eval):    0.0433445
  gflops (eval):  117.388
  gflops (total): 113.144
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00162574,0.0433445,117.388,113.144

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191027
  gflops (total): 26.6356
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436402
  gflops (eval):  116.592
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436402,116.592,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6249
  maximum absolute entry in einsum_ir solution: 38.6249
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159633
  time (eval):    0.0428093
  gflops (eval):  118.855
  gflops (total): 114.583
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159633,0.0428093,118.855,114.583

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.1899
  gflops (total): 26.7936
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7936

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433733
  gflops (eval):  117.31
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433733,117.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6975
  maximum absolute entry in einsum_ir solution: 38.6975
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159197
  time (eval):    0.0414867
  gflops (eval):  122.645
  gflops (total): 118.112
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159197,0.0414867,122.645,118.112

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190031
  gflops (total): 26.7752
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433376
  gflops (eval):  117.407
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433376,117.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3847
  maximum absolute entry in einsum_ir solution: 36.3847
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158663
  time (eval):    0.0411807
  gflops (eval):  123.556
  gflops (total): 118.972
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158663,0.0411807,123.556,118.972

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189179
  gflops (total): 26.8957
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438497
  gflops (eval):  116.035
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0438497,116.035,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8626
  maximum absolute entry in einsum_ir solution: 37.8626
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157844
  time (eval):    0.0423031
  gflops (eval):  120.278
  gflops (total): 115.951
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157844,0.0423031,120.278,115.951

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190317
  gflops (total): 26.735
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436118
  gflops (eval):  116.668
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436118,116.668,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.586
  maximum absolute entry in einsum_ir solution: 37.586
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00205512
  time (eval):    0.040599
  gflops (eval):  125.326
  gflops (total): 119.288
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00205512,0.040599,125.326,119.288

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189262
  gflops (total): 26.884
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438285
  gflops (eval):  116.092
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0438285,116.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3087
  maximum absolute entry in einsum_ir solution: 40.3087
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158964
  time (eval):    0.0407458
  gflops (eval):  124.875
  gflops (total): 120.186
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158964,0.0407458,124.875,120.186

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188779
  gflops (total): 26.9528
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432389
  gflops (eval):  117.675
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432389,117.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9577
  maximum absolute entry in einsum_ir solution: 35.9577
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161002
  time (eval):    0.0409484
  gflops (eval):  124.257
  gflops (total): 119.556
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00161002,0.0409484,124.257,119.556

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.187803
  gflops (total): 27.0928
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,27.0928

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430719
  gflops (eval):  118.131
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430719,118.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1267
  maximum absolute entry in einsum_ir solution: 37.1267
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158672
  time (eval):    0.0412516
  gflops (eval):  123.344
  gflops (total): 118.775
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158672,0.0412516,123.344,118.775

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188484
  gflops (total): 26.995
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432643
  gflops (eval):  117.605
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432643,117.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1066
  maximum absolute entry in einsum_ir solution: 40.1066
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158569
  time (eval):    0.0411981
  gflops (eval):  123.504
  gflops (total): 118.926
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158569,0.0411981,123.504,118.926

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190595
  gflops (total): 26.696
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436092
  gflops (eval):  116.675
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436092,116.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2334
  maximum absolute entry in einsum_ir solution: 41.2334
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162766
  time (eval):    0.0407996
  gflops (eval):  124.71
  gflops (total): 119.926
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00162766,0.0407996,124.71,119.926

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190255
  gflops (total): 26.7436
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434748
  gflops (eval):  117.036
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434748,117.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4262
  maximum absolute entry in einsum_ir solution: 38.4262
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00163923
  time (eval):    0.0411939
  gflops (eval):  123.516
  gflops (total): 118.789
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00163923,0.0411939,123.516,118.789

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189089
  gflops (total): 26.9086
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429733
  gflops (eval):  118.402
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429733,118.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6172
  maximum absolute entry in einsum_ir solution: 40.6172
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159425
  time (eval):    0.042181
  gflops (eval):  120.626
  gflops (total): 116.233
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159425,0.042181,120.626,116.233

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.192119
  gflops (total): 26.4842
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.4842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043752
  gflops (eval):  116.294
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043752,116.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0465
  maximum absolute entry in einsum_ir solution: 39.0465
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00165621
  time (eval):    0.0422986
  gflops (eval):  120.29
  gflops (total): 115.758
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00165621,0.0422986,120.29,115.758

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189005
  gflops (total): 26.9205
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436239
  gflops (eval):  116.636
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436239,116.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1785
  maximum absolute entry in einsum_ir solution: 39.1785
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00171148
  time (eval):    0.0404477
  gflops (eval):  125.795
  gflops (total): 120.688
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00171148,0.0404477,125.795,120.688

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189375
  gflops (total): 26.868
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437509
  gflops (eval):  116.297
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437509,116.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2658
  maximum absolute entry in einsum_ir solution: 36.2658
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158452
  time (eval):    0.0425763
  gflops (eval):  119.506
  gflops (total): 115.218
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158452,0.0425763,119.506,115.218

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190211
  gflops (total): 26.7498
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432744
  gflops (eval):  117.578
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432744,117.578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.9864
  maximum absolute entry in einsum_ir solution: 41.9864
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015882
  time (eval):    0.0415499
  gflops (eval):  122.458
  gflops (total): 117.95
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015882,0.0415499,122.458,117.95

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193271
  gflops (total): 26.3263
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.3263

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435537
  gflops (eval):  116.824
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435537,116.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1793
  maximum absolute entry in einsum_ir solution: 39.1793
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158806
  time (eval):    0.0429361
  gflops (eval):  118.504
  gflops (total): 114.278
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158806,0.0429361,118.504,114.278

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189038
  gflops (total): 26.9158
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432814
  gflops (eval):  117.559
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432814,117.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1607
  maximum absolute entry in einsum_ir solution: 40.1607
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015947
  time (eval):    0.0413095
  gflops (eval):  123.171
  gflops (total): 118.592
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015947,0.0413095,123.171,118.592

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189182
  gflops (total): 26.8953
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436022
  gflops (eval):  116.694
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436022,116.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4525
  maximum absolute entry in einsum_ir solution: 37.4525
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00172134
  time (eval):    0.0420446
  gflops (eval):  121.017
  gflops (total): 116.257
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00172134,0.0420446,121.017,116.257

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189865
  gflops (total): 26.7985
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436924
  gflops (eval):  116.453
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436924,116.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0601
  maximum absolute entry in einsum_ir solution: 38.0601
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00166975
  time (eval):    0.0422185
  gflops (eval):  120.519
  gflops (total): 115.934
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00166975,0.0422185,120.519,115.934

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188769
  gflops (total): 26.9542
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432284
  gflops (eval):  117.703
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432284,117.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1414
  maximum absolute entry in einsum_ir solution: 40.1414
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158994
  time (eval):    0.0415769
  gflops (eval):  122.378
  gflops (total): 117.871
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158994,0.0415769,122.378,117.871

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189625
  gflops (total): 26.8325
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434126
  gflops (eval):  117.204
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434126,117.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8972
  maximum absolute entry in einsum_ir solution: 35.8972
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00167044
  time (eval):    0.0420784
  gflops (eval):  120.92
  gflops (total): 116.303
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00167044,0.0420784,120.92,116.303

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191638
  gflops (total): 26.5507
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.5507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437435
  gflops (eval):  116.317
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437435,116.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4661
  maximum absolute entry in einsum_ir solution: 39.4661
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159121
  time (eval):    0.0402371
  gflops (eval):  126.453
  gflops (total): 121.643
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159121,0.0402371,126.453,121.643

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191073
  gflops (total): 26.6291
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0463705
  gflops (eval):  109.727
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0463705,109.727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0509
  maximum absolute entry in einsum_ir solution: 36.0509
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162869
  time (eval):    0.0433831
  gflops (eval):  117.283
  gflops (total): 113.04
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00162869,0.0433831,117.283,113.04

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189342
  gflops (total): 26.8727
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433313
  gflops (eval):  117.423
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433313,117.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5368
  maximum absolute entry in einsum_ir solution: 38.5368
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00172025
  time (eval):    0.0426748
  gflops (eval):  119.23
  gflops (total): 114.61
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00172025,0.0426748,119.23,114.61

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189961
  gflops (total): 26.7851
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0439438
  gflops (eval):  115.787
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0439438,115.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4625
  maximum absolute entry in einsum_ir solution: 37.4625
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0018489
  time (eval):    0.0413832
  gflops (eval):  122.951
  gflops (total): 117.693
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0018489,0.0413832,122.951,117.693

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188199
  gflops (total): 27.0358
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,27.0358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431549
  gflops (eval):  117.904
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431549,117.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4678
  maximum absolute entry in einsum_ir solution: 38.4678
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157334
  time (eval):    0.041725
  gflops (eval):  121.944
  gflops (total): 117.513
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157334,0.041725,121.944,117.513

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.192484
  gflops (total): 26.434
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437461
  gflops (eval):  116.31
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437461,116.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9582
  maximum absolute entry in einsum_ir solution: 40.9582
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0016058
  time (eval):    0.0434113
  gflops (eval):  117.207
  gflops (total): 113.026
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0016058,0.0434113,117.207,113.026

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193331
  gflops (total): 26.3182
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.3182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043608
  gflops (eval):  116.678
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043608,116.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0786
  maximum absolute entry in einsum_ir solution: 36.0786
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158805
  time (eval):    0.0426401
  gflops (eval):  119.327
  gflops (total): 115.042
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158805,0.0426401,119.327,115.042

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190589
  gflops (total): 26.6968
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435766
  gflops (eval):  116.763
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435766,116.763,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3772
  maximum absolute entry in einsum_ir solution: 41.3772
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157922
  time (eval):    0.0414943
  gflops (eval):  122.622
  gflops (total): 118.126
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157922,0.0414943,122.622,118.126

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193234
  gflops (total): 26.3314
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.3314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437364
  gflops (eval):  116.336
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437364,116.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4891
  maximum absolute entry in einsum_ir solution: 41.4891
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00164051
  time (eval):    0.0408402
  gflops (eval):  124.586
  gflops (total): 119.775
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00164051,0.0408402,124.586,119.775

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188782
  gflops (total): 26.9523
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9523

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436252
  gflops (eval):  116.633
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436252,116.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3962
  maximum absolute entry in einsum_ir solution: 41.3962
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158384
  time (eval):    0.0401946
  gflops (eval):  126.587
  gflops (total): 121.788
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158384,0.0401946,126.587,121.788

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191364
  gflops (total): 26.5887
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.5887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434658
  gflops (eval):  117.06
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434658,117.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3953
  maximum absolute entry in einsum_ir solution: 38.3953
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015893
  time (eval):    0.0412817
  gflops (eval):  123.254
  gflops (total): 118.684
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015893,0.0412817,123.254,118.684

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189034
  gflops (total): 26.9165
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432376
  gflops (eval):  117.678
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432376,117.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2943
  maximum absolute entry in einsum_ir solution: 39.2943
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157747
  time (eval):    0.0430459
  gflops (eval):  118.202
  gflops (total): 114.024
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157747,0.0430459,118.202,114.024

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19092
  gflops (total): 26.6506
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.6506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043563
  gflops (eval):  116.799
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043563,116.799,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2376
  maximum absolute entry in einsum_ir solution: 36.2376
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158694
  time (eval):    0.0428442
  gflops (eval):  118.759
  gflops (total): 114.517
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158694,0.0428442,118.759,114.517

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.195332
  gflops (total): 26.0486
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.0486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435782
  gflops (eval):  116.758
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435782,116.758,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.9044
  maximum absolute entry in einsum_ir solution: 41.9044
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158352
  time (eval):    0.0404799
  gflops (eval):  125.695
  gflops (total): 120.963
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158352,0.0404799,125.695,120.963

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189443
  gflops (total): 26.8584
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434337
  gflops (eval):  117.147
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434337,117.147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6266
  maximum absolute entry in einsum_ir solution: 39.6266
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00185612
  time (eval):    0.0429808
  gflops (eval):  118.381
  gflops (total): 113.481
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00185612,0.0429808,118.381,113.481

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189003
  gflops (total): 26.9209
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9209

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434173
  gflops (eval):  117.191
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434173,117.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0832
  maximum absolute entry in einsum_ir solution: 45.0832
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158537
  time (eval):    0.0410897
  gflops (eval):  123.829
  gflops (total): 119.229
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158537,0.0410897,123.829,119.229

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189112
  gflops (total): 26.9053
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435913
  gflops (eval):  116.723
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435913,116.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1088
  maximum absolute entry in einsum_ir solution: 34.1088
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157999
  time (eval):    0.0419498
  gflops (eval):  121.291
  gflops (total): 116.888
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157999,0.0419498,121.291,116.888

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189819
  gflops (total): 26.8051
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435189
  gflops (eval):  116.917
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435189,116.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8654
  maximum absolute entry in einsum_ir solution: 40.8654
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015933
  time (eval):    0.0433774
  gflops (eval):  117.299
  gflops (total): 113.143
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015933,0.0433774,117.299,113.143

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190151
  gflops (total): 26.7583
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433665
  gflops (eval):  117.328
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433665,117.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2104
  maximum absolute entry in einsum_ir solution: 38.2104
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158688
  time (eval):    0.0427009
  gflops (eval):  119.157
  gflops (total): 114.888
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158688,0.0427009,119.157,114.888

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190534
  gflops (total): 26.7045
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436663
  gflops (eval):  116.523
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436663,116.523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2722
  maximum absolute entry in einsum_ir solution: 38.2722
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159209
  time (eval):    0.0424826
  gflops (eval):  119.77
  gflops (total): 115.443
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159209,0.0424826,119.77,115.443

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190474
  gflops (total): 26.7129
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436992
  gflops (eval):  116.435
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436992,116.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8868
  maximum absolute entry in einsum_ir solution: 34.8868
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00160142
  time (eval):    0.0409446
  gflops (eval):  124.268
  gflops (total): 119.591
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00160142,0.0409446,124.268,119.591

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190398
  gflops (total): 26.7236
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434825
  gflops (eval):  117.015
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434825,117.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8034
  maximum absolute entry in einsum_ir solution: 40.8034
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00174207
  time (eval):    0.0423114
  gflops (eval):  120.254
  gflops (total): 115.499
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00174207,0.0423114,120.254,115.499

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189755
  gflops (total): 26.8142
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.8142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436508
  gflops (eval):  116.564
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436508,116.564,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.705
  maximum absolute entry in einsum_ir solution: 36.705
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158451
  time (eval):    0.0414659
  gflops (eval):  122.706
  gflops (total): 118.19
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158451,0.0414659,122.706,118.19

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188911
  gflops (total): 26.9339
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.9339

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043569
  gflops (eval):  116.783
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043569,116.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.314
  maximum absolute entry in einsum_ir solution: 36.314
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158352
  time (eval):    0.0422468
  gflops (eval):  120.438
  gflops (total): 116.087
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158352,0.0422468,120.438,116.087

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.18999
  gflops (total): 26.781
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434352
  gflops (eval):  117.143
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434352,117.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.7717
  maximum absolute entry in einsum_ir solution: 40.7717
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158846
  time (eval):    0.0426012
  gflops (eval):  119.436
  gflops (total): 115.143
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158846,0.0426012,119.436,115.143

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191693
  gflops (total): 26.5431
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.5431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.04333
  gflops (eval):  117.427
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.04333,117.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3709
  maximum absolute entry in einsum_ir solution: 37.3709
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156868
  time (eval):    0.0423505
  gflops (eval):  120.143
  gflops (total): 115.852
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00156868,0.0423505,120.143,115.852

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190549
  gflops (total): 26.7024
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,26.7024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437548
  gflops (eval):  116.287
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437548,116.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4712
  maximum absolute entry in einsum_ir solution: 39.4712
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00163858
  time (eval):    0.0437197
  gflops (eval):  116.381
  gflops (total): 112.176
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00163858,0.0437197,116.381,112.176

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189504
  gflops (total): 26.8497
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435078
  gflops (eval):  116.947
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435078,116.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5222
  maximum absolute entry in einsum_ir solution: 35.5222
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015781
  time (eval):    0.0433747
  gflops (eval):  117.306
  gflops (total): 113.188
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015781,0.0433747,117.306,113.188

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190418
  gflops (total): 26.7208
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433064
  gflops (eval):  117.491
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433064,117.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1411
  maximum absolute entry in einsum_ir solution: 39.1411
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159761
  time (eval):    0.0432394
  gflops (eval):  117.673
  gflops (total): 113.48
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159761,0.0432394,117.673,113.48

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193436
  gflops (total): 26.3039
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.3039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436711
  gflops (eval):  116.51
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436711,116.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6121
  maximum absolute entry in einsum_ir solution: 41.6121
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00169828
  time (eval):    0.0423934
  gflops (eval):  120.021
  gflops (total): 115.399
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00169828,0.0423934,120.021,115.399

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189107
  gflops (total): 26.906
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.04354
  gflops (eval):  116.861
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.04354,116.861,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.075
  maximum absolute entry in einsum_ir solution: 39.075
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015681
  time (eval):    0.042762
  gflops (eval):  118.987
  gflops (total): 114.778
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015681,0.042762,118.987,114.778

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189538
  gflops (total): 26.8448
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433404
  gflops (eval):  117.399
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433404,117.399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4707
  maximum absolute entry in einsum_ir solution: 38.4707
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159757
  time (eval):    0.0418938
  gflops (eval):  121.453
  gflops (total): 116.992
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159757,0.0418938,121.453,116.992

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188699
  gflops (total): 26.9642
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435699
  gflops (eval):  116.781
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435699,116.781,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9071
  maximum absolute entry in einsum_ir solution: 38.9071
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00163594
  time (eval):    0.0429737
  gflops (eval):  118.401
  gflops (total): 114.059
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00163594,0.0429737,118.401,114.059

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189891
  gflops (total): 26.7949
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7949

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0442917
  gflops (eval):  114.877
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0442917,114.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.504
  maximum absolute entry in einsum_ir solution: 38.504
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157579
  time (eval):    0.0413788
  gflops (eval):  122.964
  gflops (total): 118.453
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157579,0.0413788,122.964,118.453

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190669
  gflops (total): 26.6856
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434316
  gflops (eval):  117.152
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434316,117.152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.33
  maximum absolute entry in einsum_ir solution: 37.33
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159714
  time (eval):    0.0431824
  gflops (eval):  117.828
  gflops (total): 113.626
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159714,0.0431824,117.828,113.626

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188828
  gflops (total): 26.9458
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432547
  gflops (eval):  117.632
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432547,117.632,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.7599
  maximum absolute entry in einsum_ir solution: 40.7599
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157948
  time (eval):    0.0430535
  gflops (eval):  118.181
  gflops (total): 113.999
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157948,0.0430535,118.181,113.999

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189137
  gflops (total): 26.9018
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434532
  gflops (eval):  117.094
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434532,117.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6336
  maximum absolute entry in einsum_ir solution: 38.6336
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00201254
  time (eval):    0.0420165
  gflops (eval):  121.098
  gflops (total): 115.563
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00201254,0.0420165,121.098,115.563

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188139
  gflops (total): 27.0444
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.0444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431438
  gflops (eval):  117.934
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431438,117.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4689
  maximum absolute entry in einsum_ir solution: 39.4689
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00171882
  time (eval):    0.042991
  gflops (eval):  118.353
  gflops (total): 113.803
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00171882,0.042991,118.353,113.803

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193671
  gflops (total): 26.272
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436802
  gflops (eval):  116.486
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436802,116.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0801
  maximum absolute entry in einsum_ir solution: 37.0801
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161513
  time (eval):    0.0424799
  gflops (eval):  119.777
  gflops (total): 115.39
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161513,0.0424799,119.777,115.39

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.195122
  gflops (total): 26.0766
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.0766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.044022
  gflops (eval):  115.581
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.044022,115.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.531
  maximum absolute entry in einsum_ir solution: 37.531
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158929
  time (eval):    0.0419058
  gflops (eval):  121.418
  gflops (total): 116.981
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158929,0.0419058,121.418,116.981

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190609
  gflops (total): 26.694
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433038
  gflops (eval):  117.498
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433038,117.498,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0253
  maximum absolute entry in einsum_ir solution: 40.0253
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158227
  time (eval):    0.0429514
  gflops (eval):  118.462
  gflops (total): 114.253
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158227,0.0429514,118.462,114.253

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189476
  gflops (total): 26.8537
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433209
  gflops (eval):  117.452
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433209,117.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0654
  maximum absolute entry in einsum_ir solution: 37.0654
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157627
  time (eval):    0.0420922
  gflops (eval):  120.88
  gflops (total): 116.517
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157627,0.0420922,120.88,116.517

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189948
  gflops (total): 26.7869
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433276
  gflops (eval):  117.434
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433276,117.434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5145
  maximum absolute entry in einsum_ir solution: 40.5145
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00174048
  time (eval):    0.0417025
  gflops (eval):  122.01
  gflops (total): 117.122
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00174048,0.0417025,122.01,117.122

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189838
  gflops (total): 26.8024
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435304
  gflops (eval):  116.886
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435304,116.886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9272
  maximum absolute entry in einsum_ir solution: 42.9272
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157322
  time (eval):    0.0422029
  gflops (eval):  120.563
  gflops (total): 116.231
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157322,0.0422029,120.563,116.231

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189575
  gflops (total): 26.8397
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433186
  gflops (eval):  117.458
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433186,117.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4468
  maximum absolute entry in einsum_ir solution: 38.4468
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015782
  time (eval):    0.042203
  gflops (eval):  120.563
  gflops (total): 116.217
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015782,0.042203,120.563,116.217

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19405
  gflops (total): 26.2206
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.2206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435119
  gflops (eval):  116.936
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435119,116.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8992
  maximum absolute entry in einsum_ir solution: 35.8992
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157059
  time (eval):    0.0419466
  gflops (eval):  121.3
  gflops (total): 116.922
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157059,0.0419466,121.3,116.922

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189465
  gflops (total): 26.8552
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043625
  gflops (eval):  116.633
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043625,116.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2024
  maximum absolute entry in einsum_ir solution: 39.2024
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159283
  time (eval):    0.0422402
  gflops (eval):  120.457
  gflops (total): 116.08
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159283,0.0422402,120.457,116.08

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190427
  gflops (total): 26.7195
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0440054
  gflops (eval):  115.625
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0440054,115.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.213
  maximum absolute entry in einsum_ir solution: 37.213
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162418
  time (eval):    0.0420027
  gflops (eval):  121.138
  gflops (total): 116.628
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00162418,0.0420027,121.138,116.628

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19099
  gflops (total): 26.6408
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6408

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434938
  gflops (eval):  116.985
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434938,116.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5193
  maximum absolute entry in einsum_ir solution: 38.5193
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00207579
  time (eval):    0.0418064
  gflops (eval):  121.707
  gflops (total): 115.949
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00207579,0.0418064,121.707,115.949

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189264
  gflops (total): 26.8838
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435914
  gflops (eval):  116.723
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435914,116.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5568
  maximum absolute entry in einsum_ir solution: 39.5568
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00166694
  time (eval):    0.0415505
  gflops (eval):  122.456
  gflops (total): 117.733
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00166694,0.0415505,122.456,117.733

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188061
  gflops (total): 27.0556
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.0556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435293
  gflops (eval):  116.889
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435293,116.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5197
  maximum absolute entry in einsum_ir solution: 37.5197
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159611
  time (eval):    0.0430917
  gflops (eval):  118.077
  gflops (total): 113.859
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159611,0.0430917,118.077,113.859

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189283
  gflops (total): 26.881
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428518
  gflops (eval):  118.737
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428518,118.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4183
  maximum absolute entry in einsum_ir solution: 40.4183
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159216
  time (eval):    0.0450344
  gflops (eval):  112.983
  gflops (total): 109.125
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159216,0.0450344,112.983,109.125

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191301
  gflops (total): 26.5974
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.5974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0439752
  gflops (eval):  115.704
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0439752,115.704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0252
  maximum absolute entry in einsum_ir solution: 38.0252
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158951
  time (eval):    0.0432367
  gflops (eval):  117.681
  gflops (total): 113.508
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158951,0.0432367,117.681,113.508

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189218
  gflops (total): 26.8902
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432646
  gflops (eval):  117.605
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432646,117.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2493
  maximum absolute entry in einsum_ir solution: 38.2493
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157944
  time (eval):    0.0430984
  gflops (eval):  118.058
  gflops (total): 113.885
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157944,0.0430984,118.058,113.885

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189523
  gflops (total): 26.8469
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435609
  gflops (eval):  116.805
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435609,116.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7027
  maximum absolute entry in einsum_ir solution: 39.7027
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00165514
  time (eval):    0.0430998
  gflops (eval):  118.054
  gflops (total): 113.688
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00165514,0.0430998,118.054,113.688

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188025
  gflops (total): 27.0608
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.0608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433579
  gflops (eval):  117.351
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433579,117.351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2844
  maximum absolute entry in einsum_ir solution: 39.2844
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158708
  time (eval):    0.0421023
  gflops (eval):  120.851
  gflops (total): 116.461
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158708,0.0421023,120.851,116.461

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.187757
  gflops (total): 27.0995
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.0995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433259
  gflops (eval):  117.438
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433259,117.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6102
  maximum absolute entry in einsum_ir solution: 37.6102
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158967
  time (eval):    0.0453436
  gflops (eval):  112.212
  gflops (total): 108.412
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158967,0.0453436,112.212,108.412

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190078
  gflops (total): 26.7686
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434749
  gflops (eval):  117.036
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434749,117.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.434
  maximum absolute entry in einsum_ir solution: 37.434
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156913
  time (eval):    0.0429418
  gflops (eval):  118.489
  gflops (total): 114.312
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156913,0.0429418,118.489,114.312

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.192038
  gflops (total): 26.4953
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.4953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430336
  gflops (eval):  118.236
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430336,118.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3549
  maximum absolute entry in einsum_ir solution: 39.3549
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00165932
  time (eval):    0.0440239
  gflops (eval):  115.576
  gflops (total): 111.378
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00165932,0.0440239,115.576,111.378

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191435
  gflops (total): 26.5788
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.5788

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436266
  gflops (eval):  116.629
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436266,116.629,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7461
  maximum absolute entry in einsum_ir solution: 42.7461
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00211363
  time (eval):    0.0427758
  gflops (eval):  118.949
  gflops (total): 113.348
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00211363,0.0427758,118.949,113.348

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19014
  gflops (total): 26.7598
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436265
  gflops (eval):  116.629
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436265,116.629,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8173
  maximum absolute entry in einsum_ir solution: 37.8173
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00165519
  time (eval):    0.0419164
  gflops (eval):  121.387
  gflops (total): 116.776
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00165519,0.0419164,121.387,116.776

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190396
  gflops (total): 26.7238
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434837
  gflops (eval):  117.012
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434837,117.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.254
  maximum absolute entry in einsum_ir solution: 36.254
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00182948
  time (eval):    0.0411723
  gflops (eval):  123.581
  gflops (total): 118.323
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00182948,0.0411723,123.581,118.323

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188542
  gflops (total): 26.9867
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428611
  gflops (eval):  118.712
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428611,118.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4171
  maximum absolute entry in einsum_ir solution: 37.4171
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00189594
  time (eval):    0.0415624
  gflops (eval):  122.421
  gflops (total): 117.08
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00189594,0.0415624,122.421,117.08

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.192846
  gflops (total): 26.3844
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.3844

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0439003
  gflops (eval):  115.902
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0439003,115.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3436
  maximum absolute entry in einsum_ir solution: 38.3436
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00174608
  time (eval):    0.0417904
  gflops (eval):  121.753
  gflops (total): 116.87
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00174608,0.0417904,121.753,116.87

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190255
  gflops (total): 26.7437
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433166
  gflops (eval):  117.463
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433166,117.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7613
  maximum absolute entry in einsum_ir solution: 36.7613
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158084
  time (eval):    0.0434334
  gflops (eval):  117.147
  gflops (total): 113.033
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158084,0.0434334,117.147,113.033

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189797
  gflops (total): 26.8082
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432014
  gflops (eval):  117.777
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432014,117.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6236
  maximum absolute entry in einsum_ir solution: 38.6236
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157393
  time (eval):    0.0416518
  gflops (eval):  122.158
  gflops (total): 117.71
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157393,0.0416518,122.158,117.71

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189416
  gflops (total): 26.8622
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043403
  gflops (eval):  117.23
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043403,117.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3508
  maximum absolute entry in einsum_ir solution: 37.3508
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015762
  time (eval):    0.0443037
  gflops (eval):  114.846
  gflops (total): 110.901
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015762,0.0443037,114.846,110.901

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.18884
  gflops (total): 26.9441
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430079
  gflops (eval):  118.306
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430079,118.306,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7624
  maximum absolute entry in einsum_ir solution: 43.7624
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161957
  time (eval):    0.0419258
  gflops (eval):  121.36
  gflops (total): 116.846
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161957,0.0419258,121.36,116.846

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191639
  gflops (total): 26.5505
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.5505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043737
  gflops (eval):  116.334
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043737,116.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1657
  maximum absolute entry in einsum_ir solution: 38.1657
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158779
  time (eval):    0.0433575
  gflops (eval):  117.353
  gflops (total): 113.207
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158779,0.0433575,117.353,113.207

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189315
  gflops (total): 26.8764
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435831
  gflops (eval):  116.745
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435831,116.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.708
  maximum absolute entry in einsum_ir solution: 37.708
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00188478
  time (eval):    0.0423863
  gflops (eval):  120.042
  gflops (total): 114.931
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00188478,0.0423863,120.042,114.931

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190807
  gflops (total): 26.6663
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436019
  gflops (eval):  116.695
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436019,116.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7914
  maximum absolute entry in einsum_ir solution: 38.7914
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015699
  time (eval):    0.0434654
  gflops (eval):  117.061
  gflops (total): 112.981
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015699,0.0434654,117.061,112.981

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19011
  gflops (total): 26.764
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433588
  gflops (eval):  117.349
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433588,117.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7931
  maximum absolute entry in einsum_ir solution: 36.7931
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157195
  time (eval):    0.0444647
  gflops (eval):  114.43
  gflops (total): 110.523
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157195,0.0444647,114.43,110.523

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188881
  gflops (total): 26.9383
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438652
  gflops (eval):  115.994
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0438652,115.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1594
  maximum absolute entry in einsum_ir solution: 38.1594
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159552
  time (eval):    0.0437575
  gflops (eval):  116.28
  gflops (total): 112.189
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159552,0.0437575,116.28,112.189

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.193581
  gflops (total): 26.2842
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.2842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435513
  gflops (eval):  116.83
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435513,116.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.701
  maximum absolute entry in einsum_ir solution: 41.701
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156247
  time (eval):    0.0421553
  gflops (eval):  120.699
  gflops (total): 116.385
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156247,0.0421553,120.699,116.385

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190204
  gflops (total): 26.7509
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043475
  gflops (eval):  117.036
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043475,117.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.196
  maximum absolute entry in einsum_ir solution: 38.196
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158046
  time (eval):    0.0414925
  gflops (eval):  122.627
  gflops (total): 118.128
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158046,0.0414925,122.627,118.128

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188792
  gflops (total): 26.9509
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433686
  gflops (eval):  117.323
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433686,117.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9814
  maximum absolute entry in einsum_ir solution: 38.9814
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159628
  time (eval):    0.0427607
  gflops (eval):  118.99
  gflops (total): 114.708
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159628,0.0427607,118.99,114.708

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189246
  gflops (total): 26.8863
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.04341
  gflops (eval):  117.211
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.04341,117.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0958
  maximum absolute entry in einsum_ir solution: 40.0958
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162214
  time (eval):    0.0431359
  gflops (eval):  117.955
  gflops (total): 113.68
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00162214,0.0431359,117.955,113.68

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188711
  gflops (total): 26.9624
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9624

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433891
  gflops (eval):  117.267
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433891,117.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1093
  maximum absolute entry in einsum_ir solution: 37.1093
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00170282
  time (eval):    0.0430912
  gflops (eval):  118.078
  gflops (total): 113.589
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00170282,0.0430912,118.078,113.589

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191095
  gflops (total): 26.6261
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435199
  gflops (eval):  116.915
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435199,116.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8455
  maximum absolute entry in einsum_ir solution: 38.8455
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158245
  time (eval):    0.0417922
  gflops (eval):  121.748
  gflops (total): 117.306
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158245,0.0417922,121.748,117.306

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189545
  gflops (total): 26.8438
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436096
  gflops (eval):  116.674
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436096,116.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4245
  maximum absolute entry in einsum_ir solution: 37.4245
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157817
  time (eval):    0.0419354
  gflops (eval):  121.332
  gflops (total): 116.932
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157817,0.0419354,121.332,116.932

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188425
  gflops (total): 27.0034
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.0034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434693
  gflops (eval):  117.051
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434693,117.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1253
  maximum absolute entry in einsum_ir solution: 40.1253
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00163605
  time (eval):    0.0426131
  gflops (eval):  119.403
  gflops (total): 114.988
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00163605,0.0426131,119.403,114.988

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188548
  gflops (total): 26.9857
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435294
  gflops (eval):  116.889
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435294,116.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8766
  maximum absolute entry in einsum_ir solution: 35.8766
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157231
  time (eval):    0.0435346
  gflops (eval):  116.875
  gflops (total): 112.801
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157231,0.0435346,116.875,112.801

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189491
  gflops (total): 26.8515
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433209
  gflops (eval):  117.452
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433209,117.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1662
  maximum absolute entry in einsum_ir solution: 38.1662
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00185624
  time (eval):    0.041678
  gflops (eval):  122.082
  gflops (total): 116.876
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00185624,0.041678,122.082,116.876

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189908
  gflops (total): 26.7925
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436888
  gflops (eval):  116.463
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436888,116.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6077
  maximum absolute entry in einsum_ir solution: 38.6077
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00168271
  time (eval):    0.0413026
  gflops (eval):  123.191
  gflops (total): 118.369
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00168271,0.0413026,123.191,118.369

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189487
  gflops (total): 26.8521
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436294
  gflops (eval):  116.621
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436294,116.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3355
  maximum absolute entry in einsum_ir solution: 39.3355
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161831
  time (eval):    0.0420657
  gflops (eval):  120.956
  gflops (total): 116.476
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161831,0.0420657,120.956,116.476

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188342
  gflops (total): 27.0153
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.0153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043631
  gflops (eval):  116.617
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043631,116.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0916
  maximum absolute entry in einsum_ir solution: 38.0916
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158341
  time (eval):    0.0423774
  gflops (eval):  120.067
  gflops (total): 115.742
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158341,0.0423774,120.067,115.742

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189619
  gflops (total): 26.8333
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043448
  gflops (eval):  117.108
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043448,117.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0695
  maximum absolute entry in einsum_ir solution: 40.0695
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00171217
  time (eval):    0.0419481
  gflops (eval):  121.295
  gflops (total): 116.539
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00171217,0.0419481,121.295,116.539

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.187042
  gflops (total): 27.203
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043459
  gflops (eval):  117.078
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043459,117.078,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6735
  maximum absolute entry in einsum_ir solution: 42.6735
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162395
  time (eval):    0.0426711
  gflops (eval):  119.24
  gflops (total): 114.869
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00162395,0.0426711,119.24,114.869

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.192964
  gflops (total): 26.3682
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.3682

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438052
  gflops (eval):  116.153
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0438052,116.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6597
  maximum absolute entry in einsum_ir solution: 42.6597
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157245
  time (eval):    0.0415588
  gflops (eval):  122.432
  gflops (total): 117.968
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157245,0.0415588,122.432,117.968

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188725
  gflops (total): 26.9605
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433346
  gflops (eval):  117.415
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433346,117.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6609
  maximum absolute entry in einsum_ir solution: 40.6609
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00166376
  time (eval):    0.0412733
  gflops (eval):  123.279
  gflops (total): 118.502
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00166376,0.0412733,123.279,118.502

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.18999
  gflops (total): 26.781
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436643
  gflops (eval):  116.528
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436643,116.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2622
  maximum absolute entry in einsum_ir solution: 38.2622
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157028
  time (eval):    0.0429831
  gflops (eval):  118.375
  gflops (total): 114.203
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157028,0.0429831,118.375,114.203

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19082
  gflops (total): 26.6645
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435173
  gflops (eval):  116.922
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435173,116.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5126
  maximum absolute entry in einsum_ir solution: 37.5126
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157007
  time (eval):    0.042136
  gflops (eval):  120.755
  gflops (total): 116.417
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157007,0.042136,120.755,116.417

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189655
  gflops (total): 26.8283
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432841
  gflops (eval):  117.552
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432841,117.552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3797
  maximum absolute entry in einsum_ir solution: 35.3797
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157335
  time (eval):    0.0419989
  gflops (eval):  121.149
  gflops (total): 116.774
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157335,0.0419989,121.149,116.774

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188636
  gflops (total): 26.9732
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435147
  gflops (eval):  116.929
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435147,116.929,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6887
  maximum absolute entry in einsum_ir solution: 37.6887
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158021
  time (eval):    0.0415618
  gflops (eval):  122.423
  gflops (total): 117.939
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158021,0.0415618,122.423,117.939

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189237
  gflops (total): 26.8875
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433221
  gflops (eval):  117.449
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433221,117.449,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4304
  maximum absolute entry in einsum_ir solution: 42.4304
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158611
  time (eval):    0.0434986
  gflops (eval):  116.972
  gflops (total): 112.857
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158611,0.0434986,116.972,112.857

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.192786
  gflops (total): 26.3925
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.3925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433381
  gflops (eval):  117.405
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433381,117.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1945
  maximum absolute entry in einsum_ir solution: 39.1945
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158116
  time (eval):    0.0433062
  gflops (eval):  117.492
  gflops (total): 113.353
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158116,0.0433062,117.492,113.353

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189313
  gflops (total): 26.8767
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436606
  gflops (eval):  116.538
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436606,116.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.042
  maximum absolute entry in einsum_ir solution: 40.042
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158367
  time (eval):    0.0444622
  gflops (eval):  114.437
  gflops (total): 110.501
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158367,0.0444622,114.437,110.501

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188852
  gflops (total): 26.9424
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435941
  gflops (eval):  116.716
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435941,116.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4835
  maximum absolute entry in einsum_ir solution: 39.4835
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00165565
  time (eval):    0.0420788
  gflops (eval):  120.919
  gflops (total): 116.341
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00165565,0.0420788,120.919,116.341

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191584
  gflops (total): 26.5581
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.5581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435689
  gflops (eval):  116.783
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435689,116.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5669
  maximum absolute entry in einsum_ir solution: 35.5669
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156386
  time (eval):    0.0424211
  gflops (eval):  119.943
  gflops (total): 115.679
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156386,0.0424211,119.943,115.679

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189288
  gflops (total): 26.8803
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434202
  gflops (eval):  117.183
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434202,117.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5434
  maximum absolute entry in einsum_ir solution: 41.5434
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00163162
  time (eval):    0.0411901
  gflops (eval):  123.528
  gflops (total): 118.821
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00163162,0.0411901,123.528,118.821

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191258
  gflops (total): 26.6034
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436545
  gflops (eval):  116.554
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436545,116.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.912
  maximum absolute entry in einsum_ir solution: 40.912
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159595
  time (eval):    0.0418909
  gflops (eval):  121.461
  gflops (total): 117.004
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159595,0.0418909,121.461,117.004

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190595
  gflops (total): 26.696
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0441237
  gflops (eval):  115.315
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0441237,115.315,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2304
  maximum absolute entry in einsum_ir solution: 39.2304
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00182066
  time (eval):    0.0426098
  gflops (eval):  119.412
  gflops (total): 114.519
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00182066,0.0426098,119.412,114.519

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188742
  gflops (total): 26.958
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436006
  gflops (eval):  116.698
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436006,116.698,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4753
  maximum absolute entry in einsum_ir solution: 36.4753
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161949
  time (eval):    0.0434305
  gflops (eval):  117.155
  gflops (total): 112.944
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161949,0.0434305,117.155,112.944

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.187654
  gflops (total): 27.1143
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.1143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431355
  gflops (eval):  117.957
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431355,117.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1831
  maximum absolute entry in einsum_ir solution: 37.1831
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158556
  time (eval):    0.0420685
  gflops (eval):  120.948
  gflops (total): 116.555
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158556,0.0420685,120.948,116.555

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191224
  gflops (total): 26.6081
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6081

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433779
  gflops (eval):  117.297
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433779,117.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1416
  maximum absolute entry in einsum_ir solution: 39.1416
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159343
  time (eval):    0.0438155
  gflops (eval):  116.126
  gflops (total): 112.051
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159343,0.0438155,116.126,112.051

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19083
  gflops (total): 26.6631
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434518
  gflops (eval):  117.098
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434518,117.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7519
  maximum absolute entry in einsum_ir solution: 37.7519
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159503
  time (eval):    0.0417992
  gflops (eval):  121.728
  gflops (total): 117.253
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159503,0.0417992,121.728,117.253

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189772
  gflops (total): 26.8118
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433786
  gflops (eval):  117.296
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433786,117.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4669
  maximum absolute entry in einsum_ir solution: 40.4669
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157779
  time (eval):    0.0421486
  gflops (eval):  120.719
  gflops (total): 116.363
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157779,0.0421486,120.719,116.363

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189934
  gflops (total): 26.7888
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043566
  gflops (eval):  116.791
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043566,116.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9235
  maximum absolute entry in einsum_ir solution: 38.9235
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00146476
  time (eval):    0.048176
  gflops (eval):  105.615
  gflops (total): 102.499
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00146476,0.048176,105.615,102.499

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189589
  gflops (total): 26.8376
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8376

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434781
  gflops (eval):  117.027
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434781,117.027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4228
  maximum absolute entry in einsum_ir solution: 35.4228
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157844
  time (eval):    0.0431784
  gflops (eval):  117.839
  gflops (total): 113.684
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157844,0.0431784,117.839,113.684

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189598
  gflops (total): 26.8363
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432918
  gflops (eval):  117.531
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432918,117.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0454
  maximum absolute entry in einsum_ir solution: 43.0454
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158647
  time (eval):    0.0423708
  gflops (eval):  120.085
  gflops (total): 115.751
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158647,0.0423708,120.085,115.751

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188541
  gflops (total): 26.9868
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437231
  gflops (eval):  116.371
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0437231,116.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0312
  maximum absolute entry in einsum_ir solution: 39.0312
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158098
  time (eval):    0.0440054
  gflops (eval):  115.625
  gflops (total): 111.615
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158098,0.0440054,115.625,111.615

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.187799
  gflops (total): 27.0935
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,27.0935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434773
  gflops (eval):  117.029
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434773,117.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4684
  maximum absolute entry in einsum_ir solution: 42.4684
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015809
  time (eval):    0.0431986
  gflops (eval):  117.784
  gflops (total): 113.626
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015809,0.0431986,117.784,113.626

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190231
  gflops (total): 26.747
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432976
  gflops (eval):  117.515
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432976,117.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7103
  maximum absolute entry in einsum_ir solution: 43.7103
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161536
  time (eval):    0.0444116
  gflops (eval):  114.567
  gflops (total): 110.546
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161536,0.0444116,114.567,110.546

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189741
  gflops (total): 26.8162
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.8162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437496
  gflops (eval):  116.301
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0437496,116.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7436
  maximum absolute entry in einsum_ir solution: 37.7436
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157322
  time (eval):    0.0411442
  gflops (eval):  123.665
  gflops (total): 119.111
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157322,0.0411442,123.665,119.111

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.18853
  gflops (total): 26.9884
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430649
  gflops (eval):  118.15
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430649,118.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5839
  maximum absolute entry in einsum_ir solution: 42.5839
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158245
  time (eval):    0.042141
  gflops (eval):  120.74
  gflops (total): 116.371
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158245,0.042141,120.74,116.371

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.191667
  gflops (total): 26.5467
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.5467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438871
  gflops (eval):  115.937
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0438871,115.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7082
  maximum absolute entry in einsum_ir solution: 43.7082
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156825
  time (eval):    0.0425121
  gflops (eval):  119.686
  gflops (total): 115.428
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156825,0.0425121,119.686,115.428

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190269
  gflops (total): 26.7418
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043395
  gflops (eval):  117.251
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043395,117.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2187
  maximum absolute entry in einsum_ir solution: 38.2187
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00187198
  time (eval):    0.0436767
  gflops (eval):  116.495
  gflops (total): 111.707
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00187198,0.0436767,116.495,111.707

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188785
  gflops (total): 26.952
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0440053
  gflops (eval):  115.625
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0440053,115.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1872
  maximum absolute entry in einsum_ir solution: 38.1872
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00164699
  time (eval):    0.0428374
  gflops (eval):  118.778
  gflops (total): 114.38
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00164699,0.0428374,118.778,114.38

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188884
  gflops (total): 26.9378
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435435
  gflops (eval):  116.851
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435435,116.851,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6791
  maximum absolute entry in einsum_ir solution: 35.6791
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161223
  time (eval):    0.0423542
  gflops (eval):  120.133
  gflops (total): 115.727
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161223,0.0423542,120.133,115.727

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190108
  gflops (total): 26.7644
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435112
  gflops (eval):  116.938
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435112,116.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2016
  maximum absolute entry in einsum_ir solution: 35.2016
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159339
  time (eval):    0.043899
  gflops (eval):  115.905
  gflops (total): 111.846
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159339,0.043899,115.905,111.846

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.189143
  gflops (total): 26.9009
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434542
  gflops (eval):  117.092
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434542,117.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1409
  maximum absolute entry in einsum_ir solution: 41.1409
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00160572
  time (eval):    0.0436385
  gflops (eval):  116.597
  gflops (total): 112.459
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00160572,0.0436385,116.597,112.459

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.19014
  gflops (total): 26.7598
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433744
  gflops (eval):  117.307
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433744,117.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3045
  maximum absolute entry in einsum_ir solution: 42.3045
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162285
  time (eval):    0.0433146
  gflops (eval):  117.469
  gflops (total): 113.227
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00162285,0.0433146,117.469,113.227

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190849
  gflops (total): 26.6604
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.6604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434051
  gflops (eval):  117.224
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434051,117.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9003
  maximum absolute entry in einsum_ir solution: 35.9003
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158898
  time (eval):    0.043023
  gflops (eval):  118.265
  gflops (total): 114.053
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158898,0.043023,118.265,114.053

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.188727
  gflops (total): 26.9602
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.9602

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433854
  gflops (eval):  117.277
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433854,117.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0089
  maximum absolute entry in einsum_ir solution: 43.0089
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157373
  time (eval):    0.0435754
  gflops (eval):  116.766
  gflops (total): 112.696
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157373,0.0435754,116.766,112.696

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190016
  gflops (total): 26.7773
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436092
  gflops (eval):  116.675
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436092,116.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6301
  maximum absolute entry in einsum_ir solution: 39.6301
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00162566
  time (eval):    0.0437216
  gflops (eval):  116.375
  gflops (total): 112.203
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00162566,0.0437216,116.375,112.203

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190048
  gflops (total): 26.7727
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434803
  gflops (eval):  117.021
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434803,117.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1597
  maximum absolute entry in einsum_ir solution: 40.1597
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156582
  time (eval):    0.0435491
  gflops (eval):  116.836
  gflops (total): 112.781
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156582,0.0435491,116.836,112.781

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.190332
  gflops (total): 26.7328
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,26.7328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432822
  gflops (eval):  117.557
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432822,117.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7417
  maximum absolute entry in einsum_ir solution: 39.7417
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143547
  time (eval):    0.0249078
  gflops (eval):  142.472
  gflops (total): 134.709
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143547,0.0249078,142.472,134.709

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.178753
  gflops (total): 19.8524
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.8524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348465
  gflops (eval):  101.837
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348465,101.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5306
  maximum absolute entry in einsum_ir solution: 58.5306
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00144152
  time (eval):    0.0277317
  gflops (eval):  127.964
  gflops (total): 121.641
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00144152,0.0277317,127.964,121.641

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18169
  gflops (total): 19.5314
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338451
  gflops (eval):  104.851
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338451,104.851,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0146
  maximum absolute entry in einsum_ir solution: 56.0146
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143436
  time (eval):    0.0260918
  gflops (eval):  136.007
  gflops (total): 128.92
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143436,0.0260918,136.007,128.92

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181257
  gflops (total): 19.5781
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336068
  gflops (eval):  105.594
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336068,105.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.3531
  maximum absolute entry in einsum_ir solution: 50.3531
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143962
  time (eval):    0.0260992
  gflops (eval):  135.969
  gflops (total): 128.861
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143962,0.0260992,135.969,128.861

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182202
  gflops (total): 19.4766
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033713
  gflops (eval):  105.261
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033713,105.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0399
  maximum absolute entry in einsum_ir solution: 60.0399
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143358
  time (eval):    0.0278376
  gflops (eval):  127.478
  gflops (total): 121.234
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143358,0.0278376,127.478,121.234

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18229
  gflops (total): 19.4672
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343186
  gflops (eval):  103.404
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343186,103.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4903
  maximum absolute entry in einsum_ir solution: 57.4903
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141882
  time (eval):    0.0278898
  gflops (eval):  127.239
  gflops (total): 121.08
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141882,0.0278898,127.239,121.08

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181661
  gflops (total): 19.5346
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034537
  gflops (eval):  102.75
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034537,102.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0787
  maximum absolute entry in einsum_ir solution: 56.0787
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141746
  time (eval):    0.0259667
  gflops (eval):  136.662
  gflops (total): 129.588
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141746,0.0259667,136.662,129.588

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181494
  gflops (total): 19.5526
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5526

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341154
  gflops (eval):  104.02
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341154,104.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7251
  maximum absolute entry in einsum_ir solution: 56.7251
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014353
  time (eval):    0.0256108
  gflops (eval):  138.562
  gflops (total): 131.209
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014353,0.0256108,138.562,131.209

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180981
  gflops (total): 19.608
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343473
  gflops (eval):  103.317
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343473,103.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4747
  maximum absolute entry in einsum_ir solution: 57.4747
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143446
  time (eval):    0.0284468
  gflops (eval):  124.748
  gflops (total): 118.759
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143446,0.0284468,124.748,118.759

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180484
  gflops (total): 19.662
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336265
  gflops (eval):  105.532
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336265,105.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3793
  maximum absolute entry in einsum_ir solution: 55.3793
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014556
  time (eval):    0.0249513
  gflops (eval):  142.224
  gflops (total): 134.385
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014556,0.0249513,142.224,134.385

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182507
  gflops (total): 19.4441
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336735
  gflops (eval):  105.385
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336735,105.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.514
  maximum absolute entry in einsum_ir solution: 57.514
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0015296
  time (eval):    0.0268985
  gflops (eval):  131.928
  gflops (total): 124.83
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0015296,0.0268985,131.928,124.83

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181524
  gflops (total): 19.5494
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5494

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339565
  gflops (eval):  104.506
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339565,104.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5758
  maximum absolute entry in einsum_ir solution: 56.5757
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0015024
  time (eval):    0.0273375
  gflops (eval):  129.81
  gflops (total): 123.047
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0015024,0.0273375,129.81,123.047

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180618
  gflops (total): 19.6474
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341701
  gflops (eval):  103.853
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341701,103.853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8225
  maximum absolute entry in einsum_ir solution: 54.8225
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143083
  time (eval):    0.0267343
  gflops (eval):  132.739
  gflops (total): 125.996
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143083,0.0267343,132.739,125.996

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182153
  gflops (total): 19.4818
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349345
  gflops (eval):  101.581
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349345,101.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7708
  maximum absolute entry in einsum_ir solution: 58.7708
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142425
  time (eval):    0.0283246
  gflops (eval):  125.286
  gflops (total): 119.288
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142425,0.0283246,125.286,119.288

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182117
  gflops (total): 19.4857
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0333739
  gflops (eval):  106.331
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0333739,106.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4324
  maximum absolute entry in einsum_ir solution: 55.4324
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141756
  time (eval):    0.0275375
  gflops (eval):  128.867
  gflops (total): 122.558
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141756,0.0275375,128.867,122.558

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180249
  gflops (total): 19.6877
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0352119
  gflops (eval):  100.781
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0352119,100.781,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4534
  maximum absolute entry in einsum_ir solution: 54.4534
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142198
  time (eval):    0.0251473
  gflops (eval):  141.116
  gflops (total): 133.563
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142198,0.0251473,141.116,133.563

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182096
  gflops (total): 19.4879
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341745
  gflops (eval):  103.84
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341745,103.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0626
  maximum absolute entry in einsum_ir solution: 55.0626
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142295
  time (eval):    0.0287818
  gflops (eval):  123.296
  gflops (total): 117.487
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142295,0.0287818,123.296,117.487

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.179433
  gflops (total): 19.7772
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.7772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344841
  gflops (eval):  102.908
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344841,102.908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2709
  maximum absolute entry in einsum_ir solution: 56.2709
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00146003
  time (eval):    0.0297552
  gflops (eval):  119.262
  gflops (total): 113.684
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00146003,0.0297552,119.262,113.684

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182887
  gflops (total): 19.4037
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034523
  gflops (eval):  102.792
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034523,102.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7899
  maximum absolute entry in einsum_ir solution: 54.7899
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014331
  time (eval):    0.0245394
  gflops (eval):  144.611
  gflops (total): 136.632
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014331,0.0245394,144.611,136.632

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18217
  gflops (total): 19.48
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0337003
  gflops (eval):  105.301
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0337003,105.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7083
  maximum absolute entry in einsum_ir solution: 59.7083
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142401
  time (eval):    0.0256382
  gflops (eval):  138.414
  gflops (total): 131.13
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142401,0.0256382,138.414,131.13

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182264
  gflops (total): 19.47
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340068
  gflops (eval):  104.352
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340068,104.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0086
  maximum absolute entry in einsum_ir solution: 59.0086
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014729
  time (eval):    0.0279038
  gflops (eval):  127.176
  gflops (total): 120.799
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014729,0.0279038,127.176,120.799

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182415
  gflops (total): 19.4539
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0333616
  gflops (eval):  106.37
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0333616,106.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6002
  maximum absolute entry in einsum_ir solution: 59.6002
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00148508
  time (eval):    0.0249986
  gflops (eval):  141.955
  gflops (total): 133.995
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00148508,0.0249986,141.955,133.995

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181516
  gflops (total): 19.5502
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0334546
  gflops (eval):  106.074
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0334546,106.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.8321
  maximum absolute entry in einsum_ir solution: 64.8321
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143218
  time (eval):    0.0257026
  gflops (eval):  138.067
  gflops (total): 130.78
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143218,0.0257026,138.067,130.78

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182594
  gflops (total): 19.4348
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342276
  gflops (eval):  103.679
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342276,103.679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8918
  maximum absolute entry in einsum_ir solution: 56.8918
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141849
  time (eval):    0.0265131
  gflops (eval):  133.846
  gflops (total): 127.049
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141849,0.0265131,133.846,127.049

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181941
  gflops (total): 19.5045
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340945
  gflops (eval):  104.084
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340945,104.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.6107
  maximum absolute entry in einsum_ir solution: 51.6107
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014261
  time (eval):    0.0292701
  gflops (eval):  121.239
  gflops (total): 115.606
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014261,0.0292701,121.239,115.606

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.183286
  gflops (total): 19.3614
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.3614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033729
  gflops (eval):  105.211
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033729,105.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3499
  maximum absolute entry in einsum_ir solution: 55.3499
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142026
  time (eval):    0.027689
  gflops (eval):  128.162
  gflops (total): 121.909
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142026,0.027689,128.162,121.909

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180131
  gflops (total): 19.7005
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.7005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340181
  gflops (eval):  104.317
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340181,104.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9739
  maximum absolute entry in einsum_ir solution: 54.9739
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143308
  time (eval):    0.028572
  gflops (eval):  124.201
  gflops (total): 118.269
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143308,0.028572,124.201,118.269

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181944
  gflops (total): 19.5043
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0350493
  gflops (eval):  101.248
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0350493,101.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0403
  maximum absolute entry in einsum_ir solution: 54.0403
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142491
  time (eval):    0.0270798
  gflops (eval):  131.045
  gflops (total): 124.495
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142491,0.0270798,131.045,124.495

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180383
  gflops (total): 19.673
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335988
  gflops (eval):  105.619
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335988,105.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7947
  maximum absolute entry in einsum_ir solution: 56.7947
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143799
  time (eval):    0.0253109
  gflops (eval):  140.204
  gflops (total): 132.666
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143799,0.0253109,140.204,132.666

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18062
  gflops (total): 19.6472
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335664
  gflops (eval):  105.721
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335664,105.721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1414
  maximum absolute entry in einsum_ir solution: 57.1414
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142573
  time (eval):    0.0267912
  gflops (eval):  132.457
  gflops (total): 125.764
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142573,0.0267912,132.457,125.764

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18025
  gflops (total): 19.6875
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340818
  gflops (eval):  104.122
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340818,104.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1738
  maximum absolute entry in einsum_ir solution: 58.1738
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143472
  time (eval):    0.0250375
  gflops (eval):  141.734
  gflops (total): 134.053
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143472,0.0250375,141.734,134.053

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182546
  gflops (total): 19.4399
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4399

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336738
  gflops (eval):  105.384
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336738,105.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      69.5718
  maximum absolute entry in einsum_ir solution: 69.5718
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00146743
  time (eval):    0.0254884
  gflops (eval):  139.227
  gflops (total): 131.648
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00146743,0.0254884,139.227,131.648

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181212
  gflops (total): 19.583
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338522
  gflops (eval):  104.828
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338522,104.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.454
  maximum absolute entry in einsum_ir solution: 56.454
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143476
  time (eval):    0.0262647
  gflops (eval):  135.112
  gflops (total): 128.114
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143476,0.0262647,135.112,128.114

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181418
  gflops (total): 19.5608
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338841
  gflops (eval):  104.73
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338841,104.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3166
  maximum absolute entry in einsum_ir solution: 56.3166
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143215
  time (eval):    0.0282948
  gflops (eval):  125.418
  gflops (total): 119.376
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143215,0.0282948,125.418,119.376

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182297
  gflops (total): 19.4664
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344651
  gflops (eval):  102.964
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344651,102.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7448
  maximum absolute entry in einsum_ir solution: 54.7448
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014229
  time (eval):    0.0254771
  gflops (eval):  139.289
  gflops (total): 131.921
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014229,0.0254771,139.289,131.921

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180514
  gflops (total): 19.6588
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6588

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341348
  gflops (eval):  103.961
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341348,103.961,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1691
  maximum absolute entry in einsum_ir solution: 56.1691
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00145975
  time (eval):    0.0255987
  gflops (eval):  138.627
  gflops (total): 131.149
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00145975,0.0255987,138.627,131.149

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18172
  gflops (total): 19.5282
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335668
  gflops (eval):  105.72
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335668,105.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5779
  maximum absolute entry in einsum_ir solution: 56.5779
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014782
  time (eval):    0.0238678
  gflops (eval):  148.68
  gflops (total): 140.009
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014782,0.0238678,148.68,140.009

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182741
  gflops (total): 19.4191
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0333372
  gflops (eval):  106.448
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0333372,106.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4678
  maximum absolute entry in einsum_ir solution: 57.4678
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143287
  time (eval):    0.0247257
  gflops (eval):  143.522
  gflops (total): 135.66
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143287,0.0247257,143.522,135.66

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182112
  gflops (total): 19.4863
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335796
  gflops (eval):  105.68
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335796,105.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4194
  maximum absolute entry in einsum_ir solution: 55.4194
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142212
  time (eval):    0.0270267
  gflops (eval):  131.302
  gflops (total): 124.739
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142212,0.0270267,131.302,124.739

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.1808
  gflops (total): 19.6276
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343307
  gflops (eval):  103.367
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343307,103.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0933
  maximum absolute entry in einsum_ir solution: 55.0933
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143139
  time (eval):    0.0295801
  gflops (eval):  119.968
  gflops (total): 114.431
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143139,0.0295801,119.968,114.431

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180061
  gflops (total): 19.7081
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.7081

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344612
  gflops (eval):  102.976
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344612,102.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3258
  maximum absolute entry in einsum_ir solution: 55.3258
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142603
  time (eval):    0.0252587
  gflops (eval):  140.493
  gflops (total): 132.985
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142603,0.0252587,140.493,132.985

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180861
  gflops (total): 19.621
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345177
  gflops (eval):  102.807
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345177,102.807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1549
  maximum absolute entry in einsum_ir solution: 57.1549
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143077
  time (eval):    0.0267897
  gflops (eval):  132.464
  gflops (total): 125.749
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143077,0.0267897,132.464,125.749

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180945
  gflops (total): 19.6119
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339585
  gflops (eval):  104.5
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339585,104.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7322
  maximum absolute entry in einsum_ir solution: 54.7322
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142649
  time (eval):    0.0265318
  gflops (eval):  133.752
  gflops (total): 126.927
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142649,0.0265318,133.752,126.927

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.183194
  gflops (total): 19.3711
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.3711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033507
  gflops (eval):  105.909
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033507,105.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1639
  maximum absolute entry in einsum_ir solution: 60.1639
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014391
  time (eval):    0.0266696
  gflops (eval):  133.061
  gflops (total): 126.248
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014391,0.0266696,133.061,126.248

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181215
  gflops (total): 19.5827
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346199
  gflops (eval):  102.504
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346199,102.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4566
  maximum absolute entry in einsum_ir solution: 52.4566
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142706
  time (eval):    0.0268707
  gflops (eval):  132.065
  gflops (total): 125.405
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142706,0.0268707,132.065,125.405

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.189076
  gflops (total): 18.7685
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,18.7685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345763
  gflops (eval):  102.633
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345763,102.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3306
  maximum absolute entry in einsum_ir solution: 58.3306
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141571
  time (eval):    0.0262327
  gflops (eval):  135.277
  gflops (total): 128.35
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141571,0.0262327,135.277,128.35

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18082
  gflops (total): 19.6254
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347111
  gflops (eval):  102.235
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347111,102.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3182
  maximum absolute entry in einsum_ir solution: 57.3182
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00154751
  time (eval):    0.0275709
  gflops (eval):  128.711
  gflops (total): 121.87
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00154751,0.0275709,128.711,121.87

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181888
  gflops (total): 19.5102
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335786
  gflops (eval):  105.683
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335786,105.683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1391
  maximum absolute entry in einsum_ir solution: 60.1392
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143219
  time (eval):    0.0289308
  gflops (eval):  122.661
  gflops (total): 116.875
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143219,0.0289308,122.661,116.875

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181869
  gflops (total): 19.5123
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347085
  gflops (eval):  102.242
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347085,102.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0421
  maximum absolute entry in einsum_ir solution: 58.0421
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143648
  time (eval):    0.0246993
  gflops (eval):  143.675
  gflops (total): 135.778
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143648,0.0246993,143.675,135.778

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182804
  gflops (total): 19.4124
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347087
  gflops (eval):  102.242
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347087,102.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1441
  maximum absolute entry in einsum_ir solution: 54.1441
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142989
  time (eval):    0.0287363
  gflops (eval):  123.491
  gflops (total): 117.638
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142989,0.0287363,123.491,117.638

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181275
  gflops (total): 19.5762
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338494
  gflops (eval):  104.837
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338494,104.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8771
  maximum absolute entry in einsum_ir solution: 55.8771
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00145075
  time (eval):    0.0287712
  gflops (eval):  123.341
  gflops (total): 117.421
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00145075,0.0287712,123.341,117.421

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181197
  gflops (total): 19.5846
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0334761
  gflops (eval):  106.006
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0334761,106.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9069
  maximum absolute entry in einsum_ir solution: 56.9069
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142986
  time (eval):    0.027375
  gflops (eval):  129.632
  gflops (total): 123.197
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142986,0.027375,129.632,123.197

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180218
  gflops (total): 19.691
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342635
  gflops (eval):  103.57
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342635,103.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5986
  maximum absolute entry in einsum_ir solution: 57.5986
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142436
  time (eval):    0.0278511
  gflops (eval):  127.416
  gflops (total): 121.217
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142436,0.0278511,127.416,121.217

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182458
  gflops (total): 19.4493
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339577
  gflops (eval):  104.503
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339577,104.503,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2059
  maximum absolute entry in einsum_ir solution: 59.2059
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143388
  time (eval):    0.0258627
  gflops (eval):  137.212
  gflops (total): 130.004
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143388,0.0258627,137.212,130.004

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180185
  gflops (total): 19.6946
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343674
  gflops (eval):  103.257
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343674,103.257,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4251
  maximum absolute entry in einsum_ir solution: 56.4251
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00144739
  time (eval):    0.0257386
  gflops (eval):  137.874
  gflops (total): 130.533
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00144739,0.0257386,137.874,130.533

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182914
  gflops (total): 19.4008
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339155
  gflops (eval):  104.633
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339155,104.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.382
  maximum absolute entry in einsum_ir solution: 56.382
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142032
  time (eval):    0.0252113
  gflops (eval):  140.758
  gflops (total): 133.251
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142032,0.0252113,140.758,133.251

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181462
  gflops (total): 19.5561
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338166
  gflops (eval):  104.939
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338166,104.939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4359
  maximum absolute entry in einsum_ir solution: 61.4359
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00149571
  time (eval):    0.0273958
  gflops (eval):  129.534
  gflops (total): 122.828
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00149571,0.0273958,129.534,122.828

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18309
  gflops (total): 19.3822
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.3822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340421
  gflops (eval):  104.244
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340421,104.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9914
  maximum absolute entry in einsum_ir solution: 53.9914
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142982
  time (eval):    0.0277455
  gflops (eval):  127.901
  gflops (total): 121.633
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142982,0.0277455,127.901,121.633

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181552
  gflops (total): 19.5463
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347018
  gflops (eval):  102.262
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347018,102.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0198
  maximum absolute entry in einsum_ir solution: 57.0198
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141536
  time (eval):    0.0264598
  gflops (eval):  134.116
  gflops (total): 127.306
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141536,0.0264598,134.116,127.306

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.183377
  gflops (total): 19.3518
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.3518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342996
  gflops (eval):  103.461
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342996,103.461,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5241
  maximum absolute entry in einsum_ir solution: 56.5241
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143901
  time (eval):    0.0270312
  gflops (eval):  131.281
  gflops (total): 124.645
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143901,0.0270312,131.281,124.645

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.178674
  gflops (total): 19.8612
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.8612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346351
  gflops (eval):  102.459
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346351,102.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6322
  maximum absolute entry in einsum_ir solution: 53.6322
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142848
  time (eval):    0.0261471
  gflops (eval):  135.72
  gflops (total): 128.689
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142848,0.0261471,135.72,128.689

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182478
  gflops (total): 19.4472
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336739
  gflops (eval):  105.384
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336739,105.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8864
  maximum absolute entry in einsum_ir solution: 55.8864
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142123
  time (eval):    0.0278669
  gflops (eval):  127.344
  gflops (total): 121.164
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142123,0.0278669,127.344,121.164

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.179779
  gflops (total): 19.7391
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.7391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347446
  gflops (eval):  102.136
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347446,102.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9607
  maximum absolute entry in einsum_ir solution: 53.9607
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142955
  time (eval):    0.0297486
  gflops (eval):  119.289
  gflops (total): 113.819
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142955,0.0297486,119.289,113.819

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181634
  gflops (total): 19.5375
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349224
  gflops (eval):  101.616
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349224,101.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0062
  maximum absolute entry in einsum_ir solution: 58.0062
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142254
  time (eval):    0.0268717
  gflops (eval):  132.06
  gflops (total): 125.421
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142254,0.0268717,132.06,125.421

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180904
  gflops (total): 19.6163
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341482
  gflops (eval):  103.92
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341482,103.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1102
  maximum absolute entry in einsum_ir solution: 58.1102
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143132
  time (eval):    0.027106
  gflops (eval):  130.919
  gflops (total): 124.352
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143132,0.027106,130.919,124.352

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181562
  gflops (total): 19.5452
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335937
  gflops (eval):  105.635
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335937,105.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5282
  maximum absolute entry in einsum_ir solution: 59.5282
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142316
  time (eval):    0.0262629
  gflops (eval):  135.121
  gflops (total): 128.175
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142316,0.0262629,135.121,128.175

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181844
  gflops (total): 19.515
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341778
  gflops (eval):  103.83
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341778,103.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.116
  maximum absolute entry in einsum_ir solution: 58.116
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00145609
  time (eval):    0.026754
  gflops (eval):  132.641
  gflops (total): 125.795
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00145609,0.026754,132.641,125.795

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.183057
  gflops (total): 19.3857
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.3857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338289
  gflops (eval):  104.901
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338289,104.901,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8973
  maximum absolute entry in einsum_ir solution: 56.8973
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143059
  time (eval):    0.0276347
  gflops (eval):  128.414
  gflops (total): 122.093
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143059,0.0276347,128.414,122.093

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180034
  gflops (total): 19.7111
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.7111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336141
  gflops (eval):  105.571
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336141,105.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6521
  maximum absolute entry in einsum_ir solution: 54.6521
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142757
  time (eval):    0.0263527
  gflops (eval):  134.661
  gflops (total): 127.741
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142757,0.0263527,134.661,127.741

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181572
  gflops (total): 19.5442
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0337713
  gflops (eval):  105.08
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0337713,105.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2172
  maximum absolute entry in einsum_ir solution: 61.2172
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00148231
  time (eval):    0.0251765
  gflops (eval):  140.952
  gflops (total): 133.115
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00148231,0.0251765,140.952,133.115

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182238
  gflops (total): 19.4728
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345626
  gflops (eval):  102.674
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345626,102.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9707
  maximum absolute entry in einsum_ir solution: 55.9707
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141877
  time (eval):    0.0254433
  gflops (eval):  139.474
  gflops (total): 132.108
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141877,0.0254433,139.474,132.108

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181924
  gflops (total): 19.5063
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0334661
  gflops (eval):  106.038
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0334661,106.038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.714
  maximum absolute entry in einsum_ir solution: 56.714
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.001438
  time (eval):    0.0254725
  gflops (eval):  139.314
  gflops (total): 131.869
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.001438,0.0254725,139.314,131.869

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182539
  gflops (total): 19.4406
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338279
  gflops (eval):  104.904
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338279,104.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.2672
  maximum absolute entry in einsum_ir solution: 65.2672
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142155
  time (eval):    0.0268919
  gflops (eval):  131.961
  gflops (total): 125.335
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142155,0.0268919,131.961,125.335

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181788
  gflops (total): 19.521
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336679
  gflops (eval):  105.402
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336679,105.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9213
  maximum absolute entry in einsum_ir solution: 54.9213
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00169924
  time (eval):    0.0255719
  gflops (eval):  138.772
  gflops (total): 130.126
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00169924,0.0255719,138.772,130.126

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182744
  gflops (total): 19.4189
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341161
  gflops (eval):  104.018
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341161,104.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6191
  maximum absolute entry in einsum_ir solution: 58.6191
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00148151
  time (eval):    0.0254124
  gflops (eval):  139.644
  gflops (total): 131.951
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00148151,0.0254124,139.644,131.951

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180327
  gflops (total): 19.6791
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347909
  gflops (eval):  102
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347909,102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0148
  maximum absolute entry in einsum_ir solution: 54.0148
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143725
  time (eval):    0.0277146
  gflops (eval):  128.044
  gflops (total): 121.731
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143725,0.0277146,128.044,121.731

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182891
  gflops (total): 19.4032
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347411
  gflops (eval):  102.146
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347411,102.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2773
  maximum absolute entry in einsum_ir solution: 58.2773
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143701
  time (eval):    0.0280296
  gflops (eval):  126.605
  gflops (total): 120.43
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143701,0.0280296,126.605,120.43

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181294
  gflops (total): 19.5742
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347923
  gflops (eval):  101.996
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347923,101.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.202
  maximum absolute entry in einsum_ir solution: 58.202
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143127
  time (eval):    0.0257094
  gflops (eval):  138.03
  gflops (total): 130.751
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143127,0.0257094,138.03,130.751

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180714
  gflops (total): 19.637
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346186
  gflops (eval):  102.508
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346186,102.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6061
  maximum absolute entry in einsum_ir solution: 55.6061
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142103
  time (eval):    0.0256167
  gflops (eval):  138.53
  gflops (total): 131.249
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142103,0.0256167,138.53,131.249

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18398
  gflops (total): 19.2884
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.2884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033924
  gflops (eval):  104.607
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033924,104.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8012
  maximum absolute entry in einsum_ir solution: 58.8012
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00145395
  time (eval):    0.0295056
  gflops (eval):  120.271
  gflops (total): 114.623
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00145395,0.0295056,120.271,114.623

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181803
  gflops (total): 19.5194
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5194

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338007
  gflops (eval):  104.988
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338007,104.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7358
  maximum absolute entry in einsum_ir solution: 54.7358
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142098
  time (eval):    0.0258693
  gflops (eval):  137.177
  gflops (total): 130.034
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142098,0.0258693,137.177,130.034

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182664
  gflops (total): 19.4273
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344734
  gflops (eval):  102.94
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344734,102.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.679
  maximum absolute entry in einsum_ir solution: 55.679
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00154216
  time (eval):    0.0272521
  gflops (eval):  130.216
  gflops (total): 123.242
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00154216,0.0272521,130.216,123.242

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182198
  gflops (total): 19.477
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341913
  gflops (eval):  103.789
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341913,103.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.937
  maximum absolute entry in einsum_ir solution: 57.937
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142706
  time (eval):    0.027112
  gflops (eval):  130.889
  gflops (total): 124.344
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142706,0.027112,130.889,124.344

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180091
  gflops (total): 19.705
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342839
  gflops (eval):  103.509
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342839,103.509,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1165
  maximum absolute entry in einsum_ir solution: 59.1165
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142243
  time (eval):    0.0249549
  gflops (eval):  142.203
  gflops (total): 134.535
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142243,0.0249549,142.203,134.535

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181221
  gflops (total): 19.5821
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0334399
  gflops (eval):  106.121
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0334399,106.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4057
  maximum absolute entry in einsum_ir solution: 57.4057
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014349
  time (eval):    0.0302439
  gflops (eval):  117.335
  gflops (total): 112.021
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014349,0.0302439,117.335,112.021

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182132
  gflops (total): 19.4841
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339313
  gflops (eval):  104.584
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339313,104.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7287
  maximum absolute entry in einsum_ir solution: 55.7287
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142168
  time (eval):    0.0285672
  gflops (eval):  124.222
  gflops (total): 118.333
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142168,0.0285672,124.222,118.333

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181437
  gflops (total): 19.5587
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033438
  gflops (eval):  106.127
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033438,106.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5466
  maximum absolute entry in einsum_ir solution: 53.5466
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00147374
  time (eval):    0.027326
  gflops (eval):  129.864
  gflops (total): 123.219
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00147374,0.027326,129.864,123.219

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.18207
  gflops (total): 19.4907
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341171
  gflops (eval):  104.015
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341171,104.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.816
  maximum absolute entry in einsum_ir solution: 52.816
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00190523
  time (eval):    0.0258034
  gflops (eval):  137.528
  gflops (total): 128.071
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00190523,0.0258034,137.528,128.071

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181872
  gflops (total): 19.5119
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348508
  gflops (eval):  101.825
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348508,101.825,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7191
  maximum absolute entry in einsum_ir solution: 61.7191
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014407
  time (eval):    0.026933
  gflops (eval):  131.759
  gflops (total): 125.069
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014407,0.026933,131.759,125.069

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182587
  gflops (total): 19.4355
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0331287
  gflops (eval):  107.118
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0331287,107.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6958
  maximum absolute entry in einsum_ir solution: 55.6958
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00172464
  time (eval):    0.0257594
  gflops (eval):  137.763
  gflops (total): 129.118
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00172464,0.0257594,137.763,129.118

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181944
  gflops (total): 19.5043
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347753
  gflops (eval):  102.046
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347753,102.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.693
  maximum absolute entry in einsum_ir solution: 55.693
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141744
  time (eval):    0.0256816
  gflops (eval):  138.18
  gflops (total): 130.952
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141744,0.0256816,138.18,130.952

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.179904
  gflops (total): 19.7254
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.7254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339179
  gflops (eval):  104.625
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339179,104.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.446
  maximum absolute entry in einsum_ir solution: 61.446
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142043
  time (eval):    0.0280625
  gflops (eval):  126.456
  gflops (total): 120.364
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142043,0.0280625,126.456,120.364

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182153
  gflops (total): 19.4818
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346796
  gflops (eval):  102.328
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346796,102.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5053
  maximum absolute entry in einsum_ir solution: 54.5053
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141635
  time (eval):    0.0259478
  gflops (eval):  136.762
  gflops (total): 129.683
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141635,0.0259478,136.762,129.683

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180542
  gflops (total): 19.6557
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0352991
  gflops (eval):  100.532
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0352991,100.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      68.8832
  maximum absolute entry in einsum_ir solution: 68.8832
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142389
  time (eval):    0.0250508
  gflops (eval):  141.659
  gflops (total): 134.04
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142389,0.0250508,141.659,134.04

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182284
  gflops (total): 19.4678
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336401
  gflops (eval):  105.49
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336401,105.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3429
  maximum absolute entry in einsum_ir solution: 58.3429
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142533
  time (eval):    0.0303417
  gflops (eval):  116.957
  gflops (total): 111.709
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142533,0.0303417,116.957,111.709

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181417
  gflops (total): 19.5608
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344842
  gflops (eval):  102.907
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344842,102.907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6156
  maximum absolute entry in einsum_ir solution: 60.6156
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143419
  time (eval):    0.0260861
  gflops (eval):  136.037
  gflops (total): 128.948
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143419,0.0260861,136.037,128.948

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.181293
  gflops (total): 19.5743
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.5743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034731
  gflops (eval):  102.176
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034731,102.176,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2343
  maximum absolute entry in einsum_ir solution: 60.2343
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142321
  time (eval):    0.0260529
  gflops (eval):  136.211
  gflops (total): 129.155
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142321,0.0260529,136.211,129.155

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182245
  gflops (total): 19.472
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348645
  gflops (eval):  101.785
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348645,101.785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.133
  maximum absolute entry in einsum_ir solution: 55.133
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00150514
  time (eval):    0.0270911
  gflops (eval):  130.99
  gflops (total): 124.096
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00150514,0.0270911,130.99,124.096

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.182317
  gflops (total): 19.4643
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.4643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340146
  gflops (eval):  104.328
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340146,104.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8904
  maximum absolute entry in einsum_ir solution: 54.8904
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143179
  time (eval):    0.026887
  gflops (eval):  131.985
  gflops (total): 125.312
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143179,0.026887,131.985,125.312

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180641
  gflops (total): 19.6449
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336522
  gflops (eval):  105.452
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336522,105.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1023
  maximum absolute entry in einsum_ir solution: 53.1023
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142503
  time (eval):    0.0263935
  gflops (eval):  134.453
  gflops (total): 127.565
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142503,0.0263935,134.453,127.565

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.180225
  gflops (total): 19.6903
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,19.6903

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0330489
  gflops (eval):  107.376
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0330489,107.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4432
  maximum absolute entry in einsum_ir solution: 55.4432
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157074
  time (eval):    0.0451091
  gflops (eval):  150.924
  gflops (total): 145.845
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157074,0.0451091,150.924,145.845

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325647
  gflops (total): 20.9062
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478423
  gflops (eval):  142.302
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478423,142.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6885
  maximum absolute entry in einsum_ir solution: 42.6885
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157907
  time (eval):    0.0451826
  gflops (eval):  150.678
  gflops (total): 145.59
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157907,0.0451826,150.678,145.59

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325974
  gflops (total): 20.8853
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480931
  gflops (eval):  141.56
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480931,141.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3388
  maximum absolute entry in einsum_ir solution: 39.3388
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015743
  time (eval):    0.0451641
  gflops (eval):  150.74
  gflops (total): 145.663
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015743,0.0451641,150.74,145.663

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325284
  gflops (total): 20.9296
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478839
  gflops (eval):  142.178
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478839,142.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.5865
  maximum absolute entry in einsum_ir solution: 47.5865
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157396
  time (eval):    0.0454026
  gflops (eval):  149.948
  gflops (total): 144.924
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157396,0.0454026,149.948,144.924

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.329126
  gflops (total): 20.6852
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.6852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482578
  gflops (eval):  141.077
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482578,141.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.4381
  maximum absolute entry in einsum_ir solution: 45.4381
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015813
  time (eval):    0.045116
  gflops (eval):  150.901
  gflops (total): 145.791
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015813,0.045116,150.901,145.791

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325384
  gflops (total): 20.9231
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0499804
  gflops (eval):  136.214
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0499804,136.214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2049
  maximum absolute entry in einsum_ir solution: 44.2049
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00161742
  time (eval):    0.0452998
  gflops (eval):  150.289
  gflops (total): 145.108
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00161742,0.0452998,150.289,145.108

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325939
  gflops (total): 20.8875
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478237
  gflops (eval):  142.357
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478237,142.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4476
  maximum absolute entry in einsum_ir solution: 44.4476
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158024
  time (eval):    0.0452813
  gflops (eval):  150.35
  gflops (total): 145.28
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158024,0.0452813,150.35,145.28

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326171
  gflops (total): 20.8726
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479091
  gflops (eval):  142.103
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479091,142.103,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.5068
  maximum absolute entry in einsum_ir solution: 48.5068
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00176135
  time (eval):    0.0449629
  gflops (eval):  151.415
  gflops (total): 145.707
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00176135,0.0449629,151.415,145.707

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325489
  gflops (total): 20.9164
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0493028
  gflops (eval):  138.086
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0493028,138.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.6132
  maximum absolute entry in einsum_ir solution: 46.6132
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157169
  time (eval):    0.0452907
  gflops (eval):  150.319
  gflops (total): 145.277
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157169,0.0452907,150.319,145.277

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325314
  gflops (total): 20.9276
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478306
  gflops (eval):  142.337
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478306,142.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.7255
  maximum absolute entry in einsum_ir solution: 44.7255
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159893
  time (eval):    0.0452625
  gflops (eval):  150.412
  gflops (total): 145.28
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159893,0.0452625,150.412,145.28

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325618
  gflops (total): 20.9081
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9081

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480171
  gflops (eval):  141.784
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480171,141.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.3451
  maximum absolute entry in einsum_ir solution: 48.3451
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155993
  time (eval):    0.0452773
  gflops (eval):  150.363
  gflops (total): 145.355
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155993,0.0452773,150.363,145.355

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325614
  gflops (total): 20.9084
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479597
  gflops (eval):  141.953
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479597,141.953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.3095
  maximum absolute entry in einsum_ir solution: 46.3095
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158211
  time (eval):    0.0450854
  gflops (eval):  151.003
  gflops (total): 145.884
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158211,0.0450854,151.003,145.884

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.32622
  gflops (total): 20.8695
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481256
  gflops (eval):  141.464
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481256,141.464,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.7708
  maximum absolute entry in einsum_ir solution: 46.7708
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158135
  time (eval):    0.045335
  gflops (eval):  150.172
  gflops (total): 145.11
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158135,0.045335,150.172,145.11

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325412
  gflops (total): 20.9213
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480387
  gflops (eval):  141.72
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480387,141.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.7571
  maximum absolute entry in einsum_ir solution: 47.7571
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157394
  time (eval):    0.0453424
  gflops (eval):  150.147
  gflops (total): 145.11
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157394,0.0453424,150.147,145.11

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326039
  gflops (total): 20.8811
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482587
  gflops (eval):  141.074
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482587,141.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0858
  maximum absolute entry in einsum_ir solution: 44.0858
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00161297
  time (eval):    0.0452303
  gflops (eval):  150.519
  gflops (total): 145.337
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00161297,0.0452303,150.519,145.337

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325715
  gflops (total): 20.9019
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480616
  gflops (eval):  141.652
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480616,141.652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.4156
  maximum absolute entry in einsum_ir solution: 45.4156
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158313
  time (eval):    0.0450537
  gflops (eval):  151.11
  gflops (total): 145.98
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158313,0.0450537,151.11,145.98

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325536
  gflops (total): 20.9133
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0498663
  gflops (eval):  136.526
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0498663,136.526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3327
  maximum absolute entry in einsum_ir solution: 43.3327
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157004
  time (eval):    0.045216
  gflops (eval):  150.567
  gflops (total): 145.514
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157004,0.045216,150.567,145.514

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325604
  gflops (total): 20.909
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0486707
  gflops (eval):  139.88
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0486707,139.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8724
  maximum absolute entry in einsum_ir solution: 42.8724
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154147
  time (eval):    0.0453208
  gflops (eval):  150.219
  gflops (total): 145.278
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154147,0.0453208,150.219,145.278

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326411
  gflops (total): 20.8573
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483052
  gflops (eval):  140.938
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483052,140.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.4038
  maximum absolute entry in einsum_ir solution: 45.4038
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156548
  time (eval):    0.04516
  gflops (eval):  150.754
  gflops (total): 145.703
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156548,0.04516,150.754,145.703

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325242
  gflops (total): 20.9323
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478704
  gflops (eval):  142.218
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478704,142.218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0656
  maximum absolute entry in einsum_ir solution: 42.0656
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156986
  time (eval):    0.0452704
  gflops (eval):  150.386
  gflops (total): 145.346
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156986,0.0452704,150.386,145.346

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325822
  gflops (total): 20.895
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480063
  gflops (eval):  141.816
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480063,141.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6417
  maximum absolute entry in einsum_ir solution: 41.6417
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0016239
  time (eval):    0.0453102
  gflops (eval):  150.254
  gflops (total): 145.055
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0016239,0.0453102,150.254,145.055

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325165
  gflops (total): 20.9372
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480817
  gflops (eval):  141.593
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480817,141.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0563
  maximum absolute entry in einsum_ir solution: 44.0563
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157722
  time (eval):    0.0454562
  gflops (eval):  149.771
  gflops (total): 144.749
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157722,0.0454562,149.771,144.749

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325845
  gflops (total): 20.8935
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481683
  gflops (eval):  141.339
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481683,141.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.4254
  maximum absolute entry in einsum_ir solution: 43.4254
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157365
  time (eval):    0.0454813
  gflops (eval):  149.689
  gflops (total): 144.683
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157365,0.0454813,149.689,144.683

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325083
  gflops (total): 20.9425
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9425

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480013
  gflops (eval):  141.83
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480013,141.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2248
  maximum absolute entry in einsum_ir solution: 44.2248
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00161704
  time (eval):    0.0452209
  gflops (eval):  150.551
  gflops (total): 145.353
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00161704,0.0452209,150.551,145.353

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325964
  gflops (total): 20.8859
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481522
  gflops (eval):  141.386
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481522,141.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2373
  maximum absolute entry in einsum_ir solution: 44.2373
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157835
  time (eval):    0.0450747
  gflops (eval):  151.039
  gflops (total): 145.929
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157835,0.0450747,151.039,145.929

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326232
  gflops (total): 20.8687
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476494
  gflops (eval):  142.878
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476494,142.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5765
  maximum absolute entry in einsum_ir solution: 40.5765
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156876
  time (eval):    0.045104
  gflops (eval):  150.941
  gflops (total): 145.868
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156876,0.045104,150.941,145.868

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325541
  gflops (total): 20.913
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0486486
  gflops (eval):  139.943
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0486486,139.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.8193
  maximum absolute entry in einsum_ir solution: 44.8193
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158647
  time (eval):    0.0451431
  gflops (eval):  150.81
  gflops (total): 145.69
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158647,0.0451431,150.81,145.69

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325418
  gflops (total): 20.9209
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9209

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480053
  gflops (eval):  141.818
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480053,141.818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.6461
  maximum absolute entry in einsum_ir solution: 44.6461
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00161641
  time (eval):    0.0451196
  gflops (eval):  150.889
  gflops (total): 145.67
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00161641,0.0451196,150.889,145.67

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325444
  gflops (total): 20.9192
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0487494
  gflops (eval):  139.654
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0487494,139.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2083
  maximum absolute entry in einsum_ir solution: 43.2083
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156341
  time (eval):    0.0454954
  gflops (eval):  149.643
  gflops (total): 144.671
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156341,0.0454954,149.643,144.671

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.32528
  gflops (total): 20.9298
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048033
  gflops (eval):  141.737
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048033,141.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1036
  maximum absolute entry in einsum_ir solution: 45.1036
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159777
  time (eval):    0.0452741
  gflops (eval):  150.374
  gflops (total): 145.248
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159777,0.0452741,150.374,145.248

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325763
  gflops (total): 20.8987
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483504
  gflops (eval):  140.806
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483504,140.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2031
  maximum absolute entry in einsum_ir solution: 43.2031
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158123
  time (eval):    0.0452496
  gflops (eval):  150.455
  gflops (total): 145.375
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158123,0.0452496,150.455,145.375

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325666
  gflops (total): 20.905
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0489969
  gflops (eval):  138.949
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0489969,138.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.6632
  maximum absolute entry in einsum_ir solution: 48.6632
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157177
  time (eval):    0.0452221
  gflops (eval):  150.547
  gflops (total): 145.49
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157177,0.0452221,150.547,145.49

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325125
  gflops (total): 20.9397
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483735
  gflops (eval):  140.739
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483735,140.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1836
  maximum absolute entry in einsum_ir solution: 43.1836
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00168663
  time (eval):    0.0452033
  gflops (eval):  150.609
  gflops (total): 145.192
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00168663,0.0452033,150.609,145.192

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325724
  gflops (total): 20.9013
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048672
  gflops (eval):  139.876
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048672,139.876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.734
  maximum absolute entry in einsum_ir solution: 42.734
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157089
  time (eval):    0.0452212
  gflops (eval):  150.55
  gflops (total): 145.496
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157089,0.0452212,150.55,145.496

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324779
  gflops (total): 20.9621
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481842
  gflops (eval):  141.292
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481842,141.292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.7524
  maximum absolute entry in einsum_ir solution: 45.7524
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00161251
  time (eval):    0.045144
  gflops (eval):  150.807
  gflops (total): 145.606
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00161251,0.045144,150.807,145.606

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326691
  gflops (total): 20.8394
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477028
  gflops (eval):  142.718
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477028,142.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1873
  maximum absolute entry in einsum_ir solution: 43.1873
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157909
  time (eval):    0.0452683
  gflops (eval):  150.393
  gflops (total): 145.324
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157909,0.0452683,150.393,145.324

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324712
  gflops (total): 20.9664
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481173
  gflops (eval):  141.488
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481173,141.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.4036
  maximum absolute entry in einsum_ir solution: 45.4036
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156125
  time (eval):    0.0453695
  gflops (eval):  150.058
  gflops (total): 145.066
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156125,0.0453695,150.058,145.066

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326352
  gflops (total): 20.861
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0487534
  gflops (eval):  139.642
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0487534,139.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8872
  maximum absolute entry in einsum_ir solution: 40.8872
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157222
  time (eval):    0.0452447
  gflops (eval):  150.471
  gflops (total): 145.418
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157222,0.0452447,150.471,145.418

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324897
  gflops (total): 20.9544
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481638
  gflops (eval):  141.352
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481638,141.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0888
  maximum absolute entry in einsum_ir solution: 44.0888
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156013
  time (eval):    0.0450858
  gflops (eval):  151.002
  gflops (total): 145.952
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156013,0.0450858,151.002,145.952

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326268
  gflops (total): 20.8664
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483946
  gflops (eval):  140.678
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483946,140.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.1346
  maximum absolute entry in einsum_ir solution: 47.1346
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015726
  time (eval):    0.0452249
  gflops (eval):  150.538
  gflops (total): 145.479
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015726,0.0452249,150.538,145.479

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325242
  gflops (total): 20.9323
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0484724
  gflops (eval):  140.452
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0484724,140.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.9764
  maximum absolute entry in einsum_ir solution: 41.9764
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157709
  time (eval):    0.0453043
  gflops (eval):  150.274
  gflops (total): 145.218
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157709,0.0453043,150.274,145.218

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325829
  gflops (total): 20.8946
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479615
  gflops (eval):  141.948
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479615,141.948,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.1193
  maximum absolute entry in einsum_ir solution: 48.1193
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156748
  time (eval):    0.0451472
  gflops (eval):  150.797
  gflops (total): 145.737
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156748,0.0451472,150.797,145.737

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325612
  gflops (total): 20.9085
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479566
  gflops (eval):  141.963
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479566,141.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.831
  maximum absolute entry in einsum_ir solution: 48.831
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157113
  time (eval):    0.0453691
  gflops (eval):  150.059
  gflops (total): 145.036
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157113,0.0453691,150.059,145.036

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326817
  gflops (total): 20.8314
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0488869
  gflops (eval):  139.261
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0488869,139.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0535
  maximum absolute entry in einsum_ir solution: 43.0535
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158828
  time (eval):    0.0454199
  gflops (eval):  149.891
  gflops (total): 144.827
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158828,0.0454199,149.891,144.827

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325213
  gflops (total): 20.9341
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479561
  gflops (eval):  141.964
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479561,141.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1549
  maximum absolute entry in einsum_ir solution: 43.1549
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157448
  time (eval):    0.0451423
  gflops (eval):  150.813
  gflops (total): 145.73
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157448,0.0451423,150.813,145.73

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325934
  gflops (total): 20.8878
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479503
  gflops (eval):  141.981
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479503,141.981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.4876
  maximum absolute entry in einsum_ir solution: 45.4876
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156696
  time (eval):    0.0450682
  gflops (eval):  151.061
  gflops (total): 145.985
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156696,0.0450682,151.061,145.985

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.32513
  gflops (total): 20.9394
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480907
  gflops (eval):  141.567
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480907,141.567,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4617
  maximum absolute entry in einsum_ir solution: 46.4617
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156084
  time (eval):    0.0453232
  gflops (eval):  150.211
  gflops (total): 145.21
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156084,0.0453232,150.211,145.21

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.347535
  gflops (total): 19.5895
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,19.5895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481348
  gflops (eval):  141.437
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481348,141.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.447
  maximum absolute entry in einsum_ir solution: 45.447
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158826
  time (eval):    0.0451684
  gflops (eval):  150.726
  gflops (total): 145.606
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158826,0.0451684,150.726,145.606

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.32539
  gflops (total): 20.9227
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0495414
  gflops (eval):  137.421
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0495414,137.421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.652
  maximum absolute entry in einsum_ir solution: 44.652
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015823
  time (eval):    0.0454324
  gflops (eval):  149.85
  gflops (total): 144.807
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015823,0.0454324,149.85,144.807

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326131
  gflops (total): 20.8752
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478509
  gflops (eval):  142.276
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478509,142.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3522
  maximum absolute entry in einsum_ir solution: 44.3522
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158176
  time (eval):    0.0454319
  gflops (eval):  149.852
  gflops (total): 144.81
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158176,0.0454319,149.852,144.81

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324267
  gflops (total): 20.9951
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482427
  gflops (eval):  141.121
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482427,141.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.494
  maximum absolute entry in einsum_ir solution: 40.494
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156661
  time (eval):    0.0453813
  gflops (eval):  150.019
  gflops (total): 145.013
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156661,0.0453813,150.019,145.013

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.327083
  gflops (total): 20.8144
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478191
  gflops (eval):  142.371
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478191,142.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8254
  maximum absolute entry in einsum_ir solution: 41.8254
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159914
  time (eval):    0.0451003
  gflops (eval):  150.954
  gflops (total): 145.784
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159914,0.0451003,150.954,145.784

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.323982
  gflops (total): 21.0136
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,21.0136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482635
  gflops (eval):  141.06
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482635,141.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.145
  maximum absolute entry in einsum_ir solution: 41.145
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156899
  time (eval):    0.0452175
  gflops (eval):  150.562
  gflops (total): 145.513
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156899,0.0452175,150.562,145.513

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.330689
  gflops (total): 20.5875
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.5875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0496543
  gflops (eval):  137.109
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0496543,137.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8368
  maximum absolute entry in einsum_ir solution: 40.8368
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00163658
  time (eval):    0.0450337
  gflops (eval):  151.177
  gflops (total): 145.875
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00163658,0.0450337,151.177,145.875

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324731
  gflops (total): 20.9652
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477173
  gflops (eval):  142.675
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477173,142.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2613
  maximum absolute entry in einsum_ir solution: 41.2613
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156862
  time (eval):    0.0452427
  gflops (eval):  150.478
  gflops (total): 145.436
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156862,0.0452427,150.478,145.436

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.329188
  gflops (total): 20.6813
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.6813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478792
  gflops (eval):  142.192
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478792,142.192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.2058
  maximum absolute entry in einsum_ir solution: 45.2058
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158388
  time (eval):    0.0451674
  gflops (eval):  150.729
  gflops (total): 145.622
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158388,0.0451674,150.729,145.622

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.32466
  gflops (total): 20.9698
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479286
  gflops (eval):  142.045
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479286,142.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4079
  maximum absolute entry in einsum_ir solution: 44.4079
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00163132
  time (eval):    0.0451903
  gflops (eval):  150.653
  gflops (total): 145.404
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00163132,0.0451903,150.653,145.404

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325976
  gflops (total): 20.8851
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0484836
  gflops (eval):  140.419
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0484836,140.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3418
  maximum absolute entry in einsum_ir solution: 43.3418
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156824
  time (eval):    0.0453769
  gflops (eval):  150.033
  gflops (total): 145.021
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156824,0.0453769,150.033,145.021

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324235
  gflops (total): 20.9973
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.04784
  gflops (eval):  142.309
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.04784,142.309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1111
  maximum absolute entry in einsum_ir solution: 43.1111
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00162238
  time (eval):    0.0450768
  gflops (eval):  151.032
  gflops (total): 145.785
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00162238,0.0450768,151.032,145.785

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326035
  gflops (total): 20.8813
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480771
  gflops (eval):  141.607
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480771,141.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.6978
  maximum absolute entry in einsum_ir solution: 44.6978
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158731
  time (eval):    0.0452528
  gflops (eval):  150.445
  gflops (total): 145.347
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158731,0.0452528,150.445,145.347

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325099
  gflops (total): 20.9414
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0485047
  gflops (eval):  140.358
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0485047,140.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0045
  maximum absolute entry in einsum_ir solution: 46.0045
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157861
  time (eval):    0.0451884
  gflops (eval):  150.659
  gflops (total): 145.574
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157861,0.0451884,150.659,145.574

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325818
  gflops (total): 20.8953
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482398
  gflops (eval):  141.129
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482398,141.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3011
  maximum absolute entry in einsum_ir solution: 40.3011
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00171349
  time (eval):    0.0452413
  gflops (eval):  150.483
  gflops (total): 144.992
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00171349,0.0452413,150.483,144.992

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325088
  gflops (total): 20.9421
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481176
  gflops (eval):  141.488
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481176,141.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.9303
  maximum absolute entry in einsum_ir solution: 44.9303
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015824
  time (eval):    0.0452653
  gflops (eval):  150.403
  gflops (total): 145.323
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015824,0.0452653,150.403,145.323

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325979
  gflops (total): 20.8849
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482099
  gflops (eval):  141.217
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482099,141.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4248
  maximum absolute entry in einsum_ir solution: 46.4248
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157658
  time (eval):    0.0452471
  gflops (eval):  150.464
  gflops (total): 145.397
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157658,0.0452471,150.464,145.397

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325011
  gflops (total): 20.9471
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480891
  gflops (eval):  141.571
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480891,141.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.6293
  maximum absolute entry in einsum_ir solution: 45.6293
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157722
  time (eval):    0.0451972
  gflops (eval):  150.63
  gflops (total): 145.551
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157722,0.0451972,150.63,145.551

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325866
  gflops (total): 20.8921
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048115
  gflops (eval):  141.495
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048115,141.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.2383
  maximum absolute entry in einsum_ir solution: 45.2383
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00160245
  time (eval):    0.0452407
  gflops (eval):  150.485
  gflops (total): 145.337
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00160245,0.0452407,150.485,145.337

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.32553
  gflops (total): 20.9137
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479063
  gflops (eval):  142.112
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479063,142.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.052
  maximum absolute entry in einsum_ir solution: 45.052
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158343
  time (eval):    0.045187
  gflops (eval):  150.664
  gflops (total): 145.563
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158343,0.045187,150.664,145.563

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.327491
  gflops (total): 20.7885
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.7885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048445
  gflops (eval):  140.531
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048445,140.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.9615
  maximum absolute entry in einsum_ir solution: 46.9615
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157817
  time (eval):    0.0451325
  gflops (eval):  150.846
  gflops (total): 145.749
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157817,0.0451325,150.846,145.749

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.323982
  gflops (total): 21.0136
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,21.0136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482247
  gflops (eval):  141.173
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482247,141.173,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.8268
  maximum absolute entry in einsum_ir solution: 44.8268
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00165801
  time (eval):    0.0455312
  gflops (eval):  149.525
  gflops (total): 144.271
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00165801,0.0455312,149.525,144.271

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326847
  gflops (total): 20.8295
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481013
  gflops (eval):  141.535
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481013,141.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.296
  maximum absolute entry in einsum_ir solution: 42.296
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156167
  time (eval):    0.0454235
  gflops (eval):  149.879
  gflops (total): 144.898
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156167,0.0454235,149.879,144.898

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325992
  gflops (total): 20.8841
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0496109
  gflops (eval):  137.229
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0496109,137.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.7382
  maximum absolute entry in einsum_ir solution: 40.7382
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157672
  time (eval):    0.0451163
  gflops (eval):  150.9
  gflops (total): 145.804
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157672,0.0451163,150.9,145.804

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325693
  gflops (total): 20.9032
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0485286
  gflops (eval):  140.289
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0485286,140.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5611
  maximum absolute entry in einsum_ir solution: 42.5611
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00163595
  time (eval):    0.0450359
  gflops (eval):  151.169
  gflops (total): 145.871
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00163595,0.0450359,151.169,145.871

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325906
  gflops (total): 20.8896
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0486316
  gflops (eval):  139.992
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0486316,139.992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0805
  maximum absolute entry in einsum_ir solution: 45.0805
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157303
  time (eval):    0.0450632
  gflops (eval):  151.078
  gflops (total): 145.982
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157303,0.0450632,151.078,145.982

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.328856
  gflops (total): 20.7022
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.7022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0487683
  gflops (eval):  139.6
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0487683,139.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4655
  maximum absolute entry in einsum_ir solution: 46.4655
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157894
  time (eval):    0.0453075
  gflops (eval):  150.263
  gflops (total): 145.203
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157894,0.0453075,150.263,145.203

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325332
  gflops (total): 20.9265
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482552
  gflops (eval):  141.084
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482552,141.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.915
  maximum absolute entry in einsum_ir solution: 45.915
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158866
  time (eval):    0.0452284
  gflops (eval):  150.526
  gflops (total): 145.418
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158866,0.0452284,150.526,145.418

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325563
  gflops (total): 20.9116
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481997
  gflops (eval):  141.247
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481997,141.247,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9438
  maximum absolute entry in einsum_ir solution: 43.9438
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158188
  time (eval):    0.0453631
  gflops (eval):  150.079
  gflops (total): 145.022
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158188,0.0453631,150.079,145.022

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325593
  gflops (total): 20.9097
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482001
  gflops (eval):  141.245
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482001,141.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4364
  maximum absolute entry in einsum_ir solution: 39.4364
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00192568
  time (eval):    0.0452318
  gflops (eval):  150.515
  gflops (total): 144.368
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00192568,0.0452318,150.515,144.368

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325919
  gflops (total): 20.8888
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474818
  gflops (eval):  143.382
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474818,143.382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.5034
  maximum absolute entry in einsum_ir solution: 43.5034
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157352
  time (eval):    0.0452469
  gflops (eval):  150.464
  gflops (total): 145.408
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157352,0.0452469,150.464,145.408

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325233
  gflops (total): 20.9328
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047783
  gflops (eval):  142.478
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047783,142.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.5417
  maximum absolute entry in einsum_ir solution: 46.5417
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157606
  time (eval):    0.045201
  gflops (eval):  150.617
  gflops (total): 145.542
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157606,0.045201,150.617,145.542

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325101
  gflops (total): 20.9413
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480757
  gflops (eval):  141.611
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480757,141.611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.8676
  maximum absolute entry in einsum_ir solution: 45.8676
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158444
  time (eval):    0.0452704
  gflops (eval):  150.386
  gflops (total): 145.301
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158444,0.0452704,150.386,145.301

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326171
  gflops (total): 20.8726
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048319
  gflops (eval):  140.898
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048319,140.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9293
  maximum absolute entry in einsum_ir solution: 42.9293
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158363
  time (eval):    0.0450635
  gflops (eval):  151.077
  gflops (total): 145.948
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158363,0.0450635,151.077,145.948

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325297
  gflops (total): 20.9287
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9287

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480705
  gflops (eval):  141.626
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480705,141.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1936
  maximum absolute entry in einsum_ir solution: 42.1936
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0018563
  time (eval):    0.0452657
  gflops (eval):  150.402
  gflops (total): 144.477
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0018563,0.0452657,150.402,144.477

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.32419
  gflops (total): 21.0002
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,21.0002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478614
  gflops (eval):  142.245
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478614,142.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8864
  maximum absolute entry in einsum_ir solution: 43.8864
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0019464
  time (eval):    0.0451604
  gflops (eval):  150.752
  gflops (total): 144.524
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0019464,0.0451604,150.752,144.524

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.327371
  gflops (total): 20.7961
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.7961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483885
  gflops (eval):  140.696
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483885,140.696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.5402
  maximum absolute entry in einsum_ir solution: 48.5402
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158252
  time (eval):    0.0453385
  gflops (eval):  150.16
  gflops (total): 145.096
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158252,0.0453385,150.16,145.096

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325094
  gflops (total): 20.9418
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481236
  gflops (eval):  141.47
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481236,141.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6815
  maximum absolute entry in einsum_ir solution: 42.6815
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00164927
  time (eval):    0.0451488
  gflops (eval):  150.791
  gflops (total): 145.477
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00164927,0.0451488,150.791,145.477

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324315
  gflops (total): 20.9921
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476776
  gflops (eval):  142.793
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476776,142.793,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.0779
  maximum absolute entry in einsum_ir solution: 48.0779
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157073
  time (eval):    0.0453035
  gflops (eval):  150.276
  gflops (total): 145.241
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157073,0.0453035,150.276,145.241

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.334906
  gflops (total): 20.3282
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.3282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047772
  gflops (eval):  142.511
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047772,142.511,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9483
  maximum absolute entry in einsum_ir solution: 42.9483
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158733
  time (eval):    0.0451261
  gflops (eval):  150.867
  gflops (total): 145.741
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158733,0.0451261,150.867,145.741

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.326326
  gflops (total): 20.8627
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481677
  gflops (eval):  141.34
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481677,141.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.7508
  maximum absolute entry in einsum_ir solution: 45.7508
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00187127
  time (eval):    0.0449832
  gflops (eval):  151.346
  gflops (total): 145.302
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00187127,0.0449832,151.346,145.302

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325302
  gflops (total): 20.9284
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481189
  gflops (eval):  141.484
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481189,141.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3907
  maximum absolute entry in einsum_ir solution: 41.3907
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00160298
  time (eval):    0.0451379
  gflops (eval):  150.827
  gflops (total): 145.655
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00160298,0.0451379,150.827,145.655

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325537
  gflops (total): 20.9132
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0486561
  gflops (eval):  139.922
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0486561,139.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.466
  maximum absolute entry in einsum_ir solution: 48.466
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158637
  time (eval):    0.0453885
  gflops (eval):  149.995
  gflops (total): 144.929
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158637,0.0453885,149.995,144.929

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324847
  gflops (total): 20.9577
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481501
  gflops (eval):  141.392
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481501,141.392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9832
  maximum absolute entry in einsum_ir solution: 40.9832
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157323
  time (eval):    0.0453151
  gflops (eval):  150.238
  gflops (total): 145.197
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157323,0.0453151,150.238,145.197

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325797
  gflops (total): 20.8966
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475603
  gflops (eval):  143.146
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475603,143.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1675
  maximum absolute entry in einsum_ir solution: 45.1675
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157005
  time (eval):    0.0455873
  gflops (eval):  149.341
  gflops (total): 144.369
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157005,0.0455873,149.341,144.369

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325599
  gflops (total): 20.9093
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480727
  gflops (eval):  141.62
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480727,141.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.2523
  maximum absolute entry in einsum_ir solution: 50.2523
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157019
  time (eval):    0.0452171
  gflops (eval):  150.563
  gflops (total): 145.511
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157019,0.0452171,150.563,145.511

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325792
  gflops (total): 20.8969
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475103
  gflops (eval):  143.296
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475103,143.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5626
  maximum absolute entry in einsum_ir solution: 42.5626
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0016245
  time (eval):    0.0452064
  gflops (eval):  150.599
  gflops (total): 145.375
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0016245,0.0452064,150.599,145.375

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325925
  gflops (total): 20.8884
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478534
  gflops (eval):  142.269
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478534,142.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.053
  maximum absolute entry in einsum_ir solution: 45.053
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158754
  time (eval):    0.0452467
  gflops (eval):  150.465
  gflops (total): 145.365
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158754,0.0452467,150.465,145.365

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.324005
  gflops (total): 21.0122
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,21.0122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047739
  gflops (eval):  142.61
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047739,142.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4658
  maximum absolute entry in einsum_ir solution: 44.4658
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156287
  time (eval):    0.0453764
  gflops (eval):  150.035
  gflops (total): 145.039
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156287,0.0453764,150.035,145.039

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.32626
  gflops (total): 20.8669
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0495243
  gflops (eval):  137.469
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0495243,137.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9795
  maximum absolute entry in einsum_ir solution: 42.9795
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155745
  time (eval):    0.0453261
  gflops (eval):  150.201
  gflops (total): 145.212
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155745,0.0453261,150.201,145.212

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.327031
  gflops (total): 20.8177
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480087
  gflops (eval):  141.808
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480087,141.808,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.6533
  maximum absolute entry in einsum_ir solution: 45.6533
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158023
  time (eval):    0.0454427
  gflops (eval):  149.816
  gflops (total): 144.781
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158023,0.0454427,149.816,144.781

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.329336
  gflops (total): 20.672
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0487972
  gflops (eval):  139.517
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0487972,139.517,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4918
  maximum absolute entry in einsum_ir solution: 46.4918
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159192
  time (eval):    0.0452641
  gflops (eval):  150.407
  gflops (total): 145.297
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159192,0.0452641,150.407,145.297

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325316
  gflops (total): 20.9275
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.9275

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477118
  gflops (eval):  142.691
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477118,142.691,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.8857
  maximum absolute entry in einsum_ir solution: 47.8857
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00160551
  time (eval):    0.0452369
  gflops (eval):  150.498
  gflops (total): 145.339
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00160551,0.0452369,150.498,145.339

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.325963
  gflops (total): 20.8859
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,20.8859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481865
  gflops (eval):  141.285
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481865,141.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.671
  maximum absolute entry in einsum_ir solution: 40.671
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144381
  time (eval):    0.0201599
  gflops (eval):  153.908
  gflops (total): 143.622
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144381,0.0201599,153.908,143.622

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133471
  gflops (total): 23.2468
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275
  gflops (eval):  112.828
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275,112.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8809
  maximum absolute entry in einsum_ir solution: 57.8809
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0017098
  time (eval):    0.0205342
  gflops (eval):  151.102
  gflops (total): 139.488
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0017098,0.0205342,151.102,139.488

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134056
  gflops (total): 23.1454
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027651
  gflops (eval):  112.212
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027651,112.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9032
  maximum absolute entry in einsum_ir solution: 53.9032
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00146758
  time (eval):    0.020419
  gflops (eval):  151.955
  gflops (total): 141.766
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00146758,0.020419,151.955,141.766

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13311
  gflops (total): 23.3098
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274551
  gflops (eval):  113.013
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274551,113.013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7344
  maximum absolute entry in einsum_ir solution: 56.7344
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143675
  time (eval):    0.0204719
  gflops (eval):  151.562
  gflops (total): 141.623
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143675,0.0204719,151.562,141.623

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134402
  gflops (total): 23.0858
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0858

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273274
  gflops (eval):  113.541
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273274,113.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5309
  maximum absolute entry in einsum_ir solution: 53.5309
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00150934
  time (eval):    0.0206106
  gflops (eval):  150.542
  gflops (total): 140.27
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00150934,0.0206106,150.542,140.27

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132854
  gflops (total): 23.3547
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273712
  gflops (eval):  113.359
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273712,113.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.0974
  maximum absolute entry in einsum_ir solution: 52.0974
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0014403
  time (eval):    0.0205509
  gflops (eval):  150.98
  gflops (total): 141.092
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0014403,0.0205509,150.98,141.092

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133466
  gflops (total): 23.2477
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275678
  gflops (eval):  112.551
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275678,112.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0226
  maximum absolute entry in einsum_ir solution: 55.0226
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143346
  time (eval):    0.0205003
  gflops (eval):  151.353
  gflops (total): 141.461
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143346,0.0205003,151.353,141.461

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133896
  gflops (total): 23.1729
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271218
  gflops (eval):  114.401
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271218,114.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4744
  maximum absolute entry in einsum_ir solution: 53.4744
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142879
  time (eval):    0.0205488
  gflops (eval):  150.995
  gflops (total): 141.179
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142879,0.0205488,150.995,141.179

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133757
  gflops (total): 23.1971
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275507
  gflops (eval):  112.62
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275507,112.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.289
  maximum absolute entry in einsum_ir solution: 52.289
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143521
  time (eval):    0.0208242
  gflops (eval):  148.998
  gflops (total): 139.391
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143521,0.0208242,148.998,139.391

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133578
  gflops (total): 23.2282
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274508
  gflops (eval):  113.03
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274508,113.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.9149
  maximum absolute entry in einsum_ir solution: 51.9149
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143199
  time (eval):    0.0206818
  gflops (eval):  150.024
  gflops (total): 140.309
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143199,0.0206818,150.024,140.309

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.137308
  gflops (total): 22.5971
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.5971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278695
  gflops (eval):  111.332
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278695,111.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4982
  maximum absolute entry in einsum_ir solution: 53.4982
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142663
  time (eval):    0.0207105
  gflops (eval):  149.816
  gflops (total): 140.161
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142663,0.0207105,149.816,140.161

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.1332
  gflops (total): 23.2941
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275864
  gflops (eval):  112.474
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275864,112.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.8227
  maximum absolute entry in einsum_ir solution: 50.8227
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00148451
  time (eval):    0.0204424
  gflops (eval):  151.781
  gflops (total): 141.505
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00148451,0.0204424,151.781,141.505

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134417
  gflops (total): 23.0831
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271115
  gflops (eval):  114.445
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271115,114.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4961
  maximum absolute entry in einsum_ir solution: 54.4961
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143026
  time (eval):    0.0207206
  gflops (eval):  149.743
  gflops (total): 140.075
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143026,0.0207206,149.743,140.075

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133843
  gflops (total): 23.1822
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274123
  gflops (eval):  113.189
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274123,113.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1889
  maximum absolute entry in einsum_ir solution: 52.1889
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143938
  time (eval):    0.0206707
  gflops (eval):  150.105
  gflops (total): 140.333
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143938,0.0206707,150.105,140.333

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.138725
  gflops (total): 22.3664
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.3664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278782
  gflops (eval):  111.297
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278782,111.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7097
  maximum absolute entry in einsum_ir solution: 55.7097
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142424
  time (eval):    0.020657
  gflops (eval):  150.204
  gflops (total): 140.516
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142424,0.020657,150.204,140.516

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132706
  gflops (total): 23.3807
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275935
  gflops (eval):  112.446
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275935,112.446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0954
  maximum absolute entry in einsum_ir solution: 56.0954
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143903
  time (eval):    0.0204056
  gflops (eval):  152.054
  gflops (total): 142.038
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143903,0.0204056,152.054,142.038

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135695
  gflops (total): 22.8657
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.8657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274667
  gflops (eval):  112.965
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274667,112.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.0471
  maximum absolute entry in einsum_ir solution: 52.0471
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143984
  time (eval):    0.0201745
  gflops (eval):  153.797
  gflops (total): 143.552
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143984,0.0201745,153.797,143.552

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135078
  gflops (total): 22.9703
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.9703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0270286
  gflops (eval):  114.796
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0270286,114.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4077
  maximum absolute entry in einsum_ir solution: 52.4077
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142917
  time (eval):    0.0206976
  gflops (eval):  149.909
  gflops (total): 140.227
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142917,0.0206976,149.909,140.227

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132977
  gflops (total): 23.3331
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277037
  gflops (eval):  111.998
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277037,111.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.285
  maximum absolute entry in einsum_ir solution: 53.285
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0014366
  time (eval):    0.0203386
  gflops (eval):  152.556
  gflops (total): 142.491
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0014366,0.0203386,152.556,142.491

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133423
  gflops (total): 23.2551
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276227
  gflops (eval):  112.327
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276227,112.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8896
  maximum absolute entry in einsum_ir solution: 52.8896
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00141999
  time (eval):    0.0204665
  gflops (eval):  151.602
  gflops (total): 141.766
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00141999,0.0204665,151.602,141.766

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.131495
  gflops (total): 23.5961
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.5961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277189
  gflops (eval):  111.937
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277189,111.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3973
  maximum absolute entry in einsum_ir solution: 56.3973
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00148209
  time (eval):    0.0204482
  gflops (eval):  151.738
  gflops (total): 141.483
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00148209,0.0204482,151.738,141.483

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.131575
  gflops (total): 23.5818
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.5818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273851
  gflops (eval):  113.301
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273851,113.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8893
  maximum absolute entry in einsum_ir solution: 54.8893
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0016657
  time (eval):    0.0206055
  gflops (eval):  150.58
  gflops (total): 139.317
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0016657,0.0206055,150.58,139.317

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134294
  gflops (total): 23.1043
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275622
  gflops (eval):  112.573
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275622,112.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4331
  maximum absolute entry in einsum_ir solution: 54.4331
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143682
  time (eval):    0.0209482
  gflops (eval):  148.117
  gflops (total): 138.609
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143682,0.0209482,148.117,138.609

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132504
  gflops (total): 23.4164
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.4164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273118
  gflops (eval):  113.605
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273118,113.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0913
  maximum absolute entry in einsum_ir solution: 53.0913
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143032
  time (eval):    0.0204304
  gflops (eval):  151.87
  gflops (total): 141.934
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143032,0.0204304,151.87,141.934

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132887
  gflops (total): 23.3489
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276495
  gflops (eval):  112.218
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276495,112.218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.036
  maximum absolute entry in einsum_ir solution: 56.036
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00147924
  time (eval):    0.0205962
  gflops (eval):  150.648
  gflops (total): 140.553
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00147924,0.0205962,150.648,140.553

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135067
  gflops (total): 22.972
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276306
  gflops (eval):  112.295
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276306,112.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.1871
  maximum absolute entry in einsum_ir solution: 50.1871
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142972
  time (eval):    0.0207854
  gflops (eval):  149.276
  gflops (total): 139.669
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142972,0.0207854,149.276,139.669

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134395
  gflops (total): 23.0869
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275238
  gflops (eval):  112.731
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275238,112.731,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.052
  maximum absolute entry in einsum_ir solution: 57.052
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00166833
  time (eval):    0.0207938
  gflops (eval):  149.216
  gflops (total): 138.134
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00166833,0.0207938,149.216,138.134

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134202
  gflops (total): 23.1201
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027795
  gflops (eval):  111.63
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027795,111.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.6868
  maximum absolute entry in einsum_ir solution: 50.6868
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00155136
  time (eval):    0.0201889
  gflops (eval):  153.687
  gflops (total): 142.72
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00155136,0.0201889,153.687,142.72

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135364
  gflops (total): 22.9217
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.9217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274401
  gflops (eval):  113.074
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274401,113.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.648
  maximum absolute entry in einsum_ir solution: 54.648
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144015
  time (eval):    0.0203554
  gflops (eval):  152.43
  gflops (total): 142.358
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144015,0.0203554,152.43,142.358

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135053
  gflops (total): 22.9745
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.9745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274402
  gflops (eval):  113.074
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274402,113.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9549
  maximum absolute entry in einsum_ir solution: 60.9549
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00141653
  time (eval):    0.0205212
  gflops (eval):  151.198
  gflops (total): 141.435
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00141653,0.0205212,151.198,141.435

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133291
  gflops (total): 23.2781
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273822
  gflops (eval):  113.313
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273822,113.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9644
  maximum absolute entry in einsum_ir solution: 53.9644
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142172
  time (eval):    0.0208169
  gflops (eval):  149.051
  gflops (total): 139.522
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142172,0.0208169,149.051,139.522

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132827
  gflops (total): 23.3594
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275846
  gflops (eval):  112.482
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275846,112.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.2857
  maximum absolute entry in einsum_ir solution: 50.2857
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143719
  time (eval):    0.0203685
  gflops (eval):  152.332
  gflops (total): 142.292
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143719,0.0203685,152.332,142.292

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134717
  gflops (total): 23.0318
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0318

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276044
  gflops (eval):  112.401
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276044,112.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.472
  maximum absolute entry in einsum_ir solution: 51.472
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00141876
  time (eval):    0.0205917
  gflops (eval):  150.681
  gflops (total): 140.968
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00141876,0.0205917,150.681,140.968

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13421
  gflops (total): 23.1188
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277825
  gflops (eval):  111.681
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277825,111.681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3088
  maximum absolute entry in einsum_ir solution: 53.3088
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143717
  time (eval):    0.0202847
  gflops (eval):  152.961
  gflops (total): 142.841
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143717,0.0202847,152.961,142.841

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134842
  gflops (total): 23.0104
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0104

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276429
  gflops (eval):  112.245
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276429,112.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4817
  maximum absolute entry in einsum_ir solution: 54.4817
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144485
  time (eval):    0.02048
  gflops (eval):  151.503
  gflops (total): 141.519
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144485,0.02048,151.503,141.519

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134844
  gflops (total): 23.0101
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027439
  gflops (eval):  113.079
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027439,113.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4455
  maximum absolute entry in einsum_ir solution: 52.4455
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00151426
  time (eval):    0.0205057
  gflops (eval):  151.313
  gflops (total): 140.907
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00151426,0.0205057,151.313,140.907

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134253
  gflops (total): 23.1113
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271866
  gflops (eval):  114.129
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271866,114.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2595
  maximum absolute entry in einsum_ir solution: 55.2595
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143936
  time (eval):    0.0203252
  gflops (eval):  152.657
  gflops (total): 142.561
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143936,0.0203252,152.657,142.561

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.131625
  gflops (total): 23.5729
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.5729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276526
  gflops (eval):  112.205
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276526,112.205,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.1228
  maximum absolute entry in einsum_ir solution: 49.1228
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142985
  time (eval):    0.0209424
  gflops (eval):  148.157
  gflops (total): 138.688
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142985,0.0209424,148.157,138.688

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132863
  gflops (total): 23.3531
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276282
  gflops (eval):  112.304
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276282,112.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7327
  maximum absolute entry in einsum_ir solution: 51.7327
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144375
  time (eval):    0.0207457
  gflops (eval):  149.562
  gflops (total): 139.831
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144375,0.0207457,149.562,139.831

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.136464
  gflops (total): 22.7369
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.7369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274875
  gflops (eval):  112.879
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274875,112.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5403
  maximum absolute entry in einsum_ir solution: 52.5403
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143026
  time (eval):    0.0205878
  gflops (eval):  150.709
  gflops (total): 140.92
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143026,0.0205878,150.709,140.92

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133196
  gflops (total): 23.2948
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275022
  gflops (eval):  112.819
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275022,112.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2599
  maximum absolute entry in einsum_ir solution: 57.26
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143239
  time (eval):    0.0206414
  gflops (eval):  150.317
  gflops (total): 140.563
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143239,0.0206414,150.317,140.563

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133854
  gflops (total): 23.1803
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273941
  gflops (eval):  113.264
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273941,113.264,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0726
  maximum absolute entry in einsum_ir solution: 53.0726
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143774
  time (eval):    0.0205095
  gflops (eval):  151.284
  gflops (total): 141.374
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143774,0.0205095,151.284,141.374

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133144
  gflops (total): 23.3038
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275117
  gflops (eval):  112.78
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275117,112.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8726
  maximum absolute entry in einsum_ir solution: 57.8726
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143578
  time (eval):    0.0204529
  gflops (eval):  151.703
  gflops (total): 141.753
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143578,0.0204529,151.703,141.753

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134549
  gflops (total): 23.0605
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272446
  gflops (eval):  113.886
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272446,113.886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0657
  maximum absolute entry in einsum_ir solution: 54.0657
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142865
  time (eval):    0.0209582
  gflops (eval):  148.045
  gflops (total): 138.598
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142865,0.0209582,148.045,138.598

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134233
  gflops (total): 23.1147
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271725
  gflops (eval):  114.188
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271725,114.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.23
  maximum absolute entry in einsum_ir solution: 48.23
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144043
  time (eval):    0.0204517
  gflops (eval):  151.712
  gflops (total): 141.73
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144043,0.0204517,151.712,141.73

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.138269
  gflops (total): 22.4402
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.4402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274399
  gflops (eval):  113.075
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274399,113.075,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.3998
  maximum absolute entry in einsum_ir solution: 50.3998
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142673
  time (eval):    0.0203611
  gflops (eval):  152.387
  gflops (total): 142.408
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142673,0.0203611,152.387,142.408

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134677
  gflops (total): 23.0387
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273951
  gflops (eval):  113.26
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273951,113.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.4005
  maximum absolute entry in einsum_ir solution: 49.4005
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142346
  time (eval):    0.0204843
  gflops (eval):  151.471
  gflops (total): 141.629
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142346,0.0204843,151.471,141.629

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135562
  gflops (total): 22.8882
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.8882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278296
  gflops (eval):  111.492
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278296,111.492,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8914
  maximum absolute entry in einsum_ir solution: 55.8914
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142869
  time (eval):    0.0203919
  gflops (eval):  152.157
  gflops (total): 142.194
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142869,0.0203919,152.157,142.194

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.137404
  gflops (total): 22.5813
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.5813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271363
  gflops (eval):  114.34
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271363,114.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1524
  maximum absolute entry in einsum_ir solution: 51.1524
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143489
  time (eval):    0.0202903
  gflops (eval):  152.919
  gflops (total): 142.819
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143489,0.0202903,152.919,142.819

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132702
  gflops (total): 23.3815
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275846
  gflops (eval):  112.482
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275846,112.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.677
  maximum absolute entry in einsum_ir solution: 51.677
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143915
  time (eval):    0.0204952
  gflops (eval):  151.39
  gflops (total): 141.457
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143915,0.0204952,151.39,141.457

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132919
  gflops (total): 23.3434
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278612
  gflops (eval):  111.365
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278612,111.365,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7819
  maximum absolute entry in einsum_ir solution: 52.7819
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00145014
  time (eval):    0.0207142
  gflops (eval):  149.789
  gflops (total): 139.989
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00145014,0.0207142,149.789,139.989

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132671
  gflops (total): 23.387
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275729
  gflops (eval):  112.53
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275729,112.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.75
  maximum absolute entry in einsum_ir solution: 53.75
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143681
  time (eval):    0.0205386
  gflops (eval):  151.07
  gflops (total): 141.193
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143681,0.0205386,151.07,141.193

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.131432
  gflops (total): 23.6075
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.6075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275695
  gflops (eval):  112.543
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275695,112.543,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5293
  maximum absolute entry in einsum_ir solution: 54.5293
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0014347
  time (eval):    0.0204484
  gflops (eval):  151.737
  gflops (total): 141.788
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0014347,0.0204484,151.737,141.788

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134958
  gflops (total): 22.9906
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.9906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276819
  gflops (eval):  112.086
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276819,112.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9824
  maximum absolute entry in einsum_ir solution: 53.9824
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00161329
  time (eval):    0.0810985
  gflops (eval):  38.2593
  gflops (total): 37.513
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00161329,0.0810985,38.2593,37.513

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.138425
  gflops (total): 22.4148
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.4148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276469
  gflops (eval):  112.229
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276469,112.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.405
  maximum absolute entry in einsum_ir solution: 56.405
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00148973
  time (eval):    0.0209254
  gflops (eval):  148.278
  gflops (total): 138.423
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00148973,0.0209254,148.278,138.423

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133985
  gflops (total): 23.1576
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027978
  gflops (eval):  110.9
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027978,110.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1075
  maximum absolute entry in einsum_ir solution: 55.1075
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00141897
  time (eval):    0.0206969
  gflops (eval):  149.914
  gflops (total): 140.296
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00141897,0.0206969,149.914,140.296

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.131879
  gflops (total): 23.5274
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.5274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027369
  gflops (eval):  113.368
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027369,113.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.9089
  maximum absolute entry in einsum_ir solution: 50.9089
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00149356
  time (eval):    0.0203806
  gflops (eval):  152.241
  gflops (total): 141.846
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00149356,0.0203806,152.241,141.846

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134688
  gflops (total): 23.0367
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274684
  gflops (eval):  112.958
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274684,112.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3291
  maximum absolute entry in einsum_ir solution: 54.3291
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142877
  time (eval):    0.0203585
  gflops (eval):  152.407
  gflops (total): 142.412
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142877,0.0203585,152.407,142.412

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13282
  gflops (total): 23.3607
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275493
  gflops (eval):  112.626
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275493,112.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2031
  maximum absolute entry in einsum_ir solution: 54.2031
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144683
  time (eval):    0.020149
  gflops (eval):  153.991
  gflops (total): 143.675
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144683,0.020149,153.991,143.675

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133446
  gflops (total): 23.2511
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271512
  gflops (eval):  114.277
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271512,114.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7224
  maximum absolute entry in einsum_ir solution: 56.7224
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142584
  time (eval):    0.0204163
  gflops (eval):  151.975
  gflops (total): 142.054
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142584,0.0204163,151.975,142.054

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133729
  gflops (total): 23.202
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0280515
  gflops (eval):  110.61
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0280515,110.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4525
  maximum absolute entry in einsum_ir solution: 57.4525
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143098
  time (eval):    0.0204147
  gflops (eval):  151.987
  gflops (total): 142.031
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143098,0.0204147,151.987,142.031

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13811
  gflops (total): 22.466
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278434
  gflops (eval):  111.436
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278434,111.436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.219
  maximum absolute entry in einsum_ir solution: 52.219
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0014339
  time (eval):    0.0206919
  gflops (eval):  149.951
  gflops (total): 140.233
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0014339,0.0206919,149.951,140.233

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.130488
  gflops (total): 23.7782
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.7782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275253
  gflops (eval):  112.724
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275253,112.724,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1325
  maximum absolute entry in einsum_ir solution: 57.1325
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144549
  time (eval):    0.0205963
  gflops (eval):  150.647
  gflops (total): 140.767
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144549,0.0205963,150.647,140.767

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132553
  gflops (total): 23.4078
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.4078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274054
  gflops (eval):  113.217
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274054,113.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.0337
  maximum absolute entry in einsum_ir solution: 51.0337
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143446
  time (eval):    0.0203679
  gflops (eval):  152.336
  gflops (total): 142.313
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143446,0.0203679,152.336,142.313

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.131726
  gflops (total): 23.5548
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.5548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274943
  gflops (eval):  112.851
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274943,112.851,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7337
  maximum absolute entry in einsum_ir solution: 51.7337
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143392
  time (eval):    0.0207236
  gflops (eval):  149.721
  gflops (total): 140.032
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143392,0.0207236,149.721,140.032

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133488
  gflops (total): 23.2438
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276321
  gflops (eval):  112.288
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276321,112.288,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0122
  maximum absolute entry in einsum_ir solution: 53.0122
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142507
  time (eval):    0.0206852
  gflops (eval):  149.999
  gflops (total): 140.332
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142507,0.0206852,149.999,140.332

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.136991
  gflops (total): 22.6495
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.6495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276436
  gflops (eval):  112.242
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276436,112.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3104
  maximum absolute entry in einsum_ir solution: 53.3104
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143562
  time (eval):    0.0205265
  gflops (eval):  151.159
  gflops (total): 141.278
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143562,0.0205265,151.159,141.278

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132943
  gflops (total): 23.3391
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.3391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.02781
  gflops (eval):  111.57
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.02781,111.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7553
  maximum absolute entry in einsum_ir solution: 55.7553
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143501
  time (eval):    0.0204292
  gflops (eval):  151.879
  gflops (total): 141.911
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143501,0.0204292,151.879,141.911

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134518
  gflops (total): 23.0659
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275437
  gflops (eval):  112.649
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275437,112.649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.454
  maximum absolute entry in einsum_ir solution: 49.454
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142876
  time (eval):    0.0203416
  gflops (eval):  152.533
  gflops (total): 142.523
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142876,0.0203416,152.533,142.523

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13232
  gflops (total): 23.4489
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.4489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275456
  gflops (eval):  112.641
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275456,112.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.291
  maximum absolute entry in einsum_ir solution: 53.291
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143885
  time (eval):    0.0205988
  gflops (eval):  150.629
  gflops (total): 140.794
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143885,0.0205988,150.629,140.794

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132504
  gflops (total): 23.4163
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.4163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027468
  gflops (eval):  112.959
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027468,112.959,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1002
  maximum absolute entry in einsum_ir solution: 57.1002
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142668
  time (eval):    0.0204723
  gflops (eval):  151.559
  gflops (total): 141.685
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142668,0.0204723,151.559,141.685

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133657
  gflops (total): 23.2144
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276728
  gflops (eval):  112.123
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276728,112.123,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.539
  maximum absolute entry in einsum_ir solution: 51.539
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143612
  time (eval):    0.0201471
  gflops (eval):  154.006
  gflops (total): 143.758
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143612,0.0201471,154.006,143.758

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133417
  gflops (total): 23.2561
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027551
  gflops (eval):  112.619
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027551,112.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9591
  maximum absolute entry in einsum_ir solution: 56.9591
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143667
  time (eval):    0.0206724
  gflops (eval):  150.092
  gflops (total): 140.339
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143667,0.0206724,150.092,140.339

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132458
  gflops (total): 23.4246
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.4246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274935
  gflops (eval):  112.855
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274935,112.855,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9669
  maximum absolute entry in einsum_ir solution: 54.9669
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143402
  time (eval):    0.0203843
  gflops (eval):  152.214
  gflops (total): 142.21
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143402,0.0203843,152.214,142.21

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.136687
  gflops (total): 22.6999
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.6999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.02762
  gflops (eval):  112.338
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.02762,112.338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5765
  maximum absolute entry in einsum_ir solution: 56.5765
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143408
  time (eval):    0.0204557
  gflops (eval):  151.682
  gflops (total): 141.745
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143408,0.0204557,151.682,141.745

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.136166
  gflops (total): 22.7867
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.7867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277472
  gflops (eval):  111.823
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277472,111.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.589
  maximum absolute entry in einsum_ir solution: 52.589
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143713
  time (eval):    0.0204737
  gflops (eval):  151.549
  gflops (total): 141.609
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143713,0.0204737,151.549,141.609

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.137442
  gflops (total): 22.5751
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.5751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027586
  gflops (eval):  112.476
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027586,112.476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1873
  maximum absolute entry in einsum_ir solution: 51.1873
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143077
  time (eval):    0.0208393
  gflops (eval):  148.89
  gflops (total): 139.325
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143077,0.0208393,148.89,139.325

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.137707
  gflops (total): 22.5316
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.5316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277779
  gflops (eval):  111.699
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277779,111.699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7646
  maximum absolute entry in einsum_ir solution: 51.7646
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144128
  time (eval):    0.0204061
  gflops (eval):  152.051
  gflops (total): 142.02
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144128,0.0204061,152.051,142.02

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133235
  gflops (total): 23.288
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273872
  gflops (eval):  113.293
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273872,113.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.5946
  maximum absolute entry in einsum_ir solution: 50.5946
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143288
  time (eval):    0.0201521
  gflops (eval):  153.967
  gflops (total): 143.747
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143288,0.0201521,153.967,143.747

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.1347
  gflops (total): 23.0347
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278155
  gflops (eval):  111.548
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278155,111.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5909
  maximum absolute entry in einsum_ir solution: 55.5909
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143334
  time (eval):    0.0207975
  gflops (eval):  149.189
  gflops (total): 139.57
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143334,0.0207975,149.189,139.57

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133569
  gflops (total): 23.2297
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276354
  gflops (eval):  112.275
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276354,112.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.8005
  maximum absolute entry in einsum_ir solution: 50.8005
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144386
  time (eval):    0.0205302
  gflops (eval):  151.132
  gflops (total): 141.202
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144386,0.0205302,151.132,141.202

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.136412
  gflops (total): 22.7455
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.7455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274318
  gflops (eval):  113.108
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274318,113.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3955
  maximum absolute entry in einsum_ir solution: 56.3955
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144167
  time (eval):    0.0205233
  gflops (eval):  151.182
  gflops (total): 141.26
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144167,0.0205233,151.182,141.26

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.137237
  gflops (total): 22.6088
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.6088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277937
  gflops (eval):  111.636
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277937,111.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8308
  maximum absolute entry in einsum_ir solution: 55.8308
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144297
  time (eval):    0.0201995
  gflops (eval):  153.606
  gflops (total): 143.365
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144297,0.0201995,153.606,143.365

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13402
  gflops (total): 23.1516
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027696
  gflops (eval):  112.029
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027696,112.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3072
  maximum absolute entry in einsum_ir solution: 55.3072
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00140692
  time (eval):    0.0204304
  gflops (eval):  151.87
  gflops (total): 142.085
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00140692,0.0204304,151.87,142.085

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134188
  gflops (total): 23.1226
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.1226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277425
  gflops (eval):  111.842
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277425,111.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.9917
  maximum absolute entry in einsum_ir solution: 51.9917
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0014322
  time (eval):    0.02024
  gflops (eval):  153.299
  gflops (total): 143.168
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0014322,0.02024,153.299,143.168

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.131752
  gflops (total): 23.5501
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.5501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273204
  gflops (eval):  113.57
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273204,113.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4693
  maximum absolute entry in einsum_ir solution: 55.4693
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143768
  time (eval):    0.0206175
  gflops (eval):  150.492
  gflops (total): 140.682
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143768,0.0206175,150.492,140.682

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135502
  gflops (total): 22.8984
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.8984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271769
  gflops (eval):  114.169
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271769,114.169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.7005
  maximum absolute entry in einsum_ir solution: 49.7004
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143623
  time (eval):    0.0209069
  gflops (eval):  148.409
  gflops (total): 138.869
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143623,0.0209069,148.409,138.869

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135085
  gflops (total): 22.9691
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.9691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273761
  gflops (eval):  113.339
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273761,113.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.6829
  maximum absolute entry in einsum_ir solution: 50.6829
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142578
  time (eval):    0.0204892
  gflops (eval):  151.434
  gflops (total): 141.582
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142578,0.0204892,151.434,141.582

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.132082
  gflops (total): 23.4912
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.4912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278298
  gflops (eval):  111.491
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278298,111.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4364
  maximum absolute entry in einsum_ir solution: 54.4364
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143343
  time (eval):    0.0207168
  gflops (eval):  149.771
  gflops (total): 140.078
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143343,0.0207168,149.771,140.078

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134413
  gflops (total): 23.0838
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277239
  gflops (eval):  111.917
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277239,111.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3062
  maximum absolute entry in einsum_ir solution: 53.3062
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143718
  time (eval):    0.0205995
  gflops (eval):  150.623
  gflops (total): 140.8
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143718,0.0205995,150.623,140.8

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13246
  gflops (total): 23.4241
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.4241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027822
  gflops (eval):  111.522
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027822,111.522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.7379
  maximum absolute entry in einsum_ir solution: 50.7379
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142707
  time (eval):    0.0206931
  gflops (eval):  149.942
  gflops (total): 140.269
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142707,0.0206931,149.942,140.269

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133284
  gflops (total): 23.2794
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277411
  gflops (eval):  111.847
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277411,111.847,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9556
  maximum absolute entry in einsum_ir solution: 53.9556
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00172973
  time (eval):    0.0204741
  gflops (eval):  151.546
  gflops (total): 139.74
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00172973,0.0204741,151.546,139.74

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13361
  gflops (total): 23.2226
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274356
  gflops (eval):  113.093
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274356,113.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9145
  maximum absolute entry in einsum_ir solution: 58.9145
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00201004
  time (eval):    0.0200583
  gflops (eval):  154.687
  gflops (total): 140.598
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00201004,0.0200583,154.687,140.598

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.133168
  gflops (total): 23.2997
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.2997

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275757
  gflops (eval):  112.518
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275757,112.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7528
  maximum absolute entry in einsum_ir solution: 52.7528
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143159
  time (eval):    0.0203373
  gflops (eval):  152.566
  gflops (total): 142.532
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143159,0.0203373,152.566,142.532

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.135488
  gflops (total): 22.9007
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.9007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275951
  gflops (eval):  112.439
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275951,112.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2301
  maximum absolute entry in einsum_ir solution: 54.2301
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142781
  time (eval):    0.0204085
  gflops (eval):  152.033
  gflops (total): 142.092
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142781,0.0204085,152.033,142.092

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13232
  gflops (total): 23.449
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277259
  gflops (eval):  111.909
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277259,111.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6527
  maximum absolute entry in einsum_ir solution: 55.6527
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143771
  time (eval):    0.0205527
  gflops (eval):  150.967
  gflops (total): 141.097
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143771,0.0205527,150.967,141.097

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13489
  gflops (total): 23.0021
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0021

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271134
  gflops (eval):  114.437
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271134,114.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3671
  maximum absolute entry in einsum_ir solution: 58.3671
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00153815
  time (eval):    0.0205309
  gflops (eval):  151.127
  gflops (total): 140.594
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00153815,0.0205309,151.127,140.594

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.136152
  gflops (total): 22.789
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274427
  gflops (eval):  113.063
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274427,113.063,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9834
  maximum absolute entry in einsum_ir solution: 54.9834
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00141674
  time (eval):    0.020608
  gflops (eval):  150.561
  gflops (total): 140.876
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00141674,0.020608,150.561,140.876

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134894
  gflops (total): 23.0015
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272545
  gflops (eval):  113.844
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272545,113.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2257
  maximum absolute entry in einsum_ir solution: 53.2257
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144765
  time (eval):    0.0207784
  gflops (eval):  149.327
  gflops (total): 139.601
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144765,0.0207784,149.327,139.601

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.134707
  gflops (total): 23.0334
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,23.0334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275581
  gflops (eval):  112.59
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275581,112.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.9817
  maximum absolute entry in einsum_ir solution: 50.9817
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143456
  time (eval):    0.0201902
  gflops (eval):  153.677
  gflops (total): 143.483
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143456,0.0201902,153.677,143.483

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.13515
  gflops (total): 22.958
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,22.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273866
  gflops (eval):  113.295
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273866,113.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.9183
  maximum absolute entry in einsum_ir solution: 50.9183
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00149816
  time (eval):    0.0168655
  gflops (eval):  160.942
  gflops (total): 147.812
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00149816,0.0168655,160.942,147.812

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141354
  gflops (total): 19.2027
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.2027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257048
  gflops (eval):  105.598
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257048,105.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.1646
  maximum absolute entry in einsum_ir solution: 97.1646
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142154
  time (eval):    0.0163675
  gflops (eval):  165.839
  gflops (total): 152.586
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142154,0.0163675,165.839,152.586

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140155
  gflops (total): 19.3669
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256833
  gflops (eval):  105.686
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256833,105.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.721
  maximum absolute entry in einsum_ir solution: 100.721
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0014281
  time (eval):    0.0162911
  gflops (eval):  166.617
  gflops (total): 153.188
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0014281,0.0162911,166.617,153.188

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.13953
  gflops (total): 19.4537
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257675
  gflops (eval):  105.341
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257675,105.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.274
  maximum absolute entry in einsum_ir solution: 100.274
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00146664
  time (eval):    0.0167053
  gflops (eval):  162.486
  gflops (total): 149.372
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00146664,0.0167053,162.486,149.372

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140463
  gflops (total): 19.3244
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3244

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0657894
  gflops (eval):  41.2584
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0657894,41.2584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.931
  maximum absolute entry in einsum_ir solution: 110.931
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142808
  time (eval):    0.016348
  gflops (eval):  166.037
  gflops (total): 152.698
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142808,0.016348,166.037,152.698

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141313
  gflops (total): 19.2082
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.2082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257416
  gflops (eval):  105.447
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257416,105.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.0785
  maximum absolute entry in einsum_ir solution: 96.0785
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141611
  time (eval):    0.0166253
  gflops (eval):  163.268
  gflops (total): 150.452
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141611,0.0166253,163.268,150.452

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140936
  gflops (total): 19.2596
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.2596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257441
  gflops (eval):  105.437
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257441,105.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.418
  maximum absolute entry in einsum_ir solution: 108.418
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00150741
  time (eval):    0.0165253
  gflops (eval):  164.255
  gflops (total): 150.525
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00150741,0.0165253,164.255,150.525

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139608
  gflops (total): 19.4428
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256999
  gflops (eval):  105.618
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256999,105.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.158
  maximum absolute entry in einsum_ir solution: 105.158
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141476
  time (eval):    0.016746
  gflops (eval):  162.091
  gflops (total): 149.464
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141476,0.016746,162.091,149.464

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139641
  gflops (total): 19.4383
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0264266
  gflops (eval):  102.714
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0264266,102.714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.8792
  maximum absolute entry in einsum_ir solution: 99.8792
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142556
  time (eval):    0.0165751
  gflops (eval):  163.762
  gflops (total): 150.793
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142556,0.0165751,163.762,150.793

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141419
  gflops (total): 19.1938
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.1938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257728
  gflops (eval):  105.319
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257728,105.319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.762
  maximum absolute entry in einsum_ir solution: 101.762
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00140953
  time (eval):    0.0164713
  gflops (eval):  164.794
  gflops (total): 151.803
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00140953,0.0164713,164.794,151.803

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140257
  gflops (total): 19.3529
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656617
  gflops (eval):  41.3387
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656617,41.3387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.525
  maximum absolute entry in einsum_ir solution: 104.525
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00140549
  time (eval):    0.0160452
  gflops (eval):  169.17
  gflops (total): 155.545
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00140549,0.0160452,169.17,155.545

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.13936
  gflops (total): 19.4774
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257801
  gflops (eval):  105.289
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257801,105.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.926
  maximum absolute entry in einsum_ir solution: 102.926
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142293
  time (eval):    0.0166384
  gflops (eval):  163.139
  gflops (total): 150.286
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142293,0.0166384,163.139,150.286

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140442
  gflops (total): 19.3273
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257058
  gflops (eval):  105.594
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257058,105.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.935
  maximum absolute entry in einsum_ir solution: 102.935
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141095
  time (eval):    0.0166239
  gflops (eval):  163.281
  gflops (total): 150.507
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141095,0.0166239,163.281,150.507

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139917
  gflops (total): 19.3999
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257328
  gflops (eval):  105.483
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257328,105.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.442
  maximum absolute entry in einsum_ir solution: 100.442
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00195129
  time (eval):    0.0167464
  gflops (eval):  162.087
  gflops (total): 145.171
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00195129,0.0167464,162.087,145.171

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.14011
  gflops (total): 19.3731
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256934
  gflops (eval):  105.644
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256934,105.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.464
  maximum absolute entry in einsum_ir solution: 104.464
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141236
  time (eval):    0.0168123
  gflops (eval):  161.451
  gflops (total): 148.939
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141236,0.0168123,161.451,148.939

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140474
  gflops (total): 19.3229
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0657074
  gflops (eval):  41.31
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0657074,41.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5104
  maximum absolute entry in einsum_ir solution: 99.5104
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00169309
  time (eval):    0.0165302
  gflops (eval):  164.207
  gflops (total): 148.951
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00169309,0.0165302,164.207,148.951

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139295
  gflops (total): 19.4865
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258314
  gflops (eval):  105.08
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258314,105.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.191
  maximum absolute entry in einsum_ir solution: 101.191
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00144602
  time (eval):    0.0168452
  gflops (eval):  161.136
  gflops (total): 148.398
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00144602,0.0168452,161.136,148.398

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140143
  gflops (total): 19.3686
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0655432
  gflops (eval):  41.4134
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0655432,41.4134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.9001
  maximum absolute entry in einsum_ir solution: 98.9002
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142555
  time (eval):    0.0163764
  gflops (eval):  165.749
  gflops (total): 152.476
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142555,0.0163764,165.749,152.476

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141996
  gflops (total): 19.1159
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.1159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258122
  gflops (eval):  105.159
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258122,105.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.517
  maximum absolute entry in einsum_ir solution: 99.517
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141508
  time (eval):    0.0167103
  gflops (eval):  162.437
  gflops (total): 149.755
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141508,0.0167103,162.437,149.755

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140153
  gflops (total): 19.3672
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025686
  gflops (eval):  105.675
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025686,105.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.541
  maximum absolute entry in einsum_ir solution: 101.541
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0016776
  time (eval):    0.016462
  gflops (eval):  164.887
  gflops (total): 149.638
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0016776,0.016462,164.887,149.638

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139642
  gflops (total): 19.4381
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0387995
  gflops (eval):  69.9588
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0387995,69.9588,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.3869
  maximum absolute entry in einsum_ir solution: 99.387
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142776
  time (eval):    0.0161106
  gflops (eval):  168.484
  gflops (total): 154.768
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142776,0.0161106,168.484,154.768

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139813
  gflops (total): 19.4143
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257046
  gflops (eval):  105.599
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257046,105.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.398
  maximum absolute entry in einsum_ir solution: 107.398
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142295
  time (eval):    0.0165959
  gflops (eval):  163.556
  gflops (total): 150.64
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142295,0.0165959,163.556,150.64

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139888
  gflops (total): 19.4039
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0654663
  gflops (eval):  41.4621
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0654663,41.4621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.7135
  maximum absolute entry in einsum_ir solution: 98.7135
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142317
  time (eval):    0.016643
  gflops (eval):  163.094
  gflops (total): 150.246
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142317,0.016643,163.094,150.246

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.137789
  gflops (total): 19.6995
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.6995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257693
  gflops (eval):  105.334
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257693,105.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.737
  maximum absolute entry in einsum_ir solution: 104.737
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141903
  time (eval):    0.0169334
  gflops (eval):  160.297
  gflops (total): 147.903
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141903,0.0169334,160.297,147.903

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139431
  gflops (total): 19.4675
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258932
  gflops (eval):  104.829
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258932,104.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.735
  maximum absolute entry in einsum_ir solution: 106.735
  maximum element-wise difference:              0.000110626
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00148429
  time (eval):    0.0166186
  gflops (eval):  163.334
  gflops (total): 149.942
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00148429,0.0166186,163.334,149.942

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140302
  gflops (total): 19.3466
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025781
  gflops (eval):  105.286
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025781,105.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.5988
  maximum absolute entry in einsum_ir solution: 98.5988
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142988
  time (eval):    0.0165741
  gflops (eval):  163.772
  gflops (total): 150.765
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142988,0.0165741,163.772,150.765

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140618
  gflops (total): 19.3032
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656502
  gflops (eval):  41.3459
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656502,41.3459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.6
  maximum absolute entry in einsum_ir solution: 103.6
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0014096
  time (eval):    0.0165513
  gflops (eval):  163.997
  gflops (total): 151.127
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0014096,0.0165513,163.997,151.127

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140067
  gflops (total): 19.3791
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0654772
  gflops (eval):  41.4552
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0654772,41.4552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.637
  maximum absolute entry in einsum_ir solution: 101.637
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00149436
  time (eval):    0.0167047
  gflops (eval):  162.491
  gflops (total): 149.149
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00149436,0.0167047,162.491,149.149

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.14017
  gflops (total): 19.3649
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0535726
  gflops (eval):  50.6672
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0535726,50.6672,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.584
  maximum absolute entry in einsum_ir solution: 102.584
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142103
  time (eval):    0.0165255
  gflops (eval):  164.254
  gflops (total): 151.248
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142103,0.0165255,164.254,151.248

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.137534
  gflops (total): 19.7359
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.7359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0654233
  gflops (eval):  41.4893
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0654233,41.4893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.249
  maximum absolute entry in einsum_ir solution: 100.249
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0014225
  time (eval):    0.0166599
  gflops (eval):  162.929
  gflops (total): 150.111
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0014225,0.0166599,162.929,150.111

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139812
  gflops (total): 19.4145
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257794
  gflops (eval):  105.292
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257794,105.292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.168
  maximum absolute entry in einsum_ir solution: 101.168
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141423
  time (eval):    0.0167405
  gflops (eval):  162.144
  gflops (total): 149.513
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141423,0.0167405,162.144,149.513

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139551
  gflops (total): 19.4508
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0658213
  gflops (eval):  41.2385
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0658213,41.2385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.988
  maximum absolute entry in einsum_ir solution: 103.988
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141001
  time (eval):    0.0164985
  gflops (eval):  164.522
  gflops (total): 151.569
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141001,0.0164985,164.522,151.569

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140741
  gflops (total): 19.2863
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.2863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258857
  gflops (eval):  104.86
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258857,104.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.115
  maximum absolute entry in einsum_ir solution: 101.115
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142075
  time (eval):    0.0165149
  gflops (eval):  164.358
  gflops (total): 151.339
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142075,0.0165149,164.358,151.339

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140334
  gflops (total): 19.3423
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257118
  gflops (eval):  105.569
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257118,105.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.985
  maximum absolute entry in einsum_ir solution: 100.985
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142106
  time (eval):    0.0167206
  gflops (eval):  162.337
  gflops (total): 149.621
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142106,0.0167206,162.337,149.621

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139867
  gflops (total): 19.4068
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258162
  gflops (eval):  105.142
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258162,105.142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.838
  maximum absolute entry in einsum_ir solution: 104.838
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00145048
  time (eval):    0.0165569
  gflops (eval):  163.942
  gflops (total): 150.737
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00145048,0.0165569,163.942,150.737

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139758
  gflops (total): 19.4219
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0441857
  gflops (eval):  61.431
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0441857,61.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.49
  maximum absolute entry in einsum_ir solution: 103.49
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142719
  time (eval):    0.0168617
  gflops (eval):  160.979
  gflops (total): 148.416
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142719,0.0168617,160.979,148.416

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139793
  gflops (total): 19.4171
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0655585
  gflops (eval):  41.4038
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0655585,41.4038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.048
  maximum absolute entry in einsum_ir solution: 104.048
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00153355
  time (eval):    0.0165847
  gflops (eval):  163.667
  gflops (total): 149.814
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00153355,0.0165847,163.667,149.814

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139672
  gflops (total): 19.4339
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4339

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257784
  gflops (eval):  105.296
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257784,105.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.122
  maximum absolute entry in einsum_ir solution: 102.122
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141708
  time (eval):    0.0165631
  gflops (eval):  163.88
  gflops (total): 150.964
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141708,0.0165631,163.88,150.964

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139904
  gflops (total): 19.4016
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4016

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258103
  gflops (eval):  105.166
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258103,105.166,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9218
  maximum absolute entry in einsum_ir solution: 99.9218
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00147491
  time (eval):    0.016549
  gflops (eval):  164.02
  gflops (total): 150.598
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00147491,0.016549,164.02,150.598

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.137726
  gflops (total): 19.7085
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.7085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257428
  gflops (eval):  105.442
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257428,105.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.788
  maximum absolute entry in einsum_ir solution: 105.788
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142278
  time (eval):    0.0167739
  gflops (eval):  161.821
  gflops (total): 149.169
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142278,0.0167739,161.821,149.169

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139828
  gflops (total): 19.4122
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0532415
  gflops (eval):  50.9822
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0532415,50.9822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.3409
  maximum absolute entry in einsum_ir solution: 97.3409
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142419
  time (eval):    0.0165591
  gflops (eval):  163.92
  gflops (total): 150.939
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142419,0.0165591,163.92,150.939

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.13997
  gflops (total): 19.3925
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0655816
  gflops (eval):  41.3892
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0655816,41.3892,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.133
  maximum absolute entry in einsum_ir solution: 102.133
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00155407
  time (eval):    0.0161674
  gflops (eval):  167.891
  gflops (total): 153.168
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00155407,0.0161674,167.891,153.168

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139723
  gflops (total): 19.4268
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257035
  gflops (eval):  105.603
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257035,105.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.557
  maximum absolute entry in einsum_ir solution: 102.557
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141921
  time (eval):    0.0167104
  gflops (eval):  162.436
  gflops (total): 149.721
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141921,0.0167104,162.436,149.721

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139899
  gflops (total): 19.4023
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4023

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257877
  gflops (eval):  105.258
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257877,105.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.465
  maximum absolute entry in einsum_ir solution: 112.465
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.001428
  time (eval):    0.0165041
  gflops (eval):  164.467
  gflops (total): 151.37
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.001428,0.0165041,164.467,151.37

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140463
  gflops (total): 19.3245
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257196
  gflops (eval):  105.537
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257196,105.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.041
  maximum absolute entry in einsum_ir solution: 103.041
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143468
  time (eval):    0.0168423
  gflops (eval):  161.164
  gflops (total): 148.513
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143468,0.0168423,161.164,148.513

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139883
  gflops (total): 19.4046
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025714
  gflops (eval):  105.56
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025714,105.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.167
  maximum absolute entry in einsum_ir solution: 107.168
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142192
  time (eval):    0.0165788
  gflops (eval):  163.726
  gflops (total): 150.793
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142192,0.0165788,163.726,150.793

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139994
  gflops (total): 19.3892
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258268
  gflops (eval):  105.099
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258268,105.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.721
  maximum absolute entry in einsum_ir solution: 105.721
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143967
  time (eval):    0.0165665
  gflops (eval):  163.847
  gflops (total): 150.746
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143967,0.0165665,163.847,150.746

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140264
  gflops (total): 19.3519
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3519

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656206
  gflops (eval):  41.3646
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656206,41.3646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3282
  maximum absolute entry in einsum_ir solution: 98.3282
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143468
  time (eval):    0.0166548
  gflops (eval):  162.978
  gflops (total): 150.052
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143468,0.0166548,162.978,150.052

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139558
  gflops (total): 19.4498
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257439
  gflops (eval):  105.438
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257439,105.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.7871
  maximum absolute entry in einsum_ir solution: 96.7871
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142042
  time (eval):    0.0197589
  gflops (eval):  137.375
  gflops (total): 128.161
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142042,0.0197589,137.375,128.161

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140438
  gflops (total): 19.3278
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257874
  gflops (eval):  105.26
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257874,105.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.012
  maximum absolute entry in einsum_ir solution: 103.012
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0014235
  time (eval):    0.0167209
  gflops (eval):  162.334
  gflops (total): 149.598
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0014235,0.0167209,162.334,149.598

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.137922
  gflops (total): 19.6804
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.6804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656344
  gflops (eval):  41.3559
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656344,41.3559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.069
  maximum absolute entry in einsum_ir solution: 116.069
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142446
  time (eval):    0.0164334
  gflops (eval):  165.174
  gflops (total): 151.998
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142446,0.0164334,165.174,151.998

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140633
  gflops (total): 19.3012
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025777
  gflops (eval):  105.302
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025777,105.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.213
  maximum absolute entry in einsum_ir solution: 103.213
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143137
  time (eval):    0.0167575
  gflops (eval):  161.979
  gflops (total): 149.232
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143137,0.0167575,161.979,149.232

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139304
  gflops (total): 19.4853
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656267
  gflops (eval):  41.3608
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656267,41.3608,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.659
  maximum absolute entry in einsum_ir solution: 101.659
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00144137
  time (eval):    0.0166475
  gflops (eval):  163.05
  gflops (total): 150.057
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00144137,0.0166475,163.05,150.057

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141655
  gflops (total): 19.1618
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.1618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257552
  gflops (eval):  105.391
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257552,105.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.4219
  maximum absolute entry in einsum_ir solution: 98.4218
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00155405
  time (eval):    0.0164643
  gflops (eval):  164.864
  gflops (total): 150.644
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00155405,0.0164643,164.864,150.644

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139999
  gflops (total): 19.3885
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656313
  gflops (eval):  41.3579
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656313,41.3579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.982
  maximum absolute entry in einsum_ir solution: 103.982
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0014205
  time (eval):    0.0167568
  gflops (eval):  161.986
  gflops (total): 149.327
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0014205,0.0167568,161.986,149.327

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140678
  gflops (total): 19.295
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257266
  gflops (eval):  105.508
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257266,105.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.921
  maximum absolute entry in einsum_ir solution: 99.9211
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00168414
  time (eval):    0.0167998
  gflops (eval):  161.571
  gflops (total): 146.85
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00168414,0.0167998,161.571,146.85

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139899
  gflops (total): 19.4023
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4023

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257017
  gflops (eval):  105.611
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257017,105.611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.191
  maximum absolute entry in einsum_ir solution: 109.191
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142689
  time (eval):    0.0166239
  gflops (eval):  163.281
  gflops (total): 150.374
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142689,0.0166239,163.281,150.374

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.137789
  gflops (total): 19.6995
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.6995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0503238
  gflops (eval):  53.9381
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0503238,53.9381,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.552
  maximum absolute entry in einsum_ir solution: 100.552
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142729
  time (eval):    0.0166772
  gflops (eval):  162.76
  gflops (total): 149.928
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142729,0.0166772,162.76,149.928

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139924
  gflops (total): 19.3989
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256124
  gflops (eval):  105.979
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256124,105.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.972
  maximum absolute entry in einsum_ir solution: 101.972
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00147377
  time (eval):    0.0167864
  gflops (eval):  161.7
  gflops (total): 148.649
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00147377,0.0167864,161.7,148.649

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140322
  gflops (total): 19.3438
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259056
  gflops (eval):  104.779
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259056,104.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.316
  maximum absolute entry in einsum_ir solution: 102.316
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143032
  time (eval):    0.0167485
  gflops (eval):  162.067
  gflops (total): 149.315
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143032,0.0167485,162.067,149.315

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.14119
  gflops (total): 19.225
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258362
  gflops (eval):  105.061
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258362,105.061,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.845
  maximum absolute entry in einsum_ir solution: 106.845
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00144741
  time (eval):    0.0167251
  gflops (eval):  162.293
  gflops (total): 149.367
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00144741,0.0167251,162.293,149.367

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140159
  gflops (total): 19.3663
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258495
  gflops (eval):  105.007
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258495,105.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.2022
  maximum absolute entry in einsum_ir solution: 99.2022
  maximum element-wise difference:              8.01086e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143281
  time (eval):    0.0165872
  gflops (eval):  163.643
  gflops (total): 150.631
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143281,0.0165872,163.643,150.631

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139633
  gflops (total): 19.4393
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257484
  gflops (eval):  105.419
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257484,105.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.943
  maximum absolute entry in einsum_ir solution: 101.943
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00145322
  time (eval):    0.0167955
  gflops (eval):  161.612
  gflops (total): 148.743
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00145322,0.0167955,161.612,148.743

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140328
  gflops (total): 19.343
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.343

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025838
  gflops (eval):  105.053
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025838,105.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.523
  maximum absolute entry in einsum_ir solution: 106.523
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142582
  time (eval):    0.016873
  gflops (eval):  160.871
  gflops (total): 148.336
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142582,0.016873,160.871,148.336

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140046
  gflops (total): 19.382
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656066
  gflops (eval):  41.3734
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656066,41.3734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.055
  maximum absolute entry in einsum_ir solution: 101.055
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142351
  time (eval):    0.016776
  gflops (eval):  161.801
  gflops (total): 149.146
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142351,0.016776,161.801,149.146

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141578
  gflops (total): 19.1722
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.1722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256961
  gflops (eval):  105.634
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256961,105.634,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.771
  maximum absolute entry in einsum_ir solution: 100.771
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142583
  time (eval):    0.0167947
  gflops (eval):  161.62
  gflops (total): 148.973
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142583,0.0167947,161.62,148.973

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.137586
  gflops (total): 19.7285
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.7285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256762
  gflops (eval):  105.715
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256762,105.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.884
  maximum absolute entry in einsum_ir solution: 113.884
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141564
  time (eval):    0.0164893
  gflops (eval):  164.614
  gflops (total): 151.599
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141564,0.0164893,164.614,151.599

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140227
  gflops (total): 19.357
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257559
  gflops (eval):  105.388
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257559,105.388,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.267
  maximum absolute entry in einsum_ir solution: 117.267
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141961
  time (eval):    0.0167617
  gflops (eval):  161.939
  gflops (total): 149.295
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141961,0.0167617,161.939,149.295

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139307
  gflops (total): 19.4848
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0598046
  gflops (eval):  45.3873
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0598046,45.3873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.672
  maximum absolute entry in einsum_ir solution: 105.672
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143984
  time (eval):    0.0165969
  gflops (eval):  163.547
  gflops (total): 150.491
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143984,0.0165969,163.547,150.491

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140608
  gflops (total): 19.3045
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656828
  gflops (eval):  41.3254
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656828,41.3254,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.724
  maximum absolute entry in einsum_ir solution: 103.724
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143418
  time (eval):    0.0166674
  gflops (eval):  162.855
  gflops (total): 149.952
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143418,0.0166674,162.855,149.952

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.137501
  gflops (total): 19.7407
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.7407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256996
  gflops (eval):  105.619
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256996,105.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.801
  maximum absolute entry in einsum_ir solution: 103.801
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142818
  time (eval):    0.0166021
  gflops (eval):  163.495
  gflops (total): 150.545
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142818,0.0166021,163.495,150.545

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139952
  gflops (total): 19.395
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656273
  gflops (eval):  41.3604
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656273,41.3604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.003
  maximum absolute entry in einsum_ir solution: 116.003
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00144047
  time (eval):    0.0166518
  gflops (eval):  163.008
  gflops (total): 150.029
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00144047,0.0166518,163.008,150.029

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.13979
  gflops (total): 19.4175
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257112
  gflops (eval):  105.571
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257112,105.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4088
  maximum absolute entry in einsum_ir solution: 99.4087
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142154
  time (eval):    0.016269
  gflops (eval):  166.843
  gflops (total): 153.436
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142154,0.016269,166.843,153.436

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.142321
  gflops (total): 19.0722
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.0722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0262749
  gflops (eval):  103.307
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0262749,103.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.131
  maximum absolute entry in einsum_ir solution: 106.131
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142623
  time (eval):    0.0166958
  gflops (eval):  162.578
  gflops (total): 149.783
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142623,0.0166958,162.578,149.783

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141619
  gflops (total): 19.1667
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.1667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256609
  gflops (eval):  105.778
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256609,105.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.275
  maximum absolute entry in einsum_ir solution: 100.275
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142384
  time (eval):    0.0167625
  gflops (eval):  161.931
  gflops (total): 149.253
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142384,0.0167625,161.931,149.253

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.142209
  gflops (total): 19.0872
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.0872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656967
  gflops (eval):  41.3167
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656967,41.3167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.89
  maximum absolute entry in einsum_ir solution: 109.89
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00159655
  time (eval):    0.0166674
  gflops (eval):  162.855
  gflops (total): 148.619
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00159655,0.0166674,162.855,148.619

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140117
  gflops (total): 19.3721
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256546
  gflops (eval):  105.804
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256546,105.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.712
  maximum absolute entry in einsum_ir solution: 103.712
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00144845
  time (eval):    0.0165417
  gflops (eval):  164.093
  gflops (total): 150.881
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00144845,0.0165417,164.093,150.881

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140577
  gflops (total): 19.3088
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025896
  gflops (eval):  104.818
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025896,104.818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.228
  maximum absolute entry in einsum_ir solution: 102.228
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143793
  time (eval):    0.0167889
  gflops (eval):  161.676
  gflops (total): 148.922
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143793,0.0167889,161.676,148.922

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139998
  gflops (total): 19.3887
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256948
  gflops (eval):  105.639
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256948,105.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.962
  maximum absolute entry in einsum_ir solution: 103.962
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142939
  time (eval):    0.0168376
  gflops (eval):  161.209
  gflops (total): 148.594
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142939,0.0168376,161.209,148.594

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140594
  gflops (total): 19.3065
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257367
  gflops (eval):  105.467
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257367,105.467,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.4015
  maximum absolute entry in einsum_ir solution: 98.4015
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00144145
  time (eval):    0.0166679
  gflops (eval):  162.85
  gflops (total): 149.887
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00144145,0.0166679,162.85,149.887

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139325
  gflops (total): 19.4823
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257567
  gflops (eval):  105.385
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257567,105.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.093
  maximum absolute entry in einsum_ir solution: 105.093
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142597
  time (eval):    0.0166174
  gflops (eval):  163.345
  gflops (total): 150.436
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142597,0.0166174,163.345,150.436

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.1398
  gflops (total): 19.4161
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0255765
  gflops (eval):  106.128
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0255765,106.128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.413
  maximum absolute entry in einsum_ir solution: 104.413
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00170192
  time (eval):    0.0164899
  gflops (eval):  164.608
  gflops (total): 149.209
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00170192,0.0164899,164.608,149.209

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139361
  gflops (total): 19.4773
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257403
  gflops (eval):  105.452
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257403,105.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.453
  maximum absolute entry in einsum_ir solution: 100.453
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141727
  time (eval):    0.0163821
  gflops (eval):  165.691
  gflops (total): 152.498
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141727,0.0163821,165.691,152.498

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.14024
  gflops (total): 19.3552
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0262996
  gflops (eval):  103.209
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0262996,103.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.255
  maximum absolute entry in einsum_ir solution: 102.256
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143184
  time (eval):    0.0166252
  gflops (eval):  163.269
  gflops (total): 150.322
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143184,0.0166252,163.269,150.322

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139911
  gflops (total): 19.4006
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258578
  gflops (eval):  104.973
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258578,104.973,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.35
  maximum absolute entry in einsum_ir solution: 105.35
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143439
  time (eval):    0.0167379
  gflops (eval):  162.169
  gflops (total): 149.369
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143439,0.0167379,162.169,149.369

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140253
  gflops (total): 19.3534
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257838
  gflops (eval):  105.274
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257838,105.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.374
  maximum absolute entry in einsum_ir solution: 100.374
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0017031
  time (eval):    0.0167885
  gflops (eval):  161.681
  gflops (total): 146.79
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0017031,0.0167885,161.681,146.79

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141464
  gflops (total): 19.1877
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.1877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257608
  gflops (eval):  105.368
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257608,105.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.09
  maximum absolute entry in einsum_ir solution: 100.09
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00154576
  time (eval):    0.0160267
  gflops (eval):  169.366
  gflops (total): 154.468
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00154576,0.0160267,169.366,154.468

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.142343
  gflops (total): 19.0693
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.0693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257057
  gflops (eval):  105.594
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257057,105.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.998
  maximum absolute entry in einsum_ir solution: 122.998
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142339
  time (eval):    0.0167643
  gflops (eval):  161.914
  gflops (total): 149.242
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142339,0.0167643,161.914,149.242

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141246
  gflops (total): 19.2174
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.2174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258706
  gflops (eval):  104.921
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258706,104.921,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.844
  maximum absolute entry in einsum_ir solution: 113.844
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00145946
  time (eval):    0.0164949
  gflops (eval):  164.558
  gflops (total): 151.182
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00145946,0.0164949,164.558,151.182

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.14083
  gflops (total): 19.2741
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.2741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257202
  gflops (eval):  105.534
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257202,105.534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7971
  maximum absolute entry in einsum_ir solution: 99.7971
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141575
  time (eval):    0.0166283
  gflops (eval):  163.238
  gflops (total): 150.43
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141575,0.0166283,163.238,150.43

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139701
  gflops (total): 19.4298
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257265
  gflops (eval):  105.509
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257265,105.509,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.957
  maximum absolute entry in einsum_ir solution: 101.957
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00145809
  time (eval):    0.0166936
  gflops (eval):  162.599
  gflops (total): 149.538
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00145809,0.0166936,162.599,149.538

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140486
  gflops (total): 19.3213
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0656803
  gflops (eval):  41.327
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0656803,41.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.3638
  maximum absolute entry in einsum_ir solution: 97.3638
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00147037
  time (eval):    0.0165863
  gflops (eval):  163.651
  gflops (total): 150.325
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00147037,0.0165863,163.651,150.325

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140104
  gflops (total): 19.374
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0655573
  gflops (eval):  41.4045
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0655573,41.4045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.6514
  maximum absolute entry in einsum_ir solution: 98.6514
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141522
  time (eval):    0.0166215
  gflops (eval):  163.305
  gflops (total): 150.492
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141522,0.0166215,163.305,150.492

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.142046
  gflops (total): 19.1091
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.1091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257461
  gflops (eval):  105.428
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257461,105.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.198
  maximum absolute entry in einsum_ir solution: 103.198
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00150457
  time (eval):    0.0166629
  gflops (eval):  162.899
  gflops (total): 149.408
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00150457,0.0166629,162.899,149.408

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140436
  gflops (total): 19.3282
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025899
  gflops (eval):  104.806
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025899,104.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.881
  maximum absolute entry in einsum_ir solution: 105.881
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143029
  time (eval):    0.0167304
  gflops (eval):  162.242
  gflops (total): 149.464
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143029,0.0167304,162.242,149.464

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.141567
  gflops (total): 19.1738
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.1738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0262817
  gflops (eval):  103.28
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0262817,103.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.224
  maximum absolute entry in einsum_ir solution: 102.224
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141824
  time (eval):    0.0164602
  gflops (eval):  164.905
  gflops (total): 151.824
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141824,0.0164602,164.905,151.824

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139872
  gflops (total): 19.4061
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025693
  gflops (eval):  105.646
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025693,105.646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.377
  maximum absolute entry in einsum_ir solution: 112.377
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00162848
  time (eval):    0.0162938
  gflops (eval):  166.589
  gflops (total): 151.452
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00162848,0.0162938,166.589,151.452

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140891
  gflops (total): 19.2657
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.2657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0655188
  gflops (eval):  41.4289
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0655188,41.4289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.17
  maximum absolute entry in einsum_ir solution: 105.17
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142712
  time (eval):    0.016548
  gflops (eval):  164.03
  gflops (total): 151.007
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142712,0.016548,164.03,151.007

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.140608
  gflops (total): 19.3046
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0255346
  gflops (eval):  106.301
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0255346,106.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.934
  maximum absolute entry in einsum_ir solution: 101.934
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143074
  time (eval):    0.0166576
  gflops (eval):  162.951
  gflops (total): 150.062
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143074,0.0166576,162.951,150.062

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139547
  gflops (total): 19.4513
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.4513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025778
  gflops (eval):  105.298
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025778,105.298,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.13
  maximum absolute entry in einsum_ir solution: 107.13
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141226
  time (eval):    0.0164537
  gflops (eval):  164.97
  gflops (total): 151.93
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141226,0.0164537,164.97,151.93

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.139989
  gflops (total): 19.3899
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,19.3899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257561
  gflops (eval):  105.387
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257561,105.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.304
  maximum absolute entry in einsum_ir solution: 108.304
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142746
  time (eval):    0.0197122
  gflops (eval):  157.521
  gflops (total): 146.884
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142746,0.0197122,157.521,146.884

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.094696
  gflops (total): 32.7901
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280791
  gflops (eval):  110.584
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280791,110.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7913
  maximum absolute entry in einsum_ir solution: 55.7913
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142346
  time (eval):    0.019772
  gflops (eval):  157.045
  gflops (total): 146.498
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142346,0.019772,157.045,146.498

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0951515
  gflops (total): 32.6331
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280065
  gflops (eval):  110.87
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280065,110.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6644
  maximum absolute entry in einsum_ir solution: 57.6644
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014179
  time (eval):    0.0197666
  gflops (eval):  157.087
  gflops (total): 146.573
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014179,0.0197666,157.087,146.573

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0949351
  gflops (total): 32.7075
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279819
  gflops (eval):  110.968
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279819,110.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4852
  maximum absolute entry in einsum_ir solution: 56.4852
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141266
  time (eval):    0.0196012
  gflops (eval):  158.413
  gflops (total): 147.764
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141266,0.0196012,158.413,147.764

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0949773
  gflops (total): 32.693
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282488
  gflops (eval):  109.919
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282488,109.919,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6957
  maximum absolute entry in einsum_ir solution: 58.6957
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141716
  time (eval):    0.0197651
  gflops (eval):  157.1
  gflops (total): 146.589
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141716,0.0197651,157.1,146.589

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0944434
  gflops (total): 32.8778
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283339
  gflops (eval):  109.589
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283339,109.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0632
  maximum absolute entry in einsum_ir solution: 55.0632
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142394
  time (eval):    0.0196221
  gflops (eval):  158.244
  gflops (total): 147.538
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142394,0.0196221,158.244,147.538

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0940448
  gflops (total): 33.0172
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,33.0172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282493
  gflops (eval):  109.918
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282493,109.918,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0359
  maximum absolute entry in einsum_ir solution: 55.0359
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142981
  time (eval):    0.0195224
  gflops (eval):  159.053
  gflops (total): 148.199
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142981,0.0195224,159.053,148.199

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0947776
  gflops (total): 32.7619
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285535
  gflops (eval):  108.747
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285535,108.747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0835
  maximum absolute entry in einsum_ir solution: 62.0835
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00183258
  time (eval):    0.0197481
  gflops (eval):  157.235
  gflops (total): 143.883
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00183258,0.0197481,157.235,143.883

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943738
  gflops (total): 32.902
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281254
  gflops (eval):  110.402
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281254,110.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3185
  maximum absolute entry in einsum_ir solution: 55.3185
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00140951
  time (eval):    0.0197276
  gflops (eval):  157.399
  gflops (total): 146.903
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00140951,0.0197276,157.399,146.903

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946517
  gflops (total): 32.8054
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280441
  gflops (eval):  110.722
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280441,110.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2071
  maximum absolute entry in einsum_ir solution: 59.2071
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141633
  time (eval):    0.0196826
  gflops (eval):  157.758
  gflops (total): 147.168
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141633,0.0196826,157.758,147.168

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0947178
  gflops (total): 32.7826
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278084
  gflops (eval):  111.66
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278084,111.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.7936
  maximum absolute entry in einsum_ir solution: 63.7936
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014197
  time (eval):    0.0197322
  gflops (eval):  157.361
  gflops (total): 146.799
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014197,0.0197322,157.361,146.799

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0950239
  gflops (total): 32.677
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283505
  gflops (eval):  109.525
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283505,109.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7881
  maximum absolute entry in einsum_ir solution: 55.7881
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00152379
  time (eval):    0.0197107
  gflops (eval):  157.534
  gflops (total): 146.229
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00152379,0.0197107,157.534,146.229

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0939032
  gflops (total): 33.067
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,33.067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284427
  gflops (eval):  109.17
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284427,109.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4165
  maximum absolute entry in einsum_ir solution: 55.4165
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00144841
  time (eval):    0.01977
  gflops (eval):  157.061
  gflops (total): 146.34
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00144841,0.01977,157.061,146.34

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943471
  gflops (total): 32.9114
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283664
  gflops (eval):  109.464
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283664,109.464,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1152
  maximum absolute entry in einsum_ir solution: 55.1152
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142124
  time (eval):    0.019659
  gflops (eval):  157.948
  gflops (total): 147.299
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142124,0.019659,157.948,147.299

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0952632
  gflops (total): 32.5949
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.5949

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282487
  gflops (eval):  109.92
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282487,109.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0942
  maximum absolute entry in einsum_ir solution: 55.0942
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141758
  time (eval):    0.0196862
  gflops (eval):  157.73
  gflops (total): 147.135
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141758,0.0196862,157.73,147.135

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946943
  gflops (total): 32.7907
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279492
  gflops (eval):  111.098
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279492,111.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2872
  maximum absolute entry in einsum_ir solution: 59.2872
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143177
  time (eval):    0.0197353
  gflops (eval):  157.337
  gflops (total): 146.694
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143177,0.0197353,157.337,146.694

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946786
  gflops (total): 32.7961
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281887
  gflops (eval):  110.154
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281887,110.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2596
  maximum absolute entry in einsum_ir solution: 57.2596
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00148881
  time (eval):    0.0197208
  gflops (eval):  157.453
  gflops (total): 146.4
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00148881,0.0197208,157.453,146.4

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0951013
  gflops (total): 32.6504
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284203
  gflops (eval):  109.256
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284203,109.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3094
  maximum absolute entry in einsum_ir solution: 61.3094
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142292
  time (eval):    0.0196851
  gflops (eval):  157.738
  gflops (total): 147.105
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142292,0.0196851,157.738,147.105

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.094604
  gflops (total): 32.822
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284807
  gflops (eval):  109.024
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284807,109.024,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3315
  maximum absolute entry in einsum_ir solution: 54.3315
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00140423
  time (eval):    0.0196478
  gflops (eval):  158.037
  gflops (total): 147.496
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00140423,0.0196478,158.037,147.496

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0951073
  gflops (total): 32.6483
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277817
  gflops (eval):  111.768
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277817,111.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1711
  maximum absolute entry in einsum_ir solution: 54.1711
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141476
  time (eval):    0.0197535
  gflops (eval):  157.192
  gflops (total): 146.686
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141476,0.0197535,157.192,146.686

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0948482
  gflops (total): 32.7375
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278352
  gflops (eval):  111.553
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278352,111.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8878
  maximum absolute entry in einsum_ir solution: 59.8878
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143185
  time (eval):    0.0196712
  gflops (eval):  157.849
  gflops (total): 147.139
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143185,0.0196712,157.849,147.139

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0942554
  gflops (total): 32.9434
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278506
  gflops (eval):  111.491
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278506,111.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1303
  maximum absolute entry in einsum_ir solution: 57.1303
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142492
  time (eval):    0.0196996
  gflops (eval):  157.622
  gflops (total): 146.99
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142492,0.0196996,157.622,146.99

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0953274
  gflops (total): 32.5729
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.5729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028689
  gflops (eval):  108.233
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028689,108.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9035
  maximum absolute entry in einsum_ir solution: 55.9035
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141503
  time (eval):    0.0197201
  gflops (eval):  157.458
  gflops (total): 146.916
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141503,0.0197201,157.458,146.916

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.094315
  gflops (total): 32.9226
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281519
  gflops (eval):  110.298
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281519,110.298,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0965
  maximum absolute entry in einsum_ir solution: 58.0965
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143292
  time (eval):    0.0194302
  gflops (eval):  159.808
  gflops (total): 148.832
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143292,0.0194302,159.808,148.832

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0945611
  gflops (total): 32.8369
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279699
  gflops (eval):  111.016
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279699,111.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0956
  maximum absolute entry in einsum_ir solution: 55.0956
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142246
  time (eval):    0.0196583
  gflops (eval):  157.953
  gflops (total): 147.295
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142246,0.0196583,157.953,147.295

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943509
  gflops (total): 32.91
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282657
  gflops (eval):  109.854
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282657,109.854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7356
  maximum absolute entry in einsum_ir solution: 58.7356
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00140592
  time (eval):    0.0195692
  gflops (eval):  158.672
  gflops (total): 148.037
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00140592,0.0195692,158.672,148.037

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0948523
  gflops (total): 32.7361
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284481
  gflops (eval):  109.149
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284481,109.149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5445
  maximum absolute entry in einsum_ir solution: 56.5445
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143751
  time (eval):    0.0196763
  gflops (eval):  157.808
  gflops (total): 147.064
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143751,0.0196763,157.808,147.064

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946452
  gflops (total): 32.8077
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281753
  gflops (eval):  110.206
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281753,110.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5663
  maximum absolute entry in einsum_ir solution: 58.5663
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142118
  time (eval):    0.0197095
  gflops (eval):  157.543
  gflops (total): 146.947
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142118,0.0197095,157.543,146.947

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946887
  gflops (total): 32.7926
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278347
  gflops (eval):  111.555
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278347,111.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9632
  maximum absolute entry in einsum_ir solution: 60.9632
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141531
  time (eval):    0.0198985
  gflops (eval):  156.047
  gflops (total): 145.685
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141531,0.0198985,156.047,145.685

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0948606
  gflops (total): 32.7332
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283576
  gflops (eval):  109.498
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283576,109.498,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6123
  maximum absolute entry in einsum_ir solution: 59.6123
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143131
  time (eval):    0.0198398
  gflops (eval):  156.508
  gflops (total): 145.977
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143131,0.0198398,156.508,145.977

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0944828
  gflops (total): 32.8641
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280829
  gflops (eval):  110.569
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280829,110.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6622
  maximum absolute entry in einsum_ir solution: 57.6622
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141669
  time (eval):    0.0196728
  gflops (eval):  157.837
  gflops (total): 147.234
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141669,0.0196728,157.837,147.234

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0942585
  gflops (total): 32.9423
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278381
  gflops (eval):  111.541
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278381,111.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5267
  maximum absolute entry in einsum_ir solution: 59.5267
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143475
  time (eval):    0.0196991
  gflops (eval):  157.626
  gflops (total): 146.925
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143475,0.0196991,157.626,146.925

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0951478
  gflops (total): 32.6344
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284112
  gflops (eval):  109.291
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284112,109.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0255
  maximum absolute entry in einsum_ir solution: 55.0255
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143041
  time (eval):    0.0196287
  gflops (eval):  158.192
  gflops (total): 147.447
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143041,0.0196287,158.192,147.447

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0949121
  gflops (total): 32.7155
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284101
  gflops (eval):  109.295
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284101,109.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4373
  maximum absolute entry in einsum_ir solution: 59.4373
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141088
  time (eval):    0.019713
  gflops (eval):  157.515
  gflops (total): 146.994
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141088,0.019713,157.515,146.994

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943276
  gflops (total): 32.9182
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280787
  gflops (eval):  110.585
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280787,110.585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6554
  maximum absolute entry in einsum_ir solution: 56.6554
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.001423
  time (eval):    0.0197844
  gflops (eval):  156.947
  gflops (total): 146.416
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.001423,0.0197844,156.947,146.416

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0945503
  gflops (total): 32.8406
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282703
  gflops (eval):  109.836
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282703,109.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0564
  maximum absolute entry in einsum_ir solution: 54.0564
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142272
  time (eval):    0.0195869
  gflops (eval):  158.529
  gflops (total): 147.794
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142272,0.0195869,158.529,147.794

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0947734
  gflops (total): 32.7633
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283009
  gflops (eval):  109.717
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283009,109.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5748
  maximum absolute entry in einsum_ir solution: 56.5748
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142014
  time (eval):    0.0198037
  gflops (eval):  156.793
  gflops (total): 146.302
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142014,0.0198037,156.793,146.302

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.095142
  gflops (total): 32.6364
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0286971
  gflops (eval):  108.202
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0286971,108.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9143
  maximum absolute entry in einsum_ir solution: 56.9143
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014115
  time (eval):    0.0197642
  gflops (eval):  157.107
  gflops (total): 146.634
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014115,0.0197642,157.107,146.634

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0939859
  gflops (total): 33.0379
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,33.0379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284759
  gflops (eval):  109.043
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284759,109.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0583
  maximum absolute entry in einsum_ir solution: 61.0583
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142345
  time (eval):    0.0195756
  gflops (eval):  158.621
  gflops (total): 147.868
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142345,0.0195756,158.621,147.868

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0948028
  gflops (total): 32.7532
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282591
  gflops (eval):  109.879
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282591,109.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5046
  maximum absolute entry in einsum_ir solution: 52.5046
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142336
  time (eval):    0.0196941
  gflops (eval):  157.666
  gflops (total): 147.039
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142336,0.0196941,157.666,147.039

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0953755
  gflops (total): 32.5565
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.5565

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281809
  gflops (eval):  110.184
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281809,110.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1724
  maximum absolute entry in einsum_ir solution: 53.1724
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142471
  time (eval):    0.0197055
  gflops (eval):  157.575
  gflops (total): 146.95
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142471,0.0197055,157.575,146.95

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943741
  gflops (total): 32.902
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027685
  gflops (eval):  112.158
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027685,112.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9736
  maximum absolute entry in einsum_ir solution: 59.9736
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00173079
  time (eval):    0.0195755
  gflops (eval):  158.621
  gflops (total): 145.736
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00173079,0.0195755,158.621,145.736

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0947551
  gflops (total): 32.7697
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277374
  gflops (eval):  111.946
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277374,111.946,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1607
  maximum absolute entry in einsum_ir solution: 60.1607
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00144624
  time (eval):    0.0196366
  gflops (eval):  158.127
  gflops (total): 147.28
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00144624,0.0196366,158.127,147.28

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0951029
  gflops (total): 32.6498
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283413
  gflops (eval):  109.561
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283413,109.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4306
  maximum absolute entry in einsum_ir solution: 55.4306
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141686
  time (eval):    0.0196644
  gflops (eval):  157.905
  gflops (total): 147.292
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141686,0.0196644,157.905,147.292

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0940184
  gflops (total): 33.0264
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,33.0264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279649
  gflops (eval):  111.035
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279649,111.035,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7557
  maximum absolute entry in einsum_ir solution: 52.7557
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142807
  time (eval):    0.0197717
  gflops (eval):  157.047
  gflops (total): 146.468
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142807,0.0197717,157.047,146.468

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.095265
  gflops (total): 32.5942
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.5942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281041
  gflops (eval):  110.486
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281041,110.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0089
  maximum absolute entry in einsum_ir solution: 54.0089
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142082
  time (eval):    0.019541
  gflops (eval):  158.901
  gflops (total): 148.131
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142082,0.019541,158.901,148.131

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0944653
  gflops (total): 32.8702
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277612
  gflops (eval):  111.85
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277612,111.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3575
  maximum absolute entry in einsum_ir solution: 55.3575
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143161
  time (eval):    0.0196992
  gflops (eval):  157.625
  gflops (total): 146.946
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143161,0.0196992,157.625,146.946

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0954462
  gflops (total): 32.5324
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.5324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277781
  gflops (eval):  111.782
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277781,111.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5994
  maximum absolute entry in einsum_ir solution: 61.5994
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141706
  time (eval):    0.0195356
  gflops (eval):  158.946
  gflops (total): 148.196
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141706,0.0195356,158.946,148.196

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943228
  gflops (total): 32.9199
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280935
  gflops (eval):  110.527
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280935,110.527,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7729
  maximum absolute entry in einsum_ir solution: 57.7729
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014149
  time (eval):    0.0196805
  gflops (eval):  157.775
  gflops (total): 147.193
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014149,0.0196805,157.775,147.193

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0948236
  gflops (total): 32.746
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281273
  gflops (eval):  110.394
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281273,110.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1233
  maximum absolute entry in einsum_ir solution: 56.1233
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141674
  time (eval):    0.0197106
  gflops (eval):  157.534
  gflops (total): 146.97
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141674,0.0197106,157.534,146.97

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.094914
  gflops (total): 32.7148
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279398
  gflops (eval):  111.135
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279398,111.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9373
  maximum absolute entry in einsum_ir solution: 58.9373
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141838
  time (eval):    0.0196485
  gflops (eval):  158.032
  gflops (total): 147.392
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141838,0.0196485,158.032,147.392

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946571
  gflops (total): 32.8036
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277111
  gflops (eval):  112.052
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277111,112.052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5801
  maximum absolute entry in einsum_ir solution: 53.5801
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141648
  time (eval):    0.0197221
  gflops (eval):  157.442
  gflops (total): 146.892
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141648,0.0197221,157.442,146.892

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0947462
  gflops (total): 32.7727
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283065
  gflops (eval):  109.695
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283065,109.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2134
  maximum absolute entry in einsum_ir solution: 56.2134
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142015
  time (eval):    0.0195551
  gflops (eval):  158.786
  gflops (total): 148.036
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142015,0.0195551,158.786,148.036

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943074
  gflops (total): 32.9252
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285215
  gflops (eval):  108.868
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285215,108.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8118
  maximum absolute entry in einsum_ir solution: 56.8118
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00147319
  time (eval):    0.0196979
  gflops (eval):  157.636
  gflops (total): 146.667
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00147319,0.0196979,157.636,146.667

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943744
  gflops (total): 32.9018
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281873
  gflops (eval):  110.159
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281873,110.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8343
  maximum absolute entry in einsum_ir solution: 58.8343
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142037
  time (eval):    0.0197773
  gflops (eval):  157.003
  gflops (total): 146.483
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142037,0.0197773,157.003,146.483

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946259
  gflops (total): 32.8144
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277872
  gflops (eval):  111.746
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277872,111.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9704
  maximum absolute entry in einsum_ir solution: 53.9704
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00140683
  time (eval):    0.019695
  gflops (eval):  157.658
  gflops (total): 147.148
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00140683,0.019695,157.658,147.148

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0950321
  gflops (total): 32.6741
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285119
  gflops (eval):  108.905
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285119,108.905,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4786
  maximum absolute entry in einsum_ir solution: 54.4786
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141342
  time (eval):    0.0195464
  gflops (eval):  158.857
  gflops (total): 148.145
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141342,0.0195464,158.857,148.145

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943475
  gflops (total): 32.9112
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282436
  gflops (eval):  109.94
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282436,109.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5784
  maximum absolute entry in einsum_ir solution: 53.5784
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141164
  time (eval):    0.0197048
  gflops (eval):  157.58
  gflops (total): 147.046
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141164,0.0197048,157.58,147.046

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0950256
  gflops (total): 32.6764
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282152
  gflops (eval):  110.05
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282152,110.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9668
  maximum absolute entry in einsum_ir solution: 53.9668
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143156
  time (eval):    0.0196974
  gflops (eval):  157.64
  gflops (total): 146.959
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143156,0.0196974,157.64,146.959

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0941931
  gflops (total): 32.9652
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281676
  gflops (eval):  110.236
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281676,110.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.2813
  maximum absolute entry in einsum_ir solution: 52.2813
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0016849
  time (eval):    0.019715
  gflops (eval):  157.499
  gflops (total): 145.098
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0016849,0.019715,157.499,145.098

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946407
  gflops (total): 32.8093
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280611
  gflops (eval):  110.655
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280611,110.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6653
  maximum absolute entry in einsum_ir solution: 57.6653
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014606
  time (eval):    0.0196509
  gflops (eval):  158.013
  gflops (total): 147.081
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014606,0.0196509,158.013,147.081

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943992
  gflops (total): 32.8932
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277315
  gflops (eval):  111.97
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277315,111.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5402
  maximum absolute entry in einsum_ir solution: 56.5402
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141706
  time (eval):    0.0195397
  gflops (eval):  158.912
  gflops (total): 148.166
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141706,0.0195397,158.912,148.166

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0940778
  gflops (total): 33.0056
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,33.0056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283643
  gflops (eval):  109.472
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283643,109.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2227
  maximum absolute entry in einsum_ir solution: 61.2227
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141644
  time (eval):    0.0196139
  gflops (eval):  158.311
  gflops (total): 147.648
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141644,0.0196139,158.311,147.648

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0950295
  gflops (total): 32.675
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282763
  gflops (eval):  109.812
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282763,109.812,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8332
  maximum absolute entry in einsum_ir solution: 60.8332
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142061
  time (eval):    0.0196733
  gflops (eval):  157.832
  gflops (total): 147.203
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142061,0.0196733,157.832,147.203

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0944487
  gflops (total): 32.876
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280738
  gflops (eval):  110.604
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280738,110.604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2346
  maximum absolute entry in einsum_ir solution: 55.2346
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00168863
  time (eval):    0.019812
  gflops (eval):  156.728
  gflops (total): 144.419
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00168863,0.019812,156.728,144.419

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0949703
  gflops (total): 32.6954
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283829
  gflops (eval):  109.4
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283829,109.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2888
  maximum absolute entry in einsum_ir solution: 56.2888
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142537
  time (eval):    0.0198732
  gflops (eval):  156.245
  gflops (total): 145.789
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142537,0.0198732,156.245,145.789

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946008
  gflops (total): 32.8231
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278498
  gflops (eval):  111.494
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278498,111.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7407
  maximum absolute entry in einsum_ir solution: 54.7407
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00150285
  time (eval):    0.0198553
  gflops (eval):  156.386
  gflops (total): 145.382
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00150285,0.0198553,156.386,145.382

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0945228
  gflops (total): 32.8502
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285643
  gflops (eval):  108.705
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285643,108.705,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5867
  maximum absolute entry in einsum_ir solution: 60.5867
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142498
  time (eval):    0.0199076
  gflops (eval):  155.975
  gflops (total): 145.557
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142498,0.0199076,155.975,145.557

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0947014
  gflops (total): 32.7882
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0276137
  gflops (eval):  112.448
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0276137,112.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2906
  maximum absolute entry in einsum_ir solution: 56.2906
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00147559
  time (eval):    0.0196497
  gflops (eval):  158.022
  gflops (total): 146.985
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00147559,0.0196497,158.022,146.985

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.094566
  gflops (total): 32.8352
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280854
  gflops (eval):  110.559
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280854,110.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0758
  maximum absolute entry in einsum_ir solution: 55.0758
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00140692
  time (eval):    0.0195978
  gflops (eval):  158.441
  gflops (total): 147.828
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00140692,0.0195978,158.441,147.828

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0944608
  gflops (total): 32.8717
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8717

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278688
  gflops (eval):  111.418
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278688,111.418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6328
  maximum absolute entry in einsum_ir solution: 57.6328
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142283
  time (eval):    0.0197526
  gflops (eval):  157.199
  gflops (total): 146.637
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142283,0.0197526,157.199,146.637

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0941943
  gflops (total): 32.9648
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278894
  gflops (eval):  111.336
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278894,111.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6214
  maximum absolute entry in einsum_ir solution: 55.6214
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141335
  time (eval):    0.0197375
  gflops (eval):  157.319
  gflops (total): 146.807
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141335,0.0197375,157.319,146.807

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0951055
  gflops (total): 32.6489
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027794
  gflops (eval):  111.718
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027794,111.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9199
  maximum absolute entry in einsum_ir solution: 54.9198
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014432
  time (eval):    0.0196716
  gflops (eval):  157.846
  gflops (total): 147.057
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014432,0.0196716,157.846,147.057

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946277
  gflops (total): 32.8138
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285338
  gflops (eval):  108.822
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285338,108.822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6408
  maximum absolute entry in einsum_ir solution: 53.6408
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00144708
  time (eval):    0.0197477
  gflops (eval):  157.238
  gflops (total): 146.503
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00144708,0.0197477,157.238,146.503

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0944988
  gflops (total): 32.8585
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282785
  gflops (eval):  109.804
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282785,109.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5623
  maximum absolute entry in einsum_ir solution: 54.5623
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014354
  time (eval):    0.019542
  gflops (eval):  158.893
  gflops (total): 148.021
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014354,0.019542,158.893,148.021

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943726
  gflops (total): 32.9025
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.9025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284986
  gflops (eval):  108.956
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284986,108.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1224
  maximum absolute entry in einsum_ir solution: 58.1224
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141502
  time (eval):    0.0196753
  gflops (eval):  157.817
  gflops (total): 147.228
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141502,0.0196753,157.817,147.228

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0947457
  gflops (total): 32.7729
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282179
  gflops (eval):  110.04
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282179,110.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2929
  maximum absolute entry in einsum_ir solution: 57.2929
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014279
  time (eval):    0.0198693
  gflops (eval):  156.276
  gflops (total): 145.798
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014279,0.0198693,156.276,145.798

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0945819
  gflops (total): 32.8297
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280744
  gflops (eval):  110.602
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280744,110.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6838
  maximum absolute entry in einsum_ir solution: 59.6838
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141652
  time (eval):    0.019575
  gflops (eval):  158.625
  gflops (total): 147.921
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141652,0.019575,158.625,147.921

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0950183
  gflops (total): 32.6789
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.6789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281692
  gflops (eval):  110.23
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281692,110.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7153
  maximum absolute entry in einsum_ir solution: 55.7153
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143199
  time (eval):    0.0196634
  gflops (eval):  157.912
  gflops (total): 147.193
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143199,0.0196634,157.912,147.193

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946328
  gflops (total): 32.812
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277245
  gflops (eval):  111.998
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277245,111.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4194
  maximum absolute entry in einsum_ir solution: 55.4195
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141877
  time (eval):    0.0197499
  gflops (eval):  157.221
  gflops (total): 146.683
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141877,0.0197499,157.221,146.683

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.094695
  gflops (total): 32.7904
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283854
  gflops (eval):  109.39
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283854,109.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3522
  maximum absolute entry in einsum_ir solution: 56.3522
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014226
  time (eval):    0.0195986
  gflops (eval):  158.435
  gflops (total): 147.713
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014226,0.0195986,158.435,147.713

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946495
  gflops (total): 32.8062
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280757
  gflops (eval):  110.597
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280757,110.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2751
  maximum absolute entry in einsum_ir solution: 54.2752
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142129
  time (eval):    0.0196189
  gflops (eval):  158.271
  gflops (total): 147.579
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142129,0.0196189,158.271,147.579

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0945654
  gflops (total): 32.8354
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280422
  gflops (eval):  110.729
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280422,110.729,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3053
  maximum absolute entry in einsum_ir solution: 59.3053
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143026
  time (eval):    0.0196563
  gflops (eval):  157.97
  gflops (total): 147.255
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143026,0.0196563,157.97,147.255

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0945894
  gflops (total): 32.8271
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8271

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282198
  gflops (eval):  110.032
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282198,110.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4903
  maximum absolute entry in einsum_ir solution: 55.4903
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143499
  time (eval):    0.0197419
  gflops (eval):  157.284
  gflops (total): 146.626
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143499,0.0197419,157.284,146.626

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946825
  gflops (total): 32.7948
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278276
  gflops (eval):  111.583
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278276,111.583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2647
  maximum absolute entry in einsum_ir solution: 60.2647
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142049
  time (eval):    0.019759
  gflops (eval):  157.148
  gflops (total): 146.608
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142049,0.019759,157.148,146.608

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946371
  gflops (total): 32.8105
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280374
  gflops (eval):  110.748
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280374,110.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2242
  maximum absolute entry in einsum_ir solution: 55.2242
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141059
  time (eval):    0.0197059
  gflops (eval):  157.572
  gflops (total): 147.046
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141059,0.0197059,157.572,147.046

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0948771
  gflops (total): 32.7275
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7275

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282305
  gflops (eval):  109.991
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282305,109.991,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9576
  maximum absolute entry in einsum_ir solution: 57.9576
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142195
  time (eval):    0.0197538
  gflops (eval):  157.19
  gflops (total): 146.634
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142195,0.0197538,157.19,146.634

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0954158
  gflops (total): 32.5427
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.5427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277855
  gflops (eval):  111.752
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277855,111.752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2555
  maximum absolute entry in einsum_ir solution: 59.2555
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142616
  time (eval):    0.0196563
  gflops (eval):  157.969
  gflops (total): 147.283
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142616,0.0196563,157.969,147.283

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0944856
  gflops (total): 32.8631
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284924
  gflops (eval):  108.98
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284924,108.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0043
  maximum absolute entry in einsum_ir solution: 61.0043
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014792
  time (eval):    0.0197534
  gflops (eval):  157.193
  gflops (total): 146.242
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014792,0.0197534,157.193,146.242

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0945508
  gflops (total): 32.8405
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282845
  gflops (eval):  109.781
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282845,109.781,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1865
  maximum absolute entry in einsum_ir solution: 61.1865
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143158
  time (eval):    0.019755
  gflops (eval):  157.18
  gflops (total): 146.559
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143158,0.019755,157.18,146.559

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946946
  gflops (total): 32.7906
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284136
  gflops (eval):  109.282
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284136,109.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0952
  maximum absolute entry in einsum_ir solution: 56.0952
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142533
  time (eval):    0.0198283
  gflops (eval):  156.599
  gflops (total): 146.097
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142533,0.0198283,156.599,146.097

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0944198
  gflops (total): 32.886
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283812
  gflops (eval):  109.407
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283812,109.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3597
  maximum absolute entry in einsum_ir solution: 58.3597
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143151
  time (eval):    0.0197722
  gflops (eval):  157.043
  gflops (total): 146.441
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143151,0.0197722,157.043,146.441

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0946374
  gflops (total): 32.8104
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8104

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285209
  gflops (eval):  108.871
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285209,108.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4541
  maximum absolute entry in einsum_ir solution: 61.4541
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141804
  time (eval):    0.0196917
  gflops (eval):  157.685
  gflops (total): 147.093
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141804,0.0196917,157.685,147.093

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0945209
  gflops (total): 32.8508
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283915
  gflops (eval):  109.367
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283915,109.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1853
  maximum absolute entry in einsum_ir solution: 54.1853
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141635
  time (eval):    0.0197085
  gflops (eval):  157.551
  gflops (total): 146.988
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141635,0.0197085,157.551,146.988

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0947961
  gflops (total): 32.7555
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7555

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283798
  gflops (eval):  109.412
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283798,109.412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1556
  maximum absolute entry in einsum_ir solution: 54.1556
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142222
  time (eval):    0.0194773
  gflops (eval):  159.421
  gflops (total): 148.573
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142222,0.0194773,159.421,148.573

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0948001
  gflops (total): 32.7541
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027934
  gflops (eval):  111.158
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027934,111.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7785
  maximum absolute entry in einsum_ir solution: 53.7785
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142312
  time (eval):    0.0195921
  gflops (eval):  158.487
  gflops (total): 147.754
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142312,0.0195921,158.487,147.754

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.093863
  gflops (total): 33.0811
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,33.0811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282059
  gflops (eval):  110.087
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282059,110.087,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.2758
  maximum absolute entry in einsum_ir solution: 65.2758
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014206
  time (eval):    0.0197142
  gflops (eval):  157.505
  gflops (total): 146.918
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014206,0.0197142,157.505,146.918

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0949056
  gflops (total): 32.7177
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282374
  gflops (eval):  109.964
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282374,109.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6273
  maximum absolute entry in einsum_ir solution: 57.6273
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142377
  time (eval):    0.019491
  gflops (eval):  159.309
  gflops (total): 148.464
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142377,0.019491,159.309,148.464

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943939
  gflops (total): 32.8951
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.8951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279106
  gflops (eval):  111.251
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279106,111.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7237
  maximum absolute entry in einsum_ir solution: 56.7237
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142789
  time (eval):    0.0197094
  gflops (eval):  157.544
  gflops (total): 146.901
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142789,0.0197094,157.544,146.901

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0943969
  gflops (total): 32.894
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279839
  gflops (eval):  110.96
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279839,110.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0927
  maximum absolute entry in einsum_ir solution: 54.0927
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141473
  time (eval):    0.0197624
  gflops (eval):  157.121
  gflops (total): 146.625
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141473,0.0197624,157.121,146.625

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0948346
  gflops (total): 32.7422
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,32.7422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282834
  gflops (eval):  109.785
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282834,109.785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9331
  maximum absolute entry in einsum_ir solution: 57.9331
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149876
  time (eval):    0.0114174
  gflops (eval):  379.38
  gflops (total): 335.358
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149876,0.0114174,379.38,335.358

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563002
  gflops (total): 76.9362
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0556367
  gflops (eval):  77.8537
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556367,77.8537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5325
  maximum absolute entry in einsum_ir solution: 33.5325
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146282
  time (eval):    0.0112718
  gflops (eval):  384.281
  gflops (total): 340.139
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146282,0.0112718,384.281,340.139

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561174
  gflops (total): 77.1868
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0556138
  gflops (eval):  77.8857
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556138,77.8857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6849
  maximum absolute entry in einsum_ir solution: 32.6849
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146446
  time (eval):    0.0113212
  gflops (eval):  382.604
  gflops (total): 338.781
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146446,0.0113212,382.604,338.781

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560989
  gflops (total): 77.2122
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547746
  gflops (eval):  79.079
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547746,79.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7076
  maximum absolute entry in einsum_ir solution: 34.7076
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146765
  time (eval):    0.0112885
  gflops (eval):  383.709
  gflops (total): 339.562
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146765,0.0112885,383.709,339.562

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557008
  gflops (total): 77.764
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549368
  gflops (eval):  78.8455
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549368,78.8455,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2485
  maximum absolute entry in einsum_ir solution: 33.2485
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154744
  time (eval):    0.0112899
  gflops (eval):  383.663
  gflops (total): 337.416
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154744,0.0112899,383.663,337.416

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557054
  gflops (total): 77.7577
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0550783
  gflops (eval):  78.643
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0550783,78.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3172
  maximum absolute entry in einsum_ir solution: 37.3172
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0015014
  time (eval):    0.0113865
  gflops (eval):  380.407
  gflops (total): 336.091
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0015014,0.0113865,380.407,336.091

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561751
  gflops (total): 77.1075
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0558163
  gflops (eval):  77.6032
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558163,77.6032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1243
  maximum absolute entry in einsum_ir solution: 36.1243
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146809
  time (eval):    0.0114326
  gflops (eval):  378.873
  gflops (total): 335.758
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146809,0.0114326,378.873,335.758

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556307
  gflops (total): 77.8621
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0546194
  gflops (eval):  79.3036
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546194,79.3036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7687
  maximum absolute entry in einsum_ir solution: 32.7687
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145223
  time (eval):    0.0113093
  gflops (eval):  383.006
  gflops (total): 339.421
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145223,0.0113093,383.006,339.421

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055726
  gflops (total): 77.7289
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547363
  gflops (eval):  79.1343
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547363,79.1343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.917
  maximum absolute entry in einsum_ir solution: 33.917
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146218
  time (eval):    0.0112839
  gflops (eval):  383.868
  gflops (total): 339.832
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146218,0.0112839,383.868,339.832

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557649
  gflops (total): 77.6747
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547492
  gflops (eval):  79.1157
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547492,79.1157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8481
  maximum absolute entry in einsum_ir solution: 34.8481
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146715
  time (eval):    0.0113464
  gflops (eval):  381.754
  gflops (total): 338.043
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146715,0.0113464,381.754,338.043

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557885
  gflops (total): 77.6418
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549584
  gflops (eval):  78.8145
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549584,78.8145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6168
  maximum absolute entry in einsum_ir solution: 37.6168
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146103
  time (eval):    0.0113025
  gflops (eval):  383.236
  gflops (total): 339.367
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146103,0.0113025,383.236,339.367

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555206
  gflops (total): 78.0165
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549508
  gflops (eval):  78.8254
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549508,78.8254,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9481
  maximum absolute entry in einsum_ir solution: 35.9481
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144974
  time (eval):    0.0112754
  gflops (eval):  384.155
  gflops (total): 340.39
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144974,0.0112754,384.155,340.39

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559495
  gflops (total): 77.4184
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0552038
  gflops (eval):  78.4641
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552038,78.4641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2434
  maximum absolute entry in einsum_ir solution: 36.2434
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157574
  time (eval):    0.0113203
  gflops (eval):  382.634
  gflops (total): 335.881
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157574,0.0113203,382.634,335.881

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558491
  gflops (total): 77.5575
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0557133
  gflops (eval):  77.7466
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557133,77.7466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9014
  maximum absolute entry in einsum_ir solution: 34.9014
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146145
  time (eval):    0.0113396
  gflops (eval):  381.981
  gflops (total): 338.371
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146145,0.0113396,381.981,338.371

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558671
  gflops (total): 77.5326
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0544346
  gflops (eval):  79.573
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544346,79.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6889
  maximum absolute entry in einsum_ir solution: 33.6889
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150571
  time (eval):    0.0121025
  gflops (eval):  357.902
  gflops (total): 318.301
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150571,0.0121025,357.902,318.301

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559906
  gflops (total): 77.3616
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549747
  gflops (eval):  78.7911
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549747,78.7911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4346
  maximum absolute entry in einsum_ir solution: 34.4346
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152148
  time (eval):    0.0113208
  gflops (eval):  382.617
  gflops (total): 337.287
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152148,0.0113208,382.617,337.287

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560266
  gflops (total): 77.3119
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0553383
  gflops (eval):  78.2735
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0553383,78.2735,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5151
  maximum absolute entry in einsum_ir solution: 34.5151
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147538
  time (eval):    0.0113665
  gflops (eval):  381.079
  gflops (total): 337.297
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147538,0.0113665,381.079,337.297

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561775
  gflops (total): 77.1042
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549391
  gflops (eval):  78.8422
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549391,78.8422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7413
  maximum absolute entry in einsum_ir solution: 35.7413
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014694
  time (eval):    0.0113154
  gflops (eval):  382.799
  gflops (total): 338.803
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014694,0.0113154,382.799,338.803

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560582
  gflops (total): 77.2683
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0553159
  gflops (eval):  78.3051
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0553159,78.3051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2883
  maximum absolute entry in einsum_ir solution: 33.2883
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148506
  time (eval):    0.0113427
  gflops (eval):  381.876
  gflops (total): 337.667
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148506,0.0113427,381.876,337.667

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561693
  gflops (total): 77.1154
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551649
  gflops (eval):  78.5194
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551649,78.5194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4717
  maximum absolute entry in einsum_ir solution: 37.4717
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145728
  time (eval):    0.0112971
  gflops (eval):  383.419
  gflops (total): 339.611
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145728,0.0112971,383.419,339.611

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559319
  gflops (total): 77.4427
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547847
  gflops (eval):  79.0644
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547847,79.0644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4562
  maximum absolute entry in einsum_ir solution: 34.4562
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014694
  time (eval):    0.0114194
  gflops (eval):  379.313
  gflops (total): 336.069
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014694,0.0114194,379.313,336.069

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559251
  gflops (total): 77.4521
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549159
  gflops (eval):  78.8755
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549159,78.8755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9872
  maximum absolute entry in einsum_ir solution: 33.9872
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151375
  time (eval):    0.0113066
  gflops (eval):  383.098
  gflops (total): 337.864
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151375,0.0113066,383.098,337.864

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560521
  gflops (total): 77.2767
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0557371
  gflops (eval):  77.7134
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557371,77.7134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3595
  maximum absolute entry in einsum_ir solution: 36.3595
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145522
  time (eval):    0.0112677
  gflops (eval):  384.42
  gflops (total): 340.451
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145522,0.0112677,384.42,340.451

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557266
  gflops (total): 77.728
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.054904
  gflops (eval):  78.8927
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054904,78.8927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2211
  maximum absolute entry in einsum_ir solution: 34.2211
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146539
  time (eval):    0.0113135
  gflops (eval):  382.863
  gflops (total): 338.959
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146539,0.0113135,382.863,338.959

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559119
  gflops (total): 77.4705
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548498
  gflops (eval):  78.9705
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548498,78.9705,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8403
  maximum absolute entry in einsum_ir solution: 35.8403
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145584
  time (eval):    0.0113178
  gflops (eval):  382.718
  gflops (total): 339.099
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145584,0.0113178,382.718,339.099

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559396
  gflops (total): 77.4321
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0545648
  gflops (eval):  79.3831
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545648,79.3831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1708
  maximum absolute entry in einsum_ir solution: 34.1708
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014733
  time (eval):    0.0112785
  gflops (eval):  384.052
  gflops (total): 339.68
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014733,0.0112785,384.052,339.68

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055682
  gflops (total): 77.7904
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547828
  gflops (eval):  79.0671
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547828,79.0671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3066
  maximum absolute entry in einsum_ir solution: 34.3066
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146115
  time (eval):    0.0113271
  gflops (eval):  382.403
  gflops (total): 338.711
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146115,0.0113271,382.403,338.711

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560044
  gflops (total): 77.3425
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3425

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0556369
  gflops (eval):  77.8533
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556369,77.8533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1277
  maximum absolute entry in einsum_ir solution: 33.1277
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014719
  time (eval):    0.0113465
  gflops (eval):  381.751
  gflops (total): 337.915
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014719,0.0113465,381.751,337.915

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556524
  gflops (total): 77.8316
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551504
  gflops (eval):  78.5401
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551504,78.5401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2085
  maximum absolute entry in einsum_ir solution: 35.2085
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146901
  time (eval):    0.0114717
  gflops (eval):  377.583
  gflops (total): 334.72
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146901,0.0114717,377.583,334.72

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561075
  gflops (total): 77.2003
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0557111
  gflops (eval):  77.7496
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557111,77.7496,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1384
  maximum absolute entry in einsum_ir solution: 34.1384
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00176266
  time (eval):    0.0113442
  gflops (eval):  381.828
  gflops (total): 330.478
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00176266,0.0113442,381.828,330.478

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558639
  gflops (total): 77.5371
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5371

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548767
  gflops (eval):  78.9319
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548767,78.9319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2272
  maximum absolute entry in einsum_ir solution: 36.2272
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149015
  time (eval):    0.0113736
  gflops (eval):  380.841
  gflops (total): 336.724
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149015,0.0113736,380.841,336.724

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561646
  gflops (total): 77.1219
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0552883
  gflops (eval):  78.3443
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552883,78.3443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4891
  maximum absolute entry in einsum_ir solution: 35.4891
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147895
  time (eval):    0.011377
  gflops (eval):  380.727
  gflops (total): 336.928
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147895,0.011377,380.727,336.928

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556739
  gflops (total): 77.8016
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8016

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0544921
  gflops (eval):  79.489
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544921,79.489,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7076
  maximum absolute entry in einsum_ir solution: 36.7076
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150296
  time (eval):    0.0113268
  gflops (eval):  382.414
  gflops (total): 337.616
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150296,0.0113268,382.414,337.616

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560522
  gflops (total): 77.2765
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0557823
  gflops (eval):  77.6504
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557823,77.6504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4033
  maximum absolute entry in einsum_ir solution: 33.4033
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147159
  time (eval):    0.0113187
  gflops (eval):  382.688
  gflops (total): 338.657
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147159,0.0113187,382.688,338.657

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560354
  gflops (total): 77.2997
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2997

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551137
  gflops (eval):  78.5924
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551137,78.5924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.481
  maximum absolute entry in einsum_ir solution: 34.481
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146519
  time (eval):    0.0114147
  gflops (eval):  379.47
  gflops (total): 336.302
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146519,0.0114147,379.47,336.302

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556126
  gflops (total): 77.8874
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8874

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549636
  gflops (eval):  78.8071
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549636,78.8071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9363
  maximum absolute entry in einsum_ir solution: 35.9363
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149714
  time (eval):    0.0113367
  gflops (eval):  382.08
  gflops (total): 337.508
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149714,0.0113367,382.08,337.508

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0562935
  gflops (total): 76.9452
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549616
  gflops (eval):  78.81
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549616,78.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0409
  maximum absolute entry in einsum_ir solution: 36.0409
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149798
  time (eval):    0.0113195
  gflops (eval):  382.661
  gflops (total): 337.939
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149798,0.0113195,382.661,337.939

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555087
  gflops (total): 78.0332
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548831
  gflops (eval):  78.9226
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548831,78.9226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1648
  maximum absolute entry in einsum_ir solution: 34.1648
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147469
  time (eval):    0.0113609
  gflops (eval):  381.267
  gflops (total): 337.463
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147469,0.0113609,381.267,337.463

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559468
  gflops (total): 77.4221
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548515
  gflops (eval):  78.9681
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548515,78.9681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.791
  maximum absolute entry in einsum_ir solution: 32.791
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145722
  time (eval):    0.0113142
  gflops (eval):  382.838
  gflops (total): 339.156
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145722,0.0113142,382.838,339.156

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557543
  gflops (total): 77.6895
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0550766
  gflops (eval):  78.6454
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0550766,78.6454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9157
  maximum absolute entry in einsum_ir solution: 35.9157
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147498
  time (eval):    0.0113491
  gflops (eval):  381.662
  gflops (total): 337.765
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147498,0.0113491,381.662,337.765

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558104
  gflops (total): 77.6114
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549132
  gflops (eval):  78.8794
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549132,78.8794,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0233
  maximum absolute entry in einsum_ir solution: 34.0233
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00155204
  time (eval):    0.0112868
  gflops (eval):  383.77
  gflops (total): 337.377
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00155204,0.0112868,383.77,337.377

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558582
  gflops (total): 77.545
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549246
  gflops (eval):  78.8631
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549246,78.8631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9699
  maximum absolute entry in einsum_ir solution: 37.9699
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147197
  time (eval):    0.0113104
  gflops (eval):  382.966
  gflops (total): 338.866
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147197,0.0113104,382.966,338.866

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566823
  gflops (total): 76.4175
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.4175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0553305
  gflops (eval):  78.2846
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0553305,78.2846,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0096
  maximum absolute entry in einsum_ir solution: 34.0096
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014722
  time (eval):    0.0113518
  gflops (eval):  381.57
  gflops (total): 337.766
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014722,0.0113518,381.57,337.766

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559558
  gflops (total): 77.4097
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.055993
  gflops (eval):  77.3582
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055993,77.3582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8265
  maximum absolute entry in einsum_ir solution: 38.8265
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014643
  time (eval):    0.0113002
  gflops (eval):  383.313
  gflops (total): 339.341
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014643,0.0113002,383.313,339.341

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554771
  gflops (total): 78.0776
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0556184
  gflops (eval):  77.8793
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556184,77.8793,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1781
  maximum absolute entry in einsum_ir solution: 33.1781
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146806
  time (eval):    0.0112991
  gflops (eval):  383.351
  gflops (total): 339.27
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146806,0.0112991,383.351,339.27

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560423
  gflops (total): 77.2902
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547024
  gflops (eval):  79.1834
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547024,79.1834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0421
  maximum absolute entry in einsum_ir solution: 36.0421
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146161
  time (eval):    0.0112545
  gflops (eval):  384.871
  gflops (total): 340.633
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146161,0.0112545,384.871,340.633

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558151
  gflops (total): 77.6048
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6048

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549169
  gflops (eval):  78.874
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549169,78.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.5313
  maximum absolute entry in einsum_ir solution: 32.5313
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145748
  time (eval):    0.0112539
  gflops (eval):  384.892
  gflops (total): 340.76
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145748,0.0112539,384.892,340.76

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558789
  gflops (total): 77.5163
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0555633
  gflops (eval):  77.9565
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555633,77.9565,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7534
  maximum absolute entry in einsum_ir solution: 32.7534
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149035
  time (eval):    0.0113107
  gflops (eval):  382.957
  gflops (total): 338.371
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149035,0.0113107,382.957,338.371

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559771
  gflops (total): 77.3802
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3802

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549351
  gflops (eval):  78.8479
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549351,78.8479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0379
  maximum absolute entry in einsum_ir solution: 34.0379
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144841
  time (eval):    0.0113092
  gflops (eval):  383.007
  gflops (total): 339.523
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144841,0.0113092,383.007,339.523

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557302
  gflops (total): 77.723
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0553453
  gflops (eval):  78.2636
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0553453,78.2636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1234
  maximum absolute entry in einsum_ir solution: 41.1234
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152007
  time (eval):    0.0112904
  gflops (eval):  383.646
  gflops (total): 338.123
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152007,0.0112904,383.646,338.123

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561114
  gflops (total): 77.195
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551356
  gflops (eval):  78.5612
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551356,78.5612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7299
  maximum absolute entry in einsum_ir solution: 34.7299
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143381
  time (eval):    0.0114289
  gflops (eval):  378.997
  gflops (total): 336.75
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143381,0.0114289,378.997,336.75

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557939
  gflops (total): 77.6342
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0546153
  gflops (eval):  79.3097
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546153,79.3097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1511
  maximum absolute entry in einsum_ir solution: 35.1511
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00158043
  time (eval):    0.011328
  gflops (eval):  382.371
  gflops (total): 335.556
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00158043,0.011328,382.371,335.556

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555453
  gflops (total): 77.9818
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0543548
  gflops (eval):  79.6897
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543548,79.6897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7382
  maximum absolute entry in einsum_ir solution: 33.7382
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147392
  time (eval):    0.0113205
  gflops (eval):  382.626
  gflops (total): 338.548
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147392,0.0113205,382.626,338.548

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560133
  gflops (total): 77.3302
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0559009
  gflops (eval):  77.4858
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0559009,77.4858,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2171
  maximum absolute entry in einsum_ir solution: 33.2171
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157665
  time (eval):    0.0113206
  gflops (eval):  382.621
  gflops (total): 335.847
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157665,0.0113206,382.621,335.847

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560322
  gflops (total): 77.3041
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3041

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551547
  gflops (eval):  78.534
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551547,78.534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3241
  maximum absolute entry in einsum_ir solution: 34.3241
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148775
  time (eval):    0.0112769
  gflops (eval):  384.106
  gflops (total): 339.338
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148775,0.0112769,384.106,339.338

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561808
  gflops (total): 77.0996
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.0996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551346
  gflops (eval):  78.5627
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551346,78.5627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4677
  maximum absolute entry in einsum_ir solution: 33.4677
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146334
  time (eval):    0.0114012
  gflops (eval):  379.918
  gflops (total): 336.702
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146334,0.0114012,379.918,336.702

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560821
  gflops (total): 77.2354
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549065
  gflops (eval):  78.8891
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549065,78.8891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8519
  maximum absolute entry in einsum_ir solution: 33.8519
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014743
  time (eval):    0.0113258
  gflops (eval):  382.448
  gflops (total): 338.398
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014743,0.0113258,382.448,338.398

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566734
  gflops (total): 76.4295
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.4295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0558793
  gflops (eval):  77.5157
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558793,77.5157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9669
  maximum absolute entry in einsum_ir solution: 33.9669
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147782
  time (eval):    0.0113552
  gflops (eval):  381.457
  gflops (total): 337.529
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147782,0.0113552,381.457,337.529

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557989
  gflops (total): 77.6273
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.054515
  gflops (eval):  79.4555
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054515,79.4555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.534
  maximum absolute entry in einsum_ir solution: 34.534
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145364
  time (eval):    0.0113523
  gflops (eval):  381.555
  gflops (total): 338.243
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145364,0.0113523,381.555,338.243

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559891
  gflops (total): 77.3636
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548782
  gflops (eval):  78.9297
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548782,78.9297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5384
  maximum absolute entry in einsum_ir solution: 33.5384
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146429
  time (eval):    0.0113041
  gflops (eval):  383.182
  gflops (total): 339.238
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146429,0.0113041,383.182,339.238

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557119
  gflops (total): 77.7486
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549983
  gflops (eval):  78.7574
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549983,78.7574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8684
  maximum absolute entry in einsum_ir solution: 33.8684
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143679
  time (eval):    0.0113723
  gflops (eval):  380.884
  gflops (total): 338.16
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143679,0.0113723,380.884,338.16

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561427
  gflops (total): 77.152
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.05538
  gflops (eval):  78.2145
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.05538,78.2145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0205
  maximum absolute entry in einsum_ir solution: 37.0205
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00175426
  time (eval):    0.0113751
  gflops (eval):  380.79
  gflops (total): 329.911
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00175426,0.0113751,380.79,329.911

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560251
  gflops (total): 77.314
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.055293
  gflops (eval):  78.3376
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055293,78.3376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6262
  maximum absolute entry in einsum_ir solution: 34.6262
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146818
  time (eval):    0.0113125
  gflops (eval):  382.898
  gflops (total): 338.912
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146818,0.0113125,382.898,338.912

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557414
  gflops (total): 77.7074
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.054857
  gflops (eval):  78.9602
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054857,78.9602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1875
  maximum absolute entry in einsum_ir solution: 36.1875
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154268
  time (eval):    0.0113493
  gflops (eval):  381.656
  gflops (total): 335.986
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154268,0.0113493,381.656,335.986

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.05583
  gflops (total): 77.5841
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548834
  gflops (eval):  78.9222
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548834,78.9222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7977
  maximum absolute entry in einsum_ir solution: 32.7977
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146944
  time (eval):    0.0113616
  gflops (eval):  381.241
  gflops (total): 337.581
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146944,0.0113616,381.241,337.581

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558426
  gflops (total): 77.5666
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551792
  gflops (eval):  78.4992
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551792,78.4992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0492
  maximum absolute entry in einsum_ir solution: 34.0492
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146069
  time (eval):    0.0113463
  gflops (eval):  381.756
  gflops (total): 338.216
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146069,0.0113463,381.756,338.216

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552445
  gflops (total): 78.4063
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0545039
  gflops (eval):  79.4718
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545039,79.4718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7662
  maximum absolute entry in einsum_ir solution: 36.7662
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148229
  time (eval):    0.0112974
  gflops (eval):  383.409
  gflops (total): 338.939
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148229,0.0112974,383.409,338.939

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556737
  gflops (total): 77.8019
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0543363
  gflops (eval):  79.7169
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543363,79.7169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8534
  maximum absolute entry in einsum_ir solution: 35.8534
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148345
  time (eval):    0.0113895
  gflops (eval):  380.309
  gflops (total): 336.483
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148345,0.0113895,380.309,336.483

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566892
  gflops (total): 76.4082
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.4082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0557875
  gflops (eval):  77.6432
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557875,77.6432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4512
  maximum absolute entry in einsum_ir solution: 34.4512
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150459
  time (eval):    0.0113709
  gflops (eval):  380.932
  gflops (total): 336.417
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150459,0.0113709,380.932,336.417

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559396
  gflops (total): 77.4321
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0550469
  gflops (eval):  78.6878
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0550469,78.6878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.038
  maximum absolute entry in einsum_ir solution: 34.038
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150609
  time (eval):    0.0113478
  gflops (eval):  381.707
  gflops (total): 336.982
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150609,0.0113478,381.707,336.982

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556851
  gflops (total): 77.786
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549874
  gflops (eval):  78.773
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549874,78.773,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5898
  maximum absolute entry in einsum_ir solution: 33.5898
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014866
  time (eval):    0.0113014
  gflops (eval):  383.273
  gflops (total): 338.718
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014866,0.0113014,383.273,338.718

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055514
  gflops (total): 78.0257
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0552456
  gflops (eval):  78.4048
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552456,78.4048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3194
  maximum absolute entry in einsum_ir solution: 33.3194
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145663
  time (eval):    0.0113208
  gflops (eval):  382.617
  gflops (total): 338.998
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145663,0.0113208,382.617,338.998

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558485
  gflops (total): 77.5584
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548958
  gflops (eval):  78.9045
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548958,78.9045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3701
  maximum absolute entry in einsum_ir solution: 37.3701
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146556
  time (eval):    0.0113748
  gflops (eval):  380.801
  gflops (total): 337.337
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146556,0.0113748,380.801,337.337

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558116
  gflops (total): 77.6097
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548752
  gflops (eval):  78.934
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548752,78.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9321
  maximum absolute entry in einsum_ir solution: 34.9321
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145013
  time (eval):    0.0113262
  gflops (eval):  382.433
  gflops (total): 339.027
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145013,0.0113262,382.433,339.027

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558772
  gflops (total): 77.5186
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0548801
  gflops (eval):  78.927
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548801,78.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7738
  maximum absolute entry in einsum_ir solution: 34.7738
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00176422
  time (eval):    0.0113812
  gflops (eval):  380.584
  gflops (total): 329.507
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00176422,0.0113812,380.584,329.507

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056207
  gflops (total): 77.0637
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.0637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0545972
  gflops (eval):  79.336
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545972,79.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9446
  maximum absolute entry in einsum_ir solution: 32.9446
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148468
  time (eval):    0.011279
  gflops (eval):  384.035
  gflops (total): 339.364
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148468,0.011279,384.035,339.364

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558341
  gflops (total): 77.5784
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.055024
  gflops (eval):  78.7205
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055024,78.7205,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9437
  maximum absolute entry in einsum_ir solution: 33.9437
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149028
  time (eval):    0.0113006
  gflops (eval):  383.3
  gflops (total): 338.641
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149028,0.0113006,383.3,338.641

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557982
  gflops (total): 77.6284
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549629
  gflops (eval):  78.8081
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549629,78.8081,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1816
  maximum absolute entry in einsum_ir solution: 37.1816
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147654
  time (eval):    0.0112976
  gflops (eval):  383.403
  gflops (total): 339.086
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147654,0.0112976,383.403,339.086

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560432
  gflops (total): 77.2889
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0557562
  gflops (eval):  77.6868
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557562,77.6868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2499
  maximum absolute entry in einsum_ir solution: 34.2499
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148967
  time (eval):    0.0113643
  gflops (eval):  381.15
  gflops (total): 336.978
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148967,0.0113643,381.15,336.978

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560957
  gflops (total): 77.2166
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0552747
  gflops (eval):  78.3635
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552747,78.3635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7381
  maximum absolute entry in einsum_ir solution: 36.7381
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157378
  time (eval):    0.0113795
  gflops (eval):  380.641
  gflops (total): 334.395
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157378,0.0113795,380.641,334.395

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556955
  gflops (total): 77.7714
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0553936
  gflops (eval):  78.1953
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0553936,78.1953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3108
  maximum absolute entry in einsum_ir solution: 37.3108
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151816
  time (eval):    0.0113427
  gflops (eval):  381.878
  gflops (total): 336.799
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151816,0.0113427,381.878,336.799

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556119
  gflops (total): 77.8884
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0545937
  gflops (eval):  79.341
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545937,79.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1386
  maximum absolute entry in einsum_ir solution: 35.1386
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0017522
  time (eval):    0.011313
  gflops (eval):  382.879
  gflops (total): 331.531
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0017522,0.011313,382.879,331.531

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555078
  gflops (total): 78.0345
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0345

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0546229
  gflops (eval):  79.2985
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546229,79.2985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5534
  maximum absolute entry in einsum_ir solution: 35.5534
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148646
  time (eval):    0.0112675
  gflops (eval):  384.427
  gflops (total): 339.623
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148646,0.0112675,384.427,339.623

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558658
  gflops (total): 77.5344
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.055187
  gflops (eval):  78.4881
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055187,78.4881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0422
  maximum absolute entry in einsum_ir solution: 33.0422
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146981
  time (eval):    0.011368
  gflops (eval):  381.028
  gflops (total): 337.404
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146981,0.011368,381.028,337.404

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556065
  gflops (total): 77.896
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0544752
  gflops (eval):  79.5137
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544752,79.5137,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0636
  maximum absolute entry in einsum_ir solution: 34.0636
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146316
  time (eval):    0.0113502
  gflops (eval):  381.625
  gflops (total): 338.047
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146316,0.0113502,381.625,338.047

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555965
  gflops (total): 77.91
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547686
  gflops (eval):  79.0876
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547686,79.0876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2725
  maximum absolute entry in einsum_ir solution: 34.2725
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153133
  time (eval):    0.0113604
  gflops (eval):  381.283
  gflops (total): 335.992
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153133,0.0113604,381.283,335.992

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557458
  gflops (total): 77.7013
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551782
  gflops (eval):  78.5005
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551782,78.5005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8286
  maximum absolute entry in einsum_ir solution: 34.8286
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143012
  time (eval):    0.0113468
  gflops (eval):  381.739
  gflops (total): 339.011
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143012,0.0113468,381.739,339.011

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555931
  gflops (total): 77.9146
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0553619
  gflops (eval):  78.2401
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0553619,78.2401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9305
  maximum absolute entry in einsum_ir solution: 37.9305
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146103
  time (eval):    0.0112928
  gflops (eval):  383.564
  gflops (total): 339.624
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146103,0.0112928,383.564,339.624

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557832
  gflops (total): 77.6491
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547827
  gflops (eval):  79.0674
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547827,79.0674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0054
  maximum absolute entry in einsum_ir solution: 35.0054
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147398
  time (eval):    0.0112817
  gflops (eval):  383.944
  gflops (total): 339.577
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147398,0.0112817,383.944,339.577

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056074
  gflops (total): 77.2465
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0554276
  gflops (eval):  78.1473
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554276,78.1473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4943
  maximum absolute entry in einsum_ir solution: 35.4943
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146878
  time (eval):    0.0113536
  gflops (eval):  381.512
  gflops (total): 337.811
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146878,0.0113536,381.512,337.811

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557526
  gflops (total): 77.6918
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0556887
  gflops (eval):  77.7809
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556887,77.7809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7879
  maximum absolute entry in einsum_ir solution: 34.7879
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152012
  time (eval):    0.0113208
  gflops (eval):  382.618
  gflops (total): 337.323
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152012,0.0113208,382.618,337.323

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557004
  gflops (total): 77.7646
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547874
  gflops (eval):  79.0605
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547874,79.0605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0271
  maximum absolute entry in einsum_ir solution: 33.0271
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147129
  time (eval):    0.0112671
  gflops (eval):  384.44
  gflops (total): 340.037
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147129,0.0112671,384.44,340.037

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556878
  gflops (total): 77.7822
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.055166
  gflops (eval):  78.5179
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055166,78.5179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6156
  maximum absolute entry in einsum_ir solution: 37.6156
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147148
  time (eval):    0.0112815
  gflops (eval):  383.948
  gflops (total): 339.647
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147148,0.0112815,383.948,339.647

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055853
  gflops (total): 77.5522
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0552962
  gflops (eval):  78.333
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552962,78.333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7177
  maximum absolute entry in einsum_ir solution: 34.7177
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149913
  time (eval):    0.0113466
  gflops (eval):  381.747
  gflops (total): 337.196
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149913,0.0113466,381.747,337.196

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559953
  gflops (total): 77.355
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551758
  gflops (eval):  78.504
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551758,78.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2386
  maximum absolute entry in einsum_ir solution: 35.2386
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146907
  time (eval):    0.0114404
  gflops (eval):  378.616
  gflops (total): 335.53
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146907,0.0114404,378.616,335.53

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0562383
  gflops (total): 77.0208
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.0208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551726
  gflops (eval):  78.5086
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551726,78.5086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5169
  maximum absolute entry in einsum_ir solution: 33.5169
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148046
  time (eval):    0.0113208
  gflops (eval):  382.617
  gflops (total): 338.367
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148046,0.0113208,382.617,338.367

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555587
  gflops (total): 77.9629
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.054497
  gflops (eval):  79.4817
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054497,79.4817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9679
  maximum absolute entry in einsum_ir solution: 35.9679
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144989
  time (eval):    0.0113311
  gflops (eval):  382.267
  gflops (total): 338.902
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144989,0.0113311,382.267,338.902

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556572
  gflops (total): 77.825
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0552081
  gflops (eval):  78.458
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552081,78.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6358
  maximum absolute entry in einsum_ir solution: 33.6358
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145575
  time (eval):    0.0113655
  gflops (eval):  381.112
  gflops (total): 337.84
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145575,0.0113655,381.112,337.84

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566186
  gflops (total): 76.5034
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.5034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.055634
  gflops (eval):  77.8574
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055634,77.8574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6292
  maximum absolute entry in einsum_ir solution: 34.6292
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145706
  time (eval):    0.0112564
  gflops (eval):  384.806
  gflops (total): 340.704
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145706,0.0112564,384.806,340.704

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559693
  gflops (total): 77.3909
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0551444
  gflops (eval):  78.5487
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551444,78.5487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9524
  maximum absolute entry in einsum_ir solution: 33.9524
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145293
  time (eval):    0.0113528
  gflops (eval):  381.539
  gflops (total): 338.249
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145293,0.0113528,381.539,338.249

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558746
  gflops (total): 77.5222
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5222

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0549445
  gflops (eval):  78.8345
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549445,78.8345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2129
  maximum absolute entry in einsum_ir solution: 34.2129
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143963
  time (eval):    0.0109117
  gflops (eval):  396.961
  gflops (total): 350.693
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143963,0.0109117,396.961,350.693

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576206
  gflops (total): 75.1731
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573587
  gflops (eval):  75.5164
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573587,75.5164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0951
  maximum absolute entry in einsum_ir solution: 34.0951
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145545
  time (eval):    0.0109526
  gflops (eval):  395.48
  gflops (total): 349.09
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145545,0.0109526,395.48,349.09

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581267
  gflops (total): 74.5186
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573261
  gflops (eval):  75.5594
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573261,75.5594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6356
  maximum absolute entry in einsum_ir solution: 34.6356
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148674
  time (eval):    0.0109274
  gflops (eval):  396.391
  gflops (total): 348.918
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148674,0.0109274,396.391,348.918

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581557
  gflops (total): 74.4815
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0581264
  gflops (eval):  74.519
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0581264,74.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5834
  maximum absolute entry in einsum_ir solution: 36.5834
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146245
  time (eval):    0.0109171
  gflops (eval):  396.764
  gflops (total): 349.892
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146245,0.0109171,396.764,349.892

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579286
  gflops (total): 74.7734
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573337
  gflops (eval):  75.5493
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573337,75.5493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6507
  maximum absolute entry in einsum_ir solution: 33.6507
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147795
  time (eval):    0.0109142
  gflops (eval):  396.871
  gflops (total): 349.538
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147795,0.0109142,396.871,349.538

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0586107
  gflops (total): 73.9032
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577491
  gflops (eval):  75.0059
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577491,75.0059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.434
  maximum absolute entry in einsum_ir solution: 33.434
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147007
  time (eval):    0.0109014
  gflops (eval):  397.335
  gflops (total): 350.121
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147007,0.0109014,397.335,350.121

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583056
  gflops (total): 74.29
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577712
  gflops (eval):  74.9772
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577712,74.9772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8395
  maximum absolute entry in einsum_ir solution: 32.8395
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153273
  time (eval):    0.0109313
  gflops (eval):  396.251
  gflops (total): 347.523
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153273,0.0109313,396.251,347.523

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0592115
  gflops (total): 73.1533
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.1533

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575176
  gflops (eval):  75.3077
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575176,75.3077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9852
  maximum absolute entry in einsum_ir solution: 32.9852
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145448
  time (eval):    0.0109112
  gflops (eval):  396.981
  gflops (total): 350.287
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145448,0.0109112,396.981,350.287

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0587496
  gflops (total): 73.7285
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.7285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574463
  gflops (eval):  75.4012
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574463,75.4012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5359
  maximum absolute entry in einsum_ir solution: 35.5359
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146006
  time (eval):    0.0109051
  gflops (eval):  397.202
  gflops (total): 350.301
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146006,0.0109051,397.202,350.301

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579958
  gflops (total): 74.6868
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574524
  gflops (eval):  75.3931
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574524,75.3931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6134
  maximum absolute entry in einsum_ir solution: 35.6134
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148397
  time (eval):    0.0108898
  gflops (eval):  397.759
  gflops (total): 350.056
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148397,0.0108898,397.759,350.056

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057488
  gflops (total): 75.3465
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057248
  gflops (eval):  75.6623
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057248,75.6623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5879
  maximum absolute entry in einsum_ir solution: 34.5879
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014746
  time (eval):    0.0108875
  gflops (eval):  397.844
  gflops (total): 350.388
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014746,0.0108875,397.844,350.388

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577736
  gflops (total): 74.9741
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570871
  gflops (eval):  75.8757
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570871,75.8757,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.756
  maximum absolute entry in einsum_ir solution: 33.756
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00174208
  time (eval):    0.0109248
  gflops (eval):  396.486
  gflops (total): 341.957
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00174208,0.0109248,396.486,341.957

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576443
  gflops (total): 75.1422
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574882
  gflops (eval):  75.3463
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574882,75.3463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1599
  maximum absolute entry in einsum_ir solution: 36.1599
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150358
  time (eval):    0.0109064
  gflops (eval):  397.155
  gflops (total): 349.036
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150358,0.0109064,397.155,349.036

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580928
  gflops (total): 74.562
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578299
  gflops (eval):  74.9011
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578299,74.9011,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4559
  maximum absolute entry in einsum_ir solution: 35.4559
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014647
  time (eval):    0.0109345
  gflops (eval):  396.135
  gflops (total): 349.34
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014647,0.0109345,396.135,349.34

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581129
  gflops (total): 74.5363
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576325
  gflops (eval):  75.1576
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576325,75.1576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7391
  maximum absolute entry in einsum_ir solution: 33.7391
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151434
  time (eval):    0.0108974
  gflops (eval):  397.482
  gflops (total): 348.986
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151434,0.0108974,397.482,348.986

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575998
  gflops (total): 75.2003
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0563921
  gflops (eval):  76.8107
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0563921,76.8107,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6183
  maximum absolute entry in einsum_ir solution: 35.6183
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147795
  time (eval):    0.0109264
  gflops (eval):  396.427
  gflops (total): 349.194
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147795,0.0109264,396.427,349.194

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0586434
  gflops (total): 73.862
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576072
  gflops (eval):  75.1906
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576072,75.1906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8034
  maximum absolute entry in einsum_ir solution: 32.8034
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146105
  time (eval):    0.0109167
  gflops (eval):  396.778
  gflops (total): 349.943
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146105,0.0109167,396.778,349.943

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582221
  gflops (total): 74.3966
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575387
  gflops (eval):  75.2801
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575387,75.2801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2257
  maximum absolute entry in einsum_ir solution: 34.2257
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157317
  time (eval):    0.0109294
  gflops (eval):  396.32
  gflops (total): 346.452
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157317,0.0109294,396.32,346.452

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583772
  gflops (total): 74.1989
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574164
  gflops (eval):  75.4404
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574164,75.4404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3387
  maximum absolute entry in einsum_ir solution: 33.3387
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150942
  time (eval):    0.0108994
  gflops (eval):  397.409
  gflops (total): 349.068
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150942,0.0108994,397.409,349.068

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579076
  gflops (total): 74.8006
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574818
  gflops (eval):  75.3546
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574818,75.3546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4318
  maximum absolute entry in einsum_ir solution: 33.4318
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0017406
  time (eval):    0.010895
  gflops (eval):  397.571
  gflops (total): 342.804
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0017406,0.010895,397.571,342.804

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581713
  gflops (total): 74.4614
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575189
  gflops (eval):  75.306
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575189,75.306,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5334
  maximum absolute entry in einsum_ir solution: 33.5334
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153699
  time (eval):    0.010883
  gflops (eval):  398.006
  gflops (total): 348.753
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153699,0.010883,398.006,348.753

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0571396
  gflops (total): 75.8059
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.8059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575893
  gflops (eval):  75.214
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575893,75.214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.832
  maximum absolute entry in einsum_ir solution: 33.832
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014733
  time (eval):    0.0109263
  gflops (eval):  396.432
  gflops (total): 349.328
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014733,0.0109263,396.432,349.328

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058475
  gflops (total): 74.0747
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0579744
  gflops (eval):  74.7143
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0579744,74.7143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5558
  maximum absolute entry in einsum_ir solution: 36.5558
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146886
  time (eval):    0.0109204
  gflops (eval):  396.646
  gflops (total): 349.62
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146886,0.0109204,396.646,349.62

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580856
  gflops (total): 74.5713
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575
  gflops (eval):  75.3308
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575,75.3308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1636
  maximum absolute entry in einsum_ir solution: 35.1636
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145712
  time (eval):    0.0109187
  gflops (eval):  396.708
  gflops (total): 350
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145712,0.0109187,396.708,350

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582069
  gflops (total): 74.416
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574973
  gflops (eval):  75.3344
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574973,75.3344,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5232
  maximum absolute entry in einsum_ir solution: 34.5232
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147656
  time (eval):    0.0109027
  gflops (eval):  397.289
  gflops (total): 349.902
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147656,0.0109027,397.289,349.902

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574942
  gflops (total): 75.3384
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575666
  gflops (eval):  75.2436
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575666,75.2436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.563
  maximum absolute entry in einsum_ir solution: 35.563
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147224
  time (eval):    0.0109039
  gflops (eval):  397.246
  gflops (total): 349.99
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147224,0.0109039,397.246,349.99

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578641
  gflops (total): 74.8568
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576489
  gflops (eval):  75.1362
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576489,75.1362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4443
  maximum absolute entry in einsum_ir solution: 36.4443
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153098
  time (eval):    0.0109205
  gflops (eval):  396.643
  gflops (total): 347.873
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153098,0.0109205,396.643,347.873

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583231
  gflops (total): 74.2677
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571991
  gflops (eval):  75.7271
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571991,75.7271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2927
  maximum absolute entry in einsum_ir solution: 33.2927
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147931
  time (eval):    0.0108983
  gflops (eval):  397.451
  gflops (total): 349.949
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147931,0.0108983,397.451,349.949

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0586598
  gflops (total): 73.8414
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.8414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575244
  gflops (eval):  75.2988
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575244,75.2988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4048
  maximum absolute entry in einsum_ir solution: 36.4048
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151636
  time (eval):    0.0108871
  gflops (eval):  397.858
  gflops (total): 349.218
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151636,0.0108871,397.858,349.218

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585475
  gflops (total): 73.9831
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574485
  gflops (eval):  75.3983
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574485,75.3983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5335
  maximum absolute entry in einsum_ir solution: 34.5335
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146864
  time (eval):    0.0109135
  gflops (eval):  396.897
  gflops (total): 349.821
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146864,0.0109135,396.897,349.821

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0573546
  gflops (total): 75.5217
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.5217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573653
  gflops (eval):  75.5077
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573653,75.5077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2434
  maximum absolute entry in einsum_ir solution: 34.2434
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144461
  time (eval):    0.0109463
  gflops (eval):  395.707
  gflops (total): 349.573
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144461,0.0109463,395.707,349.573

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581466
  gflops (total): 74.4931
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057411
  gflops (eval):  75.4475
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057411,75.4475,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6109
  maximum absolute entry in einsum_ir solution: 34.6109
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149342
  time (eval):    0.0109041
  gflops (eval):  397.238
  gflops (total): 349.386
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149342,0.0109041,397.238,349.386

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581316
  gflops (total): 74.5123
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573567
  gflops (eval):  75.519
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573567,75.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7048
  maximum absolute entry in einsum_ir solution: 35.7048
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145719
  time (eval):    0.0109142
  gflops (eval):  396.869
  gflops (total): 350.123
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145719,0.0109142,396.869,350.123

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576269
  gflops (total): 75.1649
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576763
  gflops (eval):  75.1005
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576763,75.1005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.875
  maximum absolute entry in einsum_ir solution: 33.875
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146335
  time (eval):    0.0108954
  gflops (eval):  397.554
  gflops (total): 350.481
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146335,0.0108954,397.554,350.481

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582859
  gflops (total): 74.3151
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572644
  gflops (eval):  75.6407
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572644,75.6407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9508
  maximum absolute entry in einsum_ir solution: 35.9508
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147186
  time (eval):    0.0108972
  gflops (eval):  397.49
  gflops (total): 350.191
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147186,0.0108972,397.49,350.191

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581373
  gflops (total): 74.505
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575794
  gflops (eval):  75.2269
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575794,75.2269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8103
  maximum absolute entry in einsum_ir solution: 34.8103
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147705
  time (eval):    0.0109002
  gflops (eval):  397.38
  gflops (total): 349.958
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147705,0.0109002,397.38,349.958

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580016
  gflops (total): 74.6793
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571365
  gflops (eval):  75.81
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571365,75.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2857
  maximum absolute entry in einsum_ir solution: 38.2857
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154695
  time (eval):    0.0108785
  gflops (eval):  398.173
  gflops (total): 348.601
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154695,0.0108785,398.173,348.601

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575169
  gflops (total): 75.3086
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570713
  gflops (eval):  75.8966
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570713,75.8966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0749
  maximum absolute entry in einsum_ir solution: 38.0749
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149398
  time (eval):    0.0109064
  gflops (eval):  397.155
  gflops (total): 349.307
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149398,0.0109064,397.155,349.307

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0570608
  gflops (total): 75.9106
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.9106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570242
  gflops (eval):  75.9593
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570242,75.9593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0895
  maximum absolute entry in einsum_ir solution: 34.0895
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00158617
  time (eval):    0.0109077
  gflops (eval):  397.108
  gflops (total): 346.693
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00158617,0.0109077,397.108,346.693

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576524
  gflops (total): 75.1317
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572087
  gflops (eval):  75.7144
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572087,75.7144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2357
  maximum absolute entry in einsum_ir solution: 36.2357
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014783
  time (eval):    0.0108889
  gflops (eval):  397.793
  gflops (total): 350.243
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014783,0.0108889,397.793,350.243

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580271
  gflops (total): 74.6465
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057467
  gflops (eval):  75.3741
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057467,75.3741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3307
  maximum absolute entry in einsum_ir solution: 32.3307
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145458
  time (eval):    0.0109295
  gflops (eval):  396.316
  gflops (total): 349.767
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145458,0.0109295,396.316,349.767

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575554
  gflops (total): 75.2583
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571916
  gflops (eval):  75.737
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571916,75.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4322
  maximum absolute entry in einsum_ir solution: 37.4322
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0016058
  time (eval):    0.0109109
  gflops (eval):  396.99
  gflops (total): 346.059
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0016058,0.0109109,396.99,346.059

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580185
  gflops (total): 74.6575
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.056971
  gflops (eval):  76.0302
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.056971,76.0302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5084
  maximum absolute entry in einsum_ir solution: 33.5084
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149016
  time (eval):    0.010907
  gflops (eval):  397.132
  gflops (total): 349.396
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149016,0.010907,397.132,349.396

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578082
  gflops (total): 74.9291
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577634
  gflops (eval):  74.9873
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577634,74.9873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5345
  maximum absolute entry in einsum_ir solution: 33.5345
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147578
  time (eval):    0.0109058
  gflops (eval):  397.177
  gflops (total): 349.837
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147578,0.0109058,397.177,349.837

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578389
  gflops (total): 74.8894
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575646
  gflops (eval):  75.2463
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575646,75.2463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1935
  maximum absolute entry in einsum_ir solution: 34.1935
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154814
  time (eval):    0.0109083
  gflops (eval):  397.085
  gflops (total): 347.734
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154814,0.0109083,397.085,347.734

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058155
  gflops (total): 74.4823
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575117
  gflops (eval):  75.3154
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575117,75.3154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5301
  maximum absolute entry in einsum_ir solution: 34.5301
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147292
  time (eval):    0.0109106
  gflops (eval):  397.003
  gflops (total): 349.782
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147292,0.0109106,397.003,349.782

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578446
  gflops (total): 74.882
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575491
  gflops (eval):  75.2665
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575491,75.2665,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4236
  maximum absolute entry in einsum_ir solution: 35.4236
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147498
  time (eval):    0.0109259
  gflops (eval):  396.446
  gflops (total): 349.292
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147498,0.0109259,396.446,349.292

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585097
  gflops (total): 74.0308
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574196
  gflops (eval):  75.4362
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574196,75.4362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5714
  maximum absolute entry in einsum_ir solution: 34.5714
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147816
  time (eval):    0.0108844
  gflops (eval):  397.956
  gflops (total): 350.373
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147816,0.0108844,397.956,350.373

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580423
  gflops (total): 74.6269
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057501
  gflops (eval):  75.3295
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057501,75.3295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5453
  maximum absolute entry in einsum_ir solution: 34.5453
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00158011
  time (eval):    0.0109151
  gflops (eval):  396.838
  gflops (total): 346.655
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00158011,0.0109151,396.838,346.655

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583791
  gflops (total): 74.1965
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057647
  gflops (eval):  75.1387
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057647,75.1387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.445
  maximum absolute entry in einsum_ir solution: 34.445
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151385
  time (eval):    0.0109027
  gflops (eval):  397.29
  gflops (total): 348.852
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151385,0.0109027,397.29,348.852

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583997
  gflops (total): 74.1702
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575386
  gflops (eval):  75.2802
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575386,75.2802,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6669
  maximum absolute entry in einsum_ir solution: 35.6669
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00155623
  time (eval):    0.010904
  gflops (eval):  397.242
  gflops (total): 347.628
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00155623,0.010904,397.242,347.628

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585661
  gflops (total): 73.9595
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576514
  gflops (eval):  75.1329
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576514,75.1329,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6178
  maximum absolute entry in einsum_ir solution: 32.6178
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146731
  time (eval):    0.0109234
  gflops (eval):  396.537
  gflops (total): 349.579
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146731,0.0109234,396.537,349.579

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574637
  gflops (total): 75.3784
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575631
  gflops (eval):  75.2482
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575631,75.2482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4011
  maximum absolute entry in einsum_ir solution: 34.4011
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001471
  time (eval):    0.0109158
  gflops (eval):  396.81
  gflops (total): 349.687
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001471,0.0109158,396.81,349.687

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578714
  gflops (total): 74.8473
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574259
  gflops (eval):  75.428
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574259,75.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6401
  maximum absolute entry in einsum_ir solution: 32.6401
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147395
  time (eval):    0.0109258
  gflops (eval):  396.449
  gflops (total): 349.323
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147395,0.0109258,396.449,349.323

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057909
  gflops (total): 74.7988
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7988

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0579899
  gflops (eval):  74.6944
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0579899,74.6944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4883
  maximum absolute entry in einsum_ir solution: 34.4883
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147618
  time (eval):    0.0109304
  gflops (eval):  396.284
  gflops (total): 349.132
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147618,0.0109304,396.284,349.132

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580171
  gflops (total): 74.6593
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573447
  gflops (eval):  75.5347
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573447,75.5347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1907
  maximum absolute entry in einsum_ir solution: 34.1907
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146516
  time (eval):    0.0109166
  gflops (eval):  396.782
  gflops (total): 349.83
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146516,0.0109166,396.782,349.83

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582678
  gflops (total): 74.3381
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572455
  gflops (eval):  75.6656
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572455,75.6656,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3832
  maximum absolute entry in einsum_ir solution: 33.3832
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146887
  time (eval):    0.0109169
  gflops (eval):  396.773
  gflops (total): 349.719
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146887,0.0109169,396.773,349.719

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580538
  gflops (total): 74.6122
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574031
  gflops (eval):  75.4579
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574031,75.4579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7469
  maximum absolute entry in einsum_ir solution: 34.7469
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014702
  time (eval):    0.0109102
  gflops (eval):  397.015
  gflops (total): 349.869
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014702,0.0109102,397.015,349.869

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580019
  gflops (total): 74.6789
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574028
  gflops (eval):  75.4584
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574028,75.4584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3287
  maximum absolute entry in einsum_ir solution: 34.3287
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146881
  time (eval):    0.0108948
  gflops (eval):  397.576
  gflops (total): 350.344
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146881,0.0108948,397.576,350.344

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577045
  gflops (total): 75.0639
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574683
  gflops (eval):  75.3724
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574683,75.3724,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3035
  maximum absolute entry in einsum_ir solution: 34.3035
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147195
  time (eval):    0.0109194
  gflops (eval):  396.681
  gflops (total): 349.56
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147195,0.0109194,396.681,349.56

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583511
  gflops (total): 74.2321
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575942
  gflops (eval):  75.2076
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575942,75.2076,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.388
  maximum absolute entry in einsum_ir solution: 31.388
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147318
  time (eval):    0.010904
  gflops (eval):  397.241
  gflops (total): 349.96
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147318,0.010904,397.241,349.96

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585258
  gflops (total): 74.0105
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057404
  gflops (eval):  75.4568
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057404,75.4568,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6446
  maximum absolute entry in einsum_ir solution: 34.6446
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149115
  time (eval):    0.0109121
  gflops (eval):  396.948
  gflops (total): 349.226
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149115,0.0109121,396.948,349.226

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576043
  gflops (total): 75.1944
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0567382
  gflops (eval):  76.3423
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0567382,76.3423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4327
  maximum absolute entry in einsum_ir solution: 34.4327
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150811
  time (eval):    0.0109075
  gflops (eval):  397.115
  gflops (total): 348.878
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150811,0.0109075,397.115,348.878

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576747
  gflops (total): 75.1027
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578288
  gflops (eval):  74.9024
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578288,74.9024,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8657
  maximum absolute entry in einsum_ir solution: 37.8657
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146844
  time (eval):    0.0109231
  gflops (eval):  396.547
  gflops (total): 349.555
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146844,0.0109231,396.547,349.555

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579324
  gflops (total): 74.7686
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573927
  gflops (eval):  75.4716
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573927,75.4716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0237
  maximum absolute entry in einsum_ir solution: 33.0237
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00192143
  time (eval):    0.010913
  gflops (eval):  396.913
  gflops (total): 337.491
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00192143,0.010913,396.913,337.491

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576883
  gflops (total): 75.0849
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0579611
  gflops (eval):  74.7315
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0579611,74.7315,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0951
  maximum absolute entry in einsum_ir solution: 40.0951
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00174768
  time (eval):    0.0109141
  gflops (eval):  396.874
  gflops (total): 342.094
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00174768,0.0109141,396.874,342.094

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579997
  gflops (total): 74.6817
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574374
  gflops (eval):  75.4129
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574374,75.4129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.0034
  maximum absolute entry in einsum_ir solution: 32.0034
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147562
  time (eval):    0.0109117
  gflops (eval):  396.961
  gflops (total): 349.674
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147562,0.0109117,396.961,349.674

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577069
  gflops (total): 75.0606
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575592
  gflops (eval):  75.2533
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575592,75.2533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8389
  maximum absolute entry in einsum_ir solution: 33.8389
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150711
  time (eval):    0.0109125
  gflops (eval):  396.932
  gflops (total): 348.764
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150711,0.0109125,396.932,348.764

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579887
  gflops (total): 74.6959
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6959

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574566
  gflops (eval):  75.3876
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574566,75.3876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7145
  maximum absolute entry in einsum_ir solution: 34.7145
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146972
  time (eval):    0.0111707
  gflops (eval):  387.757
  gflops (total): 342.672
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146972,0.0111707,387.757,342.672

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577423
  gflops (total): 75.0147
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573823
  gflops (eval):  75.4853
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573823,75.4853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1127
  maximum absolute entry in einsum_ir solution: 34.1127
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153419
  time (eval):    0.0108914
  gflops (eval):  397.701
  gflops (total): 348.597
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153419,0.0108914,397.701,348.597

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584591
  gflops (total): 74.0949
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0949

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573072
  gflops (eval):  75.5842
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573072,75.5842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4534
  maximum absolute entry in einsum_ir solution: 33.4534
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014753
  time (eval):    0.0108791
  gflops (eval):  398.152
  gflops (total): 350.607
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014753,0.0108791,398.152,350.607

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578593
  gflops (total): 74.8629
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573629
  gflops (eval):  75.5109
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573629,75.5109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3004
  maximum absolute entry in einsum_ir solution: 32.3004
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153575
  time (eval):    0.0109107
  gflops (eval):  396.997
  gflops (total): 348.013
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153575,0.0109107,396.997,348.013

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577859
  gflops (total): 74.9581
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573109
  gflops (eval):  75.5793
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573109,75.5793,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.213
  maximum absolute entry in einsum_ir solution: 35.213
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014601
  time (eval):    0.0109013
  gflops (eval):  397.341
  gflops (total): 350.408
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014601,0.0109013,397.341,350.408

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0588881
  gflops (total): 73.5551
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.5551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572056
  gflops (eval):  75.7185
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572056,75.7185,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2795
  maximum absolute entry in einsum_ir solution: 35.2795
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148513
  time (eval):    0.0108821
  gflops (eval):  398.041
  gflops (total): 350.242
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148513,0.0108821,398.041,350.242

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576253
  gflops (total): 75.167
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571546
  gflops (eval):  75.7861
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571546,75.7861,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.592
  maximum absolute entry in einsum_ir solution: 33.592
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146433
  time (eval):    0.0109048
  gflops (eval):  397.212
  gflops (total): 350.188
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146433,0.0109048,397.212,350.188

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0589273
  gflops (total): 73.5062
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.5062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574871
  gflops (eval):  75.3476
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574871,75.3476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2865
  maximum absolute entry in einsum_ir solution: 37.2865
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152981
  time (eval):    0.0108823
  gflops (eval):  398.035
  gflops (total): 348.977
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152981,0.0108823,398.035,348.977

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585549
  gflops (total): 73.9736
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572075
  gflops (eval):  75.716
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572075,75.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0238
  maximum absolute entry in einsum_ir solution: 34.0238
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147442
  time (eval):    0.0108968
  gflops (eval):  397.502
  gflops (total): 350.128
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147442,0.0108968,397.502,350.128

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0571698
  gflops (total): 75.7659
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.7659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0559245
  gflops (eval):  77.453
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0559245,77.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9292
  maximum absolute entry in einsum_ir solution: 33.9292
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147318
  time (eval):    0.0109024
  gflops (eval):  397.3
  gflops (total): 350.006
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147318,0.0109024,397.3,350.006

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0587123
  gflops (total): 73.7753
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.7753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577862
  gflops (eval):  74.9577
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577862,74.9577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4082
  maximum absolute entry in einsum_ir solution: 33.4082
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149922
  time (eval):    0.0108978
  gflops (eval):  397.468
  gflops (total): 349.4
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149922,0.0108978,397.468,349.4

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058538
  gflops (total): 73.995
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572379
  gflops (eval):  75.6758
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572379,75.6758,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2246
  maximum absolute entry in einsum_ir solution: 36.2246
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145453
  time (eval):    0.0109229
  gflops (eval):  396.553
  gflops (total): 349.952
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145453,0.0109229,396.553,349.952

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0588933
  gflops (total): 73.5485
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.5485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575819
  gflops (eval):  75.2236
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575819,75.2236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.2707
  maximum absolute entry in einsum_ir solution: 32.2707
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00155288
  time (eval):    0.0108883
  gflops (eval):  397.816
  gflops (total): 348.161
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00155288,0.0108883,397.816,348.161

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577913
  gflops (total): 74.951
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574938
  gflops (eval):  75.3389
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574938,75.3389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1501
  maximum absolute entry in einsum_ir solution: 39.1501
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00171588
  time (eval):    0.0108906
  gflops (eval):  397.731
  gflops (total): 343.595
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00171588,0.0108906,397.731,343.595

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579986
  gflops (total): 74.6831
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574168
  gflops (eval):  75.44
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574168,75.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9775
  maximum absolute entry in einsum_ir solution: 34.9775
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146662
  time (eval):    0.0108947
  gflops (eval):  397.58
  gflops (total): 350.409
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146662,0.0108947,397.58,350.409

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583131
  gflops (total): 74.2804
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576807
  gflops (eval):  75.0947
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576807,75.0947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1847
  maximum absolute entry in einsum_ir solution: 35.1847
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147053
  time (eval):    0.0109025
  gflops (eval):  397.298
  gflops (total): 350.079
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147053,0.0109025,397.298,350.079

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579768
  gflops (total): 74.7113
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574064
  gflops (eval):  75.4536
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574064,75.4536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8465
  maximum absolute entry in einsum_ir solution: 35.8465
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147762
  time (eval):    0.0109224
  gflops (eval):  396.571
  gflops (total): 349.315
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147762,0.0109224,396.571,349.315

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575843
  gflops (total): 75.2205
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575131
  gflops (eval):  75.3137
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575131,75.3137,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.7254
  maximum absolute entry in einsum_ir solution: 31.7254
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00163433
  time (eval):    0.0108979
  gflops (eval):  397.464
  gflops (total): 345.63
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00163433,0.0108979,397.464,345.63

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584115
  gflops (total): 74.1553
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575336
  gflops (eval):  75.2868
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575336,75.2868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6164
  maximum absolute entry in einsum_ir solution: 33.6164
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147174
  time (eval):    0.0109035
  gflops (eval):  397.261
  gflops (total): 350.016
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147174,0.0109035,397.261,350.016

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579771
  gflops (total): 74.7109
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575946
  gflops (eval):  75.207
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575946,75.207,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4798
  maximum absolute entry in einsum_ir solution: 35.4798
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157417
  time (eval):    0.0109125
  gflops (eval):  396.932
  gflops (total): 346.892
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157417,0.0109125,396.932,346.892

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580874
  gflops (total): 74.5691
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575762
  gflops (eval):  75.2311
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575762,75.2311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8126
  maximum absolute entry in einsum_ir solution: 34.8126
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146432
  time (eval):    0.0109023
  gflops (eval):  397.303
  gflops (total): 350.259
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146432,0.0109023,397.303,350.259

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577742
  gflops (total): 74.9732
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578644
  gflops (eval):  74.8564
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578644,74.8564,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7193
  maximum absolute entry in einsum_ir solution: 33.7193
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145249
  time (eval):    0.0109023
  gflops (eval):  397.303
  gflops (total): 350.594
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145249,0.0109023,397.303,350.594

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576959
  gflops (total): 75.0751
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572641
  gflops (eval):  75.6411
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572641,75.6411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3651
  maximum absolute entry in einsum_ir solution: 35.3651
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152657
  time (eval):    0.0109022
  gflops (eval):  397.308
  gflops (total): 348.508
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152657,0.0109022,397.308,348.508

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576594
  gflops (total): 75.1225
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573147
  gflops (eval):  75.5743
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573147,75.5743,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2627
  maximum absolute entry in einsum_ir solution: 35.2627
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151962
  time (eval):    0.0109029
  gflops (eval):  397.28
  gflops (total): 348.682
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151962,0.0109029,397.28,348.682

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0572583
  gflops (total): 75.6488
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.6488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0567522
  gflops (eval):  76.3234
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0567522,76.3234,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4479
  maximum absolute entry in einsum_ir solution: 33.4479
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147491
  time (eval):    0.0109025
  gflops (eval):  397.295
  gflops (total): 349.953
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147491,0.0109025,397.295,349.953

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574543
  gflops (total): 75.3907
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0569845
  gflops (eval):  76.0122
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0569845,76.0122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6551
  maximum absolute entry in einsum_ir solution: 33.6551
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146266
  time (eval):    0.0109129
  gflops (eval):  396.919
  gflops (total): 350.007
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146266,0.0109129,396.919,350.007

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581817
  gflops (total): 74.4481
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572785
  gflops (eval):  75.6221
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572785,75.6221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2757
  maximum absolute entry in einsum_ir solution: 34.2757
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014658
  time (eval):    0.0109095
  gflops (eval):  397.042
  gflops (total): 350.014
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014658,0.0109095,397.042,350.014

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578794
  gflops (total): 74.837
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573478
  gflops (eval):  75.5307
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573478,75.5307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8807
  maximum absolute entry in einsum_ir solution: 36.8807
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014767
  time (eval):    0.0109309
  gflops (eval):  396.265
  gflops (total): 349.103
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014767,0.0109309,396.265,349.103

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583538
  gflops (total): 74.2286
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574872
  gflops (eval):  75.3476
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574872,75.3476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6306
  maximum absolute entry in einsum_ir solution: 34.6306
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014741
  time (eval):    0.0108995
  gflops (eval):  397.407
  gflops (total): 350.063
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014741,0.0108995,397.407,350.063

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582404
  gflops (total): 74.3732
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573124
  gflops (eval):  75.5774
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573124,75.5774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4791
  maximum absolute entry in einsum_ir solution: 35.4791
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150866
  time (eval):    0.0109144
  gflops (eval):  396.864
  gflops (total): 348.669
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150866,0.0109144,396.864,348.669

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0588174
  gflops (total): 73.6435
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.6435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578863
  gflops (eval):  74.828
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578863,74.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9554
  maximum absolute entry in einsum_ir solution: 34.9554
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152941
  time (eval):    0.0108856
  gflops (eval):  397.911
  gflops (total): 348.893
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152941,0.0108856,397.911,348.893

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579245
  gflops (total): 74.7787
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575621
  gflops (eval):  75.2495
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575621,75.2495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6606
  maximum absolute entry in einsum_ir solution: 39.6606
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147976
  time (eval):    0.0108962
  gflops (eval):  397.526
  gflops (total): 349.995
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147976,0.0108962,397.526,349.995

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581286
  gflops (total): 74.5162
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577175
  gflops (eval):  75.0469
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577175,75.0469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1035
  maximum absolute entry in einsum_ir solution: 34.1035
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149979
  time (eval):    0.0113773
  gflops (eval):  380.715
  gflops (total): 336.373
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149979,0.0113773,380.715,336.373

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578589
  gflops (total): 74.8635
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0565613
  gflops (eval):  76.5809
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0565613,76.5809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6213
  maximum absolute entry in einsum_ir solution: 32.6213
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00161287
  time (eval):    0.0114206
  gflops (eval):  379.271
  gflops (total): 332.337
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00161287,0.0114206,379.271,332.337

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576695
  gflops (total): 75.1094
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0568593
  gflops (eval):  76.1796
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0568593,76.1796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8612
  maximum absolute entry in einsum_ir solution: 35.8612
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149809
  time (eval):    0.0114431
  gflops (eval):  378.525
  gflops (total): 334.707
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149809,0.0114431,378.525,334.707

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579243
  gflops (total): 74.7789
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573709
  gflops (eval):  75.5003
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573709,75.5003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4231
  maximum absolute entry in einsum_ir solution: 35.4231
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147351
  time (eval):    0.0114965
  gflops (eval):  376.769
  gflops (total): 333.965
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147351,0.0114965,376.769,333.965

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576191
  gflops (total): 75.175
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576112
  gflops (eval):  75.1854
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576112,75.1854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4364
  maximum absolute entry in einsum_ir solution: 36.4364
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147857
  time (eval):    0.0114267
  gflops (eval):  379.069
  gflops (total): 335.639
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147857,0.0114267,379.069,335.639

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577966
  gflops (total): 74.9442
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574234
  gflops (eval):  75.4313
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574234,75.4313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4667
  maximum absolute entry in einsum_ir solution: 36.4667
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0017283
  time (eval):    0.0113855
  gflops (eval):  380.441
  gflops (total): 330.301
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0017283,0.0113855,380.441,330.301

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581977
  gflops (total): 74.4277
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574733
  gflops (eval):  75.3657
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574733,75.3657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5486
  maximum absolute entry in einsum_ir solution: 34.5486
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00158585
  time (eval):    0.0114361
  gflops (eval):  378.76
  gflops (total): 332.633
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00158585,0.0114361,378.76,332.633

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580316
  gflops (total): 74.6407
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571879
  gflops (eval):  75.7419
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571879,75.7419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1588
  maximum absolute entry in einsum_ir solution: 34.1588
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147002
  time (eval):    0.0114719
  gflops (eval):  377.577
  gflops (total): 334.69
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147002,0.0114719,377.577,334.69

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581482
  gflops (total): 74.491
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0579044
  gflops (eval):  74.8047
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0579044,74.8047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7362
  maximum absolute entry in einsum_ir solution: 33.7362
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147927
  time (eval):    0.0113365
  gflops (eval):  382.088
  gflops (total): 337.985
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147927,0.0113365,382.088,337.985

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584546
  gflops (total): 74.1006
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.05743
  gflops (eval):  75.4226
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.05743,75.4226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9818
  maximum absolute entry in einsum_ir solution: 37.9818
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00159421
  time (eval):    0.0114945
  gflops (eval):  376.835
  gflops (total): 330.936
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00159421,0.0114945,376.835,330.936

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058907
  gflops (total): 73.5315
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.5315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571915
  gflops (eval):  75.7371
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571915,75.7371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6052
  maximum absolute entry in einsum_ir solution: 33.6052
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00163264
  time (eval):    0.0114556
  gflops (eval):  378.114
  gflops (total): 330.948
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00163264,0.0114556,378.114,330.948

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0573914
  gflops (total): 75.4733
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.4733

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573724
  gflops (eval):  75.4983
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573724,75.4983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7366
  maximum absolute entry in einsum_ir solution: 33.7366
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150224
  time (eval):    0.0114865
  gflops (eval):  377.096
  gflops (total): 333.483
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150224,0.0114865,377.096,333.483

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0571756
  gflops (total): 75.7581
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.7581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0567283
  gflops (eval):  76.3555
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0567283,76.3555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9736
  maximum absolute entry in einsum_ir solution: 35.9736
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001538
  time (eval):    0.0113934
  gflops (eval):  380.178
  gflops (total): 334.961
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001538,0.0113934,380.178,334.961

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576172
  gflops (total): 75.1776
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0565065
  gflops (eval):  76.6552
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0565065,76.6552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0323
  maximum absolute entry in einsum_ir solution: 35.0323
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154514
  time (eval):    0.0114191
  gflops (eval):  379.321
  gflops (total): 334.112
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154514,0.0114191,379.321,334.112

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574655
  gflops (total): 75.376
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.376

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576843
  gflops (eval):  75.0901
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576843,75.0901,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8452
  maximum absolute entry in einsum_ir solution: 34.8452
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157629
  time (eval):    0.0113938
  gflops (eval):  380.166
  gflops (total): 333.963
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157629,0.0113938,380.166,333.963

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582833
  gflops (total): 74.3184
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576265
  gflops (eval):  75.1654
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576265,75.1654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1224
  maximum absolute entry in einsum_ir solution: 34.1224
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146152
  time (eval):    0.0113728
  gflops (eval):  380.868
  gflops (total): 337.496
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146152,0.0113728,380.868,337.496

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058096
  gflops (total): 74.5579
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575705
  gflops (eval):  75.2385
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575705,75.2385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7019
  maximum absolute entry in einsum_ir solution: 34.7019
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146362
  time (eval):    0.0114232
  gflops (eval):  379.187
  gflops (total): 336.121
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146362,0.0114232,379.187,336.121

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.05748
  gflops (total): 75.357
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0566967
  gflops (eval):  76.3981
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0566967,76.3981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.919
  maximum absolute entry in einsum_ir solution: 36.919
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146237
  time (eval):    0.0115626
  gflops (eval):  374.613
  gflops (total): 332.554
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146237,0.0115626,374.613,332.554

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0589268
  gflops (total): 73.5068
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.5068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571907
  gflops (eval):  75.7382
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571907,75.7382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0005
  maximum absolute entry in einsum_ir solution: 34.0005
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146662
  time (eval):    0.0113556
  gflops (eval):  381.442
  gflops (total): 337.812
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146662,0.0113556,381.442,337.812

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576104
  gflops (total): 75.1865
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573998
  gflops (eval):  75.4623
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573998,75.4623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7774
  maximum absolute entry in einsum_ir solution: 35.7774
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014678
  time (eval):    0.0114056
  gflops (eval):  379.77
  gflops (total): 336.47
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014678,0.0114056,379.77,336.47

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579549
  gflops (total): 74.7396
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573069
  gflops (eval):  75.5846
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573069,75.5846,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4775
  maximum absolute entry in einsum_ir solution: 33.4775
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151509
  time (eval):    0.0114673
  gflops (eval):  377.727
  gflops (total): 333.645
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151509,0.0114673,377.727,333.645

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578581
  gflops (total): 74.8646
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575376
  gflops (eval):  75.2815
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575376,75.2815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0553
  maximum absolute entry in einsum_ir solution: 36.0553
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144924
  time (eval):    0.0114189
  gflops (eval):  379.33
  gflops (total): 336.609
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144924,0.0114189,379.33,336.609

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576697
  gflops (total): 75.1091
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571429
  gflops (eval):  75.8016
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571429,75.8016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.945
  maximum absolute entry in einsum_ir solution: 33.945
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147128
  time (eval):    0.0114317
  gflops (eval):  378.903
  gflops (total): 335.698
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147128,0.0114317,378.903,335.698

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584768
  gflops (total): 74.0725
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575204
  gflops (eval):  75.3041
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575204,75.3041,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5616
  maximum absolute entry in einsum_ir solution: 33.5616
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148639
  time (eval):    0.0114499
  gflops (eval):  378.302
  gflops (total): 334.835
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148639,0.0114499,378.302,334.835

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584756
  gflops (total): 74.0739
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573876
  gflops (eval):  75.4783
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573876,75.4783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9045
  maximum absolute entry in einsum_ir solution: 34.9045
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146816
  time (eval):    0.0114845
  gflops (eval):  377.164
  gflops (total): 334.413
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146816,0.0114845,377.164,334.413

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585563
  gflops (total): 73.9719
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573885
  gflops (eval):  75.4771
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573885,75.4771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0025
  maximum absolute entry in einsum_ir solution: 34.0025
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147276
  time (eval):    0.0113982
  gflops (eval):  380.017
  gflops (total): 336.534
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147276,0.0113982,380.017,336.534

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058036
  gflops (total): 74.6351
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576952
  gflops (eval):  75.0759
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576952,75.0759,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0201
  maximum absolute entry in einsum_ir solution: 36.0201
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147729
  time (eval):    0.0114025
  gflops (eval):  379.873
  gflops (total): 336.303
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147729,0.0114025,379.873,336.303

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058597
  gflops (total): 73.9206
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571868
  gflops (eval):  75.7434
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571868,75.7434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3592
  maximum absolute entry in einsum_ir solution: 37.3592
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150352
  time (eval):    0.0114311
  gflops (eval):  378.925
  gflops (total): 334.878
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150352,0.0114311,378.925,334.878

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576298
  gflops (total): 75.1611
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1611

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570742
  gflops (eval):  75.8928
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570742,75.8928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8434
  maximum absolute entry in einsum_ir solution: 33.8434
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146521
  time (eval):    0.0114187
  gflops (eval):  379.335
  gflops (total): 336.195
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146521,0.0114187,379.335,336.195

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577671
  gflops (total): 74.9825
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575591
  gflops (eval):  75.2535
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575591,75.2535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1102
  maximum absolute entry in einsum_ir solution: 36.1102
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147759
  time (eval):    0.0114867
  gflops (eval):  377.09
  gflops (total): 334.112
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147759,0.0114867,377.09,334.112

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0587234
  gflops (total): 73.7614
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.7614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574931
  gflops (eval):  75.3398
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574931,75.3398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7141
  maximum absolute entry in einsum_ir solution: 33.7141
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146249
  time (eval):    0.0114668
  gflops (eval):  377.746
  gflops (total): 335.017
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146249,0.0114668,377.746,335.017

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582952
  gflops (total): 74.3033
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0582137
  gflops (eval):  74.4073
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0582137,74.4073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6849
  maximum absolute entry in einsum_ir solution: 32.6849
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145727
  time (eval):    0.0115035
  gflops (eval):  376.539
  gflops (total): 334.202
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145727,0.0115035,376.539,334.202

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580902
  gflops (total): 74.5655
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576325
  gflops (eval):  75.1576
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576325,75.1576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.718
  maximum absolute entry in einsum_ir solution: 33.718
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146198
  time (eval):    0.0114537
  gflops (eval):  378.176
  gflops (total): 335.368
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146198,0.0114537,378.176,335.368

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578662
  gflops (total): 74.854
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578554
  gflops (eval):  74.868
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578554,74.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.041
  maximum absolute entry in einsum_ir solution: 35.041
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147747
  time (eval):    0.0113863
  gflops (eval):  380.415
  gflops (total): 336.723
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147747,0.0113863,380.415,336.723

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580669
  gflops (total): 74.5953
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573131
  gflops (eval):  75.5765
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573131,75.5765,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.5893
  maximum absolute entry in einsum_ir solution: 32.5893
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145247
  time (eval):    0.0114049
  gflops (eval):  379.795
  gflops (total): 336.891
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145247,0.0114049,379.795,336.891

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575502
  gflops (total): 75.2651
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0564146
  gflops (eval):  76.7802
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0564146,76.7802,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7619
  maximum absolute entry in einsum_ir solution: 35.7619
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145887
  time (eval):    0.0114832
  gflops (eval):  377.205
  gflops (total): 334.686
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145887,0.0114832,377.205,334.686

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576529
  gflops (total): 75.131
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0569885
  gflops (eval):  76.0069
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0569885,76.0069,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0322
  maximum absolute entry in einsum_ir solution: 35.0322
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145972
  time (eval):    0.0114432
  gflops (eval):  378.524
  gflops (total): 335.701
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145972,0.0114432,378.524,335.701

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578621
  gflops (total): 74.8593
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573875
  gflops (eval):  75.4785
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573875,75.4785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8623
  maximum absolute entry in einsum_ir solution: 33.8623
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146666
  time (eval):    0.0114497
  gflops (eval):  378.31
  gflops (total): 335.352
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146666,0.0114497,378.31,335.352

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576229
  gflops (total): 75.1701
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575639
  gflops (eval):  75.2471
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575639,75.2471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0976
  maximum absolute entry in einsum_ir solution: 35.0976
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146868
  time (eval):    0.0113894
  gflops (eval):  380.312
  gflops (total): 336.872
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146868,0.0113894,380.312,336.872

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582546
  gflops (total): 74.3551
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575669
  gflops (eval):  75.2432
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575669,75.2432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4132
  maximum absolute entry in einsum_ir solution: 34.4132
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145516
  time (eval):    0.0114475
  gflops (eval):  378.381
  gflops (total): 335.707
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145516,0.0114475,378.381,335.707

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582396
  gflops (total): 74.3741
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0579329
  gflops (eval):  74.7679
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0579329,74.7679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4315
  maximum absolute entry in einsum_ir solution: 35.4315
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147305
  time (eval):    0.0114512
  gflops (eval):  378.26
  gflops (total): 335.147
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147305,0.0114512,378.26,335.147

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057788
  gflops (total): 74.9554
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573231
  gflops (eval):  75.5633
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573231,75.5633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5089
  maximum absolute entry in einsum_ir solution: 34.5089
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150136
  time (eval):    0.0114477
  gflops (eval):  378.375
  gflops (total): 334.505
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150136,0.0114477,378.375,334.505

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577621
  gflops (total): 74.989
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057284
  gflops (eval):  75.6148
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057284,75.6148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0622
  maximum absolute entry in einsum_ir solution: 33.0622
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146895
  time (eval):    0.0114431
  gflops (eval):  378.527
  gflops (total): 335.464
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146895,0.0114431,378.527,335.464

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0572377
  gflops (total): 75.6759
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.6759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576098
  gflops (eval):  75.1873
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576098,75.1873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.708
  maximum absolute entry in einsum_ir solution: 33.708
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147091
  time (eval):    0.011408
  gflops (eval):  379.692
  gflops (total): 336.327
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147091,0.011408,379.692,336.327

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574307
  gflops (total): 75.4216
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.4216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057234
  gflops (eval):  75.6808
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057234,75.6808,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1652
  maximum absolute entry in einsum_ir solution: 35.1652
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001485
  time (eval):    0.0115283
  gflops (eval):  375.729
  gflops (total): 332.853
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001485,0.0115283,375.729,332.853

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0588114
  gflops (total): 73.651
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0567062
  gflops (eval):  76.3852
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0567062,76.3852,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3261
  maximum absolute entry in einsum_ir solution: 33.3261
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151546
  time (eval):    0.0115353
  gflops (eval):  375.5
  gflops (total): 331.897
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151546,0.0115353,375.5,331.897

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576047
  gflops (total): 75.1939
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574847
  gflops (eval):  75.3508
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574847,75.3508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0797
  maximum absolute entry in einsum_ir solution: 35.0797
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146757
  time (eval):    0.0114248
  gflops (eval):  379.133
  gflops (total): 335.976
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146757,0.0114248,379.133,335.976

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058369
  gflops (total): 74.2093
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571056
  gflops (eval):  75.851
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571056,75.851,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8891
  maximum absolute entry in einsum_ir solution: 36.8891
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146494
  time (eval):    0.0114634
  gflops (eval):  377.855
  gflops (total): 335.04
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146494,0.0114634,377.855,335.04

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577753
  gflops (total): 74.9718
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057414
  gflops (eval):  75.4436
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057414,75.4436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1415
  maximum absolute entry in einsum_ir solution: 33.1415
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146105
  time (eval):    0.0114529
  gflops (eval):  378.201
  gflops (total): 335.413
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146105,0.0114529,378.201,335.413

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581683
  gflops (total): 74.4653
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572012
  gflops (eval):  75.7243
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572012,75.7243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6173
  maximum absolute entry in einsum_ir solution: 33.6173
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147197
  time (eval):    0.011392
  gflops (eval):  380.225
  gflops (total): 336.718
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147197,0.011392,380.225,336.718

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577241
  gflops (total): 75.0383
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057614
  gflops (eval):  75.1817
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057614,75.1817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9062
  maximum absolute entry in einsum_ir solution: 32.9062
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149635
  time (eval):    0.0114511
  gflops (eval):  378.261
  gflops (total): 334.546
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149635,0.0114511,378.261,334.546

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581073
  gflops (total): 74.5434
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575499
  gflops (eval):  75.2654
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575499,75.2654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.879
  maximum absolute entry in einsum_ir solution: 35.879
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00159517
  time (eval):    0.0114262
  gflops (eval):  379.085
  gflops (total): 332.646
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00159517,0.0114262,379.085,332.646

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576666
  gflops (total): 75.1132
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573803
  gflops (eval):  75.488
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573803,75.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7046
  maximum absolute entry in einsum_ir solution: 33.7046
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014675
  time (eval):    0.0114105
  gflops (eval):  379.607
  gflops (total): 336.349
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014675,0.0114105,379.607,336.349

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581661
  gflops (total): 74.4681
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572593
  gflops (eval):  75.6475
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572593,75.6475,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.017
  maximum absolute entry in einsum_ir solution: 36.017
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00161678
  time (eval):    0.0113925
  gflops (eval):  380.207
  gflops (total): 332.955
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00161678,0.0113925,380.207,332.955

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585468
  gflops (total): 73.9839
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574127
  gflops (eval):  75.4453
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574127,75.4453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1929
  maximum absolute entry in einsum_ir solution: 33.1929
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0015727
  time (eval):    0.0115074
  gflops (eval):  376.411
  gflops (total): 331.153
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0015727,0.0115074,376.411,331.153

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576076
  gflops (total): 75.1901
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574934
  gflops (eval):  75.3395
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574934,75.3395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6265
  maximum absolute entry in einsum_ir solution: 36.6265
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146427
  time (eval):    0.0113725
  gflops (eval):  380.876
  gflops (total): 337.43
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146427,0.0113725,380.876,337.43

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0587363
  gflops (total): 73.7453
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.7453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572603
  gflops (eval):  75.6462
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572603,75.6462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1541
  maximum absolute entry in einsum_ir solution: 36.1541
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149043
  time (eval):    0.0114814
  gflops (eval):  377.264
  gflops (total): 333.917
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149043,0.0114814,377.264,333.917

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580183
  gflops (total): 74.6578
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578752
  gflops (eval):  74.8424
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578752,74.8424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8398
  maximum absolute entry in einsum_ir solution: 34.8398
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148098
  time (eval):    0.0114803
  gflops (eval):  377.3
  gflops (total): 334.189
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148098,0.0114803,377.3,334.189

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057711
  gflops (total): 75.0553
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575655
  gflops (eval):  75.2451
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575655,75.2451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6948
  maximum absolute entry in einsum_ir solution: 34.6948
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00181142
  time (eval):    0.0114669
  gflops (eval):  377.741
  gflops (total): 326.21
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00181142,0.0114669,377.741,326.21

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578366
  gflops (total): 74.8924
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057715
  gflops (eval):  75.0502
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057715,75.0502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1948
  maximum absolute entry in einsum_ir solution: 34.1948
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148107
  time (eval):    0.0114521
  gflops (eval):  378.23
  gflops (total): 334.916
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148107,0.0114521,378.23,334.916

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577552
  gflops (total): 74.998
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573468
  gflops (eval):  75.532
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573468,75.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5665
  maximum absolute entry in einsum_ir solution: 34.5665
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147082
  time (eval):    0.0114469
  gflops (eval):  378.4
  gflops (total): 335.315
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147082,0.0114469,378.4,335.315

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057544
  gflops (total): 75.2732
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575843
  gflops (eval):  75.2206
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575843,75.2206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8475
  maximum absolute entry in einsum_ir solution: 36.8475
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146448
  time (eval):    0.0115046
  gflops (eval):  376.504
  gflops (total): 333.989
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146448,0.0115046,376.504,333.989

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577812
  gflops (total): 74.9642
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0569979
  gflops (eval):  75.9943
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0569979,75.9943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3914
  maximum absolute entry in einsum_ir solution: 36.3914
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145813
  time (eval):    0.0114817
  gflops (eval):  377.255
  gflops (total): 334.744
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145813,0.0114817,377.255,334.744

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577968
  gflops (total): 74.944
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572559
  gflops (eval):  75.6519
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572559,75.6519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1833
  maximum absolute entry in einsum_ir solution: 34.1833
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014982
  time (eval):    0.0149629
  gflops (eval):  289.483
  gflops (total): 263.136
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014982,0.0149629,289.483,263.136

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576065
  gflops (total): 75.1915
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057226
  gflops (eval):  75.6915
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057226,75.6915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2335
  maximum absolute entry in einsum_ir solution: 34.2335
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014611
  time (eval):    0.0113918
  gflops (eval):  380.23
  gflops (total): 337.006
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014611,0.0113918,380.23,337.006

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0587522
  gflops (total): 73.7252
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.7252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574446
  gflops (eval):  75.4034
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574446,75.4034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.471
  maximum absolute entry in einsum_ir solution: 36.471
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001465
  time (eval):    0.0115507
  gflops (eval):  375.001
  gflops (total): 332.793
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001465,0.0115507,375.001,332.793

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058088
  gflops (total): 74.5682
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5682

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573235
  gflops (eval):  75.5628
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573235,75.5628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7345
  maximum absolute entry in einsum_ir solution: 35.7345
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146591
  time (eval):    0.0114856
  gflops (eval):  377.127
  gflops (total): 334.442
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146591,0.0114856,377.127,334.442

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576264
  gflops (total): 75.1655
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570365
  gflops (eval):  75.9429
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570365,75.9429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4692
  maximum absolute entry in einsum_ir solution: 34.4692
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0015398
  time (eval):    0.0114541
  gflops (eval):  378.164
  gflops (total): 333.351
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0015398,0.0114541,378.164,333.351

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057892
  gflops (total): 74.8207
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574659
  gflops (eval):  75.3755
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574659,75.3755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4751
  maximum absolute entry in einsum_ir solution: 38.4751
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148134
  time (eval):    0.0114236
  gflops (eval):  379.173
  gflops (total): 335.649
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148134,0.0114236,379.173,335.649

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574717
  gflops (total): 75.3679
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575024
  gflops (eval):  75.3276
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575024,75.3276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8951
  maximum absolute entry in einsum_ir solution: 35.8951
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157472
  time (eval):    0.0114909
  gflops (eval):  376.953
  gflops (total): 331.521
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157472,0.0114909,376.953,331.521

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057829
  gflops (total): 74.9022
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572855
  gflops (eval):  75.6128
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572855,75.6128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6044
  maximum absolute entry in einsum_ir solution: 35.6044
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147712
  time (eval):    0.0113948
  gflops (eval):  380.133
  gflops (total): 336.51
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147712,0.0113948,380.133,336.51

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574936
  gflops (total): 75.3392
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574128
  gflops (eval):  75.4452
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574128,75.4452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1769
  maximum absolute entry in einsum_ir solution: 35.1769
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146847
  time (eval):    0.0113811
  gflops (eval):  380.588
  gflops (total): 337.094
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146847,0.0113811,380.588,337.094

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0571438
  gflops (total): 75.8003
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.8003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576643
  gflops (eval):  75.1161
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576643,75.1161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1638
  maximum absolute entry in einsum_ir solution: 37.1638
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146514
  time (eval):    0.0114279
  gflops (eval):  379.029
  gflops (total): 335.957
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146514,0.0114279,379.029,335.957

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058656
  gflops (total): 73.8462
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.8462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057569
  gflops (eval):  75.2405
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057569,75.2405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5644
  maximum absolute entry in einsum_ir solution: 33.5644
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014653
  time (eval):    0.0114939
  gflops (eval):  376.854
  gflops (total): 334.243
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014653,0.0114939,376.854,334.243

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578556
  gflops (total): 74.8678
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576989
  gflops (eval):  75.0711
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576989,75.0711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4022
  maximum absolute entry in einsum_ir solution: 33.4022
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145605
  time (eval):    0.0114903
  gflops (eval):  376.972
  gflops (total): 334.575
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145605,0.0114903,376.972,334.575

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577798
  gflops (total): 74.966
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574474
  gflops (eval):  75.3998
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574474,75.3998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.732
  maximum absolute entry in einsum_ir solution: 32.732
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146642
  time (eval):    0.011519
  gflops (eval):  376.031
  gflops (total): 333.567
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146642,0.011519,376.031,333.567

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0568594
  gflops (total): 76.1795
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.1795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573296
  gflops (eval):  75.5547
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573296,75.5547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1013
  maximum absolute entry in einsum_ir solution: 33.1013
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145784
  time (eval):    0.0114769
  gflops (eval):  377.413
  gflops (total): 334.876
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145784,0.0114769,377.413,334.876

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581595
  gflops (total): 74.4765
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574027
  gflops (eval):  75.4585
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574027,75.4585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3154
  maximum absolute entry in einsum_ir solution: 35.3154
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147693
  time (eval):    0.0114884
  gflops (eval):  377.033
  gflops (total): 334.084
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147693,0.0114884,377.033,334.084

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577857
  gflops (total): 74.9584
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577914
  gflops (eval):  74.951
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577914,74.951,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8413
  maximum absolute entry in einsum_ir solution: 33.8413
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00158954
  time (eval):    0.0115237
  gflops (eval):  375.88
  gflops (total): 330.317
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00158954,0.0115237,375.88,330.317

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581658
  gflops (total): 74.4685
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573726
  gflops (eval):  75.4981
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573726,75.4981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6397
  maximum absolute entry in einsum_ir solution: 33.6397
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147691
  time (eval):    0.0114435
  gflops (eval):  378.515
  gflops (total): 335.247
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147691,0.0114435,378.515,335.247

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582422
  gflops (total): 74.3709
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570757
  gflops (eval):  75.8908
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570757,75.8908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1271
  maximum absolute entry in einsum_ir solution: 33.1271
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146749
  time (eval):    0.0113609
  gflops (eval):  381.265
  gflops (total): 337.651
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146749,0.0113609,381.265,337.651

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579227
  gflops (total): 74.7811
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573453
  gflops (eval):  75.534
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573453,75.534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3989
  maximum absolute entry in einsum_ir solution: 35.3989
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146954
  time (eval):    0.0114599
  gflops (eval):  377.973
  gflops (total): 335.013
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146954,0.0114599,377.973,335.013

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581859
  gflops (total): 74.4427
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572099
  gflops (eval):  75.7128
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572099,75.7128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6516
  maximum absolute entry in einsum_ir solution: 34.6516
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145932
  time (eval):    0.0113873
  gflops (eval):  380.382
  gflops (total): 337.173
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145932,0.0113873,380.382,337.173

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576341
  gflops (total): 75.1556
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577071
  gflops (eval):  75.0605
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577071,75.0605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6208
  maximum absolute entry in einsum_ir solution: 34.6208
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146796
  time (eval):    0.011441
  gflops (eval):  378.595
  gflops (total): 335.542
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146796,0.011441,378.595,335.542

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0573367
  gflops (total): 75.5454
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.5454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573936
  gflops (eval):  75.4704
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573936,75.4704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5501
  maximum absolute entry in einsum_ir solution: 35.5501
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154379
  time (eval):    0.0113632
  gflops (eval):  381.188
  gflops (total): 335.594
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154379,0.0113632,381.188,335.594

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583991
  gflops (total): 74.1709
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574471
  gflops (eval):  75.4002
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574471,75.4002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5277
  maximum absolute entry in einsum_ir solution: 35.5277
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145418
  time (eval):    0.011451
  gflops (eval):  378.267
  gflops (total): 335.643
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145418,0.011451,378.267,335.643

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577445
  gflops (total): 75.0118
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573319
  gflops (eval):  75.5517
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573319,75.5517,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8889
  maximum absolute entry in einsum_ir solution: 32.8889
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147466
  time (eval):    0.0114562
  gflops (eval):  378.094
  gflops (total): 334.975
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147466,0.0114562,378.094,334.975

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580602
  gflops (total): 74.604
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574995
  gflops (eval):  75.3314
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574995,75.3314,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7331
  maximum absolute entry in einsum_ir solution: 33.7331
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153794
  time (eval):    0.0113669
  gflops (eval):  381.065
  gflops (total): 335.652
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153794,0.0113669,381.065,335.652

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581015
  gflops (total): 74.5509
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576094
  gflops (eval):  75.1878
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576094,75.1878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4563
  maximum absolute entry in einsum_ir solution: 34.4563
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146492
  time (eval):    0.0114425
  gflops (eval):  378.545
  gflops (total): 335.583
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146492,0.0114425,378.545,335.583

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574801
  gflops (total): 75.3568
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.05694
  gflops (eval):  76.0717
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.05694,76.0717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8026
  maximum absolute entry in einsum_ir solution: 33.8026
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147708
  time (eval):    0.011413
  gflops (eval):  379.525
  gflops (total): 336.035
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147708,0.011413,379.525,336.035

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582824
  gflops (total): 74.3196
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057364
  gflops (eval):  75.5094
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057364,75.5094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.9701
  maximum absolute entry in einsum_ir solution: 31.9701
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00169304
  time (eval):    0.0114024
  gflops (eval):  379.878
  gflops (total): 330.765
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00169304,0.0114024,379.878,330.765

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582869
  gflops (total): 74.3138
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574358
  gflops (eval):  75.415
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574358,75.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6372
  maximum absolute entry in einsum_ir solution: 36.6372
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145818
  time (eval):    0.0113994
  gflops (eval):  379.978
  gflops (total): 336.885
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145818,0.0113994,379.978,336.885

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578093
  gflops (total): 74.9278
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574217
  gflops (eval):  75.4335
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574217,75.4335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7077
  maximum absolute entry in einsum_ir solution: 35.7077
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146808
  time (eval):    0.0114583
  gflops (eval):  378.024
  gflops (total): 335.091
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146808,0.0114583,378.024,335.091

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574876
  gflops (total): 75.347
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570445
  gflops (eval):  75.9323
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570445,75.9323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9113
  maximum absolute entry in einsum_ir solution: 32.9113
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154607
  time (eval):    0.0114468
  gflops (eval):  378.403
  gflops (total): 333.376
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154607,0.0114468,378.403,333.376

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582911
  gflops (total): 74.3084
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574795
  gflops (eval):  75.3576
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574795,75.3576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6045
  maximum absolute entry in einsum_ir solution: 34.6045
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148703
  time (eval):    0.0113938
  gflops (eval):  380.165
  gflops (total): 336.277
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148703,0.0113938,380.165,336.277

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579207
  gflops (total): 74.7837
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574121
  gflops (eval):  75.4462
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574121,75.4462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2069
  maximum absolute entry in einsum_ir solution: 33.2069
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014691
  time (eval):    0.0115267
  gflops (eval):  375.781
  gflops (total): 333.301
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014691,0.0115267,375.781,333.301

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574075
  gflops (total): 75.4522
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.4522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570869
  gflops (eval):  75.8759
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570869,75.8759,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1665
  maximum absolute entry in einsum_ir solution: 35.1665
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146461
  time (eval):    0.0114081
  gflops (eval):  379.689
  gflops (total): 336.489
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146461,0.0114081,379.689,336.489

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578359
  gflops (total): 74.8933
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578538
  gflops (eval):  74.8701
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578538,74.8701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2799
  maximum absolute entry in einsum_ir solution: 38.2799
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147857
  time (eval):    0.0113626
  gflops (eval):  381.209
  gflops (total): 337.315
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147857,0.0113626,381.209,337.315

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583942
  gflops (total): 74.1772
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576768
  gflops (eval):  75.0999
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576768,75.0999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4001
  maximum absolute entry in einsum_ir solution: 35.4001
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149281
  time (eval):    0.0114236
  gflops (eval):  379.173
  gflops (total): 335.35
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149281,0.0114236,379.173,335.35

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582931
  gflops (total): 74.3058
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0582512
  gflops (eval):  74.3593
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0582512,74.3593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5853
  maximum absolute entry in einsum_ir solution: 38.5853
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157352
  time (eval):    0.0114121
  gflops (eval):  379.556
  gflops (total): 333.563
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157352,0.0114121,379.556,333.563

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584302
  gflops (total): 74.1315
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575089
  gflops (eval):  75.3191
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575089,75.3191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1025
  maximum absolute entry in einsum_ir solution: 35.1025
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147123
  time (eval):    0.0116607
  gflops (eval):  371.462
  gflops (total): 329.845
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147123,0.0116607,371.462,329.845

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581998
  gflops (total): 74.425
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.425

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574725
  gflops (eval):  75.3668
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574725,75.3668,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2115
  maximum absolute entry in einsum_ir solution: 35.2115
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146644
  time (eval):    0.0115059
  gflops (eval):  376.46
  gflops (total): 333.903
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146644,0.0115059,376.46,333.903

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579851
  gflops (total): 74.7006
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577162
  gflops (eval):  75.0487
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577162,75.0487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7539
  maximum absolute entry in einsum_ir solution: 35.7539
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148289
  time (eval):    0.0115483
  gflops (eval):  375.079
  gflops (total): 332.397
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148289,0.0115483,375.079,332.397

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579775
  gflops (total): 74.7104
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7104

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577756
  gflops (eval):  74.9715
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577756,74.9715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.93
  maximum absolute entry in einsum_ir solution: 34.93
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144912
  time (eval):    0.0115379
  gflops (eval):  375.416
  gflops (total): 333.526
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144912,0.0115379,375.416,333.526

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579754
  gflops (total): 74.713
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573878
  gflops (eval):  75.478
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573878,75.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8229
  maximum absolute entry in einsum_ir solution: 36.8229
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146037
  time (eval):    0.0115243
  gflops (eval):  375.861
  gflops (total): 333.588
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146037,0.0115243,375.861,333.588

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579002
  gflops (total): 74.8101
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574327
  gflops (eval):  75.4191
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574327,75.4191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0174
  maximum absolute entry in einsum_ir solution: 35.0174
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147184
  time (eval):    0.0114686
  gflops (eval):  377.684
  gflops (total): 334.726
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147184,0.0114686,377.684,334.726

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580768
  gflops (total): 74.5826
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574005
  gflops (eval):  75.4614
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574005,75.4614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4887
  maximum absolute entry in einsum_ir solution: 33.4887
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153713
  time (eval):    0.0116457
  gflops (eval):  371.94
  gflops (total): 328.572
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153713,0.0116457,371.94,328.572

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0589781
  gflops (total): 73.4429
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.4429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057574
  gflops (eval):  75.234
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057574,75.234,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9087
  maximum absolute entry in einsum_ir solution: 35.9087
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151895
  time (eval):    0.0115078
  gflops (eval):  376.4
  gflops (total): 332.511
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151895,0.0115078,376.4,332.511

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579738
  gflops (total): 74.7151
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574943
  gflops (eval):  75.3383
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574943,75.3383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6664
  maximum absolute entry in einsum_ir solution: 36.6664
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152152
  time (eval):    0.0115461
  gflops (eval):  375.151
  gflops (total): 331.471
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152152,0.0115461,375.151,331.471

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582412
  gflops (total): 74.3721
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057603
  gflops (eval):  75.1961
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057603,75.1961,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8024
  maximum absolute entry in einsum_ir solution: 34.8024
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149027
  time (eval):    0.0115153
  gflops (eval):  376.152
  gflops (total): 333.05
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149027,0.0115153,376.152,333.05

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579513
  gflops (total): 74.7441
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.056988
  gflops (eval):  76.0076
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.056988,76.0076,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4643
  maximum absolute entry in einsum_ir solution: 36.4643
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147439
  time (eval):    0.011527
  gflops (eval):  375.771
  gflops (total): 333.158
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147439,0.011527,375.771,333.158

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583911
  gflops (total): 74.1812
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577344
  gflops (eval):  75.0249
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577344,75.0249,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2638
  maximum absolute entry in einsum_ir solution: 35.2638
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146438
  time (eval):    0.0115029
  gflops (eval):  376.56
  gflops (total): 334.035
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146438,0.0115029,376.56,334.035

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576065
  gflops (total): 75.1915
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571133
  gflops (eval):  75.8409
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571133,75.8409,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1424
  maximum absolute entry in einsum_ir solution: 35.1424
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157032
  time (eval):    0.0115096
  gflops (eval):  376.339
  gflops (total): 331.158
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157032,0.0115096,376.339,331.158

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585033
  gflops (total): 74.0389
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574602
  gflops (eval):  75.383
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574602,75.383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1542
  maximum absolute entry in einsum_ir solution: 35.1542
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014709
  time (eval):    0.0115407
  gflops (eval):  375.327
  gflops (total): 332.898
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014709,0.0115407,375.327,332.898

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575033
  gflops (total): 75.3264
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572514
  gflops (eval):  75.6578
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572514,75.6578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.847
  maximum absolute entry in einsum_ir solution: 36.847
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146261
  time (eval):    0.0115013
  gflops (eval):  376.612
  gflops (total): 334.122
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146261,0.0115013,376.612,334.122

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581304
  gflops (total): 74.5138
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575864
  gflops (eval):  75.2178
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575864,75.2178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3222
  maximum absolute entry in einsum_ir solution: 37.3222
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146329
  time (eval):    0.011467
  gflops (eval):  377.738
  gflops (total): 334.991
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146329,0.011467,377.738,334.991

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0587299
  gflops (total): 73.7532
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.7532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575139
  gflops (eval):  75.3126
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575139,75.3126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0075
  maximum absolute entry in einsum_ir solution: 34.0075
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014587
  time (eval):    0.011501
  gflops (eval):  376.622
  gflops (total): 334.23
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014587,0.011501,376.622,334.23

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578461
  gflops (total): 74.88
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0567093
  gflops (eval):  76.3811
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0567093,76.3811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0629
  maximum absolute entry in einsum_ir solution: 35.0629
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146271
  time (eval):    0.0115248
  gflops (eval):  375.845
  gflops (total): 333.515
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146271,0.0115248,375.845,333.515

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058099
  gflops (total): 74.5541
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576527
  gflops (eval):  75.1313
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576527,75.1313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3115
  maximum absolute entry in einsum_ir solution: 34.3115
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147399
  time (eval):    0.0114978
  gflops (eval):  376.727
  gflops (total): 333.92
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147399,0.0114978,376.727,333.92

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577751
  gflops (total): 74.972
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572983
  gflops (eval):  75.596
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572983,75.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7421
  maximum absolute entry in einsum_ir solution: 34.7421
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014649
  time (eval):    0.0115204
  gflops (eval):  375.988
  gflops (total): 333.572
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014649,0.0115204,375.988,333.572

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583453
  gflops (total): 74.2394
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578554
  gflops (eval):  74.868
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578554,74.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7281
  maximum absolute entry in einsum_ir solution: 35.7281
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014837
  time (eval):    0.0114876
  gflops (eval):  377.062
  gflops (total): 333.932
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014837,0.0114876,377.062,333.932

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578058
  gflops (total): 74.9323
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573427
  gflops (eval):  75.5374
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573427,75.5374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.079
  maximum absolute entry in einsum_ir solution: 36.079
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146275
  time (eval):    0.0115181
  gflops (eval):  376.062
  gflops (total): 333.685
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146275,0.0115181,376.062,333.685

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576636
  gflops (total): 75.1171
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575124
  gflops (eval):  75.3145
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575124,75.3145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0199
  maximum absolute entry in einsum_ir solution: 36.0199
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148117
  time (eval):    0.011536
  gflops (eval):  375.479
  gflops (total): 332.754
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148117,0.011536,375.479,332.754

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577732
  gflops (total): 74.9745
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576509
  gflops (eval):  75.1336
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576509,75.1336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6387
  maximum absolute entry in einsum_ir solution: 40.6387
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148884
  time (eval):    0.0115471
  gflops (eval):  375.117
  gflops (total): 332.275
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148884,0.0115471,375.117,332.275

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579738
  gflops (total): 74.7151
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574365
  gflops (eval):  75.4141
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574365,75.4141,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6951
  maximum absolute entry in einsum_ir solution: 34.6951
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149215
  time (eval):    0.0115217
  gflops (eval):  375.944
  gflops (total): 332.839
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149215,0.0115217,375.944,332.839

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0596871
  gflops (total): 72.5705
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,72.5705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0590794
  gflops (eval):  73.3169
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0590794,73.3169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1711
  maximum absolute entry in einsum_ir solution: 35.1711
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150146
  time (eval):    0.0114878
  gflops (eval):  377.053
  gflops (total): 333.468
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150146,0.0114878,377.053,333.468

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576229
  gflops (total): 75.1701
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.1701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.056704
  gflops (eval):  76.3883
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.056704,76.3883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0487
  maximum absolute entry in einsum_ir solution: 36.0487
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014655
  time (eval):    0.0116529
  gflops (eval):  371.712
  gflops (total): 330.187
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014655,0.0116529,371.712,330.187

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581511
  gflops (total): 74.4873
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575985
  gflops (eval):  75.202
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575985,75.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0793
  maximum absolute entry in einsum_ir solution: 36.0793
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148455
  time (eval):    0.0114713
  gflops (eval):  377.596
  gflops (total): 334.329
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148455,0.0114713,377.596,334.329

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057824
  gflops (total): 74.9087
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570166
  gflops (eval):  75.9694
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570166,75.9694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.704
  maximum absolute entry in einsum_ir solution: 35.704
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145351
  time (eval):    0.0115615
  gflops (eval):  374.65
  gflops (total): 332.809
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145351,0.0115615,374.65,332.809

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579445
  gflops (total): 74.7529
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570797
  gflops (eval):  75.8855
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570797,75.8855,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4753
  maximum absolute entry in einsum_ir solution: 36.4753
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147143
  time (eval):    0.0115457
  gflops (eval):  375.164
  gflops (total): 332.757
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147143,0.0115457,375.164,332.757

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577052
  gflops (total): 75.0629
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570459
  gflops (eval):  75.9304
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570459,75.9304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0051
  maximum absolute entry in einsum_ir solution: 34.0051
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147232
  time (eval):    0.0116017
  gflops (eval):  373.354
  gflops (total): 331.309
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147232,0.0116017,373.354,331.309

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585079
  gflops (total): 74.0331
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571576
  gflops (eval):  75.782
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571576,75.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4318
  maximum absolute entry in einsum_ir solution: 32.4318
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146007
  time (eval):    0.0115543
  gflops (eval):  374.883
  gflops (total): 332.825
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146007,0.0115543,374.883,332.825

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578973
  gflops (total): 74.8138
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574789
  gflops (eval):  75.3585
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574789,75.3585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.207
  maximum absolute entry in einsum_ir solution: 38.207
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148993
  time (eval):    0.0115044
  gflops (eval):  376.509
  gflops (total): 333.339
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148993,0.0115044,376.509,333.339

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0571856
  gflops (total): 75.7449
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.7449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573457
  gflops (eval):  75.5335
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573457,75.5335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0194
  maximum absolute entry in einsum_ir solution: 34.0194
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147265
  time (eval):    0.0114975
  gflops (eval):  376.734
  gflops (total): 333.959
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147265,0.0114975,376.734,333.959

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580464
  gflops (total): 74.6217
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574935
  gflops (eval):  75.3393
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574935,75.3393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1889
  maximum absolute entry in einsum_ir solution: 39.1889
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150282
  time (eval):    0.0116099
  gflops (eval):  373.087
  gflops (total): 330.329
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150282,0.0116099,373.087,330.329

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0586718
  gflops (total): 73.8262
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.8262

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574537
  gflops (eval):  75.3915
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574537,75.3915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7611
  maximum absolute entry in einsum_ir solution: 36.7611
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014811
  time (eval):    0.0116342
  gflops (eval):  372.31
  gflops (total): 330.266
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014811,0.0116342,372.31,330.266

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575927
  gflops (total): 75.2095
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0578404
  gflops (eval):  74.8875
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0578404,74.8875,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2316
  maximum absolute entry in einsum_ir solution: 35.2316
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00179613
  time (eval):    0.0116061
  gflops (eval):  373.211
  gflops (total): 323.194
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00179613,0.0116061,373.211,323.194

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574055
  gflops (total): 75.4548
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.4548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0579054
  gflops (eval):  74.8034
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0579054,74.8034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9066
  maximum absolute entry in einsum_ir solution: 33.9066
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148324
  time (eval):    0.0115594
  gflops (eval):  374.718
  gflops (total): 332.104
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148324,0.0115594,374.718,332.104

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574807
  gflops (total): 75.3561
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0580765
  gflops (eval):  74.583
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0580765,74.583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2063
  maximum absolute entry in einsum_ir solution: 35.2063
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153018
  time (eval):    0.0114844
  gflops (eval):  377.164
  gflops (total): 332.819
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153018,0.0114844,377.164,332.819

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581395
  gflops (total): 74.5022
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574193
  gflops (eval):  75.4367
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574193,75.4367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1546
  maximum absolute entry in einsum_ir solution: 38.1546
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00176406
  time (eval):    0.0114877
  gflops (eval):  377.058
  gflops (total): 326.864
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00176406,0.0114877,377.058,326.864

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578911
  gflops (total): 74.8219
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0568037
  gflops (eval):  76.2542
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0568037,76.2542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4234
  maximum absolute entry in einsum_ir solution: 34.4234
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147508
  time (eval):    0.0115027
  gflops (eval):  376.564
  gflops (total): 333.763
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147508,0.0115027,376.564,333.763

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583221
  gflops (total): 74.2689
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057243
  gflops (eval):  75.6689
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057243,75.6689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5066
  maximum absolute entry in einsum_ir solution: 33.5066
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149049
  time (eval):    0.0115481
  gflops (eval):  375.084
  gflops (total): 332.207
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149049,0.0115481,375.084,332.207

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579177
  gflops (total): 74.7875
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575876
  gflops (eval):  75.2162
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575876,75.2162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8523
  maximum absolute entry in einsum_ir solution: 34.8523
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146926
  time (eval):    0.0115916
  gflops (eval):  373.679
  gflops (total): 331.642
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146926,0.0115916,373.679,331.642

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583334
  gflops (total): 74.2545
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573841
  gflops (eval):  75.4829
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573841,75.4829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3494
  maximum absolute entry in einsum_ir solution: 35.3494
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146206
  time (eval):    0.0115806
  gflops (eval):  374.032
  gflops (total): 332.104
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146206,0.0115806,374.032,332.104

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577941
  gflops (total): 74.9474
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0568734
  gflops (eval):  76.1607
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0568734,76.1607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4055
  maximum absolute entry in einsum_ir solution: 40.4055
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149157
  time (eval):    0.0116286
  gflops (eval):  372.487
  gflops (total): 330.141
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149157,0.0116286,372.487,330.141

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579076
  gflops (total): 74.8006
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057726
  gflops (eval):  75.0359
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057726,75.0359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.904
  maximum absolute entry in einsum_ir solution: 33.904
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143616
  time (eval):    0.0115026
  gflops (eval):  376.568
  gflops (total): 334.77
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143616,0.0115026,376.568,334.77

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584302
  gflops (total): 74.1315
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575504
  gflops (eval):  75.2648
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575504,75.2648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0461
  maximum absolute entry in einsum_ir solution: 34.0461
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146842
  time (eval):    0.0114497
  gflops (eval):  378.309
  gflops (total): 335.306
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146842,0.0114497,378.309,335.306

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0571356
  gflops (total): 75.8112
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.8112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0564181
  gflops (eval):  76.7754
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0564181,76.7754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9929
  maximum absolute entry in einsum_ir solution: 37.9929
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147421
  time (eval):    0.011567
  gflops (eval):  374.471
  gflops (total): 332.14
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147421,0.011567,374.471,332.14

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579019
  gflops (total): 74.8079
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0582196
  gflops (eval):  74.3997
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0582196,74.3997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.895
  maximum absolute entry in einsum_ir solution: 33.895
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147712
  time (eval):    0.0114702
  gflops (eval):  377.634
  gflops (total): 334.551
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147712,0.0114702,377.634,334.551

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579989
  gflops (total): 74.6828
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574971
  gflops (eval):  75.3345
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574971,75.3345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0948
  maximum absolute entry in einsum_ir solution: 35.0948
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146639
  time (eval):    0.0115729
  gflops (eval):  374.281
  gflops (total): 332.19
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146639,0.0115729,374.281,332.19

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580232
  gflops (total): 74.6515
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.6515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575635
  gflops (eval):  75.2477
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575635,75.2477,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.187
  maximum absolute entry in einsum_ir solution: 39.187
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00163326
  time (eval):    0.0115071
  gflops (eval):  376.421
  gflops (total): 329.634
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00163326,0.0115071,376.421,329.634

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581285
  gflops (total): 74.5163
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575644
  gflops (eval):  75.2466
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575644,75.2466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6872
  maximum absolute entry in einsum_ir solution: 36.6872
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150824
  time (eval):    0.0115276
  gflops (eval):  375.751
  gflops (total): 332.277
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150824,0.0115276,375.751,332.277

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057683
  gflops (total): 75.0917
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0564788
  gflops (eval):  76.6928
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0564788,76.6928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6719
  maximum absolute entry in einsum_ir solution: 33.6719
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145917
  time (eval):    0.0115599
  gflops (eval):  374.701
  gflops (total): 332.705
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145917,0.0115599,374.701,332.705

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581649
  gflops (total): 74.4697
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573738
  gflops (eval):  75.4965
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573738,75.4965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0946
  maximum absolute entry in einsum_ir solution: 33.0946
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146588
  time (eval):    0.0114993
  gflops (eval):  376.678
  gflops (total): 334.09
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146588,0.0114993,376.678,334.09

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0576844
  gflops (total): 75.0899
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573093
  gflops (eval):  75.5814
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573093,75.5814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4198
  maximum absolute entry in einsum_ir solution: 36.4198
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147029
  time (eval):    0.0115101
  gflops (eval):  376.324
  gflops (total): 333.698
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147029,0.0115101,376.324,333.698

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057135
  gflops (total): 75.812
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0569474
  gflops (eval):  76.0618
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0569474,76.0618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5925
  maximum absolute entry in einsum_ir solution: 34.5925
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145927
  time (eval):    0.011532
  gflops (eval):  375.607
  gflops (total): 333.417
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145927,0.011532,375.607,333.417

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575242
  gflops (total): 75.2991
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0568233
  gflops (eval):  76.2279
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0568233,76.2279,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7109
  maximum absolute entry in einsum_ir solution: 34.7109
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146227
  time (eval):    0.0116231
  gflops (eval):  372.665
  gflops (total): 331.02
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146227,0.0116231,372.665,331.02

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057945
  gflops (total): 74.7523
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7523

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576757
  gflops (eval):  75.1013
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576757,75.1013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3684
  maximum absolute entry in einsum_ir solution: 35.3684
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151285
  time (eval):    0.011508
  gflops (eval):  376.393
  gflops (total): 332.661
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151285,0.011508,376.393,332.661

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0586054
  gflops (total): 73.9099
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574963
  gflops (eval):  75.3356
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574963,75.3356,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8089
  maximum absolute entry in einsum_ir solution: 33.8089
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146919
  time (eval):    0.0115869
  gflops (eval):  373.83
  gflops (total): 331.764
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146919,0.0115869,373.83,331.764

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575607
  gflops (total): 75.2513
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057032
  gflops (eval):  75.9489
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057032,75.9489,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2659
  maximum absolute entry in einsum_ir solution: 37.2659
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152055
  time (eval):    0.0115571
  gflops (eval):  374.794
  gflops (total): 331.216
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152055,0.0115571,374.794,331.216

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584399
  gflops (total): 74.1192
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577173
  gflops (eval):  75.0471
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577173,75.0471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4644
  maximum absolute entry in einsum_ir solution: 34.4644
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147242
  time (eval):    0.0115502
  gflops (eval):  375.016
  gflops (total): 332.615
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147242,0.0115502,375.016,332.615

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057981
  gflops (total): 74.7059
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572908
  gflops (eval):  75.6059
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572908,75.6059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2571
  maximum absolute entry in einsum_ir solution: 34.2571
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146569
  time (eval):    0.0116053
  gflops (eval):  373.235
  gflops (total): 331.383
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146569,0.0116053,373.235,331.383

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580942
  gflops (total): 74.5603
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576709
  gflops (eval):  75.1076
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576709,75.1076,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4246
  maximum absolute entry in einsum_ir solution: 37.4246
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147421
  time (eval):    0.011491
  gflops (eval):  376.948
  gflops (total): 334.088
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147421,0.011491,376.948,334.088

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574808
  gflops (total): 75.3559
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573343
  gflops (eval):  75.5484
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573343,75.5484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9868
  maximum absolute entry in einsum_ir solution: 38.9868
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146866
  time (eval):    0.0116156
  gflops (eval):  372.906
  gflops (total): 331.048
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146866,0.0116156,372.906,331.048

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579032
  gflops (total): 74.8062
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577087
  gflops (eval):  75.0584
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577087,75.0584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8128
  maximum absolute entry in einsum_ir solution: 33.8128
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014677
  time (eval):    0.0115573
  gflops (eval):  374.785
  gflops (total): 332.553
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014677,0.0115573,374.785,332.553

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0586955
  gflops (total): 73.7965
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.7965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057097
  gflops (eval):  75.8625
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057097,75.8625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5744
  maximum absolute entry in einsum_ir solution: 34.5744
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147218
  time (eval):    0.0115148
  gflops (eval):  376.171
  gflops (total): 333.529
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147218,0.0115148,376.171,333.529

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578441
  gflops (total): 74.8826
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571271
  gflops (eval):  75.8225
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571271,75.8225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7964
  maximum absolute entry in einsum_ir solution: 33.7964
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014598
  time (eval):    0.0115354
  gflops (eval):  375.498
  gflops (total): 333.317
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014598,0.0115354,375.498,333.317

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583046
  gflops (total): 74.2913
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.2913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576508
  gflops (eval):  75.1337
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576508,75.1337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0678
  maximum absolute entry in einsum_ir solution: 33.0678
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144733
  time (eval):    0.0115128
  gflops (eval):  376.234
  gflops (total): 334.218
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144733,0.0115128,376.234,334.218

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0587199
  gflops (total): 73.7658
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.7658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575764
  gflops (eval):  75.2308
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575764,75.2308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6368
  maximum absolute entry in einsum_ir solution: 35.6368
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145468
  time (eval):    0.0115756
  gflops (eval):  374.194
  gflops (total): 332.419
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145468,0.0115756,374.194,332.419

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578521
  gflops (total): 74.8723
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.05725
  gflops (eval):  75.6597
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.05725,75.6597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4873
  maximum absolute entry in einsum_ir solution: 37.4873
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150812
  time (eval):    0.0114979
  gflops (eval):  376.721
  gflops (total): 333.038
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150812,0.0114979,376.721,333.038

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578516
  gflops (total): 74.8729
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571117
  gflops (eval):  75.843
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571117,75.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8304
  maximum absolute entry in einsum_ir solution: 33.8304
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014705
  time (eval):    0.0115125
  gflops (eval):  376.244
  gflops (total): 333.629
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014705,0.0115125,376.244,333.629

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057274
  gflops (total): 75.628
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.628

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572794
  gflops (eval):  75.6209
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572794,75.6209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.692
  maximum absolute entry in einsum_ir solution: 36.692
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145503
  time (eval):    0.0115788
  gflops (eval):  374.092
  gflops (total): 332.33
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145503,0.0115788,374.092,332.33

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0586603
  gflops (total): 73.8407
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.8407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574811
  gflops (eval):  75.3555
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574811,75.3555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5738
  maximum absolute entry in einsum_ir solution: 36.5738
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151517
  time (eval):    0.0114987
  gflops (eval):  376.698
  gflops (total): 332.84
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151517,0.0114987,376.698,332.84

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579767
  gflops (total): 74.7113
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574814
  gflops (eval):  75.3552
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574814,75.3552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8183
  maximum absolute entry in einsum_ir solution: 32.8183
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146703
  time (eval):    0.0115688
  gflops (eval):  374.413
  gflops (total): 332.277
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146703,0.0115688,374.413,332.277

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584638
  gflops (total): 74.0889
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575362
  gflops (eval):  75.2833
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575362,75.2833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9966
  maximum absolute entry in einsum_ir solution: 37.9966
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146505
  time (eval):    0.0116731
  gflops (eval):  371.068
  gflops (total): 329.69
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146505,0.0116731,371.068,329.69

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0590298
  gflops (total): 73.3785
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.3785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573717
  gflops (eval):  75.4992
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573717,75.4992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2096
  maximum absolute entry in einsum_ir solution: 39.2096
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147255
  time (eval):    0.0115732
  gflops (eval):  374.271
  gflops (total): 332.025
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147255,0.0115732,374.271,332.025

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581061
  gflops (total): 74.5451
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573786
  gflops (eval):  75.4902
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573786,75.4902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1965
  maximum absolute entry in einsum_ir solution: 33.1965
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151715
  time (eval):    0.01154
  gflops (eval):  375.349
  gflops (total): 331.736
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151715,0.01154,375.349,331.736

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0577469
  gflops (total): 75.0086
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.0086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572929
  gflops (eval):  75.6031
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572929,75.6031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9394
  maximum absolute entry in einsum_ir solution: 33.9394
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00179654
  time (eval):    0.0114817
  gflops (eval):  377.255
  gflops (total): 326.212
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00179654,0.0114817,377.255,326.212

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0572879
  gflops (total): 75.6097
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.6097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573741
  gflops (eval):  75.4961
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573741,75.4961,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.26
  maximum absolute entry in einsum_ir solution: 32.26
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147289
  time (eval):    0.0115155
  gflops (eval):  376.147
  gflops (total): 333.492
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147289,0.0115155,376.147,333.492

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581641
  gflops (total): 74.4707
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.4707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576438
  gflops (eval):  75.1428
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576438,75.1428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4506
  maximum absolute entry in einsum_ir solution: 33.4506
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146213
  time (eval):    0.0115193
  gflops (eval):  376.024
  gflops (total): 333.671
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146213,0.0115193,376.024,333.671

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057939
  gflops (total): 74.76
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573602
  gflops (eval):  75.5144
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573602,75.5144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1686
  maximum absolute entry in einsum_ir solution: 33.1686
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014721
  time (eval):    0.0114915
  gflops (eval):  376.933
  gflops (total): 334.13
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014721,0.0114915,376.933,334.13

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583798
  gflops (total): 74.1955
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575086
  gflops (eval):  75.3196
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575086,75.3196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1035
  maximum absolute entry in einsum_ir solution: 35.1035
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151205
  time (eval):    0.0116202
  gflops (eval):  372.758
  gflops (total): 329.838
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151205,0.0116202,372.758,329.838

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575652
  gflops (total): 75.2454
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575763
  gflops (eval):  75.231
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575763,75.231,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1392
  maximum absolute entry in einsum_ir solution: 37.1392
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146949
  time (eval):    0.0115018
  gflops (eval):  376.596
  gflops (total): 333.932
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146949,0.0115018,376.596,333.932

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585667
  gflops (total): 73.9587
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,73.9587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0569215
  gflops (eval):  76.0963
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0569215,76.0963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8929
  maximum absolute entry in einsum_ir solution: 32.8929
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00174635
  time (eval):    0.0115637
  gflops (eval):  374.58
  gflops (total): 325.433
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00174635,0.0115637,374.58,325.433

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578617
  gflops (total): 74.8598
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.8598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577145
  gflops (eval):  75.0508
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577145,75.0508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8496
  maximum absolute entry in einsum_ir solution: 35.8496
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146651
  time (eval):    0.0115854
  gflops (eval):  373.878
  gflops (total): 331.869
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146651,0.0115854,373.878,331.869

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0581107
  gflops (total): 74.5391
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576558
  gflops (eval):  75.1273
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576558,75.1273,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2731
  maximum absolute entry in einsum_ir solution: 36.2731
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152399
  time (eval):    0.01152
  gflops (eval):  376.001
  gflops (total): 332.071
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152399,0.01152,376.001,332.071

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0583829
  gflops (total): 74.1917
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0572833
  gflops (eval):  75.6158
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0572833,75.6158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4702
  maximum absolute entry in einsum_ir solution: 34.4702
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147595
  time (eval):    0.0114726
  gflops (eval):  377.554
  gflops (total): 334.519
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147595,0.0114726,377.554,334.519

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.057998
  gflops (total): 74.684
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577431
  gflops (eval):  75.0137
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577431,75.0137,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6111
  maximum absolute entry in einsum_ir solution: 33.6111
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00159736
  time (eval):    0.0116336
  gflops (eval):  372.327
  gflops (total): 327.377
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00159736,0.0116336,372.327,327.377

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0582895
  gflops (total): 74.3105
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.3105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574196
  gflops (eval):  75.4362
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574196,75.4362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6242
  maximum absolute entry in einsum_ir solution: 40.6242
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146249
  time (eval):    0.0115736
  gflops (eval):  374.257
  gflops (total): 332.27
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146249,0.0115736,374.257,332.27

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575912
  gflops (total): 75.2115
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0569627
  gflops (eval):  76.0413
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0569627,76.0413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8469
  maximum absolute entry in einsum_ir solution: 35.8469
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147165
  time (eval):    0.01154
  gflops (eval):  375.348
  gflops (total): 332.896
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147165,0.01154,375.348,332.896

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0574812
  gflops (total): 75.3554
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.3554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573072
  gflops (eval):  75.5842
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573072,75.5842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8483
  maximum absolute entry in einsum_ir solution: 34.8483
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146213
  time (eval):    0.011632
  gflops (eval):  372.38
  gflops (total): 330.799
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146213,0.011632,372.38,330.799

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0585209
  gflops (total): 74.0166
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.0166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0573978
  gflops (eval):  75.4649
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0573978,75.4649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1716
  maximum absolute entry in einsum_ir solution: 35.1716
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145842
  time (eval):    0.0115187
  gflops (eval):  376.042
  gflops (total): 333.781
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145842,0.0115187,376.042,333.781

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579291
  gflops (total): 74.7728
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.7728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0577481
  gflops (eval):  75.0072
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0577481,75.0072,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9254
  maximum absolute entry in einsum_ir solution: 33.9254
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151052
  time (eval):    0.011521
  gflops (eval):  375.968
  gflops (total): 332.389
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151052,0.011521,375.968,332.389

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0580881
  gflops (total): 74.5681
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575377
  gflops (eval):  75.2814
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575377,75.2814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3861
  maximum absolute entry in einsum_ir solution: 34.3861
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147678
  time (eval):    0.0114643
  gflops (eval):  377.826
  gflops (total): 334.71
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147678,0.0114643,377.826,334.71

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0575416
  gflops (total): 75.2764
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.2764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0570482
  gflops (eval):  75.9274
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0570482,75.9274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9893
  maximum absolute entry in einsum_ir solution: 34.9893
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00161158
  time (eval):    0.0115518
  gflops (eval):  374.964
  gflops (total): 329.057
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00161158,0.0115518,374.964,329.057

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0579189
  gflops (total): 74.786
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.057085
  gflops (eval):  75.8784
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.057085,75.8784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1746
  maximum absolute entry in einsum_ir solution: 35.1746
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149094
  time (eval):    0.0115517
  gflops (eval):  374.969
  gflops (total): 332.105
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149094,0.0115517,374.969,332.105

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0571304
  gflops (total): 75.8181
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.8181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0574579
  gflops (eval):  75.386
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0574579,75.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1283
  maximum absolute entry in einsum_ir solution: 35.1283
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150075
  time (eval):    0.0115611
  gflops (eval):  374.664
  gflops (total): 331.617
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150075,0.0115611,374.664,331.617

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0572154
  gflops (total): 75.7055
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.7055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576383
  gflops (eval):  75.15
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576383,75.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3023
  maximum absolute entry in einsum_ir solution: 35.3023
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153116
  time (eval):    0.011466
  gflops (eval):  377.771
  gflops (total): 333.267
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153116,0.011466,377.771,333.267

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.058097
  gflops (total): 74.5567
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.5567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0575683
  gflops (eval):  75.2414
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0575683,75.2414,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3416
  maximum absolute entry in einsum_ir solution: 33.3416
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147144
  time (eval):    0.0115441
  gflops (eval):  375.214
  gflops (total): 332.796
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147144,0.0115441,375.214,332.796

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0584438
  gflops (total): 74.1143
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.1143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0576488
  gflops (eval):  75.1364
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0576488,75.1364,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.97
  maximum absolute entry in einsum_ir solution: 34.97
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146094
  time (eval):    0.0116184
  gflops (eval):  372.816
  gflops (total): 331.173
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146094,0.0116184,372.816,331.173

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0578217
  gflops (total): 74.9116
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,74.9116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0571625
  gflops (eval):  75.7756
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0571625,75.7756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5327
  maximum absolute entry in einsum_ir solution: 36.5327
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143655
  time (eval):    0.0149627
  gflops (eval):  177.63
  gflops (total): 162.07
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143655,0.0149627,177.63,162.07

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122754
  gflops (total): 21.6516
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275986
  gflops (eval):  96.3028
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275986,96.3028,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.717
  maximum absolute entry in einsum_ir solution: 103.717
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142916
  time (eval):    0.0149282
  gflops (eval):  178.04
  gflops (total): 162.484
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142916,0.0149282,178.04,162.484

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123555
  gflops (total): 21.5112
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275578
  gflops (eval):  96.4453
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275578,96.4453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.27
  maximum absolute entry in einsum_ir solution: 114.27
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143503
  time (eval):    0.0148737
  gflops (eval):  178.693
  gflops (total): 162.97
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143503,0.0148737,178.693,162.97

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124075
  gflops (total): 21.4211
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272794
  gflops (eval):  97.4297
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272794,97.4297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.15
  maximum absolute entry in einsum_ir solution: 107.15
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00149451
  time (eval):    0.0150265
  gflops (eval):  176.875
  gflops (total): 160.875
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00149451,0.0150265,176.875,160.875

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123558
  gflops (total): 21.5107
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275745
  gflops (eval):  96.3869
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275745,96.3869,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.105
  maximum absolute entry in einsum_ir solution: 107.106
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142666
  time (eval):    0.0149392
  gflops (eval):  177.909
  gflops (total): 162.4
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142666,0.0149392,177.909,162.4

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123388
  gflops (total): 21.5404
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0269585
  gflops (eval):  98.5894
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0269585,98.5894,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.283
  maximum absolute entry in einsum_ir solution: 109.283
  maximum element-wise difference:              0.000102997
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00146432
  time (eval):    0.0150648
  gflops (eval):  176.425
  gflops (total): 160.796
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00146432,0.0150648,176.425,160.796

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123791
  gflops (total): 21.4702
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272668
  gflops (eval):  97.4746
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272668,97.4746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.877
  maximum absolute entry in einsum_ir solution: 107.877
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144997
  time (eval):    0.0149845
  gflops (eval):  177.371
  gflops (total): 161.722
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144997,0.0149845,177.371,161.722

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124755
  gflops (total): 21.3044
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.3044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271137
  gflops (eval):  98.0251
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271137,98.0251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.404
  maximum absolute entry in einsum_ir solution: 106.404
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143606
  time (eval):    0.0150217
  gflops (eval):  176.932
  gflops (total): 161.494
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143606,0.0150217,176.932,161.494

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123071
  gflops (total): 21.5958
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275379
  gflops (eval):  96.5149
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275379,96.5149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4091
  maximum absolute entry in einsum_ir solution: 99.4092
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141958
  time (eval):    0.0150922
  gflops (eval):  176.105
  gflops (total): 160.965
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141958,0.0150922,176.105,160.965

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123521
  gflops (total): 21.5172
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276177
  gflops (eval):  96.2361
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276177,96.2361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.7769
  maximum absolute entry in einsum_ir solution: 98.7769
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143384
  time (eval):    0.0148686
  gflops (eval):  178.754
  gflops (total): 163.033
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143384,0.0148686,178.754,163.033

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123233
  gflops (total): 21.5675
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274402
  gflops (eval):  96.8585
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274402,96.8585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.007
  maximum absolute entry in einsum_ir solution: 104.006
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145367
  time (eval):    0.0149163
  gflops (eval):  178.182
  gflops (total): 162.359
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145367,0.0149163,178.182,162.359

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123703
  gflops (total): 21.4855
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275126
  gflops (eval):  96.6037
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275126,96.6037,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.296
  maximum absolute entry in einsum_ir solution: 105.296
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143301
  time (eval):    0.0150094
  gflops (eval):  177.077
  gflops (total): 161.644
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143301,0.0150094,177.077,161.644

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123576
  gflops (total): 21.5075
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027397
  gflops (eval):  97.0112
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027397,97.0112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.1213
  maximum absolute entry in einsum_ir solution: 97.1213
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144543
  time (eval):    0.0150381
  gflops (eval):  176.739
  gflops (total): 161.241
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144543,0.0150381,176.739,161.241

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.121956
  gflops (total): 21.7933
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.7933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273025
  gflops (eval):  97.3471
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273025,97.3471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.552
  maximum absolute entry in einsum_ir solution: 101.552
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143204
  time (eval):    0.0151022
  gflops (eval):  175.99
  gflops (total): 160.747
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143204,0.0151022,175.99,160.747

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124017
  gflops (total): 21.431
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275072
  gflops (eval):  96.6228
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275072,96.6228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5248
  maximum absolute entry in einsum_ir solution: 99.5248
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00158628
  time (eval):    0.0148578
  gflops (eval):  178.884
  gflops (total): 161.628
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00158628,0.0148578,178.884,161.628

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123439
  gflops (total): 21.5315
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271903
  gflops (eval):  97.7488
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271903,97.7488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.794
  maximum absolute entry in einsum_ir solution: 100.794
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143213
  time (eval):    0.0149869
  gflops (eval):  177.342
  gflops (total): 161.874
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143213,0.0149869,177.342,161.874

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123588
  gflops (total): 21.5055
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274747
  gflops (eval):  96.737
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274747,96.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.925
  maximum absolute entry in einsum_ir solution: 112.925
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143084
  time (eval):    0.0149468
  gflops (eval):  177.818
  gflops (total): 162.283
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143084,0.0149468,177.818,162.283

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123269
  gflops (total): 21.5612
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027407
  gflops (eval):  96.9759
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027407,96.9759,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.229
  maximum absolute entry in einsum_ir solution: 101.229
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143515
  time (eval):    0.0150236
  gflops (eval):  176.91
  gflops (total): 161.484
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143515,0.0150236,176.91,161.484

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123343
  gflops (total): 21.5482
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273908
  gflops (eval):  97.0334
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273908,97.0334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.592
  maximum absolute entry in einsum_ir solution: 103.592
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00148542
  time (eval):    0.0151444
  gflops (eval):  175.498
  gflops (total): 159.822
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00148542,0.0151444,175.498,159.822

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122709
  gflops (total): 21.6595
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272412
  gflops (eval):  97.5661
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272412,97.5661,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.028
  maximum absolute entry in einsum_ir solution: 108.028
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141585
  time (eval):    0.0149656
  gflops (eval):  177.596
  gflops (total): 162.246
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141585,0.0149656,177.596,162.246

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123107
  gflops (total): 21.5895
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272958
  gflops (eval):  97.3711
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272958,97.3711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.5986
  maximum absolute entry in einsum_ir solution: 97.5986
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145584
  time (eval):    0.0149885
  gflops (eval):  177.323
  gflops (total): 161.625
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145584,0.0149885,177.323,161.625

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123666
  gflops (total): 21.492
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273403
  gflops (eval):  97.2125
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273403,97.2125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.951
  maximum absolute entry in einsum_ir solution: 111.951
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142975
  time (eval):    0.015013
  gflops (eval):  177.035
  gflops (total): 161.641
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142975,0.015013,177.035,161.641

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123006
  gflops (total): 21.6072
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6072

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273651
  gflops (eval):  97.1243
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273651,97.1243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.0597
  maximum absolute entry in einsum_ir solution: 98.0597
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144325
  time (eval):    0.0149328
  gflops (eval):  177.985
  gflops (total): 162.299
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144325,0.0149328,177.985,162.299

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124445
  gflops (total): 21.3574
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.3574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271201
  gflops (eval):  98.002
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271201,98.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.672
  maximum absolute entry in einsum_ir solution: 115.672
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143731
  time (eval):    0.0150505
  gflops (eval):  176.594
  gflops (total): 161.2
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143731,0.0150505,176.594,161.2

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123771
  gflops (total): 21.4736
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027331
  gflops (eval):  97.2455
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027331,97.2455,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.908
  maximum absolute entry in einsum_ir solution: 105.908
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0014433
  time (eval):    0.015011
  gflops (eval):  177.058
  gflops (total): 161.527
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0014433,0.015011,177.058,161.527

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124344
  gflops (total): 21.3747
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.3747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273116
  gflops (eval):  97.3148
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273116,97.3148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.59
  maximum absolute entry in einsum_ir solution: 108.59
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141534
  time (eval):    0.0149655
  gflops (eval):  177.596
  gflops (total): 162.251
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141534,0.0149655,177.596,162.251

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123685
  gflops (total): 21.4886
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271685
  gflops (eval):  97.8271
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271685,97.8271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.599
  maximum absolute entry in einsum_ir solution: 107.599
  maximum element-wise difference:              8.01086e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144898
  time (eval):    0.0151067
  gflops (eval):  175.936
  gflops (total): 160.538
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144898,0.0151067,175.936,160.538

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.181753
  gflops (total): 14.6233
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,14.6233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274944
  gflops (eval):  96.6676
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274944,96.6676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.633
  maximum absolute entry in einsum_ir solution: 100.633
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00160399
  time (eval):    0.0148724
  gflops (eval):  178.708
  gflops (total): 161.311
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00160399,0.0148724,178.708,161.311

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.121601
  gflops (total): 21.8569
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.8569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027406
  gflops (eval):  96.9797
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027406,96.9797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.634
  maximum absolute entry in einsum_ir solution: 106.634
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143399
  time (eval):    0.0149063
  gflops (eval):  178.302
  gflops (total): 162.654
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143399,0.0149063,178.302,162.654

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123683
  gflops (total): 21.489
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272706
  gflops (eval):  97.4611
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272706,97.4611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.769
  maximum absolute entry in einsum_ir solution: 111.769
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143227
  time (eval):    0.0149495
  gflops (eval):  177.787
  gflops (total): 162.243
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143227,0.0149495,177.787,162.243

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123391
  gflops (total): 21.5398
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274796
  gflops (eval):  96.7198
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274796,96.7198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.4697
  maximum absolute entry in einsum_ir solution: 98.4697
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0014302
  time (eval):    0.0150131
  gflops (eval):  177.034
  gflops (total): 161.636
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0014302,0.0150131,177.034,161.636

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123872
  gflops (total): 21.4563
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274246
  gflops (eval):  96.9136
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274246,96.9136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.671
  maximum absolute entry in einsum_ir solution: 100.671
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00152245
  time (eval):    0.0151005
  gflops (eval):  176.009
  gflops (total): 159.889
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00152245,0.0151005,176.009,159.889

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123903
  gflops (total): 21.4508
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0263939
  gflops (eval):  100.698
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0263939,100.698,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.643
  maximum absolute entry in einsum_ir solution: 108.643
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143089
  time (eval):    0.0149053
  gflops (eval):  178.314
  gflops (total): 162.695
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143089,0.0149053,178.314,162.695

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123888
  gflops (total): 21.4534
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273424
  gflops (eval):  97.2052
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273424,97.2052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3868
  maximum absolute entry in einsum_ir solution: 98.3868
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0015811
  time (eval):    0.0149517
  gflops (eval):  177.761
  gflops (total): 160.761
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0015811,0.0149517,177.761,160.761

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12291
  gflops (total): 21.6242
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6242

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270326
  gflops (eval):  98.3193
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270326,98.3193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.833
  maximum absolute entry in einsum_ir solution: 103.833
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143722
  time (eval):    0.0149092
  gflops (eval):  178.268
  gflops (total): 162.594
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143722,0.0149092,178.268,162.594

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123535
  gflops (total): 21.5147
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276089
  gflops (eval):  96.267
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276089,96.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.927
  maximum absolute entry in einsum_ir solution: 100.927
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142421
  time (eval):    0.0150148
  gflops (eval):  177.013
  gflops (total): 161.678
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142421,0.0150148,177.013,161.678

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123754
  gflops (total): 21.4766
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027323
  gflops (eval):  97.274
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027323,97.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.7093
  maximum absolute entry in einsum_ir solution: 98.7092
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00169599
  time (eval):    0.0149889
  gflops (eval):  177.319
  gflops (total): 159.295
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00169599,0.0149889,177.319,159.295

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123914
  gflops (total): 21.4489
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275083
  gflops (eval):  96.619
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275083,96.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9227
  maximum absolute entry in einsum_ir solution: 99.9226
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0014751
  time (eval):    0.0149433
  gflops (eval):  177.86
  gflops (total): 161.88
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0014751,0.0149433,177.86,161.88

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123172
  gflops (total): 21.5781
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271346
  gflops (eval):  97.9495
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271346,97.9495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.407
  maximum absolute entry in einsum_ir solution: 108.407
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0014226
  time (eval):    0.0150867
  gflops (eval):  176.17
  gflops (total): 160.989
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0014226,0.0150867,176.17,160.989

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12163
  gflops (total): 21.8518
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.8518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027386
  gflops (eval):  97.0502
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027386,97.0502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.477
  maximum absolute entry in einsum_ir solution: 100.477
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143398
  time (eval):    0.0149773
  gflops (eval):  177.456
  gflops (total): 161.95
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143398,0.0149773,177.456,161.95

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123326
  gflops (total): 21.5512
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0264681
  gflops (eval):  100.416
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0264681,100.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.705
  maximum absolute entry in einsum_ir solution: 100.705
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141448
  time (eval):    0.0150168
  gflops (eval):  176.99
  gflops (total): 161.754
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141448,0.0150168,176.99,161.754

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124394
  gflops (total): 21.3661
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.3661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0264457
  gflops (eval):  100.501
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0264457,100.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.655
  maximum absolute entry in einsum_ir solution: 110.655
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142506
  time (eval):    0.0149197
  gflops (eval):  178.141
  gflops (total): 162.61
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142506,0.0149197,178.141,162.61

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122221
  gflops (total): 21.746
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273801
  gflops (eval):  97.0714
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273801,97.0714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.36
  maximum absolute entry in einsum_ir solution: 103.36
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00150774
  time (eval):    0.0151251
  gflops (eval):  175.722
  gflops (total): 159.793
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00150774,0.0151251,175.722,159.793

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124398
  gflops (total): 21.3655
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.3655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270649
  gflops (eval):  98.2019
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270649,98.2019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.911
  maximum absolute entry in einsum_ir solution: 102.911
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0014224
  time (eval):    0.0149748
  gflops (eval):  177.486
  gflops (total): 162.09
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0014224,0.0149748,177.486,162.09

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123622
  gflops (total): 21.4997
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4997

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272826
  gflops (eval):  97.4182
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272826,97.4182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.23
  maximum absolute entry in einsum_ir solution: 101.23
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00172813
  time (eval):    0.0150931
  gflops (eval):  176.095
  gflops (total): 158.004
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00172813,0.0150931,176.095,158.004

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.121434
  gflops (total): 21.887
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272833
  gflops (eval):  97.4156
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272833,97.4156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.869
  maximum absolute entry in einsum_ir solution: 110.869
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142186
  time (eval):    0.015053
  gflops (eval):  176.565
  gflops (total): 161.326
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142186,0.015053,176.565,161.326

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12258
  gflops (total): 21.6823
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273752
  gflops (eval):  97.0886
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273752,97.0886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.731
  maximum absolute entry in einsum_ir solution: 101.731
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143679
  time (eval):    0.014901
  gflops (eval):  178.365
  gflops (total): 162.679
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143679,0.014901,178.365,162.679

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123604
  gflops (total): 21.5027
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273497
  gflops (eval):  97.1791
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273497,97.1791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.491
  maximum absolute entry in einsum_ir solution: 102.491
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142261
  time (eval):    0.0149712
  gflops (eval):  177.529
  gflops (total): 162.123
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142261,0.0149712,177.529,162.123

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12141
  gflops (total): 21.8914
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.8914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274316
  gflops (eval):  96.8889
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274316,96.8889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.697
  maximum absolute entry in einsum_ir solution: 107.697
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142242
  time (eval):    0.014913
  gflops (eval):  178.221
  gflops (total): 162.703
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142242,0.014913,178.221,162.703

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123516
  gflops (total): 21.518
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275509
  gflops (eval):  96.4695
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275509,96.4695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.0667
  maximum absolute entry in einsum_ir solution: 98.0667
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143769
  time (eval):    0.0149053
  gflops (eval):  178.313
  gflops (total): 162.627
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143769,0.0149053,178.313,162.627

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.1222
  gflops (total): 21.7497
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.7497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272698
  gflops (eval):  97.4639
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272698,97.4639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.453
  maximum absolute entry in einsum_ir solution: 102.453
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142971
  time (eval):    0.0149567
  gflops (eval):  177.7
  gflops (total): 162.196
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142971,0.0149567,177.7,162.196

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123452
  gflops (total): 21.5291
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276954
  gflops (eval):  95.9662
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276954,95.9662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.909
  maximum absolute entry in einsum_ir solution: 111.909
  maximum element-wise difference:              9.53674e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143496
  time (eval):    0.0150149
  gflops (eval):  177.012
  gflops (total): 161.571
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143496,0.0150149,177.012,161.571

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12263
  gflops (total): 21.6735
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273817
  gflops (eval):  97.0654
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273817,97.0654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.413
  maximum absolute entry in einsum_ir solution: 102.413
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142393
  time (eval):    0.0151038
  gflops (eval):  175.97
  gflops (total): 160.81
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142393,0.0151038,175.97,160.81

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122696
  gflops (total): 21.6618
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027584
  gflops (eval):  96.3537
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027584,96.3537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.982
  maximum absolute entry in einsum_ir solution: 109.982
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143924
  time (eval):    0.0150528
  gflops (eval):  176.567
  gflops (total): 161.158
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143924,0.0150528,176.567,161.158

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12376
  gflops (total): 21.4756
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275411
  gflops (eval):  96.5036
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275411,96.5036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.888
  maximum absolute entry in einsum_ir solution: 105.888
  maximum element-wise difference:              9.53674e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0014506
  time (eval):    0.0149389
  gflops (eval):  177.913
  gflops (total): 162.166
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0014506,0.0149389,177.913,162.166

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12337
  gflops (total): 21.5435
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.02703
  gflops (eval):  98.3284
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.02703,98.3284,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.646
  maximum absolute entry in einsum_ir solution: 102.646
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0014426
  time (eval):    0.014992
  gflops (eval):  177.283
  gflops (total): 161.721
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0014426,0.014992,177.283,161.721

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123594
  gflops (total): 21.5044
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272193
  gflops (eval):  97.6445
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272193,97.6445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.089
  maximum absolute entry in einsum_ir solution: 101.089
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143401
  time (eval):    0.0148927
  gflops (eval):  178.464
  gflops (total): 162.789
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143401,0.0148927,178.464,162.789

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123191
  gflops (total): 21.5749
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5749

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273621
  gflops (eval):  97.135
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273621,97.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.564
  maximum absolute entry in einsum_ir solution: 110.564
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143034
  time (eval):    0.0150044
  gflops (eval):  177.136
  gflops (total): 161.72
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143034,0.0150044,177.136,161.72

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122876
  gflops (total): 21.6301
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275918
  gflops (eval):  96.3266
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275918,96.3266,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.4856
  maximum absolute entry in einsum_ir solution: 97.4856
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141218
  time (eval):    0.01491
  gflops (eval):  178.257
  gflops (total): 162.835
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141218,0.01491,178.257,162.835

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123218
  gflops (total): 21.5701
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027425
  gflops (eval):  96.9122
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027425,96.9122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.203
  maximum absolute entry in einsum_ir solution: 105.203
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144451
  time (eval):    0.0148402
  gflops (eval):  179.096
  gflops (total): 163.209
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144451,0.0148402,179.096,163.209

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12261
  gflops (total): 21.6771
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272052
  gflops (eval):  97.6952
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272052,97.6952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.9573
  maximum absolute entry in einsum_ir solution: 97.9572
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141577
  time (eval):    0.0149618
  gflops (eval):  177.64
  gflops (total): 162.284
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141577,0.0149618,177.64,162.284

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122668
  gflops (total): 21.6669
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272695
  gflops (eval):  97.465
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272695,97.465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.788
  maximum absolute entry in einsum_ir solution: 107.788
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144046
  time (eval):    0.0149396
  gflops (eval):  177.904
  gflops (total): 162.259
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144046,0.0149396,177.904,162.259

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123308
  gflops (total): 21.5543
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273894
  gflops (eval):  97.0384
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273894,97.0384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.501
  maximum absolute entry in einsum_ir solution: 103.501
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142331
  time (eval):    0.0150825
  gflops (eval):  176.219
  gflops (total): 161.024
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142331,0.0150825,176.219,161.024

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123947
  gflops (total): 21.4432
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271164
  gflops (eval):  98.0154
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271164,98.0154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.72
  maximum absolute entry in einsum_ir solution: 109.72
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144793
  time (eval):    0.0150169
  gflops (eval):  176.988
  gflops (total): 161.424
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144793,0.0150169,176.988,161.424

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123172
  gflops (total): 21.5782
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273368
  gflops (eval):  97.2251
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273368,97.2251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.04
  maximum absolute entry in einsum_ir solution: 111.04
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.001433
  time (eval):    0.0150751
  gflops (eval):  176.305
  gflops (total): 161.001
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.001433,0.0150751,176.305,161.001

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123739
  gflops (total): 21.4793
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275305
  gflops (eval):  96.5409
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275305,96.5409,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.681
  maximum absolute entry in einsum_ir solution: 106.681
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0015634
  time (eval):    0.0150456
  gflops (eval):  176.651
  gflops (total): 160.023
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0015634,0.0150456,176.651,160.023

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123817
  gflops (total): 21.4657
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272446
  gflops (eval):  97.5541
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272446,97.5541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.913
  maximum absolute entry in einsum_ir solution: 109.913
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143724
  time (eval):    0.0150763
  gflops (eval):  176.291
  gflops (total): 160.948
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143724,0.0150763,176.291,160.948

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124095
  gflops (total): 21.4177
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272909
  gflops (eval):  97.3886
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272909,97.3886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.315
  maximum absolute entry in einsum_ir solution: 105.315
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0014278
  time (eval):    0.0149983
  gflops (eval):  177.209
  gflops (total): 161.805
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0014278,0.0149983,177.209,161.805

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.121531
  gflops (total): 21.8695
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.8695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272137
  gflops (eval):  97.665
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272137,97.665,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.5792
  maximum absolute entry in einsum_ir solution: 98.5792
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00171183
  time (eval):    0.0150472
  gflops (eval):  176.633
  gflops (total): 158.591
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00171183,0.0150472,176.633,158.591

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123633
  gflops (total): 21.4977
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273866
  gflops (eval):  97.0484
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273866,97.0484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3629
  maximum absolute entry in einsum_ir solution: 98.3629
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142624
  time (eval):    0.01513
  gflops (eval):  175.666
  gflops (total): 160.533
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142624,0.01513,175.666,160.533

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124847
  gflops (total): 21.2886
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.2886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0265387
  gflops (eval):  100.149
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0265387,100.149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.139
  maximum absolute entry in einsum_ir solution: 100.139
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143393
  time (eval):    0.0148852
  gflops (eval):  178.555
  gflops (total): 162.865
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143393,0.0148852,178.555,162.865

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123563
  gflops (total): 21.5099
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270479
  gflops (eval):  98.2634
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270479,98.2634,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.202
  maximum absolute entry in einsum_ir solution: 104.202
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140404
  time (eval):    0.0150099
  gflops (eval):  177.072
  gflops (total): 161.925
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140404,0.0150099,177.072,161.925

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124125
  gflops (total): 21.4124
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274045
  gflops (eval):  96.9848
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274045,96.9848,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.581
  maximum absolute entry in einsum_ir solution: 100.581
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143689
  time (eval):    0.0149885
  gflops (eval):  177.324
  gflops (total): 161.812
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143689,0.0149885,177.324,161.812

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.125184
  gflops (total): 21.2313
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.2313

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274269
  gflops (eval):  96.9056
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274269,96.9056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.8659
  maximum absolute entry in einsum_ir solution: 99.8659
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143408
  time (eval):    0.0149569
  gflops (eval):  177.699
  gflops (total): 162.151
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143408,0.0149569,177.699,162.151

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123027
  gflops (total): 21.6035
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271164
  gflops (eval):  98.0154
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271164,98.0154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.054
  maximum absolute entry in einsum_ir solution: 100.054
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143758
  time (eval):    0.0149348
  gflops (eval):  177.962
  gflops (total): 162.336
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143758,0.0149348,177.962,162.336

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122753
  gflops (total): 21.6517
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0266255
  gflops (eval):  99.8223
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0266255,99.8223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.667
  maximum absolute entry in einsum_ir solution: 101.667
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145029
  time (eval):    0.0151502
  gflops (eval):  175.431
  gflops (total): 160.105
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145029,0.0151502,175.431,160.105

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122423
  gflops (total): 21.7102
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.7102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272833
  gflops (eval):  97.4156
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272833,97.4156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.5886
  maximum absolute entry in einsum_ir solution: 98.5886
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142655
  time (eval):    0.0150111
  gflops (eval):  177.057
  gflops (total): 161.691
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142655,0.0150111,177.057,161.691

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122587
  gflops (total): 21.681
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273646
  gflops (eval):  97.1264
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273646,97.1264,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.222
  maximum absolute entry in einsum_ir solution: 104.222
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141849
  time (eval):    0.0148229
  gflops (eval):  179.306
  gflops (total): 163.645
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141849,0.0148229,179.306,163.645

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123962
  gflops (total): 21.4405
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274119
  gflops (eval):  96.9588
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274119,96.9588,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.585
  maximum absolute entry in einsum_ir solution: 103.585
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.001436
  time (eval):    0.0149591
  gflops (eval):  177.673
  gflops (total): 162.111
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.001436,0.0149591,177.673,162.111

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122968
  gflops (total): 21.6138
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.026944
  gflops (eval):  98.6423
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.026944,98.6423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.609
  maximum absolute entry in einsum_ir solution: 103.609
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142684
  time (eval):    0.0149435
  gflops (eval):  177.858
  gflops (total): 162.356
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142684,0.0149435,177.858,162.356

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122779
  gflops (total): 21.6472
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273532
  gflops (eval):  97.1666
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273532,97.1666,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.0027
  maximum absolute entry in einsum_ir solution: 99.0028
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00153999
  time (eval):    0.0149466
  gflops (eval):  177.821
  gflops (total): 161.211
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00153999,0.0149466,177.821,161.211

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124241
  gflops (total): 21.3925
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.3925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276912
  gflops (eval):  95.9808
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276912,95.9808,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.913
  maximum absolute entry in einsum_ir solution: 107.913
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143187
  time (eval):    0.0149427
  gflops (eval):  177.868
  gflops (total): 162.314
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143187,0.0149427,177.868,162.314

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124053
  gflops (total): 21.4248
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.02767
  gflops (eval):  96.0544
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.02767,96.0544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5925
  maximum absolute entry in einsum_ir solution: 99.5925
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143301
  time (eval):    0.0149874
  gflops (eval):  177.337
  gflops (total): 161.861
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143301,0.0149874,177.337,161.861

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124315
  gflops (total): 21.3798
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.3798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276188
  gflops (eval):  96.2323
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276188,96.2323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.889
  maximum absolute entry in einsum_ir solution: 103.889
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142832
  time (eval):    0.0149455
  gflops (eval):  177.834
  gflops (total): 162.322
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142832,0.0149455,177.834,162.322

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122276
  gflops (total): 21.7362
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.7362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272103
  gflops (eval):  97.677
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272103,97.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.632
  maximum absolute entry in einsum_ir solution: 101.632
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144178
  time (eval):    0.0151515
  gflops (eval):  175.416
  gflops (total): 160.174
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144178,0.0151515,175.416,160.174

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123599
  gflops (total): 21.5036
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275903
  gflops (eval):  96.3317
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275903,96.3317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.991
  maximum absolute entry in einsum_ir solution: 108.991
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143273
  time (eval):    0.0150149
  gflops (eval):  177.013
  gflops (total): 161.593
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143273,0.0150149,177.013,161.593

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124056
  gflops (total): 21.4244
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4244

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273683
  gflops (eval):  97.1131
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273683,97.1131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.978
  maximum absolute entry in einsum_ir solution: 100.978
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00155602
  time (eval):    0.0149674
  gflops (eval):  177.574
  gflops (total): 160.852
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00155602,0.0149674,177.574,160.852

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.121992
  gflops (total): 21.7868
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.7868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027325
  gflops (eval):  97.2671
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027325,97.2671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.515
  maximum absolute entry in einsum_ir solution: 102.515
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142737
  time (eval):    0.0148708
  gflops (eval):  178.728
  gflops (total): 163.075
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142737,0.0148708,178.728,163.075

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123156
  gflops (total): 21.581
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275443
  gflops (eval):  96.4925
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275443,96.4925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.855
  maximum absolute entry in einsum_ir solution: 106.855
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142934
  time (eval):    0.01505
  gflops (eval):  176.6
  gflops (total): 161.282
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142934,0.01505,176.6,161.282

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122758
  gflops (total): 21.6509
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.6509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273813
  gflops (eval):  97.067
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273813,97.067,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.053
  maximum absolute entry in einsum_ir solution: 102.053
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141949
  time (eval):    0.0150553
  gflops (eval):  176.538
  gflops (total): 161.327
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141949,0.0150553,176.538,161.327

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.121844
  gflops (total): 21.8133
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.8133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275511
  gflops (eval):  96.4687
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275511,96.4687,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.024
  maximum absolute entry in einsum_ir solution: 115.024
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142042
  time (eval):    0.0149182
  gflops (eval):  178.16
  gflops (total): 162.671
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142042,0.0149182,178.16,162.671

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.121641
  gflops (total): 21.8497
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.8497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274396
  gflops (eval):  96.8608
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274396,96.8608,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.498
  maximum absolute entry in einsum_ir solution: 100.498
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143063
  time (eval):    0.0150867
  gflops (eval):  176.17
  gflops (total): 160.911
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143063,0.0150867,176.17,160.911

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.121457
  gflops (total): 21.8829
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.8829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271934
  gflops (eval):  97.7377
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271934,97.7377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.786
  maximum absolute entry in einsum_ir solution: 102.786
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00168212
  time (eval):    0.0149972
  gflops (eval):  177.221
  gflops (total): 159.348
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00168212,0.0149972,177.221,159.348

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.122639
  gflops (total): 21.672
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274897
  gflops (eval):  96.6843
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274897,96.6843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.712
  maximum absolute entry in einsum_ir solution: 102.712
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143162
  time (eval):    0.0149212
  gflops (eval):  178.124
  gflops (total): 162.53
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143162,0.0149212,178.124,162.53

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123345
  gflops (total): 21.5479
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273077
  gflops (eval):  97.3287
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273077,97.3287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7405
  maximum absolute entry in einsum_ir solution: 99.7405
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144783
  time (eval):    0.0148551
  gflops (eval):  178.916
  gflops (total): 163.027
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144783,0.0148551,178.916,163.027

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.12369
  gflops (total): 21.4878
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272393
  gflops (eval):  97.573
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272393,97.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.521
  maximum absolute entry in einsum_ir solution: 106.521
  maximum element-wise difference:              0.000102997
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0017144
  time (eval):    0.0151284
  gflops (eval):  175.685
  gflops (total): 157.802
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0017144,0.0151284,175.685,157.802

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123825
  gflops (total): 21.4643
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.4643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275292
  gflops (eval):  96.5454
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275292,96.5454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.471
  maximum absolute entry in einsum_ir solution: 111.471
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143866
  time (eval):    0.0150616
  gflops (eval):  176.464
  gflops (total): 161.078
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143866,0.0150616,176.464,161.078

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123246
  gflops (total): 21.5651
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272769
  gflops (eval):  97.4386
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272769,97.4386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.802
  maximum absolute entry in einsum_ir solution: 104.802
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00168194
  time (eval):    0.0150078
  gflops (eval):  177.096
  gflops (total): 159.248
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00168194,0.0150078,177.096,159.248

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.124254
  gflops (total): 21.3902
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.3902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271767
  gflops (eval):  97.7979
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271767,97.7979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.45
  maximum absolute entry in einsum_ir solution: 109.45
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143306
  time (eval):    0.015
  gflops (eval):  177.188
  gflops (total): 161.736
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143306,0.015,177.188,161.736

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123605
  gflops (total): 21.5025
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273198
  gflops (eval):  97.2854
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273198,97.2854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.772
  maximum absolute entry in einsum_ir solution: 104.772
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.001426
  time (eval):    0.0150493
  gflops (eval):  176.607
  gflops (total): 161.321
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.001426,0.0150493,176.607,161.321

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.123375
  gflops (total): 21.5425
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,21.5425

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273042
  gflops (eval):  97.3412
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273042,97.3412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.933
  maximum absolute entry in einsum_ir solution: 101.933
  maximum element-wise difference:              0.000102997
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014149
  time (eval):    0.0241727
  gflops (eval):  449.59
  gflops (total): 424.729
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014149,0.0241727,449.59,424.729

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0572981
  gflops (total): 189.671
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0490102
  gflops (eval):  221.746
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0490102,221.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2742
  maximum absolute entry in einsum_ir solution: 61.2742
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144135
  time (eval):    0.0242121
  gflops (eval):  448.858
  gflops (total): 423.639
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144135,0.0242121,448.858,423.639

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0570822
  gflops (total): 190.389
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0475215
  gflops (eval):  228.693
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0475215,228.693,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4722
  maximum absolute entry in einsum_ir solution: 58.4722
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146781
  time (eval):    0.024223
  gflops (eval):  448.657
  gflops (total): 423.023
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146781,0.024223,448.657,423.023

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0581226
  gflops (total): 186.981
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,186.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487461
  gflops (eval):  222.947
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487461,222.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4294
  maximum absolute entry in einsum_ir solution: 60.4294
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001464
  time (eval):    0.0241787
  gflops (eval):  449.48
  gflops (total): 423.818
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.001464,0.0241787,449.48,423.818

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056158
  gflops (total): 193.522
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492678
  gflops (eval):  220.587
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492678,220.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9794
  maximum absolute entry in einsum_ir solution: 58.9794
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142552
  time (eval):    0.0242282
  gflops (eval):  448.561
  gflops (total): 423.636
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142552,0.0242282,448.561,423.636

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567912
  gflops (total): 191.364
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487744
  gflops (eval):  222.818
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487744,222.818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2046
  maximum absolute entry in einsum_ir solution: 61.2046
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143032
  time (eval):    0.024232
  gflops (eval):  448.49
  gflops (total): 423.493
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143032,0.024232,448.49,423.493

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562117
  gflops (total): 193.337
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486194
  gflops (eval):  223.528
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486194,223.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.7996
  maximum absolute entry in einsum_ir solution: 63.7996
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142649
  time (eval):    0.0242098
  gflops (eval):  448.902
  gflops (total): 423.923
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142649,0.0242098,448.902,423.923

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565088
  gflops (total): 192.321
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482761
  gflops (eval):  225.118
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482761,225.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0687
  maximum absolute entry in einsum_ir solution: 63.0687
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014092
  time (eval):    0.0241745
  gflops (eval):  449.557
  gflops (total): 424.795
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014092,0.0241745,449.557,424.795

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.057029
  gflops (total): 190.566
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484593
  gflops (eval):  224.267
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484593,224.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8894
  maximum absolute entry in einsum_ir solution: 58.8894
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144156
  time (eval):    0.023936
  gflops (eval):  454.037
  gflops (total): 428.246
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144156,0.023936,454.037,428.246

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056819
  gflops (total): 191.271
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.271

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0475497
  gflops (eval):  228.557
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0475497,228.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4606
  maximum absolute entry in einsum_ir solution: 59.4606
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141885
  time (eval):    0.0241516
  gflops (eval):  449.983
  gflops (total): 425.014
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141885,0.0241516,449.983,425.014

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569023
  gflops (total): 190.991
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.047867
  gflops (eval):  227.042
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.047867,227.042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.1078
  maximum absolute entry in einsum_ir solution: 64.1078
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014101
  time (eval):    0.0242385
  gflops (eval):  448.371
  gflops (total): 423.721
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014101,0.0242385,448.371,423.721

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0576931
  gflops (total): 188.373
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,188.373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048108
  gflops (eval):  225.905
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048108,225.905,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.873
  maximum absolute entry in einsum_ir solution: 59.873
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142024
  time (eval):    0.0241708
  gflops (eval):  449.626
  gflops (total): 424.673
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142024,0.0241708,449.626,424.673

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0571355
  gflops (total): 190.211
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487943
  gflops (eval):  222.727
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487943,222.727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3322
  maximum absolute entry in einsum_ir solution: 58.3322
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00152714
  time (eval):    0.0241303
  gflops (eval):  450.38
  gflops (total): 423.574
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00152714,0.0241303,450.38,423.574

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568531
  gflops (total): 191.156
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483468
  gflops (eval):  224.789
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483468,224.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3685
  maximum absolute entry in einsum_ir solution: 60.3685
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141569
  time (eval):    0.0239855
  gflops (eval):  453.1
  gflops (total): 427.847
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141569,0.0239855,453.1,427.847

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0579065
  gflops (total): 187.679
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,187.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486996
  gflops (eval):  223.16
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486996,223.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7933
  maximum absolute entry in einsum_ir solution: 57.7933
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142785
  time (eval):    0.024152
  gflops (eval):  449.976
  gflops (total): 424.858
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142785,0.024152,449.976,424.858

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0564552
  gflops (total): 192.503
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483344
  gflops (eval):  224.847
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483344,224.847,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0245
  maximum absolute entry in einsum_ir solution: 60.0245
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142102
  time (eval):    0.0242319
  gflops (eval):  448.493
  gflops (total): 423.649
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142102,0.0242319,448.493,423.649

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565423
  gflops (total): 192.207
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0495393
  gflops (eval):  219.378
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0495393,219.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5481
  maximum absolute entry in einsum_ir solution: 55.5481
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144261
  time (eval):    0.0240191
  gflops (eval):  452.467
  gflops (total): 426.831
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144261,0.0240191,452.467,426.831

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0573988
  gflops (total): 189.339
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.339

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048242
  gflops (eval):  225.277
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048242,225.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0227
  maximum absolute entry in einsum_ir solution: 60.0227
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142118
  time (eval):    0.0242498
  gflops (eval):  448.162
  gflops (total): 423.351
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142118,0.0242498,448.162,423.351

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566711
  gflops (total): 191.77
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478877
  gflops (eval):  226.944
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478877,226.944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.2601
  maximum absolute entry in einsum_ir solution: 66.2601
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141582
  time (eval):    0.0242122
  gflops (eval):  448.857
  gflops (total): 424.06
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141582,0.0242122,448.857,424.06

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563496
  gflops (total): 192.864
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.864

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048128
  gflops (eval):  225.811
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048128,225.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4493
  maximum absolute entry in einsum_ir solution: 60.4493
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141596
  time (eval):    0.0241269
  gflops (eval):  450.444
  gflops (total): 425.474
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141596,0.0241269,450.444,425.474

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562635
  gflops (total): 193.159
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483927
  gflops (eval):  224.576
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483927,224.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.8092
  maximum absolute entry in einsum_ir solution: 64.8092
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143283
  time (eval):    0.0241486
  gflops (eval):  450.038
  gflops (total): 424.832
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143283,0.0241486,450.038,424.832

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567461
  gflops (total): 191.516
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481813
  gflops (eval):  225.561
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481813,225.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      69.3903
  maximum absolute entry in einsum_ir solution: 69.3903
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142908
  time (eval):    0.0242227
  gflops (eval):  448.663
  gflops (total): 423.668
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142908,0.0242227,448.663,423.668

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.05708
  gflops (total): 190.396
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048384
  gflops (eval):  224.616
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048384,224.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2621
  maximum absolute entry in einsum_ir solution: 58.2621
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142623
  time (eval):    0.0242179
  gflops (eval):  448.751
  gflops (total): 423.794
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142623,0.0242179,448.751,423.794

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562011
  gflops (total): 193.374
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479128
  gflops (eval):  226.825
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479128,226.825,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9453
  maximum absolute entry in einsum_ir solution: 56.9453
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00149709
  time (eval):    0.0280908
  gflops (eval):  386.881
  gflops (total): 367.306
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00149709,0.0280908,386.881,367.306

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567244
  gflops (total): 191.59
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485365
  gflops (eval):  223.91
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485365,223.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5318
  maximum absolute entry in einsum_ir solution: 58.5318
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142498
  time (eval):    0.0241803
  gflops (eval):  449.448
  gflops (total): 424.436
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142498,0.0241803,449.448,424.436

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568415
  gflops (total): 191.195
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478717
  gflops (eval):  227.02
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478717,227.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2952
  maximum absolute entry in einsum_ir solution: 59.2952
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143476
  time (eval):    0.024221
  gflops (eval):  448.694
  gflops (total): 423.602
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143476,0.024221,448.694,423.602

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0571183
  gflops (total): 190.269
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0495623
  gflops (eval):  219.276
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0495623,219.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5632
  maximum absolute entry in einsum_ir solution: 59.5632
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142954
  time (eval):    0.0242017
  gflops (eval):  449.052
  gflops (total): 424.007
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142954,0.0242017,449.052,424.007

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0576183
  gflops (total): 188.617
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,188.617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478385
  gflops (eval):  227.177
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478385,227.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2209
  maximum absolute entry in einsum_ir solution: 58.2209
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141654
  time (eval):    0.0241774
  gflops (eval):  449.503
  gflops (total): 424.625
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141654,0.0241774,449.503,424.625

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567449
  gflops (total): 191.52
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482733
  gflops (eval):  225.131
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482733,225.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7242
  maximum absolute entry in einsum_ir solution: 57.7242
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144727
  time (eval):    0.0241955
  gflops (eval):  449.167
  gflops (total): 423.817
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144727,0.0241955,449.167,423.817

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0574734
  gflops (total): 189.093
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478671
  gflops (eval):  227.042
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478671,227.042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.685
  maximum absolute entry in einsum_ir solution: 60.685
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141665
  time (eval):    0.0241642
  gflops (eval):  449.749
  gflops (total): 424.842
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141665,0.0241642,449.749,424.842

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0564275
  gflops (total): 192.598
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493589
  gflops (eval):  220.18
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493589,220.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7231
  maximum absolute entry in einsum_ir solution: 60.7231
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140985
  time (eval):    0.0241761
  gflops (eval):  449.527
  gflops (total): 424.757
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140985,0.0241761,449.527,424.757

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565131
  gflops (total): 192.306
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482981
  gflops (eval):  225.015
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482981,225.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9574
  maximum absolute entry in einsum_ir solution: 57.9574
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142008
  time (eval):    0.0240417
  gflops (eval):  452.04
  gflops (total): 426.829
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142008,0.0240417,452.04,426.829

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568326
  gflops (total): 191.225
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048923
  gflops (eval):  222.141
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048923,222.141,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7144
  maximum absolute entry in einsum_ir solution: 60.7144
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142581
  time (eval):    0.0242026
  gflops (eval):  449.035
  gflops (total): 424.054
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142581,0.0242026,449.035,424.054

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565782
  gflops (total): 192.085
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482821
  gflops (eval):  225.09
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482821,225.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4079
  maximum absolute entry in einsum_ir solution: 60.4079
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145194
  time (eval):    0.0242157
  gflops (eval):  448.792
  gflops (total): 423.405
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145194,0.0242157,448.792,423.405

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565778
  gflops (total): 192.086
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048224
  gflops (eval):  225.361
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048224,225.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9468
  maximum absolute entry in einsum_ir solution: 60.9468
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146857
  time (eval):    0.0241803
  gflops (eval):  449.45
  gflops (total): 423.716
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146857,0.0241803,449.45,423.716

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0573128
  gflops (total): 189.623
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484573
  gflops (eval):  224.276
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484573,224.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5416
  maximum absolute entry in einsum_ir solution: 56.5416
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142092
  time (eval):    0.0241991
  gflops (eval):  449.101
  gflops (total): 424.193
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142092,0.0241991,449.101,424.193

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0564894
  gflops (total): 192.387
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474839
  gflops (eval):  228.874
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474839,228.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1183
  maximum absolute entry in einsum_ir solution: 59.1183
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001423
  time (eval):    0.024157
  gflops (eval):  449.884
  gflops (total): 424.857
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.001423,0.024157,449.884,424.857

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566039
  gflops (total): 191.998
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480714
  gflops (eval):  226.077
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480714,226.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4781
  maximum absolute entry in einsum_ir solution: 59.4781
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142057
  time (eval):    0.0242441
  gflops (eval):  448.266
  gflops (total): 423.454
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142057,0.0242441,448.266,423.454

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569371
  gflops (total): 190.874
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.874

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479626
  gflops (eval):  226.589
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479626,226.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9166
  maximum absolute entry in einsum_ir solution: 57.9166
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142116
  time (eval):    0.0242103
  gflops (eval):  448.892
  gflops (total): 424.003
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142116,0.0242103,448.892,424.003

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561693
  gflops (total): 193.483
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482605
  gflops (eval):  225.191
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482605,225.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.9072
  maximum absolute entry in einsum_ir solution: 64.9072
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00149689
  time (eval):    0.0241492
  gflops (eval):  450.027
  gflops (total): 423.761
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00149689,0.0241492,450.027,423.761

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0570949
  gflops (total): 190.347
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491255
  gflops (eval):  221.226
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491255,221.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9398
  maximum absolute entry in einsum_ir solution: 57.9398
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014218
  time (eval):    0.0241642
  gflops (eval):  449.748
  gflops (total): 424.756
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014218,0.0241642,449.748,424.756

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056543
  gflops (total): 192.204
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491998
  gflops (eval):  220.891
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491998,220.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9632
  maximum absolute entry in einsum_ir solution: 55.9632
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142224
  time (eval):    0.0240825
  gflops (eval):  451.275
  gflops (total): 426.11
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142224,0.0240825,451.275,426.11

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569916
  gflops (total): 190.692
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479291
  gflops (eval):  226.748
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479291,226.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6072
  maximum absolute entry in einsum_ir solution: 59.6072
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143459
  time (eval):    0.0241396
  gflops (eval):  450.208
  gflops (total): 424.953
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143459,0.0241396,450.208,424.953

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0579339
  gflops (total): 187.59
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,187.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486337
  gflops (eval):  223.463
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486337,223.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3391
  maximum absolute entry in einsum_ir solution: 57.3391
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142654
  time (eval):    0.024257
  gflops (eval):  448.028
  gflops (total): 423.143
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142654,0.024257,448.028,423.143

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565534
  gflops (total): 192.169
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486115
  gflops (eval):  223.565
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486115,223.565,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7777
  maximum absolute entry in einsum_ir solution: 58.7777
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142833
  time (eval):    0.0241583
  gflops (eval):  449.859
  gflops (total): 424.747
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142833,0.0241583,449.859,424.747

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056641
  gflops (total): 191.872
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488668
  gflops (eval):  222.397
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488668,222.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.7716
  maximum absolute entry in einsum_ir solution: 64.7716
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142622
  time (eval):    0.0240484
  gflops (eval):  451.914
  gflops (total): 426.613
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142622,0.0240484,451.914,426.613

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566448
  gflops (total): 191.859
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048609
  gflops (eval):  223.576
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048609,223.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0283
  maximum absolute entry in einsum_ir solution: 60.0283
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014253
  time (eval):    0.0242532
  gflops (eval):  448.099
  gflops (total): 423.227
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014253,0.0242532,448.099,423.227

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569632
  gflops (total): 190.787
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484169
  gflops (eval):  224.463
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484169,224.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2527
  maximum absolute entry in einsum_ir solution: 56.2527
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142177
  time (eval):    0.0242321
  gflops (eval):  448.489
  gflops (total): 423.633
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142177,0.0242321,448.489,423.633

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.057352
  gflops (total): 189.493
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0490222
  gflops (eval):  221.692
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0490222,221.692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9268
  maximum absolute entry in einsum_ir solution: 55.9268
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142775
  time (eval):    0.0241375
  gflops (eval):  450.246
  gflops (total): 425.101
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142775,0.0241375,450.246,425.101

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568767
  gflops (total): 191.077
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483428
  gflops (eval):  224.807
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483428,224.807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      68.0674
  maximum absolute entry in einsum_ir solution: 68.0674
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143625
  time (eval):    0.0241702
  gflops (eval):  449.637
  gflops (total): 424.417
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143625,0.0241702,449.637,424.417

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566256
  gflops (total): 191.924
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486599
  gflops (eval):  223.343
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486599,223.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3153
  maximum absolute entry in einsum_ir solution: 58.3153
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014882
  time (eval):    0.0241894
  gflops (eval):  449.28
  gflops (total): 423.241
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014882,0.0241894,449.28,423.241

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565926
  gflops (total): 192.036
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485271
  gflops (eval):  223.954
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485271,223.954,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.4956
  maximum absolute entry in einsum_ir solution: 63.4956
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00164499
  time (eval):    0.0240941
  gflops (eval):  451.057
  gflops (total): 422.23
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00164499,0.0240941,451.057,422.23

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0577992
  gflops (total): 188.027
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,188.027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474637
  gflops (eval):  228.971
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474637,228.971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9776
  maximum absolute entry in einsum_ir solution: 58.9776
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0016872
  time (eval):    0.0241601
  gflops (eval):  449.826
  gflops (total): 420.463
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0016872,0.0241601,449.826,420.463

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567252
  gflops (total): 191.587
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488194
  gflops (eval):  222.613
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488194,222.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3397
  maximum absolute entry in einsum_ir solution: 61.3397
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014181
  time (eval):    0.0241714
  gflops (eval):  449.615
  gflops (total): 424.699
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014181,0.0241714,449.615,424.699

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0578105
  gflops (total): 187.99
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,187.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0477858
  gflops (eval):  227.428
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0477858,227.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4302
  maximum absolute entry in einsum_ir solution: 59.4302
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141533
  time (eval):    0.0239512
  gflops (eval):  453.749
  gflops (total): 428.432
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141533,0.0239512,453.749,428.432

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0570859
  gflops (total): 190.377
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0500791
  gflops (eval):  217.013
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0500791,217.013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8598
  maximum absolute entry in einsum_ir solution: 59.8598
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145536
  time (eval):    0.0242477
  gflops (eval):  448.2
  gflops (total): 422.822
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145536,0.0242477,448.2,422.822

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0570905
  gflops (total): 190.361
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0477325
  gflops (eval):  227.682
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0477325,227.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7852
  maximum absolute entry in einsum_ir solution: 56.7852
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00151304
  time (eval):    0.02422
  gflops (eval):  448.713
  gflops (total): 422.33
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00151304,0.02422,448.713,422.33

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568023
  gflops (total): 191.327
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484523
  gflops (eval):  224.3
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484523,224.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7592
  maximum absolute entry in einsum_ir solution: 57.7592
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142467
  time (eval):    0.0242105
  gflops (eval):  448.889
  gflops (total): 423.943
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142467,0.0242105,448.889,423.943

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0581322
  gflops (total): 186.95
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,186.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492692
  gflops (eval):  220.58
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492692,220.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3868
  maximum absolute entry in einsum_ir solution: 60.3868
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143226
  time (eval):    0.0242126
  gflops (eval):  448.85
  gflops (total): 423.782
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143226,0.0242126,448.85,423.782

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0571812
  gflops (total): 190.059
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494828
  gflops (eval):  219.628
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494828,219.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3968
  maximum absolute entry in einsum_ir solution: 61.3968
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142724
  time (eval):    0.0241011
  gflops (eval):  450.927
  gflops (total): 425.717
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142724,0.0241011,450.927,425.717

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563831
  gflops (total): 192.75
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0496048
  gflops (eval):  219.088
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0496048,219.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3819
  maximum absolute entry in einsum_ir solution: 59.3819
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141627
  time (eval):    0.0241606
  gflops (eval):  449.815
  gflops (total): 424.908
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141627,0.0241606,449.815,424.908

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566284
  gflops (total): 191.915
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048702
  gflops (eval):  223.149
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048702,223.149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4749
  maximum absolute entry in einsum_ir solution: 58.4749
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142744
  time (eval):    0.0242029
  gflops (eval):  449.029
  gflops (total): 424.021
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142744,0.0242029,449.029,424.021

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566386
  gflops (total): 191.88
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487753
  gflops (eval):  222.814
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487753,222.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7032
  maximum absolute entry in einsum_ir solution: 58.7032
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142676
  time (eval):    0.0242204
  gflops (eval):  448.706
  gflops (total): 423.744
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142676,0.0242204,448.706,423.744

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569278
  gflops (total): 190.905
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0475916
  gflops (eval):  228.356
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0475916,228.356,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8637
  maximum absolute entry in einsum_ir solution: 61.8637
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141755
  time (eval):    0.0241934
  gflops (eval):  449.206
  gflops (total): 424.342
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141755,0.0241934,449.206,424.342

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566945
  gflops (total): 191.691
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0471746
  gflops (eval):  230.374
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0471746,230.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.197
  maximum absolute entry in einsum_ir solution: 58.197
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145297
  time (eval):    0.0241924
  gflops (eval):  449.225
  gflops (total): 423.774
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145297,0.0241924,449.225,423.774

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0573853
  gflops (total): 189.383
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483009
  gflops (eval):  225.002
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483009,225.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3344
  maximum absolute entry in einsum_ir solution: 61.3344
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142298
  time (eval):    0.0239504
  gflops (eval):  453.763
  gflops (total): 428.315
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142298,0.0239504,453.763,428.315

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563731
  gflops (total): 192.784
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484688
  gflops (eval):  224.223
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484688,224.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9317
  maximum absolute entry in einsum_ir solution: 57.9317
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142874
  time (eval):    0.024181
  gflops (eval):  449.436
  gflops (total): 424.362
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142874,0.024181,449.436,424.362

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561568
  gflops (total): 193.526
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.526

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484125
  gflops (eval):  224.484
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484125,224.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5577
  maximum absolute entry in einsum_ir solution: 58.5577
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142832
  time (eval):    0.0241517
  gflops (eval):  449.982
  gflops (total): 424.856
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142832,0.0241517,449.982,424.856

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0571792
  gflops (total): 190.066
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493444
  gflops (eval):  220.244
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493444,220.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.3465
  maximum absolute entry in einsum_ir solution: 66.3465
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00152007
  time (eval):    0.0242245
  gflops (eval):  448.63
  gflops (total): 422.141
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00152007,0.0242245,448.63,422.141

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.058077
  gflops (total): 187.128
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,187.128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0475604
  gflops (eval):  228.506
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0475604,228.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1213
  maximum absolute entry in einsum_ir solution: 59.1213
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142995
  time (eval):    0.0241745
  gflops (eval):  449.556
  gflops (total): 424.45
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142995,0.0241745,449.556,424.45

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.057277
  gflops (total): 189.741
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492788
  gflops (eval):  220.537
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492788,220.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9413
  maximum absolute entry in einsum_ir solution: 61.9413
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014232
  time (eval):    0.0239849
  gflops (eval):  453.11
  gflops (total): 427.73
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014232,0.0239849,453.11,427.73

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056307
  gflops (total): 193.01
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487301
  gflops (eval):  223.02
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487301,223.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5226
  maximum absolute entry in einsum_ir solution: 60.5226
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00181009
  time (eval):    0.0242029
  gflops (eval):  449.03
  gflops (total): 417.785
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00181009,0.0242029,449.03,417.785

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0574234
  gflops (total): 189.258
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484002
  gflops (eval):  224.541
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484002,224.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.512
  maximum absolute entry in einsum_ir solution: 59.512
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141634
  time (eval):    0.0242294
  gflops (eval):  448.538
  gflops (total): 423.767
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141634,0.0242294,448.538,423.767

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0570726
  gflops (total): 190.421
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484456
  gflops (eval):  224.33
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484456,224.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2215
  maximum absolute entry in einsum_ir solution: 57.2215
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138607
  time (eval):    0.0239979
  gflops (eval):  452.866
  gflops (total): 428.138
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138607,0.0239979,452.866,428.138

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568239
  gflops (total): 191.254
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492504
  gflops (eval):  220.665
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492504,220.665,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.5446
  maximum absolute entry in einsum_ir solution: 67.5446
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00148114
  time (eval):    0.0242052
  gflops (eval):  448.988
  gflops (total): 423.098
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00148114,0.0242052,448.988,423.098

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568103
  gflops (total): 191.3
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.050322
  gflops (eval):  215.966
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.050322,215.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7646
  maximum absolute entry in einsum_ir solution: 57.7646
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139876
  time (eval):    0.0242169
  gflops (eval):  448.77
  gflops (total): 424.264
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139876,0.0242169,448.77,424.264

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0577299
  gflops (total): 188.253
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,188.253

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486439
  gflops (eval):  223.416
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486439,223.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4123
  maximum absolute entry in einsum_ir solution: 62.4123
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143589
  time (eval):    0.0242213
  gflops (eval):  448.689
  gflops (total): 423.579
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143589,0.0242213,448.689,423.579

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0576926
  gflops (total): 188.375
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,188.375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482829
  gflops (eval):  225.086
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482829,225.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9194
  maximum absolute entry in einsum_ir solution: 55.9194
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142823
  time (eval):    0.0240454
  gflops (eval):  451.972
  gflops (total): 426.631
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142823,0.0240454,451.972,426.631

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567851
  gflops (total): 191.385
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482361
  gflops (eval):  225.305
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482361,225.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.2452
  maximum absolute entry in einsum_ir solution: 67.2452
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014312
  time (eval):    0.0242003
  gflops (eval):  449.077
  gflops (total): 424.002
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014312,0.0242003,449.077,424.002

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565421
  gflops (total): 192.208
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0496834
  gflops (eval):  218.741
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0496834,218.741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9331
  maximum absolute entry in einsum_ir solution: 59.9331
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014265
  time (eval):    0.024172
  gflops (eval):  449.605
  gflops (total): 424.55
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014265,0.024172,449.605,424.55

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565317
  gflops (total): 192.243
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.243

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484756
  gflops (eval):  224.192
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484756,224.192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8416
  maximum absolute entry in einsum_ir solution: 56.8416
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141467
  time (eval):    0.0241676
  gflops (eval):  449.686
  gflops (total): 424.818
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141467,0.0241676,449.686,424.818

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056251
  gflops (total): 193.202
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483499
  gflops (eval):  224.774
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483499,224.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2042
  maximum absolute entry in einsum_ir solution: 60.2042
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142331
  time (eval):    0.0241718
  gflops (eval):  449.607
  gflops (total): 424.605
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142331,0.0241718,449.607,424.605

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569395
  gflops (total): 190.866
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492881
  gflops (eval):  220.496
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492881,220.496,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.0095
  maximum absolute entry in einsum_ir solution: 64.0095
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141868
  time (eval):    0.0242121
  gflops (eval):  448.86
  gflops (total): 424.015
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141868,0.0242121,448.86,424.015

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0572645
  gflops (total): 189.783
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.783

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0490062
  gflops (eval):  221.764
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0490062,221.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3849
  maximum absolute entry in einsum_ir solution: 59.3849
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142382
  time (eval):    0.0242334
  gflops (eval):  448.465
  gflops (total): 423.578
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142382,0.0242334,448.465,423.578

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569039
  gflops (total): 190.985
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484116
  gflops (eval):  224.488
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484116,224.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3591
  maximum absolute entry in einsum_ir solution: 59.3591
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141721
  time (eval):    0.024105
  gflops (eval):  450.853
  gflops (total): 425.818
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141721,0.024105,450.853,425.818

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567492
  gflops (total): 191.506
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048015
  gflops (eval):  226.342
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048015,226.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.2876
  maximum absolute entry in einsum_ir solution: 65.2876
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142731
  time (eval):    0.0242196
  gflops (eval):  448.72
  gflops (total): 423.747
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142731,0.0242196,448.72,423.747

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0572867
  gflops (total): 189.709
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485885
  gflops (eval):  223.67
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485885,223.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5456
  maximum absolute entry in einsum_ir solution: 54.5456
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140358
  time (eval):    0.0239784
  gflops (eval):  453.233
  gflops (total): 428.17
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140358,0.0239784,453.233,428.17

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567411
  gflops (total): 191.533
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.533

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476253
  gflops (eval):  228.194
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476253,228.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7478
  maximum absolute entry in einsum_ir solution: 59.7478
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00169062
  time (eval):    0.0241803
  gflops (eval):  449.449
  gflops (total): 420.079
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00169062,0.0241803,449.449,420.079

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566916
  gflops (total): 191.701
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493919
  gflops (eval):  220.033
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493919,220.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0164
  maximum absolute entry in einsum_ir solution: 60.0164
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142666
  time (eval):    0.0242098
  gflops (eval):  448.903
  gflops (total): 423.921
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142666,0.0242098,448.903,423.921

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569871
  gflops (total): 190.707
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486001
  gflops (eval):  223.617
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486001,223.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.303
  maximum absolute entry in einsum_ir solution: 55.303
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143033
  time (eval):    0.0241165
  gflops (eval):  450.639
  gflops (total): 425.408
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143033,0.0241165,450.639,425.408

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563658
  gflops (total): 192.809
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0489532
  gflops (eval):  222.004
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0489532,222.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1499
  maximum absolute entry in einsum_ir solution: 56.1499
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142815
  time (eval):    0.0242304
  gflops (eval):  448.521
  gflops (total): 423.556
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142815,0.0242304,448.521,423.556

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567326
  gflops (total): 191.562
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0499013
  gflops (eval):  217.786
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0499013,217.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8553
  maximum absolute entry in einsum_ir solution: 59.8553
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00148236
  time (eval):    0.0241233
  gflops (eval):  450.512
  gflops (total): 424.431
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00148236,0.0241233,450.512,424.431

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056508
  gflops (total): 192.323
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0510896
  gflops (eval):  212.721
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0510896,212.721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.8207
  maximum absolute entry in einsum_ir solution: 66.8207
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142491
  time (eval):    0.0242102
  gflops (eval):  448.893
  gflops (total): 423.942
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142491,0.0242102,448.893,423.942

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056293
  gflops (total): 193.058
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483942
  gflops (eval):  224.569
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483942,224.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8286
  maximum absolute entry in einsum_ir solution: 57.8286
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143201
  time (eval):    0.0241981
  gflops (eval):  449.119
  gflops (total): 424.026
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143201,0.0241981,449.119,424.026

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569849
  gflops (total): 190.714
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0500425
  gflops (eval):  217.172
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0500425,217.172,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1642
  maximum absolute entry in einsum_ir solution: 58.1642
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00160506
  time (eval):    0.0242134
  gflops (eval):  448.836
  gflops (total): 420.933
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00160506,0.0242134,448.836,420.933

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0570274
  gflops (total): 190.572
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048761
  gflops (eval):  222.879
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048761,222.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9049
  maximum absolute entry in einsum_ir solution: 57.9049
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143083
  time (eval):    0.0240897
  gflops (eval):  451.14
  gflops (total): 425.846
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143083,0.0240897,451.14,425.846

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0569711
  gflops (total): 190.76
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488314
  gflops (eval):  222.558
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488314,222.558,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7488
  maximum absolute entry in einsum_ir solution: 55.7488
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141411
  time (eval):    0.0241888
  gflops (eval):  449.292
  gflops (total): 424.476
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141411,0.0241888,449.292,424.476

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566991
  gflops (total): 191.675
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0489597
  gflops (eval):  221.975
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0489597,221.975,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2506
  maximum absolute entry in einsum_ir solution: 58.2506
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00154356
  time (eval):    0.0241698
  gflops (eval):  449.644
  gflops (total): 422.652
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00154356,0.0241698,449.644,422.652

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568643
  gflops (total): 191.118
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474921
  gflops (eval):  228.834
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474921,228.834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0175
  maximum absolute entry in einsum_ir solution: 61.0175
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143188
  time (eval):    0.0242104
  gflops (eval):  448.891
  gflops (total): 423.825
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143188,0.0242104,448.891,423.825

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568758
  gflops (total): 191.08
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487055
  gflops (eval):  223.133
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487055,223.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0607
  maximum absolute entry in einsum_ir solution: 58.0607
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150414
  time (eval):    0.0242381
  gflops (eval):  448.378
  gflops (total): 422.179
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150414,0.0242381,448.378,422.179

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.057381
  gflops (total): 189.398
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487586
  gflops (eval):  222.89
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487586,222.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8643
  maximum absolute entry in einsum_ir solution: 59.8643
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014147
  time (eval):    0.0250428
  gflops (eval):  433.97
  gflops (total): 410.765
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014147,0.0250428,433.97,410.765

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0957036
  gflops (total): 113.557
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551305
  gflops (eval):  197.129
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551305,197.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3804
  maximum absolute entry in einsum_ir solution: 60.3804
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014154
  time (eval):    0.024945
  gflops (eval):  435.672
  gflops (total): 412.279
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014154,0.024945,435.672,412.279

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0950801
  gflops (total): 114.302
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559206
  gflops (eval):  194.344
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559206,194.344,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1878
  maximum absolute entry in einsum_ir solution: 58.1878
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143467
  time (eval):    0.0250524
  gflops (eval):  433.804
  gflops (total): 410.307
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143467,0.0250524,433.804,410.307

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0953755
  gflops (total): 113.948
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559518
  gflops (eval):  194.235
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559518,194.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9587
  maximum absolute entry in einsum_ir solution: 58.9587
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142107
  time (eval):    0.025082
  gflops (eval):  433.292
  gflops (total): 410.059
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142107,0.025082,433.292,410.059

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.095777
  gflops (total): 113.47
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056338
  gflops (eval):  192.904
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056338,192.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7222
  maximum absolute entry in einsum_ir solution: 59.7222
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00154642
  time (eval):    0.0250745
  gflops (eval):  433.421
  gflops (total): 408.243
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00154642,0.0250745,433.421,408.243

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0948078
  gflops (total): 114.63
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556018
  gflops (eval):  195.458
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556018,195.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6115
  maximum absolute entry in einsum_ir solution: 59.6115
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144189
  time (eval):    0.0251002
  gflops (eval):  432.978
  gflops (total): 409.457
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144189,0.0251002,432.978,409.457

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954611
  gflops (total): 113.846
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554959
  gflops (eval):  195.831
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554959,195.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0949
  maximum absolute entry in einsum_ir solution: 60.0949
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014199
  time (eval):    0.0250096
  gflops (eval):  434.547
  gflops (total): 411.201
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014199,0.0250096,434.547,411.201

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0955494
  gflops (total): 113.74
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552494
  gflops (eval):  196.705
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552494,196.705,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7983
  maximum absolute entry in einsum_ir solution: 61.7983
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014165
  time (eval):    0.0250586
  gflops (eval):  433.696
  gflops (total): 410.492
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014165,0.0250586,433.696,410.492

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0943567
  gflops (total): 115.178
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,115.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558533
  gflops (eval):  194.578
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558533,194.578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0242
  maximum absolute entry in einsum_ir solution: 57.0242
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141769
  time (eval):    0.0250537
  gflops (eval):  433.781
  gflops (total): 410.549
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141769,0.0250537,433.781,410.549

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0955761
  gflops (total): 113.709
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560553
  gflops (eval):  193.877
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560553,193.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2423
  maximum absolute entry in einsum_ir solution: 58.2423
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143775
  time (eval):    0.0251009
  gflops (eval):  432.965
  gflops (total): 409.509
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143775,0.0251009,432.965,409.509

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0952315
  gflops (total): 114.12
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563693
  gflops (eval):  192.797
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563693,192.797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6081
  maximum absolute entry in einsum_ir solution: 57.6081
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142765
  time (eval):    0.0250784
  gflops (eval):  433.353
  gflops (total): 410.012
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142765,0.0250784,433.353,410.012

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0955957
  gflops (total): 113.685
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558424
  gflops (eval):  194.616
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558424,194.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9623
  maximum absolute entry in einsum_ir solution: 61.9623
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150081
  time (eval):    0.0250323
  gflops (eval):  434.153
  gflops (total): 409.595
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150081,0.0250323,434.153,409.595

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.095878
  gflops (total): 113.351
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559833
  gflops (eval):  194.126
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559833,194.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8446
  maximum absolute entry in einsum_ir solution: 58.8446
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141245
  time (eval):    0.0250522
  gflops (eval):  433.806
  gflops (total): 410.654
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141245,0.0250522,433.806,410.654

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954118
  gflops (total): 113.904
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055653
  gflops (eval):  195.278
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055653,195.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0794
  maximum absolute entry in einsum_ir solution: 56.0794
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140999
  time (eval):    0.0250683
  gflops (eval):  433.529
  gflops (total): 410.443
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140999,0.0250683,433.529,410.443

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0956687
  gflops (total): 113.598
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554571
  gflops (eval):  195.968
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554571,195.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4151
  maximum absolute entry in einsum_ir solution: 59.4151
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00177193
  time (eval):    0.0250675
  gflops (eval):  433.542
  gflops (total): 404.919
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00177193,0.0250675,433.542,404.919

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.095399
  gflops (total): 113.92
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559637
  gflops (eval):  194.194
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559637,194.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.9843
  maximum absolute entry in einsum_ir solution: 63.9843
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141975
  time (eval):    0.0250638
  gflops (eval):  433.606
  gflops (total): 410.361
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141975,0.0250638,433.606,410.361

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.094632
  gflops (total): 114.843
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0568421
  gflops (eval):  191.193
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0568421,191.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3712
  maximum absolute entry in einsum_ir solution: 62.3712
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014483
  time (eval):    0.0250198
  gflops (eval):  434.369
  gflops (total): 410.601
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014483,0.0250198,434.369,410.601

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.095194
  gflops (total): 114.165
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567755
  gflops (eval):  191.418
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567755,191.418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.202
  maximum absolute entry in einsum_ir solution: 57.202
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142441
  time (eval):    0.0250121
  gflops (eval):  434.502
  gflops (total): 411.091
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142441,0.0250121,434.502,411.091

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0960968
  gflops (total): 113.092
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567048
  gflops (eval):  191.656
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567048,191.656,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8924
  maximum absolute entry in einsum_ir solution: 56.8924
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00147851
  time (eval):    0.0250509
  gflops (eval):  433.83
  gflops (total): 409.653
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00147851,0.0250509,433.83,409.653

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0955493
  gflops (total): 113.74
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567216
  gflops (eval):  191.599
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567216,191.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9455
  maximum absolute entry in einsum_ir solution: 56.9455
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142192
  time (eval):    0.0250747
  gflops (eval):  433.418
  gflops (total): 410.159
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142192,0.0250747,433.418,410.159

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0957488
  gflops (total): 113.503
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0570418
  gflops (eval):  190.524
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0570418,190.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0957
  maximum absolute entry in einsum_ir solution: 61.0957
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142476
  time (eval):    0.0250534
  gflops (eval):  433.786
  gflops (total): 410.445
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142476,0.0250534,433.786,410.445

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0947194
  gflops (total): 114.737
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551362
  gflops (eval):  197.109
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551362,197.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3381
  maximum absolute entry in einsum_ir solution: 56.3381
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142793
  time (eval):    0.0250822
  gflops (eval):  433.289
  gflops (total): 409.95
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142793,0.0250822,433.289,409.95

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0948463
  gflops (total): 114.584
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557208
  gflops (eval):  195.041
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557208,195.041,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2734
  maximum absolute entry in einsum_ir solution: 58.2734
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140879
  time (eval):    0.0250931
  gflops (eval):  433.1
  gflops (total): 410.077
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140879,0.0250931,433.1,410.077

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0950053
  gflops (total): 114.392
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555769
  gflops (eval):  195.546
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555769,195.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7484
  maximum absolute entry in einsum_ir solution: 56.7484
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141602
  time (eval):    0.0250759
  gflops (eval):  433.397
  gflops (total): 410.231
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141602,0.0250759,433.397,410.231

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0948735
  gflops (total): 114.551
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559467
  gflops (eval):  194.253
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559467,194.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0389
  maximum absolute entry in einsum_ir solution: 58.0389
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142825
  time (eval):    0.0251124
  gflops (eval):  432.767
  gflops (total): 409.478
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142825,0.0251124,432.767,409.478

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0952888
  gflops (total): 114.051
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555744
  gflops (eval):  195.554
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555744,195.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9056
  maximum absolute entry in einsum_ir solution: 59.9056
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142071
  time (eval):    0.02503
  gflops (eval):  434.192
  gflops (total): 410.871
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142071,0.02503,434.192,410.871

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0965278
  gflops (total): 112.587
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555574
  gflops (eval):  195.614
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555574,195.614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7692
  maximum absolute entry in einsum_ir solution: 55.7692
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00148609
  time (eval):    0.0250821
  gflops (eval):  433.29
  gflops (total): 409.054
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00148609,0.0250821,433.29,409.054

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0956429
  gflops (total): 113.629
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551569
  gflops (eval):  197.035
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551569,197.035,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4447
  maximum absolute entry in einsum_ir solution: 59.4447
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00151426
  time (eval):    0.0250516
  gflops (eval):  433.817
  gflops (total): 409.09
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00151426,0.0250516,433.817,409.09

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0959585
  gflops (total): 113.255
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554939
  gflops (eval):  195.838
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554939,195.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0781
  maximum absolute entry in einsum_ir solution: 62.0781
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150733
  time (eval):    0.0250736
  gflops (eval):  433.436
  gflops (total): 408.857
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150733,0.0250736,433.436,408.857

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0966059
  gflops (total): 112.496
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0568954
  gflops (eval):  191.014
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0568954,191.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0952
  maximum absolute entry in einsum_ir solution: 60.0952
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142214
  time (eval):    0.0250516
  gflops (eval):  433.817
  gflops (total): 410.513
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142214,0.0250516,433.817,410.513

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0957154
  gflops (total): 113.543
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563301
  gflops (eval):  192.931
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563301,192.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.869
  maximum absolute entry in einsum_ir solution: 57.869
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141676
  time (eval):    0.0250683
  gflops (eval):  433.528
  gflops (total): 410.337
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141676,0.0250683,433.528,410.337

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0960514
  gflops (total): 113.146
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557452
  gflops (eval):  194.955
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557452,194.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3784
  maximum absolute entry in einsum_ir solution: 60.3784
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142101
  time (eval):    0.0250926
  gflops (eval):  433.109
  gflops (total): 409.896
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142101,0.0250926,433.109,409.896

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0951189
  gflops (total): 114.255
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552502
  gflops (eval):  196.702
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552502,196.702,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2549
  maximum absolute entry in einsum_ir solution: 60.2549
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143194
  time (eval):    0.0250137
  gflops (eval):  434.474
  gflops (total): 410.949
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143194,0.0250137,434.474,410.949

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0948889
  gflops (total): 114.532
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550237
  gflops (eval):  197.512
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550237,197.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.9758
  maximum absolute entry in einsum_ir solution: 64.9758
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143205
  time (eval):    0.0250957
  gflops (eval):  433.056
  gflops (total): 409.678
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143205,0.0250957,433.056,409.678

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0960191
  gflops (total): 113.184
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0569941
  gflops (eval):  190.683
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0569941,190.683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.565
  maximum absolute entry in einsum_ir solution: 57.565
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141635
  time (eval):    0.0251395
  gflops (eval):  432.301
  gflops (total): 409.245
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141635,0.0251395,432.301,409.245

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0950687
  gflops (total): 114.315
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560927
  gflops (eval):  193.748
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560927,193.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6164
  maximum absolute entry in einsum_ir solution: 59.6164
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142881
  time (eval):    0.0250457
  gflops (eval):  433.92
  gflops (total): 410.501
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142881,0.0250457,433.92,410.501

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954122
  gflops (total): 113.904
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560155
  gflops (eval):  194.015
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560155,194.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1838
  maximum absolute entry in einsum_ir solution: 60.1838
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143207
  time (eval):    0.0250422
  gflops (eval):  433.98
  gflops (total): 410.505
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143207,0.0250422,433.98,410.505

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954168
  gflops (total): 113.898
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559206
  gflops (eval):  194.344
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559206,194.344,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9152
  maximum absolute entry in einsum_ir solution: 59.9152
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014168
  time (eval):    0.0250632
  gflops (eval):  433.617
  gflops (total): 410.416
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014168,0.0250632,433.617,410.416

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954833
  gflops (total): 113.819
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056311
  gflops (eval):  192.997
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056311,192.997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2887
  maximum absolute entry in einsum_ir solution: 61.2887
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014296
  time (eval):    0.0250732
  gflops (eval):  433.444
  gflops (total): 410.063
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014296,0.0250732,433.444,410.063

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0955216
  gflops (total): 113.773
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.054973
  gflops (eval):  197.694
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.054973,197.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2471
  maximum absolute entry in einsum_ir solution: 58.2471
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143403
  time (eval):    0.0250836
  gflops (eval):  433.264
  gflops (total): 409.834
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143403,0.0250836,433.264,409.834

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0951585
  gflops (total): 114.208
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551607
  gflops (eval):  197.021
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551607,197.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5503
  maximum absolute entry in einsum_ir solution: 61.5503
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144758
  time (eval):    0.0250577
  gflops (eval):  433.711
  gflops (total): 410.024
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144758,0.0250577,433.711,410.024

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0957924
  gflops (total): 113.452
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558863
  gflops (eval):  194.463
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558863,194.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4562
  maximum absolute entry in einsum_ir solution: 62.4562
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142767
  time (eval):    0.0250374
  gflops (eval):  434.063
  gflops (total): 410.648
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142767,0.0250374,434.063,410.648

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.096025
  gflops (total): 113.177
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564039
  gflops (eval):  192.679
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564039,192.679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7817
  maximum absolute entry in einsum_ir solution: 58.7817
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141839
  time (eval):    0.0250986
  gflops (eval):  433.004
  gflops (total): 409.843
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141839,0.0250986,433.004,409.843

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0955671
  gflops (total): 113.719
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551379
  gflops (eval):  197.102
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551379,197.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.673
  maximum absolute entry in einsum_ir solution: 63.673
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142472
  time (eval):    0.025052
  gflops (eval):  433.811
  gflops (total): 410.467
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142472,0.025052,433.811,410.467

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0951995
  gflops (total): 114.158
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055658
  gflops (eval):  195.261
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055658,195.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6956
  maximum absolute entry in einsum_ir solution: 56.6956
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014498
  time (eval):    0.0250441
  gflops (eval):  433.947
  gflops (total): 410.2
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014498,0.0250441,433.947,410.2

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.094605
  gflops (total): 114.876
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555033
  gflops (eval):  195.805
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555033,195.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0469
  maximum absolute entry in einsum_ir solution: 57.0469
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142819
  time (eval):    0.0250912
  gflops (eval):  433.133
  gflops (total): 409.806
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142819,0.0250912,433.133,409.806

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0945714
  gflops (total): 114.917
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553271
  gflops (eval):  196.428
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553271,196.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0935
  maximum absolute entry in einsum_ir solution: 57.0935
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142293
  time (eval):    0.0250702
  gflops (eval):  433.496
  gflops (total): 410.213
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142293,0.0250702,433.496,410.213

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0951104
  gflops (total): 114.265
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056432
  gflops (eval):  192.582
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056432,192.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1181
  maximum absolute entry in einsum_ir solution: 59.1181
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142061
  time (eval):    0.025041
  gflops (eval):  434.001
  gflops (total): 410.701
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142061,0.025041,434.001,410.701

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0972632
  gflops (total): 111.736
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567435
  gflops (eval):  191.525
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567435,191.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6397
  maximum absolute entry in einsum_ir solution: 63.6397
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143037
  time (eval):    0.0250619
  gflops (eval):  433.639
  gflops (total): 410.226
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143037,0.0250619,433.639,410.226

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0965043
  gflops (total): 112.615
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560395
  gflops (eval):  193.931
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560395,193.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8161
  maximum absolute entry in einsum_ir solution: 56.8161
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142277
  time (eval):    0.0249871
  gflops (eval):  434.938
  gflops (total): 411.506
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142277,0.0249871,434.938,411.506

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954646
  gflops (total): 113.841
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556689
  gflops (eval):  195.222
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556689,195.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3711
  maximum absolute entry in einsum_ir solution: 56.3711
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142239
  time (eval):    0.0250896
  gflops (eval):  433.16
  gflops (total): 409.921
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142239,0.0250896,433.16,409.921

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0944866
  gflops (total): 115.02
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,115.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559533
  gflops (eval):  194.23
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559533,194.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4678
  maximum absolute entry in einsum_ir solution: 57.4678
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142865
  time (eval):    0.0250854
  gflops (eval):  433.233
  gflops (total): 409.889
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142865,0.0250854,433.233,409.889

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0962125
  gflops (total): 112.956
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0573014
  gflops (eval):  189.661
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0573014,189.661,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4091
  maximum absolute entry in einsum_ir solution: 62.4091
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142369
  time (eval):    0.0250838
  gflops (eval):  433.261
  gflops (total): 409.991
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142369,0.0250838,433.261,409.991

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0961848
  gflops (total): 112.989
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0547801
  gflops (eval):  198.39
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0547801,198.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9383
  maximum absolute entry in einsum_ir solution: 58.9383
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141724
  time (eval):    0.0250354
  gflops (eval):  434.099
  gflops (total): 410.841
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141724,0.0250354,434.099,410.841

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0951798
  gflops (total): 114.182
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561365
  gflops (eval):  193.596
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561365,193.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9414
  maximum absolute entry in einsum_ir solution: 59.9414
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141962
  time (eval):    0.0250439
  gflops (eval):  433.952
  gflops (total): 410.672
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141962,0.0250439,433.952,410.672

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954227
  gflops (total): 113.891
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556097
  gflops (eval):  195.43
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556097,195.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.148
  maximum absolute entry in einsum_ir solution: 61.148
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142478
  time (eval):    0.025079
  gflops (eval):  433.343
  gflops (total): 410.048
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142478,0.025079,433.343,410.048

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0946878
  gflops (total): 114.775
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558962
  gflops (eval):  194.429
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558962,194.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.012
  maximum absolute entry in einsum_ir solution: 60.012
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142271
  time (eval):    0.0250656
  gflops (eval):  433.575
  gflops (total): 410.287
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142271,0.0250656,433.575,410.287

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0960596
  gflops (total): 113.136
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558456
  gflops (eval):  194.605
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558456,194.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7822
  maximum absolute entry in einsum_ir solution: 59.7822
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141344
  time (eval):    0.0250193
  gflops (eval):  434.378
  gflops (total): 411.15
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141344,0.0250193,434.378,411.15

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0944391
  gflops (total): 115.078
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,115.078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559616
  gflops (eval):  194.201
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559616,194.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7487
  maximum absolute entry in einsum_ir solution: 57.7487
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143421
  time (eval):    0.0255015
  gflops (eval):  426.164
  gflops (total): 403.472
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143421,0.0255015,426.164,403.472

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0975253
  gflops (total): 111.436
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553976
  gflops (eval):  196.178
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553976,196.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6296
  maximum absolute entry in einsum_ir solution: 63.6296
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141998
  time (eval):    0.0250649
  gflops (eval):  433.588
  gflops (total): 410.341
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141998,0.0250649,433.588,410.341

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0943154
  gflops (total): 115.228
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,115.228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055293
  gflops (eval):  196.55
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055293,196.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4783
  maximum absolute entry in einsum_ir solution: 56.4783
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142123
  time (eval):    0.0251001
  gflops (eval):  432.979
  gflops (total): 409.777
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142123,0.0251001,432.979,409.777

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0948052
  gflops (total): 114.633
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560808
  gflops (eval):  193.789
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560808,193.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8399
  maximum absolute entry in einsum_ir solution: 61.8399
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014192
  time (eval):    0.025024
  gflops (eval):  434.296
  gflops (total): 410.988
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014192,0.025024,434.296,410.988

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0948281
  gflops (total): 114.606
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554946
  gflops (eval):  195.836
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554946,195.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.199
  maximum absolute entry in einsum_ir solution: 61.199
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014251
  time (eval):    0.025059
  gflops (eval):  433.689
  gflops (total): 410.352
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014251,0.025059,433.689,410.352

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0944079
  gflops (total): 115.116
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,115.116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550193
  gflops (eval):  197.528
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550193,197.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3235
  maximum absolute entry in einsum_ir solution: 60.3235
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142414
  time (eval):    0.0250101
  gflops (eval):  434.537
  gflops (total): 411.127
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142414,0.0250101,434.537,411.127

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0961532
  gflops (total): 113.026
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554544
  gflops (eval):  195.978
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554544,195.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1932
  maximum absolute entry in einsum_ir solution: 61.1932
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141419
  time (eval):    0.0250645
  gflops (eval):  433.594
  gflops (total): 410.437
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141419,0.0250645,433.594,410.437

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0953333
  gflops (total): 113.998
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0570474
  gflops (eval):  190.505
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0570474,190.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.8329
  maximum absolute entry in einsum_ir solution: 65.8329
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146404
  time (eval):    0.0251139
  gflops (eval):  432.741
  gflops (total): 408.904
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146404,0.0251139,432.741,408.904

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0951848
  gflops (total): 114.176
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551412
  gflops (eval):  197.091
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551412,197.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4454
  maximum absolute entry in einsum_ir solution: 61.4454
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142361
  time (eval):    0.0250792
  gflops (eval):  433.341
  gflops (total): 410.064
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142361,0.0250792,433.341,410.064

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0955756
  gflops (total): 113.709
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558023
  gflops (eval):  194.756
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558023,194.756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0026
  maximum absolute entry in einsum_ir solution: 60.0026
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141242
  time (eval):    0.0250686
  gflops (eval):  433.524
  gflops (total): 410.401
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141242,0.0250686,433.524,410.401

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0950918
  gflops (total): 114.288
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559849
  gflops (eval):  194.121
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559849,194.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1085
  maximum absolute entry in einsum_ir solution: 61.1085
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145419
  time (eval):    0.025059
  gflops (eval):  433.689
  gflops (total): 409.902
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145419,0.025059,433.689,409.902

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0957435
  gflops (total): 113.51
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557454
  gflops (eval):  194.954
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557454,194.954,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8963
  maximum absolute entry in einsum_ir solution: 62.8963
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142909
  time (eval):    0.0250604
  gflops (eval):  433.665
  gflops (total): 410.269
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142909,0.0250604,433.665,410.269

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0947179
  gflops (total): 114.739
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561641
  gflops (eval):  193.501
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561641,193.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1033
  maximum absolute entry in einsum_ir solution: 57.1033
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142022
  time (eval):    0.0251153
  gflops (eval):  432.718
  gflops (total): 409.558
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142022,0.0251153,432.718,409.558

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0950107
  gflops (total): 114.385
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559133
  gflops (eval):  194.369
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559133,194.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3319
  maximum absolute entry in einsum_ir solution: 59.3319
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142133
  time (eval):    0.0250241
  gflops (eval):  434.295
  gflops (total): 410.953
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142133,0.0250241,434.295,410.953

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0950806
  gflops (total): 114.301
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562005
  gflops (eval):  193.376
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562005,193.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4441
  maximum absolute entry in einsum_ir solution: 59.4441
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142844
  time (eval):    0.0250678
  gflops (eval):  433.537
  gflops (total): 410.164
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142844,0.0250678,433.537,410.164

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0956378
  gflops (total): 113.635
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552652
  gflops (eval):  196.648
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552652,196.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.9733
  maximum absolute entry in einsum_ir solution: 67.9733
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142523
  time (eval):    0.0250641
  gflops (eval):  433.602
  gflops (total): 410.272
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142523,0.0250641,433.602,410.272

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0948394
  gflops (total): 114.592
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558536
  gflops (eval):  194.577
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558536,194.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5158
  maximum absolute entry in einsum_ir solution: 57.5158
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143594
  time (eval):    0.0249886
  gflops (eval):  434.911
  gflops (total): 411.277
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143594,0.0249886,434.911,411.277

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0962467
  gflops (total): 112.916
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056539
  gflops (eval):  192.218
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056539,192.218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.7239
  maximum absolute entry in einsum_ir solution: 62.7239
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137648
  time (eval):    0.0250032
  gflops (eval):  434.657
  gflops (total): 411.976
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137648,0.0250032,434.657,411.976

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0956175
  gflops (total): 113.659
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562255
  gflops (eval):  193.29
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562255,193.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4029
  maximum absolute entry in einsum_ir solution: 57.4029
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142634
  time (eval):    0.0250609
  gflops (eval):  433.657
  gflops (total): 410.305
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142634,0.0250609,433.657,410.305

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0951149
  gflops (total): 114.26
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564213
  gflops (eval):  192.619
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564213,192.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2671
  maximum absolute entry in einsum_ir solution: 60.2671
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142101
  time (eval):    0.0250301
  gflops (eval):  434.19
  gflops (total): 410.865
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142101,0.0250301,434.19,410.865

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0965149
  gflops (total): 112.603
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555658
  gflops (eval):  195.585
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555658,195.585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1491
  maximum absolute entry in einsum_ir solution: 57.1491
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146321
  time (eval):    0.025041
  gflops (eval):  434
  gflops (total): 410.041
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146321,0.025041,434,410.041

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.095515
  gflops (total): 113.781
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560266
  gflops (eval):  193.976
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560266,193.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6972
  maximum absolute entry in einsum_ir solution: 54.6972
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141872
  time (eval):    0.0250096
  gflops (eval):  434.546
  gflops (total): 411.219
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141872,0.0250096,434.546,411.219

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.095688
  gflops (total): 113.576
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558289
  gflops (eval):  194.663
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558289,194.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3699
  maximum absolute entry in einsum_ir solution: 60.3699
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140451
  time (eval):    0.0250584
  gflops (eval):  433.7
  gflops (total): 410.681
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140451,0.0250584,433.7,410.681

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0949969
  gflops (total): 114.402
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561779
  gflops (eval):  193.454
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561779,193.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4305
  maximum absolute entry in einsum_ir solution: 58.4305
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143352
  time (eval):    0.025047
  gflops (eval):  433.897
  gflops (total): 410.408
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143352,0.025047,433.897,410.408

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0943148
  gflops (total): 115.229
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,115.229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562105
  gflops (eval):  193.341
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562105,193.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7511
  maximum absolute entry in einsum_ir solution: 57.7511
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014235
  time (eval):    0.0250905
  gflops (eval):  433.145
  gflops (total): 409.89
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014235,0.0250905,433.145,409.89

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.094875
  gflops (total): 114.549
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554923
  gflops (eval):  195.844
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554923,195.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8832
  maximum absolute entry in einsum_ir solution: 57.8832
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014169
  time (eval):    0.0250267
  gflops (eval):  434.248
  gflops (total): 410.98
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014169,0.0250267,434.248,410.98

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0962172
  gflops (total): 112.951
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558975
  gflops (eval):  194.424
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558975,194.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6849
  maximum absolute entry in einsum_ir solution: 57.6849
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146541
  time (eval):    0.024959
  gflops (eval):  435.428
  gflops (total): 411.28
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146541,0.024959,435.428,411.28

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0946383
  gflops (total): 114.835
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.835

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553786
  gflops (eval):  196.246
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553786,196.246,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3249
  maximum absolute entry in einsum_ir solution: 60.3249
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142334
  time (eval):    0.0250911
  gflops (eval):  433.134
  gflops (total): 409.882
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142334,0.0250911,433.134,409.882

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.094901
  gflops (total): 114.517
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0568843
  gflops (eval):  191.051
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0568843,191.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6867
  maximum absolute entry in einsum_ir solution: 58.6867
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140872
  time (eval):    0.0250764
  gflops (eval):  433.388
  gflops (total): 410.336
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140872,0.0250764,433.388,410.336

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954457
  gflops (total): 113.864
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.864

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559698
  gflops (eval):  194.173
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559698,194.173,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2921
  maximum absolute entry in einsum_ir solution: 56.2921
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00168857
  time (eval):    0.0250692
  gflops (eval):  433.514
  gflops (total): 406.156
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00168857,0.0250692,433.514,406.156

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0956038
  gflops (total): 113.676
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.676

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553091
  gflops (eval):  196.493
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553091,196.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.4598
  maximum absolute entry in einsum_ir solution: 63.4598
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142656
  time (eval):    0.0250432
  gflops (eval):  433.962
  gflops (total): 410.574
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142656,0.0250432,433.962,410.574

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0968304
  gflops (total): 112.236
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055851
  gflops (eval):  194.586
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055851,194.586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.157
  maximum absolute entry in einsum_ir solution: 64.157
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141638
  time (eval):    0.0250571
  gflops (eval):  433.722
  gflops (total): 410.517
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141638,0.0250571,433.722,410.517

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0957602
  gflops (total): 113.49
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566934
  gflops (eval):  191.695
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566934,191.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4202
  maximum absolute entry in einsum_ir solution: 58.4202
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142576
  time (eval):    0.0250221
  gflops (eval):  434.33
  gflops (total): 410.916
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142576,0.0250221,434.33,410.916

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0953894
  gflops (total): 113.931
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552352
  gflops (eval):  196.755
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552352,196.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.062
  maximum absolute entry in einsum_ir solution: 59.062
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141821
  time (eval):    0.0250224
  gflops (eval):  434.324
  gflops (total): 411.028
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141821,0.0250224,434.324,411.028

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0949331
  gflops (total): 114.479
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560068
  gflops (eval):  194.045
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560068,194.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5536
  maximum absolute entry in einsum_ir solution: 59.5536
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142752
  time (eval):    0.0250621
  gflops (eval):  433.636
  gflops (total): 410.268
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142752,0.0250621,433.636,410.268

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0964247
  gflops (total): 112.708
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,112.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564293
  gflops (eval):  192.592
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564293,192.592,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1635
  maximum absolute entry in einsum_ir solution: 58.1635
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141422
  time (eval):    0.0251156
  gflops (eval):  432.713
  gflops (total): 409.646
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141422,0.0251156,432.713,409.646

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0954046
  gflops (total): 113.913
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558479
  gflops (eval):  194.597
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558479,194.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5482
  maximum absolute entry in einsum_ir solution: 57.5482
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143871
  time (eval):    0.0322556
  gflops (eval):  336.928
  gflops (total): 322.542
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143871,0.0322556,336.928,322.542

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0952782
  gflops (total): 114.064
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559971
  gflops (eval):  194.078
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559971,194.078,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4472
  maximum absolute entry in einsum_ir solution: 60.4472
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141667
  time (eval):    0.02498
  gflops (eval):  435.061
  gflops (total): 411.712
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141667,0.02498,435.061,411.712

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.095487
  gflops (total): 113.815
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550007
  gflops (eval):  197.594
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550007,197.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6581
  maximum absolute entry in einsum_ir solution: 57.6581
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142832
  time (eval):    0.0250326
  gflops (eval):  434.146
  gflops (total): 410.711
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142832,0.0250326,434.146,410.711

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0956854
  gflops (total): 113.579
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561477
  gflops (eval):  193.558
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561477,193.558,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3287
  maximum absolute entry in einsum_ir solution: 57.3287
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143087
  time (eval):    0.0250606
  gflops (eval):  433.662
  gflops (total): 410.239
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143087,0.0250606,433.662,410.239

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0955007
  gflops (total): 113.798
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563203
  gflops (eval):  192.964
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563203,192.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9833
  maximum absolute entry in einsum_ir solution: 55.9833
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143031
  time (eval):    0.0250895
  gflops (eval):  433.162
  gflops (total): 409.8
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143031,0.0250895,433.162,409.8

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0947953
  gflops (total): 114.645
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,114.645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557982
  gflops (eval):  194.77
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557982,194.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0384
  maximum absolute entry in einsum_ir solution: 57.0384
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001812
  time (eval):    0.025005
  gflops (eval):  434.625
  gflops (total): 405.258
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.001812,0.025005,434.625,405.258

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0961653
  gflops (total): 113.012
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,113.012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0570092
  gflops (eval):  190.633
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0570092,190.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.5417
  maximum absolute entry in einsum_ir solution: 66.5417
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142202
  time (eval):    0.0128349
  gflops (eval):  846.743
  gflops (total): 762.286
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142202,0.0128349,846.743,762.286

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101175
  gflops (total): 107.416
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562508
  gflops (eval):  193.203
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562508,193.203,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3306
  maximum absolute entry in einsum_ir solution: 61.3306
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140977
  time (eval):    0.0127797
  gflops (eval):  850.394
  gflops (total): 765.905
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140977,0.0127797,850.394,765.905

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101829
  gflops (total): 106.726
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565926
  gflops (eval):  192.036
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565926,192.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0177
  maximum absolute entry in einsum_ir solution: 60.0177
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145143
  time (eval):    0.012819
  gflops (eval):  847.79
  gflops (total): 761.563
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145143,0.012819,847.79,761.563

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101302
  gflops (total): 107.281
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558148
  gflops (eval):  194.712
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558148,194.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7916
  maximum absolute entry in einsum_ir solution: 59.7916
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00152718
  time (eval):    0.0127417
  gflops (eval):  852.936
  gflops (total): 761.647
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00152718,0.0127417,852.936,761.647

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101731
  gflops (total): 106.829
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566862
  gflops (eval):  191.719
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566862,191.719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4474
  maximum absolute entry in einsum_ir solution: 60.4474
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142147
  time (eval):    0.0127564
  gflops (eval):  851.953
  gflops (total): 766.536
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142147,0.0127564,851.953,766.536

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101043
  gflops (total): 107.556
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563592
  gflops (eval):  192.831
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563592,192.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.072
  maximum absolute entry in einsum_ir solution: 63.072
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142054
  time (eval):    0.0127832
  gflops (eval):  850.162
  gflops (total): 765.136
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142054,0.0127832,850.162,765.136

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10151
  gflops (total): 107.061
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561078
  gflops (eval):  193.695
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561078,193.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.392
  maximum absolute entry in einsum_ir solution: 56.392
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142979
  time (eval):    0.012802
  gflops (eval):  848.919
  gflops (total): 763.632
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142979,0.012802,848.919,763.632

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10267
  gflops (total): 105.852
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,105.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0568429
  gflops (eval):  191.191
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0568429,191.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6374
  maximum absolute entry in einsum_ir solution: 56.6374
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00176256
  time (eval):    0.0128145
  gflops (eval):  848.089
  gflops (total): 745.544
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00176256,0.0128145,848.089,745.544

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100631
  gflops (total): 107.997
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.997

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555609
  gflops (eval):  195.602
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555609,195.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2649
  maximum absolute entry in einsum_ir solution: 62.2649
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143837
  time (eval):    0.0127819
  gflops (eval):  850.248
  gflops (total): 764.246
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143837,0.0127819,850.248,764.246

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10202
  gflops (total): 106.527
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563679
  gflops (eval):  192.801
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563679,192.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2752
  maximum absolute entry in einsum_ir solution: 58.2752
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142218
  time (eval):    0.0127535
  gflops (eval):  852.146
  gflops (total): 766.654
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142218,0.0127535,852.146,766.654

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101465
  gflops (total): 107.109
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0572849
  gflops (eval):  189.715
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0572849,189.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      70.8354
  maximum absolute entry in einsum_ir solution: 70.8354
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141409
  time (eval):    0.0127795
  gflops (eval):  850.41
  gflops (total): 765.685
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141409,0.0127795,850.41,765.685

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10107
  gflops (total): 107.528
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557602
  gflops (eval):  194.903
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557602,194.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.1892
  maximum absolute entry in einsum_ir solution: 63.1892
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143448
  time (eval):    0.0127096
  gflops (eval):  855.086
  gflops (total): 768.364
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143448,0.0127096,855.086,768.364

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100446
  gflops (total): 108.196
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564487
  gflops (eval):  192.526
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564487,192.526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.3971
  maximum absolute entry in einsum_ir solution: 67.3971
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139994
  time (eval):    0.0127885
  gflops (eval):  849.814
  gflops (total): 765.965
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139994,0.0127885,849.814,765.965

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101016
  gflops (total): 107.585
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564285
  gflops (eval):  192.595
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564285,192.595,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.0562
  maximum absolute entry in einsum_ir solution: 65.0562
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0015981
  time (eval):    0.0127511
  gflops (eval):  852.305
  gflops (total): 757.382
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0015981,0.0127511,852.305,757.382

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.1011
  gflops (total): 107.495
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559363
  gflops (eval):  194.289
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559363,194.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.514
  maximum absolute entry in einsum_ir solution: 59.514
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146827
  time (eval):    0.0127587
  gflops (eval):  851.8
  gflops (total): 763.891
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146827,0.0127587,851.8,763.891

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102022
  gflops (total): 106.524
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559801
  gflops (eval):  194.137
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559801,194.137,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.1864
  maximum absolute entry in einsum_ir solution: 63.1864
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145665
  time (eval):    0.0127586
  gflops (eval):  851.802
  gflops (total): 764.517
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145665,0.0127586,851.802,764.517

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101552
  gflops (total): 107.017
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561166
  gflops (eval):  193.665
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561166,193.665,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7105
  maximum absolute entry in einsum_ir solution: 61.7105
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142577
  time (eval):    0.0127773
  gflops (eval):  850.558
  gflops (total): 765.175
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142577,0.0127773,850.558,765.175

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10193
  gflops (total): 106.62
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558043
  gflops (eval):  194.749
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558043,194.749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9157
  maximum absolute entry in einsum_ir solution: 56.9157
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144783
  time (eval):    0.0127908
  gflops (eval):  849.66
  gflops (total): 763.264
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144783,0.0127908,849.66,763.264

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100637
  gflops (total): 107.99
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0569742
  gflops (eval):  190.75
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0569742,190.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1516
  maximum absolute entry in einsum_ir solution: 58.1516
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146697
  time (eval):    0.0128691
  gflops (eval):  844.49
  gflops (total): 758.076
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146697,0.0128691,844.49,758.076

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100035
  gflops (total): 108.64
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559803
  gflops (eval):  194.136
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559803,194.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2263
  maximum absolute entry in einsum_ir solution: 60.2263
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145061
  time (eval):    0.0127301
  gflops (eval):  853.713
  gflops (total): 766.382
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145061,0.0127301,853.713,766.382

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100939
  gflops (total): 107.667
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0571277
  gflops (eval):  190.237
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0571277,190.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8143
  maximum absolute entry in einsum_ir solution: 55.8143
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141905
  time (eval):    0.0127669
  gflops (eval):  851.247
  gflops (total): 766.096
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141905,0.0127669,851.247,766.096

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100709
  gflops (total): 107.913
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566048
  gflops (eval):  191.995
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566048,191.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9313
  maximum absolute entry in einsum_ir solution: 61.9313
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143619
  time (eval):    0.0127617
  gflops (eval):  851.596
  gflops (total): 765.453
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143619,0.0127617,851.596,765.453

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101077
  gflops (total): 107.52
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567712
  gflops (eval):  191.432
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567712,191.432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9564
  maximum absolute entry in einsum_ir solution: 57.9564
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00152041
  time (eval):    0.0127456
  gflops (eval):  852.67
  gflops (total): 761.797
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00152041,0.0127456,852.67,761.797

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101408
  gflops (total): 107.17
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558412
  gflops (eval):  194.62
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558412,194.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.0559
  maximum absolute entry in einsum_ir solution: 64.0559
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141894
  time (eval):    0.0127577
  gflops (eval):  851.864
  gflops (total): 766.601
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141894,0.0127577,851.864,766.601

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101103
  gflops (total): 107.493
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560224
  gflops (eval):  193.991
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560224,193.991,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9387
  maximum absolute entry in einsum_ir solution: 59.9387
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014015
  time (eval):    0.0127568
  gflops (eval):  851.921
  gflops (total): 767.592
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014015,0.0127568,851.921,767.592

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100902
  gflops (total): 107.707
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555524
  gflops (eval):  195.632
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555524,195.632,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2945
  maximum absolute entry in einsum_ir solution: 59.2945
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142127
  time (eval):    0.0128328
  gflops (eval):  846.881
  gflops (total): 762.438
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142127,0.0128328,846.881,762.438

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101211
  gflops (total): 107.378
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559885
  gflops (eval):  194.108
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559885,194.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8819
  maximum absolute entry in einsum_ir solution: 61.8819
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142019
  time (eval):    0.0127756
  gflops (eval):  850.667
  gflops (total): 765.564
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142019,0.0127756,850.667,765.564

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101801
  gflops (total): 106.755
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055487
  gflops (eval):  195.862
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055487,195.862,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0559
  maximum absolute entry in einsum_ir solution: 59.0559
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001419
  time (eval):    0.0127947
  gflops (eval):  849.403
  gflops (total): 764.604
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.001419,0.0127947,849.403,764.604

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101
  gflops (total): 107.603
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554943
  gflops (eval):  195.837
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554943,195.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7358
  maximum absolute entry in einsum_ir solution: 56.7358
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150731
  time (eval):    0.0127696
  gflops (eval):  851.072
  gflops (total): 761.218
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150731,0.0127696,851.072,761.218

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101788
  gflops (total): 106.769
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0572962
  gflops (eval):  189.678
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0572962,189.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7626
  maximum absolute entry in einsum_ir solution: 57.7626
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014031
  time (eval):    0.0127428
  gflops (eval):  852.858
  gflops (total): 768.265
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014031,0.0127428,852.858,768.265

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101367
  gflops (total): 107.213
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056191
  gflops (eval):  193.409
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056191,193.409,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5131
  maximum absolute entry in einsum_ir solution: 62.5131
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142122
  time (eval):    0.0127445
  gflops (eval):  852.745
  gflops (total): 767.191
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142122,0.0127445,852.745,767.191

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100915
  gflops (total): 107.693
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560281
  gflops (eval):  193.971
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560281,193.971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4979
  maximum absolute entry in einsum_ir solution: 57.4979
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141614
  time (eval):    0.0127633
  gflops (eval):  851.489
  gflops (total): 766.449
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141614,0.0127633,851.489,766.449

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101585
  gflops (total): 106.982
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558532
  gflops (eval):  194.578
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558532,194.578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.1427
  maximum absolute entry in einsum_ir solution: 63.1427
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00882512
  time (eval):    0.0197541
  gflops (eval):  550.156
  gflops (total): 380.27
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00882512,0.0197541,550.156,380.27

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101918
  gflops (total): 106.633
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0572545
  gflops (eval):  189.816
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0572545,189.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8926
  maximum absolute entry in einsum_ir solution: 62.8926
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141835
  time (eval):    0.0127713
  gflops (eval):  850.957
  gflops (total): 765.898
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141835,0.0127713,850.957,765.898

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102012
  gflops (total): 106.535
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560432
  gflops (eval):  193.919
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560432,193.919,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      68.0464
  maximum absolute entry in einsum_ir solution: 68.0464
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142227
  time (eval):    0.0128221
  gflops (eval):  847.585
  gflops (total): 762.955
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142227,0.0128221,847.585,762.955

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102192
  gflops (total): 106.347
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562414
  gflops (eval):  193.235
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562414,193.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4313
  maximum absolute entry in einsum_ir solution: 59.4313
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014121
  time (eval):    0.0127727
  gflops (eval):  850.863
  gflops (total): 766.159
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014121,0.0127727,850.863,766.159

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101713
  gflops (total): 106.848
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557637
  gflops (eval):  194.891
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557637,194.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6931
  maximum absolute entry in einsum_ir solution: 61.6931
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014166
  time (eval):    0.0127133
  gflops (eval):  854.836
  gflops (total): 769.134
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014166,0.0127133,854.836,769.134

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101435
  gflops (total): 107.141
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558189
  gflops (eval):  194.698
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558189,194.698,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4214
  maximum absolute entry in einsum_ir solution: 60.4214
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143333
  time (eval):    0.0127563
  gflops (eval):  851.959
  gflops (total): 765.901
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143333,0.0127563,851.959,765.901

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100258
  gflops (total): 108.399
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.399

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558027
  gflops (eval):  194.754
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558027,194.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9394
  maximum absolute entry in einsum_ir solution: 60.9394
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141893
  time (eval):    0.0127616
  gflops (eval):  851.601
  gflops (total): 766.389
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141893,0.0127616,851.601,766.389

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100936
  gflops (total): 107.67
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566546
  gflops (eval):  191.826
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566546,191.826,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2996
  maximum absolute entry in einsum_ir solution: 60.2996
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142076
  time (eval):    0.0127637
  gflops (eval):  851.461
  gflops (total): 766.176
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142076,0.0127637,851.461,766.176

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100581
  gflops (total): 108.05
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561861
  gflops (eval):  193.426
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561861,193.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4213
  maximum absolute entry in einsum_ir solution: 62.4213
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001461
  time (eval):    0.0127298
  gflops (eval):  853.733
  gflops (total): 765.837
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.001461,0.0127298,853.733,765.837

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101683
  gflops (total): 106.88
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563055
  gflops (eval):  193.015
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563055,193.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3402
  maximum absolute entry in einsum_ir solution: 57.3402
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141582
  time (eval):    0.0128119
  gflops (eval):  848.261
  gflops (total): 763.849
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141582,0.0128119,848.261,763.849

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100983
  gflops (total): 107.62
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565586
  gflops (eval):  192.151
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565586,192.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8603
  maximum absolute entry in einsum_ir solution: 57.8603
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140483
  time (eval):    0.0128187
  gflops (eval):  847.811
  gflops (total): 764.074
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140483,0.0128187,847.811,764.074

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10157
  gflops (total): 106.998
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553984
  gflops (eval):  196.176
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553984,196.176,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7457
  maximum absolute entry in einsum_ir solution: 58.7457
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140259
  time (eval):    0.0127806
  gflops (eval):  850.34
  gflops (total): 766.249
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140259,0.0127806,850.34,766.249

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100862
  gflops (total): 107.75
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567891
  gflops (eval):  191.371
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567891,191.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3503
  maximum absolute entry in einsum_ir solution: 57.3503
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141765
  time (eval):    0.0127813
  gflops (eval):  850.292
  gflops (total): 765.397
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141765,0.0127813,850.292,765.397

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100895
  gflops (total): 107.714
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564159
  gflops (eval):  192.638
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564159,192.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4337
  maximum absolute entry in einsum_ir solution: 57.4337
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142473
  time (eval):    0.0127634
  gflops (eval):  851.482
  gflops (total): 765.979
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142473,0.0127634,851.482,765.979

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102883
  gflops (total): 105.633
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,105.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557517
  gflops (eval):  194.933
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557517,194.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2724
  maximum absolute entry in einsum_ir solution: 61.2724
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00155356
  time (eval):    0.0127945
  gflops (eval):  849.414
  gflops (total): 757.443
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00155356,0.0127945,849.414,757.443

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101122
  gflops (total): 107.472
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0571771
  gflops (eval):  190.073
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0571771,190.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8562
  maximum absolute entry in einsum_ir solution: 59.8562
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141725
  time (eval):    0.0128015
  gflops (eval):  848.95
  gflops (total): 764.331
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141725,0.0128015,848.95,764.331

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10034
  gflops (total): 108.31
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566387
  gflops (eval):  191.88
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566387,191.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2155
  maximum absolute entry in einsum_ir solution: 58.2155
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142333
  time (eval):    0.0127891
  gflops (eval):  849.774
  gflops (total): 764.671
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142333,0.0127891,849.774,764.671

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101144
  gflops (total): 107.449
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561412
  gflops (eval):  193.58
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561412,193.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9047
  maximum absolute entry in einsum_ir solution: 59.9047
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142115
  time (eval):    0.0128007
  gflops (eval):  849.003
  gflops (total): 764.164
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142115,0.0128007,849.003,764.164

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100853
  gflops (total): 107.759
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561359
  gflops (eval):  193.599
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561359,193.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4012
  maximum absolute entry in einsum_ir solution: 61.4012
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142232
  time (eval):    0.0128236
  gflops (eval):  847.484
  gflops (total): 762.871
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142232,0.0128236,847.484,762.871

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101458
  gflops (total): 107.116
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562448
  gflops (eval):  193.224
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562448,193.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4996
  maximum absolute entry in einsum_ir solution: 58.4996
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139943
  time (eval):    0.0128296
  gflops (eval):  847.09
  gflops (total): 763.778
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139943,0.0128296,847.09,763.778

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100933
  gflops (total): 107.674
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0570629
  gflops (eval):  190.453
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0570629,190.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.939
  maximum absolute entry in einsum_ir solution: 62.939
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142105
  time (eval):    0.0128286
  gflops (eval):  847.154
  gflops (total): 762.672
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142105,0.0128286,847.154,762.672

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101067
  gflops (total): 107.531
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556903
  gflops (eval):  195.147
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556903,195.147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6599
  maximum absolute entry in einsum_ir solution: 60.6599
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140936
  time (eval):    0.0128461
  gflops (eval):  846
  gflops (total): 762.361
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140936,0.0128461,846,762.361

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101134
  gflops (total): 107.46
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566023
  gflops (eval):  192.003
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566023,192.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6786
  maximum absolute entry in einsum_ir solution: 56.6786
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144474
  time (eval):    0.0127946
  gflops (eval):  849.404
  gflops (total): 763.223
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144474,0.0127946,849.404,763.223

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101565
  gflops (total): 107.003
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566296
  gflops (eval):  191.91
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566296,191.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8835
  maximum absolute entry in einsum_ir solution: 57.8835
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00153103
  time (eval):    0.0127688
  gflops (eval):  851.124
  gflops (total): 759.997
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00153103,0.0127688,851.124,759.997

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100971
  gflops (total): 107.633
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567137
  gflops (eval):  191.626
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567137,191.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9915
  maximum absolute entry in einsum_ir solution: 58.9915
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143706
  time (eval):    0.0127443
  gflops (eval):  852.761
  gflops (total): 766.347
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143706,0.0127443,852.761,766.347

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102106
  gflops (total): 106.436
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559361
  gflops (eval):  194.29
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559361,194.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0738
  maximum absolute entry in einsum_ir solution: 59.0738
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141129
  time (eval):    0.0127714
  gflops (eval):  850.953
  gflops (total): 766.276
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141129,0.0127714,850.953,766.276

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101975
  gflops (total): 106.574
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565172
  gflops (eval):  192.292
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565172,192.292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1076
  maximum absolute entry in einsum_ir solution: 58.1076
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014289
  time (eval):    0.0128136
  gflops (eval):  848.149
  gflops (total): 763.057
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014289,0.0128136,848.149,763.057

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101657
  gflops (total): 106.907
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0571289
  gflops (eval):  190.233
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0571289,190.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9165
  maximum absolute entry in einsum_ir solution: 61.9165
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00154488
  time (eval):    0.0127412
  gflops (eval):  852.964
  gflops (total): 760.726
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00154488,0.0127412,852.964,760.726

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101214
  gflops (total): 107.375
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559194
  gflops (eval):  194.348
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559194,194.348,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2667
  maximum absolute entry in einsum_ir solution: 62.2667
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142143
  time (eval):    0.0128644
  gflops (eval):  844.796
  gflops (total): 760.74
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142143,0.0128644,844.796,760.74

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101062
  gflops (total): 107.537
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554327
  gflops (eval):  196.054
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554327,196.054,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5978
  maximum absolute entry in einsum_ir solution: 56.5978
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014112
  time (eval):    0.0127379
  gflops (eval):  853.189
  gflops (total): 768.094
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014112,0.0127379,853.189,768.094

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101809
  gflops (total): 106.747
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557954
  gflops (eval):  194.78
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557954,194.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0592
  maximum absolute entry in einsum_ir solution: 57.0592
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141781
  time (eval):    0.0127467
  gflops (eval):  852.6
  gflops (total): 767.258
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141781,0.0127467,852.6,767.258

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101363
  gflops (total): 107.216
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560748
  gflops (eval):  193.809
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560748,193.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5766
  maximum absolute entry in einsum_ir solution: 60.5766
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142801
  time (eval):    0.0127897
  gflops (eval):  849.734
  gflops (total): 764.387
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142801,0.0127897,849.734,764.387

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101136
  gflops (total): 107.458
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557189
  gflops (eval):  195.047
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557189,195.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8853
  maximum absolute entry in einsum_ir solution: 58.8853
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142063
  time (eval):    0.0127902
  gflops (eval):  849.701
  gflops (total): 764.758
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142063,0.0127902,849.701,764.758

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10085
  gflops (total): 107.762
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559402
  gflops (eval):  194.276
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559402,194.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1024
  maximum absolute entry in einsum_ir solution: 59.1024
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140819
  time (eval):    0.0127594
  gflops (eval):  851.749
  gflops (total): 767.089
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140819,0.0127594,851.749,767.089

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101678
  gflops (total): 106.884
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559551
  gflops (eval):  194.224
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559551,194.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9461
  maximum absolute entry in einsum_ir solution: 57.9461
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141211
  time (eval):    0.0127712
  gflops (eval):  850.961
  gflops (total): 766.238
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141211,0.0127712,850.961,766.238

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.1021
  gflops (total): 106.443
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563992
  gflops (eval):  192.695
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563992,192.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7909
  maximum absolute entry in einsum_ir solution: 61.7909
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140707
  time (eval):    0.0128398
  gflops (eval):  846.418
  gflops (total): 762.822
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140707,0.0128398,846.418,762.822

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102024
  gflops (total): 106.522
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561985
  gflops (eval):  193.383
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561985,193.383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1779
  maximum absolute entry in einsum_ir solution: 57.1779
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00169442
  time (eval):    0.0127863
  gflops (eval):  849.956
  gflops (total): 750.501
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00169442,0.0127863,849.956,750.501

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100961
  gflops (total): 107.644
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566034
  gflops (eval):  192
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566034,192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.16
  maximum absolute entry in einsum_ir solution: 59.16
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141926
  time (eval):    0.0127982
  gflops (eval):  849.167
  gflops (total): 764.399
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141926,0.0127982,849.167,764.399

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.1016
  gflops (total): 106.966
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558288
  gflops (eval):  194.663
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558288,194.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0988
  maximum absolute entry in einsum_ir solution: 63.0988
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145388
  time (eval):    0.0128284
  gflops (eval):  847.168
  gflops (total): 760.93
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145388,0.0128284,847.168,760.93

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102434
  gflops (total): 106.096
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561161
  gflops (eval):  193.667
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561161,193.667,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.804
  maximum absolute entry in einsum_ir solution: 59.804
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142309
  time (eval):    0.0127463
  gflops (eval):  852.625
  gflops (total): 766.992
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142309,0.0127463,852.625,766.992

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100729
  gflops (total): 107.891
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561891
  gflops (eval):  193.415
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561891,193.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8382
  maximum absolute entry in einsum_ir solution: 59.8382
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141113
  time (eval):    0.0127683
  gflops (eval):  851.156
  gflops (total): 766.449
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141113,0.0127683,851.156,766.449

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101192
  gflops (total): 107.398
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561572
  gflops (eval):  193.525
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561572,193.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5844
  maximum absolute entry in einsum_ir solution: 58.5844
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014051
  time (eval):    0.0128009
  gflops (eval):  848.986
  gflops (total): 765.014
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014051,0.0128009,848.986,765.014

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101548
  gflops (total): 107.022
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565586
  gflops (eval):  192.152
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565586,192.152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2998
  maximum absolute entry in einsum_ir solution: 60.2998
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140741
  time (eval):    0.0128132
  gflops (eval):  848.171
  gflops (total): 764.228
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140741,0.0128132,848.171,764.228

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101988
  gflops (total): 106.56
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0568149
  gflops (eval):  191.285
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0568149,191.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.65
  maximum absolute entry in einsum_ir solution: 57.65
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00152523
  time (eval):    0.0127913
  gflops (eval):  849.625
  gflops (total): 759.109
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00152523,0.0127913,849.625,759.109

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100132
  gflops (total): 108.535
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056121
  gflops (eval):  193.65
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056121,193.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3531
  maximum absolute entry in einsum_ir solution: 58.3531
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141824
  time (eval):    0.0127595
  gflops (eval):  851.745
  gflops (total): 766.542
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141824,0.0127595,851.745,766.542

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102207
  gflops (total): 106.331
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562112
  gflops (eval):  193.339
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562112,193.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4288
  maximum absolute entry in einsum_ir solution: 58.4288
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141493
  time (eval):    0.0127921
  gflops (eval):  849.575
  gflops (total): 764.962
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141493,0.0127921,849.575,764.962

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101359
  gflops (total): 107.221
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563464
  gflops (eval):  192.875
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563464,192.875,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0607
  maximum absolute entry in einsum_ir solution: 63.0607
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141044
  time (eval):    0.0127955
  gflops (eval):  849.345
  gflops (total): 765.017
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141044,0.0127955,849.345,765.017

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101334
  gflops (total): 107.248
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564778
  gflops (eval):  192.426
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564778,192.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9632
  maximum absolute entry in einsum_ir solution: 55.9632
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014096
  time (eval):    0.0128118
  gflops (eval):  848.265
  gflops (total): 764.187
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014096,0.0128118,848.265,764.187

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101016
  gflops (total): 107.585
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565311
  gflops (eval):  192.245
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565311,192.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4404
  maximum absolute entry in einsum_ir solution: 59.4404
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142304
  time (eval):    0.0127923
  gflops (eval):  849.561
  gflops (total): 764.515
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142304,0.0127923,849.561,764.515

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100993
  gflops (total): 107.61
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0568279
  gflops (eval):  191.241
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0568279,191.241,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2146
  maximum absolute entry in einsum_ir solution: 59.2146
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142329
  time (eval):    0.0127659
  gflops (eval):  851.313
  gflops (total): 765.92
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142329,0.0127659,851.313,765.92

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101691
  gflops (total): 106.871
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0569537
  gflops (eval):  190.819
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0569537,190.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.516
  maximum absolute entry in einsum_ir solution: 56.516
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142252
  time (eval):    0.0128404
  gflops (eval):  846.377
  gflops (total): 761.963
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142252,0.0128404,846.377,761.963

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102616
  gflops (total): 105.908
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,105.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560616
  gflops (eval):  193.855
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560616,193.855,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.039
  maximum absolute entry in einsum_ir solution: 58.039
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140291
  time (eval):    0.0127785
  gflops (eval):  850.474
  gflops (total): 766.341
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140291,0.0127785,850.474,766.341

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102054
  gflops (total): 106.491
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056516
  gflops (eval):  192.296
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056516,192.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2811
  maximum absolute entry in einsum_ir solution: 58.2811
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141894
  time (eval):    0.0127686
  gflops (eval):  851.134
  gflops (total): 766.01
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141894,0.0127686,851.134,766.01

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101198
  gflops (total): 107.392
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556524
  gflops (eval):  195.28
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556524,195.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6907
  maximum absolute entry in einsum_ir solution: 60.6907
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140434
  time (eval):    0.0128032
  gflops (eval):  848.839
  gflops (total): 764.936
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140434,0.0128032,848.839,764.936

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101946
  gflops (total): 106.604
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558678
  gflops (eval):  194.528
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558678,194.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1866
  maximum absolute entry in einsum_ir solution: 55.1866
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001414
  time (eval):    0.0128016
  gflops (eval):  848.945
  gflops (total): 764.502
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.001414,0.0128016,848.945,764.502

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10164
  gflops (total): 106.924
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562731
  gflops (eval):  193.126
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562731,193.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8736
  maximum absolute entry in einsum_ir solution: 59.8736
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141645
  time (eval):    0.0127256
  gflops (eval):  854.015
  gflops (total): 768.477
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141645,0.0127256,854.015,768.477

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101645
  gflops (total): 106.919
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561117
  gflops (eval):  193.682
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561117,193.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0301
  maximum absolute entry in einsum_ir solution: 61.0301
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142179
  time (eval):    0.0128527
  gflops (eval):  845.567
  gflops (total): 761.345
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142179,0.0128527,845.567,761.345

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100592
  gflops (total): 108.038
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558078
  gflops (eval):  194.737
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558078,194.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9191
  maximum absolute entry in einsum_ir solution: 56.9191
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140951
  time (eval):    0.0127691
  gflops (eval):  851.106
  gflops (total): 766.496
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140951,0.0127691,851.106,766.496

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100949
  gflops (total): 107.656
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555961
  gflops (eval):  195.478
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555961,195.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0243
  maximum absolute entry in einsum_ir solution: 61.0243
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014018
  time (eval):    0.0128006
  gflops (eval):  849.008
  gflops (total): 765.21
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014018,0.0128006,849.008,765.21

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10075
  gflops (total): 107.869
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557867
  gflops (eval):  194.81
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557867,194.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6021
  maximum absolute entry in einsum_ir solution: 61.6021
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144517
  time (eval):    0.0127498
  gflops (eval):  852.394
  gflops (total): 765.612
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144517,0.0127498,852.394,765.612

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101051
  gflops (total): 107.547
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0571285
  gflops (eval):  190.235
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0571285,190.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.844
  maximum absolute entry in einsum_ir solution: 64.844
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141655
  time (eval):    0.0127868
  gflops (eval):  849.928
  gflops (total): 765.161
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141655,0.0127868,849.928,765.161

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101404
  gflops (total): 107.174
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562183
  gflops (eval):  193.315
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562183,193.315,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2743
  maximum absolute entry in einsum_ir solution: 61.2743
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00152861
  time (eval):    0.0127913
  gflops (eval):  849.624
  gflops (total): 758.929
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00152861,0.0127913,849.624,758.929

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101244
  gflops (total): 107.343
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.343

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551494
  gflops (eval):  197.062
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551494,197.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6042
  maximum absolute entry in einsum_ir solution: 57.6042
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0015231
  time (eval):    0.0128172
  gflops (eval):  847.911
  gflops (total): 757.854
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0015231,0.0128172,847.911,757.854

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102174
  gflops (total): 106.366
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0572987
  gflops (eval):  189.669
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0572987,189.669,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.9748
  maximum absolute entry in einsum_ir solution: 64.9748
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00151908
  time (eval):    0.0128447
  gflops (eval):  846.095
  gflops (total): 756.614
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00151908,0.0128447,846.095,756.614

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100049
  gflops (total): 108.625
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.625

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557979
  gflops (eval):  194.771
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557979,194.771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0669
  maximum absolute entry in einsum_ir solution: 62.0669
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00148077
  time (eval):    0.0127688
  gflops (eval):  851.122
  gflops (total): 762.676
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00148077,0.0127688,851.122,762.676

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.102481
  gflops (total): 106.047
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561401
  gflops (eval):  193.584
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561401,193.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2328
  maximum absolute entry in einsum_ir solution: 59.2328
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141479
  time (eval):    0.0128054
  gflops (eval):  848.688
  gflops (total): 764.251
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141479,0.0128054,848.688,764.251

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101741
  gflops (total): 106.818
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556796
  gflops (eval):  195.185
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556796,195.185,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6772
  maximum absolute entry in einsum_ir solution: 58.6772
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142222
  time (eval):    0.0127612
  gflops (eval):  851.631
  gflops (total): 766.235
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142222,0.0127612,851.631,766.235

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100898
  gflops (total): 107.711
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,107.711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558157
  gflops (eval):  194.709
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558157,194.709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.592
  maximum absolute entry in einsum_ir solution: 57.592
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140314
  time (eval):    0.0132526
  gflops (eval):  820.051
  gflops (total): 741.54
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140314,0.0132526,820.051,741.54

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.101711
  gflops (total): 106.849
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558039
  gflops (eval):  194.75
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558039,194.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1203
  maximum absolute entry in einsum_ir solution: 59.1203
  maximum element-wise difference:              0
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137926
  time (eval):    0.0120157
  gflops (eval):  909.151
  gflops (total): 815.536
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137926,0.0120157,909.151,815.536

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0742494
  gflops (total): 147.126
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169619
  gflops (eval):  644.034
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169619,644.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.369
  maximum absolute entry in einsum_ir solution: 429.37
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140928
  time (eval):    0.011976
  gflops (eval):  912.163
  gflops (total): 816.125
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140928,0.011976,912.163,816.125

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0752631
  gflops (total): 145.145
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171858
  gflops (eval):  635.642
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171858,635.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.24
  maximum absolute entry in einsum_ir solution: 480.24
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140126
  time (eval):    0.0120019
  gflops (eval):  910.196
  gflops (total): 815.038
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140126,0.0120019,910.196,815.038

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0741742
  gflops (total): 147.276
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171942
  gflops (eval):  635.331
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171942,635.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      414.152
  maximum absolute entry in einsum_ir solution: 414.152
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139082
  time (eval):    0.011941
  gflops (eval):  914.834
  gflops (total): 819.395
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139082,0.011941,914.834,819.395

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0758242
  gflops (total): 144.071
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168927
  gflops (eval):  646.671
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168927,646.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      411.006
  maximum absolute entry in einsum_ir solution: 411.007
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140108
  time (eval):    0.0119299
  gflops (eval):  915.686
  gflops (total): 819.448
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140108,0.0119299,915.686,819.448

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0740216
  gflops (total): 147.579
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171415
  gflops (eval):  637.287
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171415,637.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.019
  maximum absolute entry in einsum_ir solution: 422.018
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139685
  time (eval):    0.0119922
  gflops (eval):  910.929
  gflops (total): 815.893
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139685,0.0119922,910.929,815.893

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0752602
  gflops (total): 145.15
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.016973
  gflops (eval):  643.615
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.016973,643.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.064
  maximum absolute entry in einsum_ir solution: 426.064
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138081
  time (eval):    0.0119707
  gflops (eval):  912.565
  gflops (total): 818.188
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138081,0.0119707,912.565,818.188

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0742364
  gflops (total): 147.152
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173178
  gflops (eval):  630.798
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173178,630.798,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.407
  maximum absolute entry in einsum_ir solution: 472.407
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140624
  time (eval):    0.0119669
  gflops (eval):  912.858
  gflops (total): 816.867
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140624,0.0119669,912.858,816.867

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0752254
  gflops (total): 145.217
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173336
  gflops (eval):  630.225
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173336,630.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.97
  maximum absolute entry in einsum_ir solution: 443.97
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00153268
  time (eval):    0.0119561
  gflops (eval):  913.677
  gflops (total): 809.86
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00153268,0.0119561,913.677,809.86

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0744152
  gflops (total): 146.799
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.799

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017381
  gflops (eval):  628.505
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017381,628.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      439.346
  maximum absolute entry in einsum_ir solution: 439.346
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141143
  time (eval):    0.0118967
  gflops (eval):  918.243
  gflops (total): 820.856
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141143,0.0118967,918.243,820.856

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0752466
  gflops (total): 145.177
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173064
  gflops (eval):  631.215
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173064,631.215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.168
  maximum absolute entry in einsum_ir solution: 429.168
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140275
  time (eval):    0.0120196
  gflops (eval):  908.851
  gflops (total): 813.869
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140275,0.0120196,908.851,813.869

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.073712
  gflops (total): 148.199
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,148.199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171264
  gflops (eval):  637.848
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171264,637.848,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.82
  maximum absolute entry in einsum_ir solution: 426.821
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139928
  time (eval):    0.0119376
  gflops (eval):  915.093
  gflops (total): 819.084
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139928,0.0119376,915.093,819.084

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0757087
  gflops (total): 144.29
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170879
  gflops (eval):  639.286
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170879,639.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.334
  maximum absolute entry in einsum_ir solution: 467.334
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00147212
  time (eval):    0.0119272
  gflops (eval):  915.894
  gflops (total): 815.269
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00147212,0.0119272,915.894,815.269

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.074221
  gflops (total): 147.183
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169198
  gflops (eval):  645.638
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169198,645.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.158
  maximum absolute entry in einsum_ir solution: 438.159
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00151116
  time (eval):    0.0119579
  gflops (eval):  913.542
  gflops (total): 811.048
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00151116,0.0119579,913.542,811.048

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.075806
  gflops (total): 144.105
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170478
  gflops (eval):  640.789
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170478,640.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.189
  maximum absolute entry in einsum_ir solution: 425.188
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141447
  time (eval):    0.011969
  gflops (eval):  912.697
  gflops (total): 816.236
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141447,0.011969,912.697,816.236

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0744464
  gflops (total): 146.737
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171206
  gflops (eval):  638.063
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171206,638.063,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.716
  maximum absolute entry in einsum_ir solution: 459.716
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013817
  time (eval):    0.0119866
  gflops (eval):  911.356
  gflops (total): 817.161
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013817,0.0119866,911.356,817.161

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0757306
  gflops (total): 144.249
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173114
  gflops (eval):  631.03
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173114,631.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.218
  maximum absolute entry in einsum_ir solution: 478.218
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140164
  time (eval):    0.0119886
  gflops (eval):  911.205
  gflops (total): 815.823
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140164,0.0119886,911.205,815.823

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0738164
  gflops (total): 147.989
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171273
  gflops (eval):  637.814
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171273,637.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.738
  maximum absolute entry in einsum_ir solution: 459.739
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140153
  time (eval):    0.0119531
  gflops (eval):  913.911
  gflops (total): 817.999
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140153,0.0119531,913.911,817.999

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0758811
  gflops (total): 143.963
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,143.963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169685
  gflops (eval):  643.784
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169685,643.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.011
  maximum absolute entry in einsum_ir solution: 443.01
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0015071
  time (eval):    0.0119746
  gflops (eval):  912.27
  gflops (total): 810.288
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0015071,0.0119746,912.27,810.288

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0742431
  gflops (total): 147.139
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169153
  gflops (eval):  645.808
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169153,645.808,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.657
  maximum absolute entry in einsum_ir solution: 462.657
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00145892
  time (eval):    0.0119607
  gflops (eval):  913.328
  gflops (total): 814.035
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00145892,0.0119607,913.328,814.035

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0756621
  gflops (total): 144.379
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174436
  gflops (eval):  626.251
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174436,626.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.025
  maximum absolute entry in einsum_ir solution: 477.024
  maximum element-wise difference:              0.00149536
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00151442
  time (eval):    0.0119537
  gflops (eval):  913.862
  gflops (total): 811.103
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00151442,0.0119537,913.862,811.103

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0740321
  gflops (total): 147.558
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.558

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170282
  gflops (eval):  641.525
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170282,641.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.168
  maximum absolute entry in einsum_ir solution: 426.168
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140521
  time (eval):    0.011908
  gflops (eval):  917.369
  gflops (total): 820.541
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140521,0.011908,917.369,820.541

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0740871
  gflops (total): 147.449
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167492
  gflops (eval):  652.212
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167492,652.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.976
  maximum absolute entry in einsum_ir solution: 438.977
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138125
  time (eval):    0.012
  gflops (eval):  910.336
  gflops (total): 816.368
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138125,0.012,910.336,816.368

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.074563
  gflops (total): 146.507
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.016981
  gflops (eval):  643.308
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.016981,643.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      417.957
  maximum absolute entry in einsum_ir solution: 417.958
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139392
  time (eval):    0.0119804
  gflops (eval):  911.828
  gflops (total): 816.794
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139392,0.0119804,911.828,816.794

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.074739
  gflops (total): 146.163
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169786
  gflops (eval):  643.4
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169786,643.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.445
  maximum absolute entry in einsum_ir solution: 430.444
  maximum element-wise difference:              0.00152588
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00148563
  time (eval):    0.0119444
  gflops (eval):  914.572
  gflops (total): 813.403
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00148563,0.0119444,914.572,813.403

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0741295
  gflops (total): 147.364
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170312
  gflops (eval):  641.415
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170312,641.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.343
  maximum absolute entry in einsum_ir solution: 441.343
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139775
  time (eval):    0.0119017
  gflops (eval):  917.852
  gflops (total): 821.388
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139775,0.0119017,917.852,821.388

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0755472
  gflops (total): 144.599
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174364
  gflops (eval):  626.506
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174364,626.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.076
  maximum absolute entry in einsum_ir solution: 437.076
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013945
  time (eval):    0.0119579
  gflops (eval):  913.539
  gflops (total): 818.131
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013945,0.0119579,913.539,818.131

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0742978
  gflops (total): 147.031
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.031

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168702
  gflops (eval):  647.534
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168702,647.534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      439.5
  maximum absolute entry in einsum_ir solution: 439.5
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140222
  time (eval):    0.0119479
  gflops (eval):  914.31
  gflops (total): 818.276
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140222,0.0119479,914.31,818.276

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.075425
  gflops (total): 144.833
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.833

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168644
  gflops (eval):  647.758
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168644,647.758,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      445.637
  maximum absolute entry in einsum_ir solution: 445.637
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139787
  time (eval):    0.011957
  gflops (eval):  913.612
  gflops (total): 817.983
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139787,0.011957,913.612,817.983

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0732194
  gflops (total): 149.196
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.016973
  gflops (eval):  643.615
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.016973,643.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      408.162
  maximum absolute entry in einsum_ir solution: 408.162
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138477
  time (eval):    0.0119028
  gflops (eval):  917.773
  gflops (total): 822.127
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138477,0.0119028,917.773,822.127

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0751803
  gflops (total): 145.305
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170903
  gflops (eval):  639.197
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170903,639.197,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.644
  maximum absolute entry in einsum_ir solution: 419.643
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141369
  time (eval):    0.0119477
  gflops (eval):  914.322
  gflops (total): 817.583
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141369,0.0119477,914.322,817.583

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0746935
  gflops (total): 146.252
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171492
  gflops (eval):  637
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171492,637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      418.261
  maximum absolute entry in einsum_ir solution: 418.261
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138654
  time (eval):    0.011942
  gflops (eval):  914.759
  gflops (total): 819.598
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138654,0.011942,914.759,819.598

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0759778
  gflops (total): 143.779
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,143.779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.016981
  gflops (eval):  643.31
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.016981,643.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      416.754
  maximum absolute entry in einsum_ir solution: 416.754
  maximum element-wise difference:              0.00163269
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00147439
  time (eval):    0.0119611
  gflops (eval):  913.297
  gflops (total): 813.073
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00147439,0.0119611,913.297,813.073

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0747446
  gflops (total): 146.152
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170074
  gflops (eval):  642.313
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170074,642.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.62
  maximum absolute entry in einsum_ir solution: 431.619
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00152513
  time (eval):    0.0119579
  gflops (eval):  913.539
  gflops (total): 810.205
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00152513,0.0119579,913.539,810.205

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0751255
  gflops (total): 145.411
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171682
  gflops (eval):  636.295
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171682,636.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.816
  maximum absolute entry in einsum_ir solution: 424.816
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140802
  time (eval):    0.0119937
  gflops (eval):  910.812
  gflops (total): 815.12
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140802,0.0119937,910.812,815.12

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.074763
  gflops (total): 146.116
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169586
  gflops (eval):  644.159
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169586,644.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.15
  maximum absolute entry in einsum_ir solution: 441.149
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139367
  time (eval):    0.0119511
  gflops (eval):  914.06
  gflops (total): 818.599
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139367,0.0119511,914.06,818.599

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0752964
  gflops (total): 145.08
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170965
  gflops (eval):  638.963
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170965,638.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      444.015
  maximum absolute entry in einsum_ir solution: 444.014
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00144152
  time (eval):    0.0119332
  gflops (eval):  915.432
  gflops (total): 816.768
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00144152,0.0119332,915.432,816.768

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0750217
  gflops (total): 145.612
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174445
  gflops (eval):  626.218
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174445,626.218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.275
  maximum absolute entry in einsum_ir solution: 447.275
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140518
  time (eval):    0.0119305
  gflops (eval):  915.636
  gflops (total): 819.156
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140518,0.0119305,915.636,819.156

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.075539
  gflops (total): 144.615
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173349
  gflops (eval):  630.177
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173349,630.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      446.019
  maximum absolute entry in einsum_ir solution: 446.019
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139817
  time (eval):    0.011951
  gflops (eval):  914.073
  gflops (total): 818.334
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139817,0.011951,914.073,818.334

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0750645
  gflops (total): 145.529
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0177074
  gflops (eval):  616.918
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0177074,616.918,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.715
  maximum absolute entry in einsum_ir solution: 470.715
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139425
  time (eval):    0.0119387
  gflops (eval):  915.014
  gflops (total): 819.329
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139425,0.0119387,915.014,819.329

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0749874
  gflops (total): 145.678
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171588
  gflops (eval):  636.643
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171588,636.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      427.261
  maximum absolute entry in einsum_ir solution: 427.261
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139523
  time (eval):    0.0119691
  gflops (eval):  912.684
  gflops (total): 817.4
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139523,0.0119691,912.684,817.4

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0749258
  gflops (total): 145.798
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169401
  gflops (eval):  644.864
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169401,644.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.246
  maximum absolute entry in einsum_ir solution: 442.246
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140324
  time (eval):    0.0119211
  gflops (eval):  916.358
  gflops (total): 819.853
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140324,0.0119211,916.358,819.853

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0752399
  gflops (total): 145.19
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169175
  gflops (eval):  645.723
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169175,645.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      423.371
  maximum absolute entry in einsum_ir solution: 423.37
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139631
  time (eval):    0.0119438
  gflops (eval):  914.618
  gflops (total): 818.885
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139631,0.0119438,914.618,818.885

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0743012
  gflops (total): 147.024
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172588
  gflops (eval):  632.957
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172588,632.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.007
  maximum absolute entry in einsum_ir solution: 430.007
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00165137
  time (eval):    0.0119722
  gflops (eval):  912.453
  gflops (total): 801.85
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00165137,0.0119722,912.453,801.85

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0753496
  gflops (total): 144.978
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169725
  gflops (eval):  643.632
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169725,643.632,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.028
  maximum absolute entry in einsum_ir solution: 426.029
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139713
  time (eval):    0.0119097
  gflops (eval):  917.236
  gflops (total): 820.932
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139713,0.0119097,917.236,820.932

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0745037
  gflops (total): 146.624
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.624

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0177516
  gflops (eval):  615.384
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0177516,615.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      404.775
  maximum absolute entry in einsum_ir solution: 404.775
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137463
  time (eval):    0.0118946
  gflops (eval):  918.403
  gflops (total): 823.261
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137463,0.0118946,918.403,823.261

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0752872
  gflops (total): 145.098
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171849
  gflops (eval):  635.677
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171849,635.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      450.864
  maximum absolute entry in einsum_ir solution: 450.864
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139774
  time (eval):    0.0119394
  gflops (eval):  914.958
  gflops (total): 819.07
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139774,0.0119394,914.958,819.07

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0745511
  gflops (total): 146.531
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171595
  gflops (eval):  636.618
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171595,636.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.392
  maximum absolute entry in einsum_ir solution: 419.392
  maximum element-wise difference:              0.00149536
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140341
  time (eval):    0.011931
  gflops (eval):  915.601
  gflops (total): 819.237
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140341,0.011931,915.601,819.237

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0754021
  gflops (total): 144.877
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171152
  gflops (eval):  638.265
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171152,638.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.485
  maximum absolute entry in einsum_ir solution: 435.484
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140046
  time (eval):    0.0119313
  gflops (eval):  915.58
  gflops (total): 819.401
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140046,0.0119313,915.58,819.401

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0744922
  gflops (total): 146.647
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.647

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175045
  gflops (eval):  624.071
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175045,624.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.32
  maximum absolute entry in einsum_ir solution: 438.32
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140648
  time (eval):    0.0119456
  gflops (eval):  914.48
  gflops (total): 818.151
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140648,0.0119456,914.48,818.151

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0741346
  gflops (total): 147.354
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168604
  gflops (eval):  647.912
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168604,647.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.47
  maximum absolute entry in einsum_ir solution: 442.47
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139279
  time (eval):    0.0119425
  gflops (eval):  914.722
  gflops (total): 819.184
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139279,0.0119425,914.722,819.184

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0744091
  gflops (total): 146.811
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171289
  gflops (eval):  637.754
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171289,637.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      414.692
  maximum absolute entry in einsum_ir solution: 414.692
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00151891
  time (eval):    0.0118953
  gflops (eval):  918.349
  gflops (total): 814.363
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00151891,0.0118953,918.349,814.363

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0749051
  gflops (total): 145.839
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174021
  gflops (eval):  627.742
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174021,627.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      450.854
  maximum absolute entry in einsum_ir solution: 450.854
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139984
  time (eval):    0.0119467
  gflops (eval):  914.398
  gflops (total): 818.492
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139984,0.0119467,914.398,818.492

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0742288
  gflops (total): 147.167
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170632
  gflops (eval):  640.211
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170632,640.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.139
  maximum absolute entry in einsum_ir solution: 459.138
  maximum element-wise difference:              0.00152588
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0014248
  time (eval):    0.0119823
  gflops (eval):  911.679
  gflops (total): 814.793
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0014248,0.0119823,911.679,814.793

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0743655
  gflops (total): 146.897
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171916
  gflops (eval):  635.428
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171916,635.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      404.435
  maximum absolute entry in einsum_ir solution: 404.435
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139156
  time (eval):    0.0118993
  gflops (eval):  918.039
  gflops (total): 821.92
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139156,0.0118993,918.039,821.92

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0748093
  gflops (total): 146.025
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170825
  gflops (eval):  639.486
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170825,639.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.541
  maximum absolute entry in einsum_ir solution: 442.542
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139817
  time (eval):    0.0119598
  gflops (eval):  913.4
  gflops (total): 817.795
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139817,0.0119598,913.4,817.795

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.075278
  gflops (total): 145.116
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171828
  gflops (eval):  635.754
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171828,635.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.461
  maximum absolute entry in einsum_ir solution: 468.46
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141774
  time (eval):    0.0119595
  gflops (eval):  913.418
  gflops (total): 816.613
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141774,0.0119595,913.418,816.613

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0749685
  gflops (total): 145.715
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171892
  gflops (eval):  635.518
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171892,635.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      440.227
  maximum absolute entry in einsum_ir solution: 440.226
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139535
  time (eval):    0.0119654
  gflops (eval):  912.967
  gflops (total): 817.62
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139535,0.0119654,912.967,817.62

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0751845
  gflops (total): 145.296
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.016909
  gflops (eval):  646.048
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.016909,646.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.634
  maximum absolute entry in einsum_ir solution: 422.634
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00152547
  time (eval):    0.0120123
  gflops (eval):  909.404
  gflops (total): 806.931
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00152547,0.0120123,909.404,806.931

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0745532
  gflops (total): 146.527
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171454
  gflops (eval):  637.14
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171454,637.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.439
  maximum absolute entry in einsum_ir solution: 489.439
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138604
  time (eval):    0.011964
  gflops (eval):  913.079
  gflops (total): 818.28
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138604,0.011964,913.079,818.28

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0748854
  gflops (total): 145.877
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172363
  gflops (eval):  633.783
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172363,633.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      444.308
  maximum absolute entry in einsum_ir solution: 444.308
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138393
  time (eval):    0.0119447
  gflops (eval):  914.553
  gflops (total): 819.594
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138393,0.0119447,914.553,819.594

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0749973
  gflops (total): 145.659
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169564
  gflops (eval):  644.242
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169564,644.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      409.024
  maximum absolute entry in einsum_ir solution: 409.024
  maximum element-wise difference:              0.00152588
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139737
  time (eval):    0.0119627
  gflops (eval):  913.178
  gflops (total): 817.666
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139737,0.0119627,913.178,817.666

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0745759
  gflops (total): 146.482
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171501
  gflops (eval):  636.966
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171501,636.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.041
  maximum absolute entry in einsum_ir solution: 476.042
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140017
  time (eval):    0.011926
  gflops (eval):  915.986
  gflops (total): 819.744
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140017,0.011926,915.986,819.744

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0730333
  gflops (total): 149.576
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167553
  gflops (eval):  651.975
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167553,651.975,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.223
  maximum absolute entry in einsum_ir solution: 453.223
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137418
  time (eval):    0.0119647
  gflops (eval):  913.023
  gflops (total): 818.963
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137418,0.0119647,913.023,818.963

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0753776
  gflops (total): 144.924
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171969
  gflops (eval):  635.234
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171969,635.234,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      436.995
  maximum absolute entry in einsum_ir solution: 436.995
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0014056
  time (eval):    0.011932
  gflops (eval):  915.524
  gflops (total): 819.041
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0014056,0.011932,915.524,819.041

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0756315
  gflops (total): 144.438
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171518
  gflops (eval):  636.902
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171518,636.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.113
  maximum absolute entry in einsum_ir solution: 419.113
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140057
  time (eval):    0.0119482
  gflops (eval):  914.285
  gflops (total): 818.357
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140057,0.0119482,914.285,818.357

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0748923
  gflops (total): 145.863
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173195
  gflops (eval):  630.735
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173195,630.735,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.464
  maximum absolute entry in einsum_ir solution: 456.465
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140031
  time (eval):    0.0119726
  gflops (eval):  912.423
  gflops (total): 816.881
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140031,0.0119726,912.423,816.881

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0750338
  gflops (total): 145.588
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.588

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169307
  gflops (eval):  645.222
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169307,645.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.162
  maximum absolute entry in einsum_ir solution: 421.161
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013929
  time (eval):    0.0119329
  gflops (eval):  915.455
  gflops (total): 819.766
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013929,0.0119329,915.455,819.766

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0744693
  gflops (total): 146.692
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167782
  gflops (eval):  651.085
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167782,651.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      436.914
  maximum absolute entry in einsum_ir solution: 436.914
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140756
  time (eval):    0.011983
  gflops (eval):  911.631
  gflops (total): 815.804
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140756,0.011983,911.631,815.804

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0749136
  gflops (total): 145.822
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168596
  gflops (eval):  647.943
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168596,647.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.396
  maximum absolute entry in einsum_ir solution: 433.396
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137943
  time (eval):    0.0119443
  gflops (eval):  914.579
  gflops (total): 819.891
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137943,0.0119443,914.579,819.891

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0743191
  gflops (total): 146.988
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.988

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169696
  gflops (eval):  643.742
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169696,643.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      449.184
  maximum absolute entry in einsum_ir solution: 449.185
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00148247
  time (eval):    0.0118977
  gflops (eval):  918.161
  gflops (total): 816.433
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00148247,0.0118977,918.161,816.433

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0745779
  gflops (total): 146.478
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171089
  gflops (eval):  638.5
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171089,638.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.348
  maximum absolute entry in einsum_ir solution: 453.346
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140415
  time (eval):    0.0119389
  gflops (eval):  914.997
  gflops (total): 818.707
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140415,0.0119389,914.997,818.707

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0740207
  gflops (total): 147.581
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171859
  gflops (eval):  635.639
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171859,635.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      448.986
  maximum absolute entry in einsum_ir solution: 448.987
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139954
  time (eval):    0.0119311
  gflops (eval):  915.596
  gflops (total): 819.471
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139954,0.0119311,915.596,819.471

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0750678
  gflops (total): 145.522
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0166917
  gflops (eval):  654.458
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0166917,654.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.385
  maximum absolute entry in einsum_ir solution: 466.385
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137369
  time (eval):    0.0120066
  gflops (eval):  909.834
  gflops (total): 816.426
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137369,0.0120066,909.834,816.426

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0744034
  gflops (total): 146.822
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171354
  gflops (eval):  637.513
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171354,637.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      452.591
  maximum absolute entry in einsum_ir solution: 452.591
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140317
  time (eval):    0.0119203
  gflops (eval):  916.423
  gflops (total): 819.909
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140317,0.0119203,916.423,819.909

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0745485
  gflops (total): 146.536
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171372
  gflops (eval):  637.448
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171372,637.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.415
  maximum absolute entry in einsum_ir solution: 428.416
  maximum element-wise difference:              0.00144958
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139449
  time (eval):    0.0119306
  gflops (eval):  915.636
  gflops (total): 819.813
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139449,0.0119306,915.636,819.813

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0744168
  gflops (total): 146.795
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171154
  gflops (eval):  638.259
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171154,638.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.57
  maximum absolute entry in einsum_ir solution: 463.57
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140869
  time (eval):    0.0119367
  gflops (eval):  915.162
  gflops (total): 818.561
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140869,0.0119367,915.162,818.561

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0757451
  gflops (total): 144.221
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170773
  gflops (eval):  639.68
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170773,639.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.586
  maximum absolute entry in einsum_ir solution: 429.586
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00143769
  time (eval):    0.0119789
  gflops (eval):  911.94
  gflops (total): 814.219
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00143769,0.0119789,911.94,814.219

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0745562
  gflops (total): 146.521
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017138
  gflops (eval):  637.417
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017138,637.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      452.623
  maximum absolute entry in einsum_ir solution: 452.623
  maximum element-wise difference:              0.00149536
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141129
  time (eval):    0.0119888
  gflops (eval):  911.185
  gflops (total): 815.219
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141129,0.0119888,911.185,815.219

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0756108
  gflops (total): 144.477
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172164
  gflops (eval):  634.513
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172164,634.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.034
  maximum absolute entry in einsum_ir solution: 455.034
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141142
  time (eval):    0.0119875
  gflops (eval):  911.284
  gflops (total): 815.291
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141142,0.0119875,911.284,815.291

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.075871
  gflops (total): 143.982
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,143.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169163
  gflops (eval):  645.769
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169163,645.769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.16
  maximum absolute entry in einsum_ir solution: 506.161
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138035
  time (eval):    0.0119489
  gflops (eval):  914.227
  gflops (total): 819.552
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138035,0.0119489,914.227,819.552

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0750171
  gflops (total): 145.621
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170258
  gflops (eval):  641.617
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170258,641.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      427.781
  maximum absolute entry in einsum_ir solution: 427.78
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140125
  time (eval):    0.0119691
  gflops (eval):  912.685
  gflops (total): 817.033
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140125,0.0119691,912.685,817.033

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0739311
  gflops (total): 147.76
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171685
  gflops (eval):  636.285
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171685,636.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.484
  maximum absolute entry in einsum_ir solution: 426.482
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139556
  time (eval):    0.0119936
  gflops (eval):  910.826
  gflops (total): 815.89
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139556,0.0119936,910.826,815.89

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0759649
  gflops (total): 143.804
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,143.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171865
  gflops (eval):  635.618
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171865,635.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.799
  maximum absolute entry in einsum_ir solution: 433.799
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139119
  time (eval):    0.0120179
  gflops (eval):  908.981
  gflops (total): 814.675
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139119,0.0120179,908.981,814.675

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0741311
  gflops (total): 147.361
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173025
  gflops (eval):  631.357
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173025,631.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.081
  maximum absolute entry in einsum_ir solution: 459.08
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139877
  time (eval):    0.0119684
  gflops (eval):  912.739
  gflops (total): 817.228
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139877,0.0119684,912.739,817.228

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0751453
  gflops (total): 145.372
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173359
  gflops (eval):  630.139
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173359,630.139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.781
  maximum absolute entry in einsum_ir solution: 472.781
  maximum element-wise difference:              0.00143433
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139555
  time (eval):    0.0119521
  gflops (eval):  913.986
  gflops (total): 818.425
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139555,0.0119521,913.986,818.425

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0753061
  gflops (total): 145.062
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172038
  gflops (eval):  634.979
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172038,634.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.632
  maximum absolute entry in einsum_ir solution: 471.631
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140335
  time (eval):    0.0119704
  gflops (eval):  912.585
  gflops (total): 816.825
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140335,0.0119704,912.585,816.825

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0751283
  gflops (total): 145.405
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175843
  gflops (eval):  621.238
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175843,621.238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      448.838
  maximum absolute entry in einsum_ir solution: 448.837
  maximum element-wise difference:              0.00166321
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00148017
  time (eval):    0.0119545
  gflops (eval):  913.804
  gflops (total): 813.125
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00148017,0.0119545,913.804,813.125

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0748406
  gflops (total): 145.964
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168729
  gflops (eval):  647.433
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168729,647.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.083
  maximum absolute entry in einsum_ir solution: 454.083
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0014103
  time (eval):    0.0119554
  gflops (eval):  913.73
  gflops (total): 817.317
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0014103,0.0119554,913.73,817.317

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0750504
  gflops (total): 145.556
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167597
  gflops (eval):  651.805
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167597,651.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.577
  maximum absolute entry in einsum_ir solution: 421.577
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140138
  time (eval):    0.0119442
  gflops (eval):  914.591
  gflops (total): 818.553
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140138,0.0119442,914.591,818.553

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0749171
  gflops (total): 145.815
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168429
  gflops (eval):  648.584
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168429,648.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.239
  maximum absolute entry in einsum_ir solution: 457.239
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141437
  time (eval):    0.0119306
  gflops (eval):  915.632
  gflops (total): 818.588
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141437,0.0119306,915.632,818.588

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0749149
  gflops (total): 145.819
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170779
  gflops (eval):  639.659
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170779,639.659,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.898
  maximum absolute entry in einsum_ir solution: 455.898
  maximum element-wise difference:              0.00152588
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137754
  time (eval):    0.0119334
  gflops (eval):  915.419
  gflops (total): 820.683
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137754,0.0119334,915.419,820.683

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0742648
  gflops (total): 147.096
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173981
  gflops (eval):  627.886
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173981,627.886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.973
  maximum absolute entry in einsum_ir solution: 426.974
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139885
  time (eval):    0.0119417
  gflops (eval):  914.78
  gflops (total): 818.859
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139885,0.0119417,914.78,818.859

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0755605
  gflops (total): 144.573
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171492
  gflops (eval):  636.999
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171492,636.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      404.626
  maximum absolute entry in einsum_ir solution: 404.625
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140675
  time (eval):    0.0119357
  gflops (eval):  915.241
  gflops (total): 818.743
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140675,0.0119357,915.241,818.743

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0741633
  gflops (total): 147.297
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174508
  gflops (eval):  625.992
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174508,625.992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      406.875
  maximum absolute entry in einsum_ir solution: 406.875
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013933
  time (eval):    0.011924
  gflops (eval):  916.139
  gflops (total): 820.289
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013933,0.011924,916.139,820.289

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0750832
  gflops (total): 145.493
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169271
  gflops (eval):  645.357
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169271,645.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      416.143
  maximum absolute entry in einsum_ir solution: 416.143
  maximum element-wise difference:              0.00140381
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0015409
  time (eval):    0.0119387
  gflops (eval):  915.011
  gflops (total): 810.413
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0015409,0.0119387,915.011,810.413

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0743361
  gflops (total): 146.955
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174188
  gflops (eval):  627.14
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174188,627.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.406
  maximum absolute entry in einsum_ir solution: 443.407
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139957
  time (eval):    0.011958
  gflops (eval):  913.531
  gflops (total): 817.814
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139957,0.011958,913.531,817.814

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0752136
  gflops (total): 145.24
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,145.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169148
  gflops (eval):  645.829
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169148,645.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.77
  maximum absolute entry in einsum_ir solution: 422.77
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140178
  time (eval):    0.0119585
  gflops (eval):  913.497
  gflops (total): 817.652
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140178,0.0119585,913.497,817.652

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0740435
  gflops (total): 147.535
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,147.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170408
  gflops (eval):  641.051
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170408,641.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.416
  maximum absolute entry in einsum_ir solution: 433.416
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00148132
  time (eval):    0.011958
  gflops (eval):  913.533
  gflops (total): 812.841
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00148132,0.011958,913.533,812.841

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0754321
  gflops (total): 144.82
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,144.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172531
  gflops (eval):  633.164
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172531,633.164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.803
  maximum absolute entry in einsum_ir solution: 437.804
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141905
  time (eval):    0.0119689
  gflops (eval):  912.703
  gflops (total): 815.962
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141905,0.0119689,912.703,815.962

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0748069
  gflops (total): 146.03
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,146.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171688
  gflops (eval):  636.273
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171688,636.273,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      427.532
  maximum absolute entry in einsum_ir solution: 427.532
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140988
  time (eval):    0.0678812
  gflops (eval):  627.279
  gflops (total): 614.515
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140988,0.0678812,627.279,614.515

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105528
  gflops (total): 403.5
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488668
  gflops (eval):  871.356
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488668,871.356,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1678.7
  maximum absolute entry in einsum_ir solution: 1678.7
  maximum element-wise difference:              0.0300293
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00145109
  time (eval):    0.0680184
  gflops (eval):  626.014
  gflops (total): 612.937
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00145109,0.0680184,626.014,612.937

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105312
  gflops (total): 404.328
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487393
  gflops (eval):  873.637
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487393,873.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1719.23
  maximum absolute entry in einsum_ir solution: 1719.24
  maximum element-wise difference:              0.0343018
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141351
  time (eval):    0.0677007
  gflops (eval):  628.951
  gflops (total): 616.088
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141351,0.0677007,628.951,616.088

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.108945
  gflops (total): 390.842
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,390.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488528
  gflops (eval):  871.607
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488528,871.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1749.04
  maximum absolute entry in einsum_ir solution: 1749.05
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142248
  time (eval):    0.0684483
  gflops (eval):  622.081
  gflops (total): 609.417
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142248,0.0684483,622.081,609.417

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105383
  gflops (total): 404.053
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486173
  gflops (eval):  875.829
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486173,875.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1778.37
  maximum absolute entry in einsum_ir solution: 1778.37
  maximum element-wise difference:              0.0369873
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142837
  time (eval):    0.068095
  gflops (eval):  625.309
  gflops (total): 612.462
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142837,0.068095,625.309,612.462

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106228
  gflops (total): 400.842
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488999
  gflops (eval):  870.767
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488999,870.767,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1809.36
  maximum absolute entry in einsum_ir solution: 1809.37
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141199
  time (eval):    0.067789
  gflops (eval):  628.132
  gflops (total): 615.316
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141199,0.067789,628.132,615.316

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104587
  gflops (total): 407.131
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489714
  gflops (eval):  869.496
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489714,869.496,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1961.28
  maximum absolute entry in einsum_ir solution: 1961.28
  maximum element-wise difference:              0.0305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00169193
  time (eval):    0.0682278
  gflops (eval):  624.092
  gflops (total): 608.99
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00169193,0.0682278,624.092,608.99

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105828
  gflops (total): 402.357
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0490175
  gflops (eval):  868.679
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0490175,868.679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1787.51
  maximum absolute entry in einsum_ir solution: 1787.52
  maximum element-wise difference:              0.0291748
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00139675
  time (eval):    0.0684556
  gflops (eval):  622.016
  gflops (total): 609.578
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00139675,0.0684556,622.016,609.578

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105436
  gflops (total): 403.852
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487627
  gflops (eval):  873.217
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487627,873.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1670.87
  maximum absolute entry in einsum_ir solution: 1670.87
  maximum element-wise difference:              0.0284424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00143993
  time (eval):    0.0683172
  gflops (eval):  623.275
  gflops (total): 610.41
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00143993,0.0683172,623.275,610.41

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105636
  gflops (total): 403.087
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489355
  gflops (eval):  870.133
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489355,870.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1909.4
  maximum absolute entry in einsum_ir solution: 1909.38
  maximum element-wise difference:              0.0257568
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142071
  time (eval):    0.0681978
  gflops (eval):  624.367
  gflops (total): 611.625
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142071,0.0681978,624.367,611.625

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104865
  gflops (total): 406.048
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,406.048

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487985
  gflops (eval):  872.577
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487985,872.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.24
  maximum absolute entry in einsum_ir solution: 1756.25
  maximum element-wise difference:              0.026001
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00170224
  time (eval):    0.068445
  gflops (eval):  622.112
  gflops (total): 607.015
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00170224,0.068445,622.112,607.015

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105
  gflops (total): 405.528
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489654
  gflops (eval):  869.602
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489654,869.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1631.13
  maximum absolute entry in einsum_ir solution: 1631.12
  maximum element-wise difference:              0.0269775
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142555
  time (eval):    0.0684165
  gflops (eval):  622.371
  gflops (total): 609.667
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142555,0.0684165,622.371,609.667

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.10619
  gflops (total): 400.983
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488571
  gflops (eval):  871.531
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488571,871.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1708.22
  maximum absolute entry in einsum_ir solution: 1708.21
  maximum element-wise difference:              0.0318604
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142709
  time (eval):    0.0682043
  gflops (eval):  624.307
  gflops (total): 611.512
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142709,0.0682043,624.307,611.512

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104564
  gflops (total): 407.219
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488535
  gflops (eval):  871.594
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488535,871.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1831.26
  maximum absolute entry in einsum_ir solution: 1831.28
  maximum element-wise difference:              0.0298462
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142613
  time (eval):    0.0682953
  gflops (eval):  623.475
  gflops (total): 610.722
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142613,0.0682953,623.475,610.722

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105925
  gflops (total): 401.988
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,401.988

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488456
  gflops (eval):  871.736
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488456,871.736,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1760.36
  maximum absolute entry in einsum_ir solution: 1760.36
  maximum element-wise difference:              0.0244751
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.001419
  time (eval):    0.0686131
  gflops (eval):  620.588
  gflops (total): 608.013
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.001419,0.0686131,620.588,608.013

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104907
  gflops (total): 405.888
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488275
  gflops (eval):  872.058
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488275,872.058,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1704.23
  maximum absolute entry in einsum_ir solution: 1704.24
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141013
  time (eval):    0.0677992
  gflops (eval):  628.037
  gflops (total): 615.241
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141013,0.0677992,628.037,615.241

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106385
  gflops (total): 400.247
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488236
  gflops (eval):  872.127
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488236,872.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1669.71
  maximum absolute entry in einsum_ir solution: 1669.71
  maximum element-wise difference:              0.0264282
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0014096
  time (eval):    0.0682798
  gflops (eval):  623.617
  gflops (total): 611.003
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0014096,0.0682798,623.617,611.003

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105368
  gflops (total): 404.113
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488292
  gflops (eval):  872.029
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488292,872.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1662.52
  maximum absolute entry in einsum_ir solution: 1662.51
  maximum element-wise difference:              0.0230713
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00146841
  time (eval):    0.0684254
  gflops (eval):  622.29
  gflops (total): 609.216
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00146841,0.0684254,622.29,609.216

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.108488
  gflops (total): 392.491
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,392.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486288
  gflops (eval):  875.621
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486288,875.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1750.48
  maximum absolute entry in einsum_ir solution: 1750.48
  maximum element-wise difference:              0.0273438
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00166516
  time (eval):    0.0681932
  gflops (eval):  624.409
  gflops (total): 609.526
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00166516,0.0681932,624.409,609.526

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104692
  gflops (total): 406.722
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,406.722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488786
  gflops (eval):  871.146
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488786,871.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1690.29
  maximum absolute entry in einsum_ir solution: 1690.29
  maximum element-wise difference:              0.0222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140732
  time (eval):    0.0680046
  gflops (eval):  626.14
  gflops (total): 613.445
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140732,0.0680046,626.14,613.445

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106344
  gflops (total): 400.404
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488764
  gflops (eval):  871.186
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488764,871.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1670.57
  maximum absolute entry in einsum_ir solution: 1670.56
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142175
  time (eval):    0.0679454
  gflops (eval):  626.686
  gflops (total): 613.841
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142175,0.0679454,626.686,613.841

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105086
  gflops (total): 405.197
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486829
  gflops (eval):  874.648
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486829,874.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1865.03
  maximum absolute entry in einsum_ir solution: 1865.01
  maximum element-wise difference:              0.0269775
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142262
  time (eval):    0.0683028
  gflops (eval):  623.406
  gflops (total): 610.687
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142262,0.0683028,623.406,610.687

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105807
  gflops (total): 402.437
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488282
  gflops (eval):  872.046
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488282,872.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1648.88
  maximum absolute entry in einsum_ir solution: 1648.89
  maximum element-wise difference:              0.0261841
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00145891
  time (eval):    0.0680925
  gflops (eval):  625.333
  gflops (total): 612.216
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00145891,0.0680925,625.333,612.216

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104891
  gflops (total): 405.95
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489016
  gflops (eval):  870.737
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489016,870.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1913.78
  maximum absolute entry in einsum_ir solution: 1913.77
  maximum element-wise difference:              0.0285645
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0014134
  time (eval):    0.0682424
  gflops (eval):  623.959
  gflops (total): 611.298
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0014134,0.0682424,623.959,611.298

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.108283
  gflops (total): 393.235
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,393.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489048
  gflops (eval):  870.681
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489048,870.681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1690.06
  maximum absolute entry in einsum_ir solution: 1690.06
  maximum element-wise difference:              0.0279541
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140803
  time (eval):    0.0676986
  gflops (eval):  628.971
  gflops (total): 616.155
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140803,0.0676986,628.971,616.155

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.107468
  gflops (total): 396.216
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,396.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489104
  gflops (eval):  870.581
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489104,870.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1565.5
  maximum absolute entry in einsum_ir solution: 1565.5
  maximum element-wise difference:              0.0262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00157021
  time (eval):    0.0677552
  gflops (eval):  628.445
  gflops (total): 614.211
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00157021,0.0677552,628.445,614.211

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105909
  gflops (total): 402.046
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488194
  gflops (eval):  872.203
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488194,872.203,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1755.09
  maximum absolute entry in einsum_ir solution: 1755.08
  maximum element-wise difference:              0.0241699
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0014211
  time (eval):    0.0680412
  gflops (eval):  625.804
  gflops (total): 613.001
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0014211,0.0680412,625.804,613.001

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105297
  gflops (total): 404.386
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487212
  gflops (eval):  873.96
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487212,873.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1930.07
  maximum absolute entry in einsum_ir solution: 1930.07
  maximum element-wise difference:              0.0250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141061
  time (eval):    0.0684015
  gflops (eval):  622.507
  gflops (total): 609.929
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141061,0.0684015,622.507,609.929

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105789
  gflops (total): 402.503
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487837
  gflops (eval):  872.842
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487837,872.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1692.48
  maximum absolute entry in einsum_ir solution: 1692.48
  maximum element-wise difference:              0.0272217
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141187
  time (eval):    0.068003
  gflops (eval):  626.155
  gflops (total): 613.419
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141187,0.068003,626.155,613.419

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105673
  gflops (total): 402.944
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486642
  gflops (eval):  874.985
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486642,874.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1648.03
  maximum absolute entry in einsum_ir solution: 1648.02
  maximum element-wise difference:              0.0266113
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141756
  time (eval):    0.0682794
  gflops (eval):  623.621
  gflops (total): 610.937
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141756,0.0682794,623.621,610.937

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105679
  gflops (total): 402.923
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489292
  gflops (eval):  870.246
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489292,870.246,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1836.04
  maximum absolute entry in einsum_ir solution: 1836.03
  maximum element-wise difference:              0.0294189
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140315
  time (eval):    0.0677545
  gflops (eval):  628.452
  gflops (total): 615.701
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140315,0.0677545,628.452,615.701

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.107218
  gflops (total): 397.14
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,397.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488295
  gflops (eval):  872.023
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488295,872.023,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1733.38
  maximum absolute entry in einsum_ir solution: 1733.4
  maximum element-wise difference:              0.0274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142624
  time (eval):    0.0682616
  gflops (eval):  623.783
  gflops (total): 611.016
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142624,0.0682616,623.783,611.016

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106527
  gflops (total): 399.716
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489874
  gflops (eval):  869.212
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489874,869.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1822.33
  maximum absolute entry in einsum_ir solution: 1822.34
  maximum element-wise difference:              0.027832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140587
  time (eval):    0.0681094
  gflops (eval):  625.177
  gflops (total): 612.534
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140587,0.0681094,625.177,612.534

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104896
  gflops (total): 405.931
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485322
  gflops (eval):  877.365
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485322,877.365,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1733.63
  maximum absolute entry in einsum_ir solution: 1733.65
  maximum element-wise difference:              0.0332031
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141222
  time (eval):    0.0677345
  gflops (eval):  628.637
  gflops (total): 615.798
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141222,0.0677345,628.637,615.798

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106611
  gflops (total): 399.401
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488715
  gflops (eval):  871.274
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488715,871.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1609.56
  maximum absolute entry in einsum_ir solution: 1609.55
  maximum element-wise difference:              0.0270996
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141326
  time (eval):    0.0679623
  gflops (eval):  626.53
  gflops (total): 613.767
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141326,0.0679623,626.53,613.767

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104506
  gflops (total): 407.443
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487586
  gflops (eval):  873.291
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487586,873.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1868.4
  maximum absolute entry in einsum_ir solution: 1868.41
  maximum element-wise difference:              0.0294189
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140778
  time (eval):    0.0678184
  gflops (eval):  627.86
  gflops (total): 615.092
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140778,0.0678184,627.86,615.092

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106663
  gflops (total): 399.206
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487823
  gflops (eval):  872.867
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487823,872.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1760.59
  maximum absolute entry in einsum_ir solution: 1760.6
  maximum element-wise difference:              0.0248413
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141442
  time (eval):    0.0678297
  gflops (eval):  627.755
  gflops (total): 614.932
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141442,0.0678297,627.755,614.932

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105261
  gflops (total): 404.524
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487506
  gflops (eval):  873.433
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487506,873.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1757.46
  maximum absolute entry in einsum_ir solution: 1757.47
  maximum element-wise difference:              0.0308838
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142473
  time (eval):    0.0682152
  gflops (eval):  624.207
  gflops (total): 611.437
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142473,0.0682152,624.207,611.437

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106313
  gflops (total): 400.52
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488457
  gflops (eval):  871.734
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488457,871.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1734.57
  maximum absolute entry in einsum_ir solution: 1734.56
  maximum element-wise difference:              0.0290527
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00139964
  time (eval):    0.0677987
  gflops (eval):  628.042
  gflops (total): 615.339
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00139964,0.0677987,628.042,615.339

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104841
  gflops (total): 406.141
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,406.141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487233
  gflops (eval):  873.923
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487233,873.923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1726.2
  maximum absolute entry in einsum_ir solution: 1726.19
  maximum element-wise difference:              0.0239258
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141581
  time (eval):    0.0678528
  gflops (eval):  627.541
  gflops (total): 614.715
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141581,0.0678528,627.541,614.715

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105769
  gflops (total): 402.581
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048894
  gflops (eval):  870.873
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048894,870.873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1616.9
  maximum absolute entry in einsum_ir solution: 1616.9
  maximum element-wise difference:              0.0275879
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140511
  time (eval):    0.0685275
  gflops (eval):  621.363
  gflops (total): 608.878
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140511,0.0685275,621.363,608.878

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105254
  gflops (total): 404.551
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486998
  gflops (eval):  874.345
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486998,874.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1748.74
  maximum absolute entry in einsum_ir solution: 1748.71
  maximum element-wise difference:              0.0255127
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141117
  time (eval):    0.0682773
  gflops (eval):  623.639
  gflops (total): 611.011
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141117,0.0682773,623.639,611.011

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104741
  gflops (total): 406.532
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,406.532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488702
  gflops (eval):  871.297
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488702,871.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1711.21
  maximum absolute entry in einsum_ir solution: 1711.2
  maximum element-wise difference:              0.0389404
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140778
  time (eval):    0.0681491
  gflops (eval):  624.813
  gflops (total): 612.167
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140778,0.0681491,624.813,612.167

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105823
  gflops (total): 402.375
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487891
  gflops (eval):  872.745
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487891,872.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1708.63
  maximum absolute entry in einsum_ir solution: 1708.63
  maximum element-wise difference:              0.0321045
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0014142
  time (eval):    0.0680724
  gflops (eval):  625.516
  gflops (total): 612.786
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0014142,0.0680724,625.516,612.786

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105099
  gflops (total): 405.145
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487884
  gflops (eval):  872.757
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487884,872.757,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1811.75
  maximum absolute entry in einsum_ir solution: 1811.76
  maximum element-wise difference:              0.0245361
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141836
  time (eval):    0.0680785
  gflops (eval):  625.46
  gflops (total): 612.695
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141836,0.0680785,625.46,612.695

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.10558
  gflops (total): 403.3
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488698
  gflops (eval):  871.303
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488698,871.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1667.15
  maximum absolute entry in einsum_ir solution: 1667.15
  maximum element-wise difference:              0.0285645
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00144485
  time (eval):    0.0688103
  gflops (eval):  618.809
  gflops (total): 606.083
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00144485,0.0688103,618.809,606.083

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105087
  gflops (total): 405.191
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048856
  gflops (eval):  871.55
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048856,871.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1864.21
  maximum absolute entry in einsum_ir solution: 1864.2
  maximum element-wise difference:              0.0360107
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140414
  time (eval):    0.0674627
  gflops (eval):  631.17
  gflops (total): 618.301
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140414,0.0674627,631.17,618.301

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.108726
  gflops (total): 391.631
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,391.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488039
  gflops (eval):  872.48
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488039,872.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1706.82
  maximum absolute entry in einsum_ir solution: 1706.82
  maximum element-wise difference:              0.0297241
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141346
  time (eval):    0.0679526
  gflops (eval):  626.619
  gflops (total): 613.851
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141346,0.0679526,626.619,613.851

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104434
  gflops (total): 407.727
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487096
  gflops (eval):  874.17
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487096,874.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1819.23
  maximum absolute entry in einsum_ir solution: 1819.21
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141254
  time (eval):    0.0680331
  gflops (eval):  625.878
  gflops (total): 613.148
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141254,0.0680331,625.878,613.148

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106567
  gflops (total): 399.563
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487863
  gflops (eval):  872.795
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487863,872.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1727.05
  maximum absolute entry in einsum_ir solution: 1727.05
  maximum element-wise difference:              0.0422363
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142876
  time (eval):    0.0685347
  gflops (eval):  621.297
  gflops (total): 608.609
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142876,0.0685347,621.297,608.609

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104576
  gflops (total): 407.17
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487295
  gflops (eval):  873.813
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487295,873.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1767.2
  maximum absolute entry in einsum_ir solution: 1767.18
  maximum element-wise difference:              0.0300293
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142075
  time (eval):    0.0681382
  gflops (eval):  624.913
  gflops (total): 612.149
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142075,0.0681382,624.913,612.149

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105937
  gflops (total): 401.942
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,401.942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488048
  gflops (eval):  872.464
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488048,872.464,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1721.03
  maximum absolute entry in einsum_ir solution: 1721.03
  maximum element-wise difference:              0.0284424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013964
  time (eval):    0.0683765
  gflops (eval):  622.735
  gflops (total): 610.272
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013964,0.0683765,622.735,610.272

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105091
  gflops (total): 405.178
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488265
  gflops (eval):  872.077
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488265,872.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1682.33
  maximum absolute entry in einsum_ir solution: 1682.34
  maximum element-wise difference:              0.029541
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141077
  time (eval):    0.0678133
  gflops (eval):  627.907
  gflops (total): 615.111
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141077,0.0678133,627.907,615.111

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106289
  gflops (total): 400.608
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487988
  gflops (eval):  872.572
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487988,872.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1687.95
  maximum absolute entry in einsum_ir solution: 1687.96
  maximum element-wise difference:              0.0280151
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141862
  time (eval):    0.0679099
  gflops (eval):  627.014
  gflops (total): 614.184
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141862,0.0679099,627.014,614.184

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105034
  gflops (total): 405.398
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488228
  gflops (eval):  872.142
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488228,872.142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1884.89
  maximum absolute entry in einsum_ir solution: 1884.87
  maximum element-wise difference:              0.0273438
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141713
  time (eval):    0.0680819
  gflops (eval):  625.43
  gflops (total): 612.677
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141713,0.0680819,625.43,612.677

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.10844
  gflops (total): 392.664
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,392.664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488161
  gflops (eval):  872.262
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488161,872.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1847.72
  maximum absolute entry in einsum_ir solution: 1847.73
  maximum element-wise difference:              0.0290527
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00173525
  time (eval):    0.0684972
  gflops (eval):  621.638
  gflops (total): 606.279
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00173525,0.0684972,621.638,606.279

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104615
  gflops (total): 407.019
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488193
  gflops (eval):  872.205
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488193,872.205,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1823.19
  maximum absolute entry in einsum_ir solution: 1823.18
  maximum element-wise difference:              0.0249023
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142303
  time (eval):    0.0677929
  gflops (eval):  628.095
  gflops (total): 615.182
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142303,0.0677929,628.095,615.182

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106497
  gflops (total): 399.827
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488525
  gflops (eval):  871.612
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488525,871.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1701.4
  maximum absolute entry in einsum_ir solution: 1701.4
  maximum element-wise difference:              0.0266113
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141715
  time (eval):    0.0679743
  gflops (eval):  626.419
  gflops (total): 613.626
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141715,0.0679743,626.419,613.626

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104657
  gflops (total): 406.858
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,406.858

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0490206
  gflops (eval):  868.622
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0490206,868.622,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1738.73
  maximum absolute entry in einsum_ir solution: 1738.73
  maximum element-wise difference:              0.0292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142396
  time (eval):    0.0682729
  gflops (eval):  623.68
  gflops (total): 610.938
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142396,0.0682729,623.68,610.938

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.108385
  gflops (total): 392.864
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,392.864

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488365
  gflops (eval):  871.898
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488365,871.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1699.83
  maximum absolute entry in einsum_ir solution: 1699.82
  maximum element-wise difference:              0.0369873
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140604
  time (eval):    0.0682398
  gflops (eval):  623.982
  gflops (total): 611.385
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140604,0.0682398,623.982,611.385

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105459
  gflops (total): 403.763
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488289
  gflops (eval):  872.033
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488289,872.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1727.8
  maximum absolute entry in einsum_ir solution: 1727.79
  maximum element-wise difference:              0.0244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141435
  time (eval):    0.0680363
  gflops (eval):  625.849
  gflops (total): 613.104
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141435,0.0680363,625.849,613.104

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106474
  gflops (total): 399.914
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489076
  gflops (eval):  870.631
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489076,870.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1741.61
  maximum absolute entry in einsum_ir solution: 1741.62
  maximum element-wise difference:              0.0335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0014921
  time (eval):    0.0685036
  gflops (eval):  621.579
  gflops (total): 608.329
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0014921,0.0685036,621.579,608.329

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104929
  gflops (total): 405.801
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487914
  gflops (eval):  872.704
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487914,872.704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1707.61
  maximum absolute entry in einsum_ir solution: 1707.6
  maximum element-wise difference:              0.0244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141619
  time (eval):    0.0676741
  gflops (eval):  629.199
  gflops (total): 616.301
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141619,0.0676741,629.199,616.301

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106369
  gflops (total): 400.307
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.307

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489182
  gflops (eval):  870.441
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489182,870.441,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1776.77
  maximum absolute entry in einsum_ir solution: 1776.78
  maximum element-wise difference:              0.0275879
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00145761
  time (eval):    0.0681681
  gflops (eval):  624.639
  gflops (total): 611.562
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00145761,0.0681681,624.639,611.562

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104615
  gflops (total): 407.02
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488169
  gflops (eval):  872.248
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488169,872.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1773.83
  maximum absolute entry in einsum_ir solution: 1773.83
  maximum element-wise difference:              0.0313721
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141986
  time (eval):    0.068326
  gflops (eval):  623.195
  gflops (total): 610.508
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141986,0.068326,623.195,610.508

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105524
  gflops (total): 403.514
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489342
  gflops (eval):  870.156
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489342,870.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1794.77
  maximum absolute entry in einsum_ir solution: 1794.77
  maximum element-wise difference:              0.0227051
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00146277
  time (eval):    0.0680483
  gflops (eval):  625.738
  gflops (total): 612.571
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00146277,0.0680483,625.738,612.571

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.107861
  gflops (total): 394.77
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,394.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488904
  gflops (eval):  870.937
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488904,870.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1820.16
  maximum absolute entry in einsum_ir solution: 1820.14
  maximum element-wise difference:              0.0255737
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141185
  time (eval):    0.068325
  gflops (eval):  623.204
  gflops (total): 610.587
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141185,0.068325,623.204,610.587

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105447
  gflops (total): 403.81
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488213
  gflops (eval):  872.169
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488213,872.169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1629.62
  maximum absolute entry in einsum_ir solution: 1629.62
  maximum element-wise difference:              0.0223389
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142693
  time (eval):    0.0680108
  gflops (eval):  626.083
  gflops (total): 613.217
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142693,0.0680108,626.083,613.217

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106922
  gflops (total): 398.239
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,398.239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487049
  gflops (eval):  874.253
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487049,874.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1608.05
  maximum absolute entry in einsum_ir solution: 1608.06
  maximum element-wise difference:              0.0322266
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142119
  time (eval):    0.0683375
  gflops (eval):  623.09
  gflops (total): 610.396
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142119,0.0683375,623.09,610.396

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105208
  gflops (total): 404.726
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048887
  gflops (eval):  870.996
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048887,870.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1856.56
  maximum absolute entry in einsum_ir solution: 1856.55
  maximum element-wise difference:              0.0263672
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00147501
  time (eval):    0.0678891
  gflops (eval):  627.206
  gflops (total): 613.868
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00147501,0.0678891,627.206,613.868

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106317
  gflops (total): 400.505
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489302
  gflops (eval):  870.228
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489302,870.228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1659.99
  maximum absolute entry in einsum_ir solution: 1659.99
  maximum element-wise difference:              0.029541
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141915
  time (eval):    0.0682077
  gflops (eval):  624.276
  gflops (total): 611.552
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141915,0.0682077,624.276,611.552

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104945
  gflops (total): 405.742
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,405.742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487191
  gflops (eval):  873.999
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487191,873.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1961.85
  maximum absolute entry in einsum_ir solution: 1961.84
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0017081
  time (eval):    0.0680238
  gflops (eval):  625.964
  gflops (total): 610.631
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0017081,0.0680238,625.964,610.631

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106534
  gflops (total): 399.69
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489107
  gflops (eval):  870.574
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489107,870.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1860.28
  maximum absolute entry in einsum_ir solution: 1860.27
  maximum element-wise difference:              0.0397949
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142671
  time (eval):    0.0679765
  gflops (eval):  626.4
  gflops (total): 613.523
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142671,0.0679765,626.4,613.523

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105308
  gflops (total): 404.341
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048773
  gflops (eval):  873.033
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048773,873.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1652.14
  maximum absolute entry in einsum_ir solution: 1652.14
  maximum element-wise difference:              0.024292
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00144424
  time (eval):    0.068282
  gflops (eval):  623.596
  gflops (total): 610.68
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00144424,0.068282,623.596,610.68

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105569
  gflops (total): 403.34
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489415
  gflops (eval):  870.027
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489415,870.027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1806.93
  maximum absolute entry in einsum_ir solution: 1806.93
  maximum element-wise difference:              0.0263672
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142368
  time (eval):    0.0684205
  gflops (eval):  622.334
  gflops (total): 609.649
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142368,0.0684205,622.334,609.649

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.103886
  gflops (total): 409.878
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,409.878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488054
  gflops (eval):  872.453
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488054,872.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1924.09
  maximum absolute entry in einsum_ir solution: 1924.07
  maximum element-wise difference:              0.0268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140122
  time (eval):    0.0680223
  gflops (eval):  625.977
  gflops (total): 613.343
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140122,0.0680223,625.977,613.343

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106136
  gflops (total): 401.186
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,401.186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487766
  gflops (eval):  872.968
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487766,872.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1755.88
  maximum absolute entry in einsum_ir solution: 1755.88
  maximum element-wise difference:              0.0266113
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00178989
  time (eval):    0.0683722
  gflops (eval):  622.774
  gflops (total): 606.886
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00178989,0.0683722,622.774,606.886

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.103893
  gflops (total): 409.847
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,409.847

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489257
  gflops (eval):  870.309
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489257,870.309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1700.97
  maximum absolute entry in einsum_ir solution: 1700.98
  maximum element-wise difference:              0.0252686
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142618
  time (eval):    0.0682755
  gflops (eval):  623.656
  gflops (total): 610.895
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142618,0.0682755,623.656,610.895

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106751
  gflops (total): 398.876
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,398.876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488475
  gflops (eval):  871.702
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488475,871.702,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1686.04
  maximum absolute entry in einsum_ir solution: 1686.03
  maximum element-wise difference:              0.0241699
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140295
  time (eval):    0.0683243
  gflops (eval):  623.211
  gflops (total): 610.672
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140295,0.0683243,623.211,610.672

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104423
  gflops (total): 407.77
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485711
  gflops (eval):  876.662
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485711,876.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1621.67
  maximum absolute entry in einsum_ir solution: 1621.65
  maximum element-wise difference:              0.0250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141234
  time (eval):    0.067982
  gflops (eval):  626.348
  gflops (total): 613.601
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141234,0.067982,626.348,613.601

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105427
  gflops (total): 403.885
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488055
  gflops (eval):  872.451
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488055,872.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1842.08
  maximum absolute entry in einsum_ir solution: 1842.07
  maximum element-wise difference:              0.027832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141871
  time (eval):    0.0681981
  gflops (eval):  624.364
  gflops (total): 611.64
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141871,0.0681981,624.364,611.64

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.107515
  gflops (total): 396.042
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,396.042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487146
  gflops (eval):  874.08
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487146,874.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1895.89
  maximum absolute entry in einsum_ir solution: 1895.9
  maximum element-wise difference:              0.0231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0014217
  time (eval):    0.0676556
  gflops (eval):  629.37
  gflops (total): 616.417
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0014217,0.0676556,629.37,616.417

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106252
  gflops (total): 400.748
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048813
  gflops (eval):  872.317
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048813,872.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1836.21
  maximum absolute entry in einsum_ir solution: 1836.21
  maximum element-wise difference:              0.029541
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140031
  time (eval):    0.068464
  gflops (eval):  621.939
  gflops (total): 609.473
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140031,0.068464,621.939,609.473

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104474
  gflops (total): 407.569
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487506
  gflops (eval):  873.434
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487506,873.434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1658.67
  maximum absolute entry in einsum_ir solution: 1658.66
  maximum element-wise difference:              0.0306396
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141307
  time (eval):    0.0682727
  gflops (eval):  623.682
  gflops (total): 611.035
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141307,0.0682727,623.682,611.035

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.108801
  gflops (total): 391.362
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,391.362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489774
  gflops (eval):  869.389
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489774,869.389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1916.54
  maximum absolute entry in einsum_ir solution: 1916.55
  maximum element-wise difference:              0.0271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142609
  time (eval):    0.0682494
  gflops (eval):  623.894
  gflops (total): 611.125
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142609,0.0682494,623.894,611.125

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104819
  gflops (total): 406.228
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,406.228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048881
  gflops (eval):  871.103
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048881,871.103,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1825.71
  maximum absolute entry in einsum_ir solution: 1825.7
  maximum element-wise difference:              0.0292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141345
  time (eval):    0.0684191
  gflops (eval):  622.347
  gflops (total): 609.75
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141345,0.0684191,622.347,609.75

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105888
  gflops (total): 402.128
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,402.128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488177
  gflops (eval):  872.234
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488177,872.234,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1865.4
  maximum absolute entry in einsum_ir solution: 1865.41
  maximum element-wise difference:              0.0258789
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141799
  time (eval):    0.0684287
  gflops (eval):  622.26
  gflops (total): 609.627
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141799,0.0684287,622.26,609.627

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.10555
  gflops (total): 403.413
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0490218
  gflops (eval):  868.601
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0490218,868.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1770.54
  maximum absolute entry in einsum_ir solution: 1770.53
  maximum element-wise difference:              0.0241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141663
  time (eval):    0.0682275
  gflops (eval):  624.095
  gflops (total): 611.4
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141663,0.0682275,624.095,611.4

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105508
  gflops (total): 403.574
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486352
  gflops (eval):  875.506
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486352,875.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1693.38
  maximum absolute entry in einsum_ir solution: 1693.37
  maximum element-wise difference:              0.0247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141568
  time (eval):    0.0683186
  gflops (eval):  623.263
  gflops (total): 610.61
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141568,0.0683186,623.263,610.61

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104632
  gflops (total): 406.956
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,406.956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.04856
  gflops (eval):  876.862
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.04856,876.862,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1781.2
  maximum absolute entry in einsum_ir solution: 1781.19
  maximum element-wise difference:              0.0240479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141535
  time (eval):    0.0681399
  gflops (eval):  624.897
  gflops (total): 612.182
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141535,0.0681399,624.897,612.182

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106481
  gflops (total): 399.886
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488781
  gflops (eval):  871.155
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488781,871.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1805.5
  maximum absolute entry in einsum_ir solution: 1805.51
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141947
  time (eval):    0.0680406
  gflops (eval):  625.809
  gflops (total): 613.02
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141947,0.0680406,625.809,613.02

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104528
  gflops (total): 407.36
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488327
  gflops (eval):  871.965
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488327,871.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1815.26
  maximum absolute entry in einsum_ir solution: 1815.25
  maximum element-wise difference:              0.0229492
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140651
  time (eval):    0.0678109
  gflops (eval):  627.929
  gflops (total): 615.169
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140651,0.0678109,627.929,615.169

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106469
  gflops (total): 399.933
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489298
  gflops (eval):  870.235
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489298,870.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1742.05
  maximum absolute entry in einsum_ir solution: 1742.04
  maximum element-wise difference:              0.0274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00175028
  time (eval):    0.0679222
  gflops (eval):  626.9
  gflops (total): 611.151
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00175028,0.0679222,626.9,611.151

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.104386
  gflops (total): 407.912
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,407.912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487115
  gflops (eval):  874.136
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487115,874.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1688.08
  maximum absolute entry in einsum_ir solution: 1688.08
  maximum element-wise difference:              0.0264893
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00150388
  time (eval):    0.0680412
  gflops (eval):  625.803
  gflops (total): 612.271
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00150388,0.0680412,625.803,612.271

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.108631
  gflops (total): 391.973
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,391.973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488314
  gflops (eval):  871.988
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488314,871.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1691.21
  maximum absolute entry in einsum_ir solution: 1691.2
  maximum element-wise difference:              0.0266113
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140566
  time (eval):    0.0686204
  gflops (eval):  620.521
  gflops (total): 608.065
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140566,0.0686204,620.521,608.065

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.10521
  gflops (total): 404.717
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.717

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488736
  gflops (eval):  871.237
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488736,871.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1751.46
  maximum absolute entry in einsum_ir solution: 1751.46
  maximum element-wise difference:              0.0224609
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141827
  time (eval):    0.0680809
  gflops (eval):  625.438
  gflops (total): 612.675
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141827,0.0680809,625.438,612.675

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.108442
  gflops (total): 392.657
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,392.657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.049044
  gflops (eval):  868.209
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.049044,868.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1715.12
  maximum absolute entry in einsum_ir solution: 1715.13
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00147845
  time (eval):    0.0681836
  gflops (eval):  624.496
  gflops (total): 611.242
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00147845,0.0681836,624.496,611.242

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105392
  gflops (total): 404.02
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,404.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486883
  gflops (eval):  874.552
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486883,874.552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1811.99
  maximum absolute entry in einsum_ir solution: 1812
  maximum element-wise difference:              0.0294189
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141966
  time (eval):    0.0674495
  gflops (eval):  631.294
  gflops (total): 618.281
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141966,0.0674495,631.294,618.281

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.106705
  gflops (total): 399.049
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,399.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487909
  gflops (eval):  872.713
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487909,872.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1647.58
  maximum absolute entry in einsum_ir solution: 1647.6
  maximum element-wise difference:              0.0289307
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00168721
  time (eval):    0.0681603
  gflops (eval):  624.71
  gflops (total): 609.62
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00168721,0.0681603,624.71,609.62

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.105416
  gflops (total): 403.929
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,403.929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488482
  gflops (eval):  871.689
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488482,871.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1882.59
  maximum absolute entry in einsum_ir solution: 1882.58
  maximum element-wise difference:              0.0264893
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141348
  time (eval):    0.0678315
  gflops (eval):  627.738
  gflops (total): 614.924
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141348,0.0678315,627.738,614.924

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.10621
  gflops (total): 400.908
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,400.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487902
  gflops (eval):  872.725
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487902,872.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1812.83
  maximum absolute entry in einsum_ir solution: 1812.83
  maximum element-wise difference:              0.0285645
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141743
  time (eval):    0.0639175
  gflops (eval):  652.299
  gflops (total): 638.148
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141743,0.0639175,652.299,638.148

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.115163
  gflops (total): 362.037
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,362.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047505
  gflops (eval):  877.662
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047505,877.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1716.29
  maximum absolute entry in einsum_ir solution: 1716.29
  maximum element-wise difference:              0.026123
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142742
  time (eval):    0.0638501
  gflops (eval):  652.987
  gflops (total): 638.709
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142742,0.0638501,652.987,638.709

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.117418
  gflops (total): 355.086
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,355.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475687
  gflops (eval):  876.487
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475687,876.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1607.71
  maximum absolute entry in einsum_ir solution: 1607.71
  maximum element-wise difference:              0.0257568
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142155
  time (eval):    0.0642038
  gflops (eval):  649.391
  gflops (total): 635.324
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142155,0.0642038,649.391,635.324

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.115503
  gflops (total): 360.972
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,360.972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476552
  gflops (eval):  874.895
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476552,874.895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.59
  maximum absolute entry in einsum_ir solution: 1761.59
  maximum element-wise difference:              0.0301514
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142586
  time (eval):    0.0640644
  gflops (eval):  650.804
  gflops (total): 636.634
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142586,0.0640644,650.804,636.634

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116861
  gflops (total): 356.778
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,356.778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475442
  gflops (eval):  876.938
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475442,876.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1797.5
  maximum absolute entry in einsum_ir solution: 1797.5
  maximum element-wise difference:              0.0279541
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143194
  time (eval):    0.0641772
  gflops (eval):  649.659
  gflops (total): 635.48
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143194,0.0641772,649.659,635.48

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.115608
  gflops (total): 360.645
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,360.645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475588
  gflops (eval):  876.669
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475588,876.669,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1853.16
  maximum absolute entry in einsum_ir solution: 1853.16
  maximum element-wise difference:              0.0288086
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141498
  time (eval):    0.0638502
  gflops (eval):  652.987
  gflops (total): 638.83
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141498,0.0638502,652.987,638.83

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116076
  gflops (total): 359.191
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,359.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047506
  gflops (eval):  877.643
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047506,877.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1874.59
  maximum absolute entry in einsum_ir solution: 1874.61
  maximum element-wise difference:              0.0316162
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00145855
  time (eval):    0.0642675
  gflops (eval):  648.747
  gflops (total): 634.35
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00145855,0.0642675,648.747,634.35

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.117176
  gflops (total): 355.817
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,355.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476544
  gflops (eval):  874.91
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476544,874.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1667.56
  maximum absolute entry in einsum_ir solution: 1667.55
  maximum element-wise difference:              0.0235596
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143552
  time (eval):    0.0638219
  gflops (eval):  653.276
  gflops (total): 638.905
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143552,0.0638219,653.276,638.905

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116396
  gflops (total): 358.202
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,358.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475497
  gflops (eval):  876.836
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475497,876.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1656.47
  maximum absolute entry in einsum_ir solution: 1656.47
  maximum element-wise difference:              0.0286255
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142072
  time (eval):    0.0637482
  gflops (eval):  654.032
  gflops (total): 639.774
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142072,0.0637482,654.032,639.774

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116843
  gflops (total): 356.831
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,356.831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476777
  gflops (eval):  874.483
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476777,874.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1693.11
  maximum absolute entry in einsum_ir solution: 1693.1
  maximum element-wise difference:              0.0350342
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00170302
  time (eval):    0.379839
  gflops (eval):  109.766
  gflops (total): 109.276
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00170302,0.379839,109.766,109.276

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.121826
  gflops (total): 342.236
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,342.236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0528667
  gflops (eval):  788.651
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0528667,788.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1729.75
  maximum absolute entry in einsum_ir solution: 1729.75
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00137184
  time (eval):    0.274922
  gflops (eval):  151.655
  gflops (total): 150.902
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00137184,0.274922,151.655,150.902

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.120176
  gflops (total): 346.935
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,346.935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0518157
  gflops (eval):  804.646
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0518157,804.646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1696.98
  maximum absolute entry in einsum_ir solution: 1696.98
  maximum element-wise difference:              0.027832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00350717
  time (eval):    0.182635
  gflops (eval):  228.287
  gflops (total): 223.986
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00350717,0.182635,228.287,223.986

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.125348
  gflops (total): 332.622
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,332.622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0528807
  gflops (eval):  788.442
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0528807,788.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1623.79
  maximum absolute entry in einsum_ir solution: 1623.78
  maximum element-wise difference:              0.0245361
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00121736
  time (eval):    0.435783
  gflops (eval):  95.6745
  gflops (total): 95.4079
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00121736,0.435783,95.6745,95.4079

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111219
  gflops (total): 374.877
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0478419
  gflops (eval):  871.481
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0478419,871.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1765.93
  maximum absolute entry in einsum_ir solution: 1765.95
  maximum element-wise difference:              0.0270996
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00146011
  time (eval):    0.0886156
  gflops (eval):  470.497
  gflops (total): 462.87
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00146011,0.0886156,470.497,462.87

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.119411
  gflops (total): 349.159
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,349.159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480306
  gflops (eval):  868.059
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480306,868.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1803.34
  maximum absolute entry in einsum_ir solution: 1803.35
  maximum element-wise difference:              0.0286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00166643
  time (eval):    0.0805017
  gflops (eval):  517.918
  gflops (total): 507.415
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00166643,0.0805017,517.918,507.415

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.119795
  gflops (total): 348.04
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,348.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480561
  gflops (eval):  867.596
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480561,867.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1815.79
  maximum absolute entry in einsum_ir solution: 1815.79
  maximum element-wise difference:              0.0273438
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00127259
  time (eval):    0.0936249
  gflops (eval):  445.323
  gflops (total): 439.351
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00127259,0.0936249,445.323,439.351

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.118506
  gflops (total): 351.825
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,351.825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480325
  gflops (eval):  868.023
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480325,868.023,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1621.48
  maximum absolute entry in einsum_ir solution: 1621.49
  maximum element-wise difference:              0.0247803
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00129401
  time (eval):    0.0859959
  gflops (eval):  484.829
  gflops (total): 477.642
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00129401,0.0859959,484.829,477.642

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.120914
  gflops (total): 344.819
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,344.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0528553
  gflops (eval):  788.821
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0528553,788.821,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1728.13
  maximum absolute entry in einsum_ir solution: 1728.13
  maximum element-wise difference:              0.0244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00126249
  time (eval):    0.0723302
  gflops (eval):  576.431
  gflops (total): 566.542
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00126249,0.0723302,576.431,566.542

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116298
  gflops (total): 358.503
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,358.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0479088
  gflops (eval):  870.265
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0479088,870.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1692.81
  maximum absolute entry in einsum_ir solution: 1692.82
  maximum element-wise difference:              0.0234375
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00144006
  time (eval):    0.0637408
  gflops (eval):  654.107
  gflops (total): 639.656
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00144006,0.0637408,654.107,639.656

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114145
  gflops (total): 365.268
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0514985
  gflops (eval):  809.602
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0514985,809.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1651.64
  maximum absolute entry in einsum_ir solution: 1651.65
  maximum element-wise difference:              0.0311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0012279
  time (eval):    0.0867715
  gflops (eval):  480.496
  gflops (total): 473.791
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0012279,0.0867715,480.496,473.791

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.122689
  gflops (total): 339.829
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,339.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480607
  gflops (eval):  867.514
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480607,867.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1595.99
  maximum absolute entry in einsum_ir solution: 1595.98
  maximum element-wise difference:              0.0252686
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00458062
  time (eval):    0.336903
  gflops (eval):  123.755
  gflops (total): 122.095
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00458062,0.336903,123.755,122.095

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.121845
  gflops (total): 342.182
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,342.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0497137
  gflops (eval):  838.67
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0497137,838.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1731.67
  maximum absolute entry in einsum_ir solution: 1731.67
  maximum element-wise difference:              0.0335083
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00187511
  time (eval):    0.0967616
  gflops (eval):  430.887
  gflops (total): 422.696
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00187511,0.0967616,430.887,422.696

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.12022
  gflops (total): 346.809
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,346.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.04791
  gflops (eval):  870.242
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.04791,870.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1861.09
  maximum absolute entry in einsum_ir solution: 1861.1
  maximum element-wise difference:              0.0286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00185599
  time (eval):    0.0835775
  gflops (eval):  498.858
  gflops (total): 488.021
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00185599,0.0835775,498.858,488.021

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.119827
  gflops (total): 347.945
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,347.945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480997
  gflops (eval):  866.811
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480997,866.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1619.82
  maximum absolute entry in einsum_ir solution: 1619.82
  maximum element-wise difference:              0.0223389
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00131938
  time (eval):    0.0858988
  gflops (eval):  485.378
  gflops (total): 478.035
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00131938,0.0858988,485.378,478.035

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116541
  gflops (total): 357.756
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,357.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480655
  gflops (eval):  867.428
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480655,867.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1825.83
  maximum absolute entry in einsum_ir solution: 1825.8
  maximum element-wise difference:              0.0258789
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00349783
  time (eval):    0.0867635
  gflops (eval):  480.54
  gflops (total): 461.918
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00349783,0.0867635,480.54,461.918

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116928
  gflops (total): 356.574
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,356.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0477832
  gflops (eval):  872.552
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0477832,872.552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1737.47
  maximum absolute entry in einsum_ir solution: 1737.46
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00178142
  time (eval):    0.0805506
  gflops (eval):  517.604
  gflops (total): 506.405
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00178142,0.0805506,517.604,506.405

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.121787
  gflops (total): 342.346
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,342.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480344
  gflops (eval):  867.99
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480344,867.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1677.78
  maximum absolute entry in einsum_ir solution: 1677.78
  maximum element-wise difference:              0.0303955
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00120371
  time (eval):    0.081765
  gflops (eval):  509.917
  gflops (total): 502.519
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00120371,0.081765,509.917,502.519

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.120152
  gflops (total): 347.005
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,347.005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0533165
  gflops (eval):  781.997
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0533165,781.997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.59
  maximum absolute entry in einsum_ir solution: 1756.6
  maximum element-wise difference:              0.0340576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00189129
  time (eval):    0.0765505
  gflops (eval):  544.651
  gflops (total): 531.519
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00189129,0.0765505,544.651,531.519

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.119414
  gflops (total): 349.15
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,349.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0481069
  gflops (eval):  866.681
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0481069,866.681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1662.04
  maximum absolute entry in einsum_ir solution: 1662.03
  maximum element-wise difference:              0.0223389
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133186
  time (eval):    0.0837523
  gflops (eval):  497.817
  gflops (total): 490.025
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133186,0.0837523,497.817,490.025

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.117456
  gflops (total): 354.97
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,354.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480228
  gflops (eval):  868.198
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480228,868.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1718.51
  maximum absolute entry in einsum_ir solution: 1718.5
  maximum element-wise difference:              0.0250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133881
  time (eval):    0.0790522
  gflops (eval):  527.415
  gflops (total): 518.632
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133881,0.0790522,527.415,518.632

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11733
  gflops (total): 355.35
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,355.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0480177
  gflops (eval):  868.29
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0480177,868.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1860.1
  maximum absolute entry in einsum_ir solution: 1860.1
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00152675
  time (eval):    0.0983977
  gflops (eval):  423.723
  gflops (total): 417.249
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00152675,0.0983977,423.723,417.249

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.121375
  gflops (total): 343.509
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,343.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0479355
  gflops (eval):  869.781
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0479355,869.781,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1725.05
  maximum absolute entry in einsum_ir solution: 1725.06
  maximum element-wise difference:              0.0286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00125692
  time (eval):    0.0811262
  gflops (eval):  513.932
  gflops (total): 506.091
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00125692,0.0811262,513.932,506.091

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116379
  gflops (total): 358.255
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,358.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0481084
  gflops (eval):  866.655
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0481084,866.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1883.77
  maximum absolute entry in einsum_ir solution: 1883.78
  maximum element-wise difference:              0.0234375
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013723
  time (eval):    0.424221
  gflops (eval):  98.2821
  gflops (total): 97.9652
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013723,0.424221,98.2821,97.9652

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.1213
  gflops (total): 343.72
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,343.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0561522
  gflops (eval):  742.506
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0561522,742.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1785.06
  maximum absolute entry in einsum_ir solution: 1785.05
  maximum element-wise difference:              0.0245361
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00401334
  time (eval):    0.173193
  gflops (eval):  240.734
  gflops (total): 235.281
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00401334,0.173193,240.734,235.281

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.124316
  gflops (total): 335.381
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,335.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0516675
  gflops (eval):  806.955
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0516675,806.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1653.55
  maximum absolute entry in einsum_ir solution: 1653.55
  maximum element-wise difference:              0.0284424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00475384
  time (eval):    0.183518
  gflops (eval):  227.19
  gflops (total): 221.453
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00475384,0.183518,227.19,221.453

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11912
  gflops (total): 350.011
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,350.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.051709
  gflops (eval):  806.308
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.051709,806.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1577.82
  maximum absolute entry in einsum_ir solution: 1577.83
  maximum element-wise difference:              0.0327148
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0040683
  time (eval):    0.0715876
  gflops (eval):  582.41
  gflops (total): 551.091
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0040683,0.0715876,582.41,551.091

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.143726
  gflops (total): 290.09
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,290.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0580106
  gflops (eval):  718.72
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0580106,718.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1890.46
  maximum absolute entry in einsum_ir solution: 1890.46
  maximum element-wise difference:              0.0244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00139446
  time (eval):    0.0638003
  gflops (eval):  653.497
  gflops (total): 639.519
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00139446,0.0638003,653.497,639.519

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113549
  gflops (total): 367.184
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047367
  gflops (eval):  880.22
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047367,880.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1799.46
  maximum absolute entry in einsum_ir solution: 1799.46
  maximum element-wise difference:              0.0268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00149343
  time (eval):    0.0638734
  gflops (eval):  652.749
  gflops (total): 637.836
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00149343,0.0638734,652.749,637.836

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113865
  gflops (total): 366.165
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474377
  gflops (eval):  878.908
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474377,878.908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1710.56
  maximum absolute entry in einsum_ir solution: 1710.54
  maximum element-wise difference:              0.0310669
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142018
  time (eval):    0.0637926
  gflops (eval):  653.576
  gflops (total): 639.343
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142018,0.0637926,653.576,639.343

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113672
  gflops (total): 366.786
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475024
  gflops (eval):  877.71
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475024,877.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1626.53
  maximum absolute entry in einsum_ir solution: 1626.53
  maximum element-wise difference:              0.0263062
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00145266
  time (eval):    0.0638331
  gflops (eval):  653.162
  gflops (total): 638.628
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00145266,0.0638331,653.162,638.628

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114086
  gflops (total): 365.454
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474704
  gflops (eval):  878.303
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474704,878.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1719.25
  maximum absolute entry in einsum_ir solution: 1719.23
  maximum element-wise difference:              0.0236816
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143366
  time (eval):    0.0639137
  gflops (eval):  652.338
  gflops (total): 638.026
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143366,0.0639137,652.338,638.026

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113766
  gflops (total): 366.483
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473283
  gflops (eval):  880.938
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473283,880.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1659.98
  maximum absolute entry in einsum_ir solution: 1659.97
  maximum element-wise difference:              0.0241699
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0014157
  time (eval):    0.0635947
  gflops (eval):  655.61
  gflops (total): 641.333
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0014157,0.0635947,655.61,641.333

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114428
  gflops (total): 364.365
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475308
  gflops (eval):  877.186
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475308,877.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1762.46
  maximum absolute entry in einsum_ir solution: 1762.45
  maximum element-wise difference:              0.0248413
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00147445
  time (eval):    0.0638181
  gflops (eval):  653.316
  gflops (total): 638.562
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00147445,0.0638181,653.316,638.562

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113765
  gflops (total): 366.486
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476641
  gflops (eval):  874.732
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476641,874.732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1671.26
  maximum absolute entry in einsum_ir solution: 1671.26
  maximum element-wise difference:              0.0343018
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142998
  time (eval):    0.0639179
  gflops (eval):  652.295
  gflops (total): 638.021
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142998,0.0639179,652.295,638.021

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.115091
  gflops (total): 362.265
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,362.265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475721
  gflops (eval):  876.423
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475721,876.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1773.05
  maximum absolute entry in einsum_ir solution: 1773.07
  maximum element-wise difference:              0.0269775
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142776
  time (eval):    0.0637011
  gflops (eval):  654.516
  gflops (total): 640.167
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142776,0.0637011,654.516,640.167

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113789
  gflops (total): 366.409
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474334
  gflops (eval):  878.986
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474334,878.986,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1606.45
  maximum absolute entry in einsum_ir solution: 1606.45
  maximum element-wise difference:              0.0283203
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141324
  time (eval):    0.063882
  gflops (eval):  652.661
  gflops (total): 638.535
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141324,0.063882,652.661,638.535

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113856
  gflops (total): 366.192
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476553
  gflops (eval):  874.895
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476553,874.895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1862.99
  maximum absolute entry in einsum_ir solution: 1862.99
  maximum element-wise difference:              0.0272827
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141022
  time (eval):    0.0639476
  gflops (eval):  651.992
  gflops (total): 637.924
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141022,0.0639476,651.992,637.924

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113298
  gflops (total): 367.996
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473746
  gflops (eval):  880.077
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473746,880.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1985.18
  maximum absolute entry in einsum_ir solution: 1985.18
  maximum element-wise difference:              0.0270996
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136939
  time (eval):    0.0637433
  gflops (eval):  654.082
  gflops (total): 640.326
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136939,0.0637433,654.082,640.326

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113889
  gflops (total): 366.088
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474465
  gflops (eval):  878.744
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474465,878.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1886.31
  maximum absolute entry in einsum_ir solution: 1886.31
  maximum element-wise difference:              0.0252686
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00147673
  time (eval):    0.0639657
  gflops (eval):  651.807
  gflops (total): 637.099
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00147673,0.0639657,651.807,637.099

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113931
  gflops (total): 365.952
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0538561
  gflops (eval):  774.162
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0538561,774.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1766.09
  maximum absolute entry in einsum_ir solution: 1766.08
  maximum element-wise difference:              0.0244751
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143267
  time (eval):    0.063957
  gflops (eval):  651.897
  gflops (total): 637.614
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143267,0.063957,651.897,637.614

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113606
  gflops (total): 366.999
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047442
  gflops (eval):  878.828
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047442,878.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2078.92
  maximum absolute entry in einsum_ir solution: 2078.94
  maximum element-wise difference:              0.026123
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142981
  time (eval):    0.0636792
  gflops (eval):  654.74
  gflops (total): 640.362
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142981,0.0636792,654.74,640.362

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114007
  gflops (total): 365.709
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475602
  gflops (eval):  876.643
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475602,876.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1777.59
  maximum absolute entry in einsum_ir solution: 1777.6
  maximum element-wise difference:              0.0252686
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00150172
  time (eval):    0.0638838
  gflops (eval):  652.643
  gflops (total): 637.654
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00150172,0.0638838,652.643,637.654

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113204
  gflops (total): 368.303
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474467
  gflops (eval):  878.741
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474467,878.741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1797.16
  maximum absolute entry in einsum_ir solution: 1797.15
  maximum element-wise difference:              0.0268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00147932
  time (eval):    0.063712
  gflops (eval):  654.404
  gflops (total): 639.554
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00147932,0.063712,654.404,639.554

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113986
  gflops (total): 365.776
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047566
  gflops (eval):  876.536
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047566,876.536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1662.01
  maximum absolute entry in einsum_ir solution: 1662
  maximum element-wise difference:              0.0280151
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00146943
  time (eval):    0.0638192
  gflops (eval):  653.304
  gflops (total): 638.6
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00146943,0.0638192,653.304,638.6

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113894
  gflops (total): 366.073
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.073

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474615
  gflops (eval):  878.466
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474615,878.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1608.39
  maximum absolute entry in einsum_ir solution: 1608.39
  maximum element-wise difference:              0.0299072
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142742
  time (eval):    0.0638797
  gflops (eval):  652.685
  gflops (total): 638.42
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142742,0.0638797,652.685,638.42

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113715
  gflops (total): 366.647
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.647

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474067
  gflops (eval):  879.481
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474067,879.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1827.95
  maximum absolute entry in einsum_ir solution: 1827.95
  maximum element-wise difference:              0.0235596
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141621
  time (eval):    0.0637809
  gflops (eval):  653.696
  gflops (total): 639.496
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141621,0.0637809,653.696,639.496

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113716
  gflops (total): 366.646
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047639
  gflops (eval):  875.194
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047639,875.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1681.73
  maximum absolute entry in einsum_ir solution: 1681.72
  maximum element-wise difference:              0.0253906
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142148
  time (eval):    0.0637448
  gflops (eval):  654.066
  gflops (total): 639.799
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142148,0.0637448,654.066,639.799

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113519
  gflops (total): 367.28
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474099
  gflops (eval):  879.423
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474099,879.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1629.11
  maximum absolute entry in einsum_ir solution: 1629.1
  maximum element-wise difference:              0.0263672
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142254
  time (eval):    0.0637679
  gflops (eval):  653.83
  gflops (total): 639.562
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142254,0.0637679,653.83,639.562

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114349
  gflops (total): 364.614
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474967
  gflops (eval):  877.815
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474967,877.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1557.86
  maximum absolute entry in einsum_ir solution: 1557.85
  maximum element-wise difference:              0.0301514
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143449
  time (eval):    0.0638859
  gflops (eval):  652.621
  gflops (total): 638.289
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143449,0.0638859,652.621,638.289

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113749
  gflops (total): 366.537
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474968
  gflops (eval):  877.813
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474968,877.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1679.23
  maximum absolute entry in einsum_ir solution: 1679.23
  maximum element-wise difference:              0.0256958
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0014201
  time (eval):    0.0641946
  gflops (eval):  649.484
  gflops (total): 635.427
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0014201,0.0641946,649.484,635.427

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114514
  gflops (total): 364.089
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047449
  gflops (eval):  878.698
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047449,878.698,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1839.02
  maximum absolute entry in einsum_ir solution: 1839.04
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141669
  time (eval):    0.0638108
  gflops (eval):  653.39
  gflops (total): 639.198
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141669,0.0638108,653.39,639.198

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113418
  gflops (total): 367.609
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474677
  gflops (eval):  878.352
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474677,878.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1738.89
  maximum absolute entry in einsum_ir solution: 1738.88
  maximum element-wise difference:              0.0239258
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00146272
  time (eval):    0.0637907
  gflops (eval):  653.595
  gflops (total): 638.945
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00146272,0.0637907,653.595,638.945

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114421
  gflops (total): 364.384
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474818
  gflops (eval):  878.09
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474818,878.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1686.49
  maximum absolute entry in einsum_ir solution: 1686.5
  maximum element-wise difference:              0.0306396
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141585
  time (eval):    0.0637559
  gflops (eval):  653.953
  gflops (total): 639.746
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141585,0.0637559,653.953,639.746

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114285
  gflops (total): 364.819
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474799
  gflops (eval):  878.126
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474799,878.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1679.67
  maximum absolute entry in einsum_ir solution: 1679.67
  maximum element-wise difference:              0.0290527
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00145488
  time (eval):    0.0639265
  gflops (eval):  652.207
  gflops (total): 637.694
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00145488,0.0639265,652.207,637.694

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114395
  gflops (total): 364.467
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474536
  gflops (eval):  878.613
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474536,878.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1746.48
  maximum absolute entry in einsum_ir solution: 1746.47
  maximum element-wise difference:              0.0291748
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141676
  time (eval):    0.0638728
  gflops (eval):  652.755
  gflops (total): 638.591
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141676,0.0638728,652.755,638.591

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113543
  gflops (total): 367.204
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475329
  gflops (eval):  877.148
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475329,877.148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1828.54
  maximum absolute entry in einsum_ir solution: 1828.55
  maximum element-wise difference:              0.0238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141507
  time (eval):    0.0637674
  gflops (eval):  653.835
  gflops (total): 639.64
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141507,0.0637674,653.835,639.64

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113365
  gflops (total): 367.779
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475488
  gflops (eval):  876.853
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475488,876.853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1787.08
  maximum absolute entry in einsum_ir solution: 1787.06
  maximum element-wise difference:              0.0262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00145184
  time (eval):    0.0637594
  gflops (eval):  653.917
  gflops (total): 639.359
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00145184,0.0637594,653.917,639.359

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113421
  gflops (total): 367.597
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.597

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475825
  gflops (eval):  876.233
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475825,876.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1720.46
  maximum absolute entry in einsum_ir solution: 1720.48
  maximum element-wise difference:              0.0262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00148653
  time (eval):    0.0639803
  gflops (eval):  651.659
  gflops (total): 636.862
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00148653,0.0639803,651.659,636.862

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113343
  gflops (total): 367.85
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474195
  gflops (eval):  879.244
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474195,879.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1874.02
  maximum absolute entry in einsum_ir solution: 1874.01
  maximum element-wise difference:              0.0247803
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0014146
  time (eval):    0.0640716
  gflops (eval):  650.73
  gflops (total): 636.673
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0014146,0.0640716,650.73,636.673

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114016
  gflops (total): 365.681
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0472011
  gflops (eval):  883.313
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0472011,883.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1737.7
  maximum absolute entry in einsum_ir solution: 1737.7
  maximum element-wise difference:              0.0258789
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00139382
  time (eval):    0.0636916
  gflops (eval):  654.613
  gflops (total): 640.594
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00139382,0.0636916,654.613,640.594

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114402
  gflops (total): 364.447
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473263
  gflops (eval):  880.977
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473263,880.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1648.15
  maximum absolute entry in einsum_ir solution: 1648.14
  maximum element-wise difference:              0.0245361
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00148435
  time (eval):    0.0638333
  gflops (eval):  653.16
  gflops (total): 638.317
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00148435,0.0638333,653.16,638.317

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113846
  gflops (total): 366.227
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475227
  gflops (eval):  877.336
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475227,877.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1810.9
  maximum absolute entry in einsum_ir solution: 1810.89
  maximum element-wise difference:              0.0327148
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140924
  time (eval):    0.0637722
  gflops (eval):  653.786
  gflops (total): 639.651
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140924,0.0637722,653.786,639.651

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.1144
  gflops (total): 364.451
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475379
  gflops (eval):  877.055
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475379,877.055,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1781.36
  maximum absolute entry in einsum_ir solution: 1781.37
  maximum element-wise difference:              0.0273438
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141327
  time (eval):    0.0635609
  gflops (eval):  655.958
  gflops (total): 641.69
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141327,0.0635609,655.958,641.69

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113865
  gflops (total): 366.166
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475636
  gflops (eval):  876.58
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475636,876.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1630.58
  maximum absolute entry in einsum_ir solution: 1630.58
  maximum element-wise difference:              0.0282593
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141043
  time (eval):    0.0638505
  gflops (eval):  652.984
  gflops (total): 638.871
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141043,0.0638505,652.984,638.871

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113612
  gflops (total): 366.98
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475216
  gflops (eval):  877.356
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475216,877.356,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1674.72
  maximum absolute entry in einsum_ir solution: 1674.73
  maximum element-wise difference:              0.0310059
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141879
  time (eval):    0.0636611
  gflops (eval):  654.926
  gflops (total): 640.648
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141879,0.0636611,654.926,640.648

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113742
  gflops (total): 366.561
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474347
  gflops (eval):  878.963
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474347,878.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1941.03
  maximum absolute entry in einsum_ir solution: 1941.02
  maximum element-wise difference:              0.034668
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00168973
  time (eval):    0.0638337
  gflops (eval):  653.155
  gflops (total): 636.312
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00168973,0.0638337,653.155,636.312

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114202
  gflops (total): 365.084
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474001
  gflops (eval):  879.604
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474001,879.604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1792.72
  maximum absolute entry in einsum_ir solution: 1792.72
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140885
  time (eval):    0.0638087
  gflops (eval):  653.412
  gflops (total): 639.296
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140885,0.0638087,653.412,639.296

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113172
  gflops (total): 368.406
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475406
  gflops (eval):  877.005
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475406,877.005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1882.71
  maximum absolute entry in einsum_ir solution: 1882.7
  maximum element-wise difference:              0.0246582
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143336
  time (eval):    0.0637565
  gflops (eval):  653.946
  gflops (total): 639.568
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143336,0.0637565,653.946,639.568

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113748
  gflops (total): 366.543
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474469
  gflops (eval):  878.737
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474469,878.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1677.86
  maximum absolute entry in einsum_ir solution: 1677.87
  maximum element-wise difference:              0.0287476
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0014244
  time (eval):    0.0636696
  gflops (eval):  654.839
  gflops (total): 640.51
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0014244,0.0636696,654.839,640.51

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114384
  gflops (total): 364.502
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474366
  gflops (eval):  878.927
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474366,878.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1707.29
  maximum absolute entry in einsum_ir solution: 1707.3
  maximum element-wise difference:              0.0286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142576
  time (eval):    0.0638254
  gflops (eval):  653.241
  gflops (total): 638.967
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142576,0.0638254,653.241,638.967

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113475
  gflops (total): 367.424
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474942
  gflops (eval):  877.862
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474942,877.862,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2079.16
  maximum absolute entry in einsum_ir solution: 2079.15
  maximum element-wise difference:              0.0257568
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140614
  time (eval):    0.0637283
  gflops (eval):  654.236
  gflops (total): 640.112
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140614,0.0637283,654.236,640.112

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114469
  gflops (total): 364.231
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474467
  gflops (eval):  878.74
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474467,878.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2005.6
  maximum absolute entry in einsum_ir solution: 2005.61
  maximum element-wise difference:              0.0217285
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141909
  time (eval):    0.0637945
  gflops (eval):  653.557
  gflops (total): 639.335
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141909,0.0637945,653.557,639.335

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113989
  gflops (total): 365.767
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474674
  gflops (eval):  878.358
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474674,878.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1662.72
  maximum absolute entry in einsum_ir solution: 1662.71
  maximum element-wise difference:              0.03479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143069
  time (eval):    0.063945
  gflops (eval):  652.019
  gflops (total): 637.75
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143069,0.063945,652.019,637.75

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114399
  gflops (total): 364.457
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475725
  gflops (eval):  876.416
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475725,876.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1812.46
  maximum absolute entry in einsum_ir solution: 1812.46
  maximum element-wise difference:              0.0253906
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140728
  time (eval):    0.0640362
  gflops (eval):  651.09
  gflops (total): 637.089
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140728,0.0640362,651.09,637.089

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114141
  gflops (total): 365.28
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475085
  gflops (eval):  877.598
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475085,877.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1773.51
  maximum absolute entry in einsum_ir solution: 1773.52
  maximum element-wise difference:              0.0249023
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00139311
  time (eval):    0.0636694
  gflops (eval):  654.841
  gflops (total): 640.82
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00139311,0.0636694,654.841,640.82

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113702
  gflops (total): 366.689
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474277
  gflops (eval):  879.092
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474277,879.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1714.06
  maximum absolute entry in einsum_ir solution: 1714.06
  maximum element-wise difference:              0.0247803
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141659
  time (eval):    0.0640603
  gflops (eval):  650.845
  gflops (total): 636.764
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141659,0.0640603,650.845,636.764

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113374
  gflops (total): 367.752
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473648
  gflops (eval):  880.259
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473648,880.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1694.49
  maximum absolute entry in einsum_ir solution: 1694.47
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140394
  time (eval):    0.0638887
  gflops (eval):  652.593
  gflops (total): 638.561
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140394,0.0638887,652.593,638.561

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113906
  gflops (total): 366.032
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474191
  gflops (eval):  879.251
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474191,879.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1823.49
  maximum absolute entry in einsum_ir solution: 1823.51
  maximum element-wise difference:              0.0223389
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00147352
  time (eval):    0.0634912
  gflops (eval):  656.678
  gflops (total): 641.784
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00147352,0.0634912,656.678,641.784

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113613
  gflops (total): 366.978
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047455
  gflops (eval):  878.587
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047455,878.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2060.05
  maximum absolute entry in einsum_ir solution: 2060.06
  maximum element-wise difference:              0.0275879
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00146447
  time (eval):    0.0638336
  gflops (eval):  653.157
  gflops (total): 638.508
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00146447,0.0638336,653.157,638.508

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114072
  gflops (total): 365.501
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474416
  gflops (eval):  878.836
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474416,878.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1629.67
  maximum absolute entry in einsum_ir solution: 1629.67
  maximum element-wise difference:              0.0233154
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.001417
  time (eval):    0.0638609
  gflops (eval):  652.877
  gflops (total): 638.705
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.001417,0.0638609,652.877,638.705

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113692
  gflops (total): 366.721
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474441
  gflops (eval):  878.788
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474441,878.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1742.36
  maximum absolute entry in einsum_ir solution: 1742.35
  maximum element-wise difference:              0.0281982
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00148651
  time (eval):    0.0637907
  gflops (eval):  653.596
  gflops (total): 638.712
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00148651,0.0637907,653.596,638.712

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114525
  gflops (total): 364.055
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047644
  gflops (eval):  875.102
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047644,875.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1819.89
  maximum absolute entry in einsum_ir solution: 1819.89
  maximum element-wise difference:              0.0269775
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00148502
  time (eval):    0.063792
  gflops (eval):  653.583
  gflops (total): 638.714
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00148502,0.063792,653.583,638.714

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114031
  gflops (total): 365.63
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474694
  gflops (eval):  878.32
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474694,878.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1904.18
  maximum absolute entry in einsum_ir solution: 1904.16
  maximum element-wise difference:              0.0268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143608
  time (eval):    0.0638401
  gflops (eval):  653.09
  gflops (total): 638.722
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143608,0.0638401,653.09,638.722

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114292
  gflops (total): 364.797
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047414
  gflops (eval):  879.347
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047414,879.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1607.66
  maximum absolute entry in einsum_ir solution: 1607.65
  maximum element-wise difference:              0.02771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142432
  time (eval):    0.0638131
  gflops (eval):  653.366
  gflops (total): 639.102
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142432,0.0638131,653.366,639.102

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113979
  gflops (total): 365.799
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.799

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474252
  gflops (eval):  879.139
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474252,879.139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1847.68
  maximum absolute entry in einsum_ir solution: 1847.69
  maximum element-wise difference:              0.0250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00147892
  time (eval):    0.0639915
  gflops (eval):  651.545
  gflops (total): 636.827
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00147892,0.0639915,651.545,636.827

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113557
  gflops (total): 367.158
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474682
  gflops (eval):  878.343
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474682,878.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1738.31
  maximum absolute entry in einsum_ir solution: 1738.31
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140691
  time (eval):    0.0642064
  gflops (eval):  649.364
  gflops (total): 635.44
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140691,0.0642064,649.364,635.44

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114409
  gflops (total): 364.423
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473995
  gflops (eval):  879.615
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473995,879.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1760.4
  maximum absolute entry in einsum_ir solution: 1760.4
  maximum element-wise difference:              0.022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141857
  time (eval):    0.0638894
  gflops (eval):  652.586
  gflops (total): 638.411
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141857,0.0638894,652.586,638.411

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114314
  gflops (total): 364.726
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474889
  gflops (eval):  877.96
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474889,877.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1895.68
  maximum absolute entry in einsum_ir solution: 1895.69
  maximum element-wise difference:              0.022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143309
  time (eval):    0.0639239
  gflops (eval):  652.234
  gflops (total): 637.932
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143309,0.0639239,652.234,637.932

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114504
  gflops (total): 364.121
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474321
  gflops (eval):  879.011
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474321,879.011,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1700.24
  maximum absolute entry in einsum_ir solution: 1700.24
  maximum element-wise difference:              0.0234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142125
  time (eval):    0.0635812
  gflops (eval):  655.75
  gflops (total): 641.412
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142125,0.0635812,655.75,641.412

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114604
  gflops (total): 363.804
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,363.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047521
  gflops (eval):  877.366
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047521,877.366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1734.62
  maximum absolute entry in einsum_ir solution: 1734.61
  maximum element-wise difference:              0.0300293
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00142976
  time (eval):    0.0638236
  gflops (eval):  653.259
  gflops (total): 638.946
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00142976,0.0638236,653.259,638.946

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113602
  gflops (total): 367.013
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474009
  gflops (eval):  879.589
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474009,879.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1693.51
  maximum absolute entry in einsum_ir solution: 1693.5
  maximum element-wise difference:              0.0239258
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145589
  time (eval):    0.0503575
  gflops (eval):  826.872
  gflops (total): 803.638
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145589,0.0503575,826.872,803.638

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802834
  gflops (total): 518.653
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082891
  gflops (eval):  502.337
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082891,502.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.602
  maximum absolute entry in einsum_ir solution: 108.602
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147692
  time (eval):    0.0503909
  gflops (eval):  826.324
  gflops (total): 802.795
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147692,0.0503909,826.324,802.795

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0805026
  gflops (total): 517.241
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836301
  gflops (eval):  497.897
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836301,497.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      129.639
  maximum absolute entry in einsum_ir solution: 129.639
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147262
  time (eval):    0.0502071
  gflops (eval):  829.348
  gflops (total): 805.716
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147262,0.0502071,829.348,805.716

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079924
  gflops (total): 520.985
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832343
  gflops (eval):  500.265
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832343,500.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      126.492
  maximum absolute entry in einsum_ir solution: 126.492
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147037
  time (eval):    0.0503375
  gflops (eval):  827.199
  gflops (total): 803.723
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147037,0.0503375,827.199,803.723

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798781
  gflops (total): 521.284
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835008
  gflops (eval):  498.668
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835008,498.668,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.793
  maximum absolute entry in einsum_ir solution: 107.794
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146555
  time (eval):    0.0504432
  gflops (eval):  825.466
  gflops (total): 802.161
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146555,0.0504432,825.466,802.161

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801032
  gflops (total): 519.819
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0820212
  gflops (eval):  507.664
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0820212,507.664,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.945
  maximum absolute entry in einsum_ir solution: 111.945
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00173034
  time (eval):    0.0503664
  gflops (eval):  826.726
  gflops (total): 799.267
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00173034,0.0503664,826.726,799.267

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080165
  gflops (total): 519.419
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825783
  gflops (eval):  504.239
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825783,504.239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.76
  maximum absolute entry in einsum_ir solution: 113.76
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146989
  time (eval):    0.0505518
  gflops (eval):  823.693
  gflops (total): 800.419
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146989,0.0505518,823.693,800.419

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799869
  gflops (total): 520.575
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829395
  gflops (eval):  502.043
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829395,502.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.168
  maximum absolute entry in einsum_ir solution: 112.168
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00159451
  time (eval):    0.0502787
  gflops (eval):  828.168
  gflops (total): 802.712
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00159451,0.0502787,828.168,802.712

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079775
  gflops (total): 521.958
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083251
  gflops (eval):  500.165
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083251,500.165,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.879
  maximum absolute entry in einsum_ir solution: 111.879
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149958
  time (eval):    0.0503101
  gflops (eval):  827.651
  gflops (total): 803.695
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149958,0.0503101,827.651,803.695

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799499
  gflops (total): 520.816
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834593
  gflops (eval):  498.916
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834593,498.916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.246
  maximum absolute entry in einsum_ir solution: 116.246
  maximum element-wise difference:              0.000102997
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.001502
  time (eval):    0.050121
  gflops (eval):  830.773
  gflops (total): 806.602
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.001502,0.050121,830.773,806.602

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801662
  gflops (total): 519.411
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083017
  gflops (eval):  501.574
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083017,501.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.091
  maximum absolute entry in einsum_ir solution: 113.091
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00152889
  time (eval):    0.05033
  gflops (eval):  827.324
  gflops (total): 802.933
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00152889,0.05033,827.324,802.933

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798212
  gflops (total): 521.656
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831497
  gflops (eval):  500.774
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831497,500.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.287
  maximum absolute entry in einsum_ir solution: 112.287
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014744
  time (eval):    0.0504309
  gflops (eval):  825.668
  gflops (total): 802.214
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014744,0.0504309,825.668,802.214

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799068
  gflops (total): 521.097
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834326
  gflops (eval):  499.076
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834326,499.076,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.712
  maximum absolute entry in einsum_ir solution: 113.712
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145262
  time (eval):    0.0503887
  gflops (eval):  826.36
  gflops (total): 803.205
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145262,0.0503887,826.36,803.205

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802074
  gflops (total): 519.144
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829406
  gflops (eval):  502.036
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829406,502.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.868
  maximum absolute entry in einsum_ir solution: 119.868
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00144022
  time (eval):    0.0503092
  gflops (eval):  827.665
  gflops (total): 804.631
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00144022,0.0503092,827.665,804.631

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801089
  gflops (total): 519.782
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828072
  gflops (eval):  502.845
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828072,502.845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.654
  maximum absolute entry in einsum_ir solution: 112.654
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00153482
  time (eval):    0.0500516
  gflops (eval):  831.926
  gflops (total): 807.174
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00153482,0.0500516,831.926,807.174

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798871
  gflops (total): 521.226
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0819982
  gflops (eval):  507.806
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0819982,507.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.245
  maximum absolute entry in einsum_ir solution: 113.245
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00192645
  time (eval):    0.0503575
  gflops (eval):  826.872
  gflops (total): 796.405
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00192645,0.0503575,826.872,796.405

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800756
  gflops (total): 519.999
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835865
  gflops (eval):  498.157
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835865,498.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.32
  maximum absolute entry in einsum_ir solution: 109.32
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146674
  time (eval):    0.0502187
  gflops (eval):  829.156
  gflops (total): 805.626
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146674,0.0502187,829.156,805.626

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800878
  gflops (total): 519.919
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082495
  gflops (eval):  504.748
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082495,504.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.121
  maximum absolute entry in einsum_ir solution: 109.121
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146716
  time (eval):    0.0505446
  gflops (eval):  823.811
  gflops (total): 800.573
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146716,0.0505446,823.811,800.573

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801628
  gflops (total): 519.433
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824191
  gflops (eval):  505.213
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824191,505.213,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.735
  maximum absolute entry in einsum_ir solution: 113.735
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146365
  time (eval):    0.050386
  gflops (eval):  826.404
  gflops (total): 803.075
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146365,0.050386,826.404,803.075

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801092
  gflops (total): 519.78
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829732
  gflops (eval):  501.839
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829732,501.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.352
  maximum absolute entry in einsum_ir solution: 113.352
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014657
  time (eval):    0.0502574
  gflops (eval):  828.519
  gflops (total): 805.041
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014657,0.0502574,828.519,805.041

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799903
  gflops (total): 520.553
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828128
  gflops (eval):  502.811
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828128,502.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.514
  maximum absolute entry in einsum_ir solution: 115.514
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145927
  time (eval):    0.0502536
  gflops (eval):  828.582
  gflops (total): 805.2
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145927,0.0502536,828.582,805.2

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801396
  gflops (total): 519.583
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827158
  gflops (eval):  503.4
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827158,503.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.243
  maximum absolute entry in einsum_ir solution: 113.242
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00148114
  time (eval):    0.0501683
  gflops (eval):  829.99
  gflops (total): 806.189
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00148114,0.0501683,829.99,806.189

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800068
  gflops (total): 520.446
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.446

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0838353
  gflops (eval):  496.679
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0838353,496.679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.777
  maximum absolute entry in einsum_ir solution: 118.777
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147392
  time (eval):    0.0503972
  gflops (eval):  826.221
  gflops (total): 802.744
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147392,0.0503972,826.221,802.744

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801336
  gflops (total): 519.622
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829568
  gflops (eval):  501.938
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829568,501.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.418
  maximum absolute entry in einsum_ir solution: 119.418
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147674
  time (eval):    0.0503959
  gflops (eval):  826.242
  gflops (total): 802.72
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147674,0.0503959,826.242,802.72

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798162
  gflops (total): 521.689
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829896
  gflops (eval):  501.74
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829896,501.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.058
  maximum absolute entry in einsum_ir solution: 117.058
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145459
  time (eval):    0.050423
  gflops (eval):  825.798
  gflops (total): 802.643
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145459,0.050423,825.798,802.643

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080074
  gflops (total): 520.009
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826849
  gflops (eval):  503.589
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826849,503.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.603
  maximum absolute entry in einsum_ir solution: 111.603
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149999
  time (eval):    0.0502306
  gflops (eval):  828.961
  gflops (total): 804.924
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149999,0.0502306,828.961,804.924

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800492
  gflops (total): 520.17
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0837593
  gflops (eval):  497.129
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0837593,497.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.203
  maximum absolute entry in einsum_ir solution: 119.203
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142864
  time (eval):    0.0504889
  gflops (eval):  824.72
  gflops (total): 802.025
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142864,0.0504889,824.72,802.025

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0804195
  gflops (total): 517.775
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831382
  gflops (eval):  500.843
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831382,500.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.771
  maximum absolute entry in einsum_ir solution: 107.771
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146559
  time (eval):    0.0502089
  gflops (eval):  829.319
  gflops (total): 805.798
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146559,0.0502089,829.319,805.798

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798711
  gflops (total): 521.33
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832784
  gflops (eval):  500
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832784,500,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.382
  maximum absolute entry in einsum_ir solution: 109.382
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147802
  time (eval):    0.050393
  gflops (eval):  826.29
  gflops (total): 802.745
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147802,0.050393,826.29,802.745

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079831
  gflops (total): 521.592
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827228
  gflops (eval):  503.358
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827228,503.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.792
  maximum absolute entry in einsum_ir solution: 119.792
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147455
  time (eval):    0.0502992
  gflops (eval):  827.831
  gflops (total): 804.254
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147455,0.0502992,827.831,804.254

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799978
  gflops (total): 520.504
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082361
  gflops (eval):  505.57
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082361,505.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.544
  maximum absolute entry in einsum_ir solution: 112.544
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00160983
  time (eval):    0.050275
  gflops (eval):  828.228
  gflops (total): 802.531
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00160983,0.050275,828.228,802.531

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800784
  gflops (total): 519.98
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827603
  gflops (eval):  503.13
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827603,503.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.083
  maximum absolute entry in einsum_ir solution: 121.083
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146266
  time (eval):    0.050423
  gflops (eval):  825.797
  gflops (total): 802.518
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146266,0.050423,825.797,802.518

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080524
  gflops (total): 517.103
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829259
  gflops (eval):  502.125
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829259,502.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.925
  maximum absolute entry in einsum_ir solution: 120.925
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00174828
  time (eval):    0.0501852
  gflops (eval):  829.71
  gflops (total): 801.779
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00174828,0.0501852,829.71,801.779

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800348
  gflops (total): 520.264
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832005
  gflops (eval):  500.468
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832005,500.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.951
  maximum absolute entry in einsum_ir solution: 110.951
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00153799
  time (eval):    0.0500846
  gflops (eval):  831.378
  gflops (total): 806.609
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00153799,0.0500846,831.378,806.609

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801048
  gflops (total): 519.809
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827088
  gflops (eval):  503.443
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827088,503.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.822
  maximum absolute entry in einsum_ir solution: 110.822
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147281
  time (eval):    0.0504124
  gflops (eval):  825.972
  gflops (total): 802.526
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147281,0.0504124,825.972,802.526

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800765
  gflops (total): 519.992
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.992

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823468
  gflops (eval):  505.657
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823468,505.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.08
  maximum absolute entry in einsum_ir solution: 116.08
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146609
  time (eval):    0.0505379
  gflops (eval):  823.92
  gflops (total): 800.692
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146609,0.0505379,823.92,800.692

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801213
  gflops (total): 519.702
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823218
  gflops (eval):  505.81
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823218,505.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.237
  maximum absolute entry in einsum_ir solution: 113.237
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147157
  time (eval):    0.0501012
  gflops (eval):  831.102
  gflops (total): 807.388
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147157,0.0501012,831.102,807.388

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080272
  gflops (total): 518.726
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083034
  gflops (eval):  501.471
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083034,501.471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.382
  maximum absolute entry in einsum_ir solution: 108.382
  maximum element-wise difference:              0.000102997
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145975
  time (eval):    0.050614
  gflops (eval):  822.682
  gflops (total): 799.62
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145975,0.050614,822.682,799.62

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0796795
  gflops (total): 522.583
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,522.583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832254
  gflops (eval):  500.318
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832254,500.318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.799
  maximum absolute entry in einsum_ir solution: 119.799
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146676
  time (eval):    0.0504524
  gflops (eval):  825.316
  gflops (total): 802.001
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146676,0.0504524,825.316,802.001

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079921
  gflops (total): 521.004
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824348
  gflops (eval):  505.116
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824348,505.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.973
  maximum absolute entry in einsum_ir solution: 114.973
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147422
  time (eval):    0.0504352
  gflops (eval):  825.597
  gflops (total): 802.15
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147422,0.0504352,825.597,802.15

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802067
  gflops (total): 519.148
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834982
  gflops (eval):  498.684
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834982,498.684,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.496
  maximum absolute entry in einsum_ir solution: 113.496
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147814
  time (eval):    0.0504394
  gflops (eval):  825.529
  gflops (total): 802.026
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147814,0.0504394,825.529,802.026

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0792633
  gflops (total): 525.328
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,525.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829242
  gflops (eval):  502.135
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829242,502.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.359
  maximum absolute entry in einsum_ir solution: 109.359
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00152743
  time (eval):    0.0505112
  gflops (eval):  824.356
  gflops (total): 800.16
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00152743,0.0505112,824.356,800.16

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798177
  gflops (total): 521.679
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836956
  gflops (eval):  497.508
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836956,497.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.681
  maximum absolute entry in einsum_ir solution: 108.681
  maximum element-wise difference:              0.000118256
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146365
  time (eval):    0.0504045
  gflops (eval):  826.101
  gflops (total): 802.79
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146365,0.0504045,826.101,802.79

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079938
  gflops (total): 520.894
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833749
  gflops (eval):  499.421
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833749,499.421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.1
  maximum absolute entry in einsum_ir solution: 119.1
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146191
  time (eval):    0.050627
  gflops (eval):  822.47
  gflops (total): 799.387
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146191,0.050627,822.47,799.387

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0797364
  gflops (total): 522.21
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,522.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0819209
  gflops (eval):  508.285
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0819209,508.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.5
  maximum absolute entry in einsum_ir solution: 115.5
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147127
  time (eval):    0.0504275
  gflops (eval):  825.724
  gflops (total): 802.315
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147127,0.0504275,825.724,802.315

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0797911
  gflops (total): 521.852
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830288
  gflops (eval):  501.503
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830288,501.503,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.791
  maximum absolute entry in einsum_ir solution: 117.791
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00154718
  time (eval):    0.0501936
  gflops (eval):  829.571
  gflops (total): 804.765
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00154718,0.0501936,829.571,804.765

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798805
  gflops (total): 521.269
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829932
  gflops (eval):  501.718
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829932,501.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.658
  maximum absolute entry in einsum_ir solution: 111.658
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00151338
  time (eval):    0.0503598
  gflops (eval):  826.834
  gflops (total): 802.711
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00151338,0.0503598,826.834,802.711

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800086
  gflops (total): 520.434
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082728
  gflops (eval):  503.327
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082728,503.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.216
  maximum absolute entry in einsum_ir solution: 118.216
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00153182
  time (eval):    0.0503449
  gflops (eval):  827.078
  gflops (total): 802.656
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00153182,0.0503449,827.078,802.656

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800541
  gflops (total): 520.138
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833062
  gflops (eval):  499.833
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833062,499.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.387
  maximum absolute entry in einsum_ir solution: 120.387
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146767
  time (eval):    0.0504218
  gflops (eval):  825.818
  gflops (total): 802.46
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146767,0.0504218,825.818,802.46

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800603
  gflops (total): 520.098
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828327
  gflops (eval):  502.69
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828327,502.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.208
  maximum absolute entry in einsum_ir solution: 114.208
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145181
  time (eval):    0.0502511
  gflops (eval):  828.622
  gflops (total): 805.355
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145181,0.0502511,828.622,805.355

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799384
  gflops (total): 520.891
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083332
  gflops (eval):  499.678
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083332,499.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.451
  maximum absolute entry in einsum_ir solution: 116.451
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147735
  time (eval):    0.0504018
  gflops (eval):  826.144
  gflops (total): 802.618
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147735,0.0504018,826.144,802.618

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079921
  gflops (total): 521.004
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830388
  gflops (eval):  501.443
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830388,501.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.926
  maximum absolute entry in einsum_ir solution: 111.926
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147098
  time (eval):    0.0503269
  gflops (eval):  827.374
  gflops (total): 803.878
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147098,0.0503269,827.374,803.878

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800474
  gflops (total): 520.182
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832351
  gflops (eval):  500.26
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832351,500.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.794
  maximum absolute entry in einsum_ir solution: 109.794
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147562
  time (eval):    0.0504272
  gflops (eval):  825.729
  gflops (total): 802.253
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147562,0.0504272,825.729,802.253

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801459
  gflops (total): 519.542
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0843464
  gflops (eval):  493.669
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0843464,493.669,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.878
  maximum absolute entry in einsum_ir solution: 111.878
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00153482
  time (eval):    0.0499672
  gflops (eval):  833.331
  gflops (total): 808.497
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00153482,0.0499672,833.331,808.497

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0806852
  gflops (total): 516.07
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,516.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0841039
  gflops (eval):  495.092
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0841039,495.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.724
  maximum absolute entry in einsum_ir solution: 112.724
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00148159
  time (eval):    0.0504875
  gflops (eval):  824.743
  gflops (total): 801.23
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00148159,0.0504875,824.743,801.23

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079957
  gflops (total): 520.77
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828246
  gflops (eval):  502.74
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828246,502.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.181
  maximum absolute entry in einsum_ir solution: 117.181
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145884
  time (eval):    0.0502814
  gflops (eval):  828.124
  gflops (total): 804.774
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145884,0.0502814,828.124,804.774

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801115
  gflops (total): 519.766
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829299
  gflops (eval):  502.101
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829299,502.101,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.958
  maximum absolute entry in einsum_ir solution: 113.958
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147187
  time (eval):    0.0502515
  gflops (eval):  828.615
  gflops (total): 805.036
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147187,0.0502515,828.615,805.036

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0795475
  gflops (total): 523.451
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,523.451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828029
  gflops (eval):  502.871
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828029,502.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.418
  maximum absolute entry in einsum_ir solution: 118.418
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00153024
  time (eval):    0.0502249
  gflops (eval):  829.054
  gflops (total): 804.542
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00153024,0.0502249,829.054,804.542

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0804292
  gflops (total): 517.712
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.712

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834343
  gflops (eval):  499.065
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834343,499.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      125.429
  maximum absolute entry in einsum_ir solution: 125.429
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146529
  time (eval):    0.0501465
  gflops (eval):  830.35
  gflops (total): 806.776
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146529,0.0501465,830.35,806.776

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798464
  gflops (total): 521.491
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083251
  gflops (eval):  500.164
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083251,500.164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.675
  maximum absolute entry in einsum_ir solution: 110.675
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146749
  time (eval):    0.0503944
  gflops (eval):  826.267
  gflops (total): 802.886
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146749,0.0503944,826.267,802.886

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800062
  gflops (total): 520.45
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829771
  gflops (eval):  501.815
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829771,501.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.892
  maximum absolute entry in einsum_ir solution: 110.892
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00177411
  time (eval):    0.050353
  gflops (eval):  826.946
  gflops (total): 798.802
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00177411,0.050353,826.946,798.802

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.07986
  gflops (total): 521.402
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083108
  gflops (eval):  501.025
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083108,501.025,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.233
  maximum absolute entry in einsum_ir solution: 109.233
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145785
  time (eval):    0.0503269
  gflops (eval):  827.375
  gflops (total): 804.082
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145785,0.0503269,827.375,804.082

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800229
  gflops (total): 520.341
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082529
  gflops (eval):  504.54
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082529,504.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.6
  maximum absolute entry in einsum_ir solution: 114.6
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147015
  time (eval):    0.0501883
  gflops (eval):  829.659
  gflops (total): 806.048
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147015,0.0501883,829.659,806.048

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079414
  gflops (total): 524.33
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,524.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0837636
  gflops (eval):  497.104
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0837636,497.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.693
  maximum absolute entry in einsum_ir solution: 109.693
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145047
  time (eval):    0.0503238
  gflops (eval):  827.425
  gflops (total): 804.245
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145047,0.0503238,827.425,804.245

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079819
  gflops (total): 521.67
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833023
  gflops (eval):  499.857
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833023,499.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.236
  maximum absolute entry in einsum_ir solution: 119.236
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149127
  time (eval):    0.05039
  gflops (eval):  826.338
  gflops (total): 802.586
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149127,0.05039,826.338,802.586

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798583
  gflops (total): 521.413
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823115
  gflops (eval):  505.873
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823115,505.873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.923
  maximum absolute entry in einsum_ir solution: 111.923
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147917
  time (eval):    0.0502286
  gflops (eval):  828.993
  gflops (total): 805.279
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147917,0.0502286,828.993,805.279

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800258
  gflops (total): 520.322
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834371
  gflops (eval):  499.049
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834371,499.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.419
  maximum absolute entry in einsum_ir solution: 118.419
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146415
  time (eval):    0.0500633
  gflops (eval):  831.73
  gflops (total): 808.097
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146415,0.0500633,831.73,808.097

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801459
  gflops (total): 519.542
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082723
  gflops (eval):  503.357
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082723,503.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.236
  maximum absolute entry in einsum_ir solution: 114.236
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147648
  time (eval):    0.0503956
  gflops (eval):  826.247
  gflops (total): 802.729
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147648,0.0503956,826.247,802.729

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800645
  gflops (total): 520.07
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083634
  gflops (eval):  497.874
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083634,497.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.072
  maximum absolute entry in einsum_ir solution: 116.072
  maximum element-wise difference:              0.000110626
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146734
  time (eval):    0.0502399
  gflops (eval):  828.808
  gflops (total): 805.288
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146734,0.0502399,828.808,805.288

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799616
  gflops (total): 520.74
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830857
  gflops (eval):  501.16
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830857,501.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.814
  maximum absolute entry in einsum_ir solution: 114.814
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00175271
  time (eval):    0.0502867
  gflops (eval):  828.037
  gflops (total): 800.148
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00175271,0.0502867,828.037,800.148

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799567
  gflops (total): 520.772
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836548
  gflops (eval):  497.75
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836548,497.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.378
  maximum absolute entry in einsum_ir solution: 112.378
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149996
  time (eval):    0.0503297
  gflops (eval):  827.328
  gflops (total): 803.385
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149996,0.0503297,827.328,803.385

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799445
  gflops (total): 520.851
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0840392
  gflops (eval):  495.473
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0840392,495.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.073
  maximum absolute entry in einsum_ir solution: 114.073
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146875
  time (eval):    0.0499148
  gflops (eval):  834.205
  gflops (total): 810.36
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146875,0.0499148,834.205,810.36

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800299
  gflops (total): 520.295
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834232
  gflops (eval):  499.132
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834232,499.132,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.159
  maximum absolute entry in einsum_ir solution: 111.159
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00150905
  time (eval):    0.0499478
  gflops (eval):  833.654
  gflops (total): 809.206
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00150905,0.0499478,833.654,809.206

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800725
  gflops (total): 520.019
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830168
  gflops (eval):  501.575
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830168,501.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.468
  maximum absolute entry in einsum_ir solution: 107.468
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145463
  time (eval):    0.0502641
  gflops (eval):  828.409
  gflops (total): 805.109
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145463,0.0502641,828.409,805.109

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0803808
  gflops (total): 518.024
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831614
  gflops (eval):  500.704
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831614,500.704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.881
  maximum absolute entry in einsum_ir solution: 115.881
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146225
  time (eval):    0.0502287
  gflops (eval):  828.991
  gflops (total): 805.54
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146225,0.0502287,828.991,805.54

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800713
  gflops (total): 520.026
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0822966
  gflops (eval):  505.965
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0822966,505.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      126.426
  maximum absolute entry in einsum_ir solution: 126.426
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00153225
  time (eval):    0.0502969
  gflops (eval):  827.868
  gflops (total): 803.394
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00153225,0.0502969,827.868,803.394

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0805626
  gflops (total): 516.855
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,516.855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831423
  gflops (eval):  500.819
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831423,500.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.224
  maximum absolute entry in einsum_ir solution: 109.224
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00177403
  time (eval):    0.0501757
  gflops (eval):  829.867
  gflops (total): 801.528
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00177403,0.0501757,829.867,801.528

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800654
  gflops (total): 520.064
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828893
  gflops (eval):  502.347
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828893,502.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.924
  maximum absolute entry in einsum_ir solution: 111.923
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0015343
  time (eval):    0.0503433
  gflops (eval):  827.105
  gflops (total): 802.643
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0015343,0.0503433,827.105,802.643

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801129
  gflops (total): 519.756
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831336
  gflops (eval):  500.871
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831336,500.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.677
  maximum absolute entry in einsum_ir solution: 117.677
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.001497
  time (eval):    0.0501904
  gflops (eval):  829.625
  gflops (total): 805.597
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.001497,0.0501904,829.625,805.597

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802499
  gflops (total): 518.869
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0816945
  gflops (eval):  509.694
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0816945,509.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.666
  maximum absolute entry in einsum_ir solution: 118.666
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147023
  time (eval):    0.0509272
  gflops (eval):  817.622
  gflops (total): 794.68
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147023,0.0509272,817.622,794.68

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801979
  gflops (total): 519.205
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835332
  gflops (eval):  498.475
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835332,498.475,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.744
  maximum absolute entry in einsum_ir solution: 117.744
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00150634
  time (eval):    0.0500907
  gflops (eval):  831.276
  gflops (total): 807.008
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00150634,0.0500907,831.276,807.008

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799968
  gflops (total): 520.511
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832075
  gflops (eval):  500.426
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832075,500.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.764
  maximum absolute entry in einsum_ir solution: 117.764
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146231
  time (eval):    0.0503262
  gflops (eval):  827.387
  gflops (total): 804.024
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146231,0.0503262,827.387,804.024

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802959
  gflops (total): 518.572
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0820811
  gflops (eval):  507.293
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0820811,507.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.436
  maximum absolute entry in einsum_ir solution: 108.436
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0015211
  time (eval):    0.0502621
  gflops (eval):  828.441
  gflops (total): 804.106
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0015211,0.0502621,828.441,804.106

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080237
  gflops (total): 518.953
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835116
  gflops (eval):  498.603
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835116,498.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.376
  maximum absolute entry in einsum_ir solution: 110.376
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145464
  time (eval):    0.0502196
  gflops (eval):  829.143
  gflops (total): 805.802
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145464,0.0502196,829.143,805.802

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801053
  gflops (total): 519.806
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826028
  gflops (eval):  504.089
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826028,504.089,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.852
  maximum absolute entry in einsum_ir solution: 107.852
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147974
  time (eval):    0.0501116
  gflops (eval):  830.93
  gflops (total): 807.097
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147974,0.0501116,830.93,807.097

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800873
  gflops (total): 519.922
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829394
  gflops (eval):  502.044
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829394,502.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      123.843
  maximum absolute entry in einsum_ir solution: 123.843
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146991
  time (eval):    0.0501319
  gflops (eval):  830.593
  gflops (total): 806.933
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146991,0.0501319,830.593,806.933

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800843
  gflops (total): 519.942
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834717
  gflops (eval):  498.842
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834717,498.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.504
  maximum absolute entry in einsum_ir solution: 120.504
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145819
  time (eval):    0.0504008
  gflops (eval):  826.161
  gflops (total): 802.931
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145819,0.0504008,826.161,802.931

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801762
  gflops (total): 519.346
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0841208
  gflops (eval):  494.993
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0841208,494.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.065
  maximum absolute entry in einsum_ir solution: 116.065
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145143
  time (eval):    0.0504702
  gflops (eval):  825.026
  gflops (total): 801.963
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145143,0.0504702,825.026,801.963

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801174
  gflops (total): 519.727
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831115
  gflops (eval):  501.004
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831115,501.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.998
  maximum absolute entry in einsum_ir solution: 110.998
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00151761
  time (eval):    0.050051
  gflops (eval):  831.935
  gflops (total): 807.452
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00151761,0.050051,831.935,807.452

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802941
  gflops (total): 518.584
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0821968
  gflops (eval):  506.579
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0821968,506.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.506
  maximum absolute entry in einsum_ir solution: 110.506
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146409
  time (eval):    0.0499922
  gflops (eval):  832.913
  gflops (total): 809.214
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146409,0.0499922,832.913,809.214

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799413
  gflops (total): 520.872
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827182
  gflops (eval):  503.386
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827182,503.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.998
  maximum absolute entry in einsum_ir solution: 118.998
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014689
  time (eval):    0.0503468
  gflops (eval):  827.047
  gflops (total): 803.602
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014689,0.0503468,827.047,803.602

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801666
  gflops (total): 519.408
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.408

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0837227
  gflops (eval):  497.346
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0837227,497.346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.456
  maximum absolute entry in einsum_ir solution: 111.456
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00170409
  time (eval):    0.0505888
  gflops (eval):  823.091
  gflops (total): 796.268
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00170409,0.0505888,823.091,796.268

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801112
  gflops (total): 519.767
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835481
  gflops (eval):  498.386
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835481,498.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.671
  maximum absolute entry in einsum_ir solution: 110.67
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147267
  time (eval):    0.0502454
  gflops (eval):  828.716
  gflops (total): 805.119
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147267,0.0502454,828.716,805.119

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0803792
  gflops (total): 518.035
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834793
  gflops (eval):  498.797
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834793,498.797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.326
  maximum absolute entry in einsum_ir solution: 111.326
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00148141
  time (eval):    0.0504834
  gflops (eval):  824.81
  gflops (total): 801.296
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00148141,0.0504834,824.81,801.296

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798635
  gflops (total): 521.38
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829024
  gflops (eval):  502.268
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829024,502.268,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.991
  maximum absolute entry in einsum_ir solution: 113.991
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147003
  time (eval):    0.0503776
  gflops (eval):  826.541
  gflops (total): 803.106
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147003,0.0503776,826.541,803.106

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799629
  gflops (total): 520.731
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828756
  gflops (eval):  502.43
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828756,502.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.033
  maximum absolute entry in einsum_ir solution: 121.033
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147305
  time (eval):    0.0504226
  gflops (eval):  825.804
  gflops (total): 802.364
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147305,0.0504226,825.804,802.364

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0805637
  gflops (total): 516.848
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,516.848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082931
  gflops (eval):  502.094
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082931,502.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.594
  maximum absolute entry in einsum_ir solution: 110.594
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00175627
  time (eval):    0.0505341
  gflops (eval):  823.983
  gflops (total): 796.308
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00175627,0.0505341,823.983,796.308

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0803545
  gflops (total): 518.193
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0811216
  gflops (eval):  513.293
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0811216,513.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.446
  maximum absolute entry in einsum_ir solution: 110.446
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147317
  time (eval):    0.0500848
  gflops (eval):  831.374
  gflops (total): 807.619
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147317,0.0500848,831.374,807.619

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802679
  gflops (total): 518.753
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0839131
  gflops (eval):  496.218
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0839131,496.218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.86
  maximum absolute entry in einsum_ir solution: 117.86
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014747
  time (eval):    0.0504359
  gflops (eval):  825.586
  gflops (total): 802.132
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014747,0.0504359,825.586,802.132

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080083
  gflops (total): 519.951
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827335
  gflops (eval):  503.293
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827335,503.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.151
  maximum absolute entry in einsum_ir solution: 109.151
  maximum element-wise difference:              0.000137329
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149625
  time (eval):    0.0502972
  gflops (eval):  827.862
  gflops (total): 803.946
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149625,0.0502972,827.862,803.946

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799888
  gflops (total): 520.563
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834848
  gflops (eval):  498.764
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834848,498.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.427
  maximum absolute entry in einsum_ir solution: 108.427
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00147221
  time (eval):    0.0500046
  gflops (eval):  832.685
  gflops (total): 808.871
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00147221,0.0500046,832.685,808.871

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108765
  gflops (total): 382.826
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828995
  gflops (eval):  502.271
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828995,502.271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.455
  maximum absolute entry in einsum_ir solution: 109.455
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00158574
  time (eval):    0.0499067
  gflops (eval):  834.318
  gflops (total): 808.625
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00158574,0.0499067,834.318,808.625

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.107485
  gflops (total): 387.383
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,387.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825375
  gflops (eval):  504.474
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825375,504.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.033
  maximum absolute entry in einsum_ir solution: 108.033
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00147944
  time (eval):    0.0498052
  gflops (eval):  836.018
  gflops (total): 811.901
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00147944,0.0498052,836.018,811.901

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108823
  gflops (total): 382.621
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083233
  gflops (eval):  500.259
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083233,500.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.481
  maximum absolute entry in einsum_ir solution: 110.481
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145059
  time (eval):    0.0497202
  gflops (eval):  837.447
  gflops (total): 813.707
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145059,0.0497202,837.447,813.707

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109506
  gflops (total): 380.236
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,380.236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831521
  gflops (eval):  500.746
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831521,500.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.621
  maximum absolute entry in einsum_ir solution: 109.621
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00171452
  time (eval):    0.0500322
  gflops (eval):  832.225
  gflops (total): 804.651
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00171452,0.0500322,832.225,804.651

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109893
  gflops (total): 378.898
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0820429
  gflops (eval):  507.515
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0820429,507.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.969
  maximum absolute entry in einsum_ir solution: 113.969
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0014676
  time (eval):    0.0501304
  gflops (eval):  830.594
  gflops (total): 806.969
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0014676,0.0501304,830.594,806.969

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108836
  gflops (total): 382.575
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831231
  gflops (eval):  500.92
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831231,500.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.989
  maximum absolute entry in einsum_ir solution: 111.989
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144963
  time (eval):    0.0498522
  gflops (eval):  835.23
  gflops (total): 811.629
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144963,0.0498522,835.23,811.629

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.1092
  gflops (total): 381.3
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824438
  gflops (eval):  505.048
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824438,505.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.468
  maximum absolute entry in einsum_ir solution: 115.468
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144593
  time (eval):    0.0499879
  gflops (eval):  832.962
  gflops (total): 809.545
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144593,0.0499879,832.962,809.545

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108572
  gflops (total): 383.508
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826493
  gflops (eval):  503.792
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826493,503.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.912
  maximum absolute entry in einsum_ir solution: 115.912
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143974
  time (eval):    0.0499431
  gflops (eval):  833.709
  gflops (total): 810.348
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143974,0.0499431,833.709,810.348

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108134
  gflops (total): 385.061
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827205
  gflops (eval):  503.358
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827205,503.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.677
  maximum absolute entry in einsum_ir solution: 116.677
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.001453
  time (eval):    0.049813
  gflops (eval):  835.887
  gflops (total): 812.196
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.001453,0.049813,835.887,812.196

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108757
  gflops (total): 382.855
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829352
  gflops (eval):  502.055
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829352,502.055,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.076
  maximum absolute entry in einsum_ir solution: 111.076
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144288
  time (eval):    0.0499389
  gflops (eval):  833.779
  gflops (total): 810.366
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144288,0.0499389,833.779,810.366

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10972
  gflops (total): 379.493
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,379.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832236
  gflops (eval):  500.315
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832236,500.315,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.721
  maximum absolute entry in einsum_ir solution: 110.721
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0014502
  time (eval):    0.0508556
  gflops (eval):  818.75
  gflops (total): 796.05
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0014502,0.0508556,818.75,796.05

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108464
  gflops (total): 383.888
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827305
  gflops (eval):  503.297
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827305,503.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.543
  maximum absolute entry in einsum_ir solution: 104.543
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144995
  time (eval):    0.0498465
  gflops (eval):  835.325
  gflops (total): 811.713
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144995,0.0498465,835.325,811.713

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108791
  gflops (total): 382.736
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824397
  gflops (eval):  505.073
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824397,505.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.377
  maximum absolute entry in einsum_ir solution: 116.377
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00146245
  time (eval):    0.0500325
  gflops (eval):  832.219
  gflops (total): 808.584
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00146245,0.0500325,832.219,808.584

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108608
  gflops (total): 383.379
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831473
  gflops (eval):  500.774
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831473,500.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      129.136
  maximum absolute entry in einsum_ir solution: 129.136
  maximum element-wise difference:              0.000144958
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00153522
  time (eval):    0.0497076
  gflops (eval):  837.66
  gflops (total): 812.564
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00153522,0.0497076,837.66,812.564

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108454
  gflops (total): 383.925
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829449
  gflops (eval):  501.996
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829449,501.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.233
  maximum absolute entry in einsum_ir solution: 116.233
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00146847
  time (eval):    0.0497182
  gflops (eval):  837.48
  gflops (total): 813.454
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00146847,0.0497182,837.48,813.454

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110431
  gflops (total): 377.052
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,377.052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824182
  gflops (eval):  505.204
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824182,505.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.616
  maximum absolute entry in einsum_ir solution: 119.616
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145863
  time (eval):    0.0500863
  gflops (eval):  831.326
  gflops (total): 807.801
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145863,0.0500863,831.326,807.801

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109153
  gflops (total): 381.465
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.082998
  gflops (eval):  501.675
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.082998,501.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.137
  maximum absolute entry in einsum_ir solution: 115.137
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145318
  time (eval):    0.0499996
  gflops (eval):  832.767
  gflops (total): 809.247
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145318,0.0499996,832.767,809.247

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108935
  gflops (total): 382.229
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826869
  gflops (eval):  503.563
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826869,503.563,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.11
  maximum absolute entry in einsum_ir solution: 117.11
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144443
  time (eval):    0.0500016
  gflops (eval):  832.733
  gflops (total): 809.353
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144443,0.0500016,832.733,809.353

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109879
  gflops (total): 378.946
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825494
  gflops (eval):  504.401
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825494,504.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.421
  maximum absolute entry in einsum_ir solution: 115.421
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00174786
  time (eval):    0.0500691
  gflops (eval):  831.612
  gflops (total): 803.56
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00174786,0.0500691,831.612,803.56

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108577
  gflops (total): 383.49
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0822045
  gflops (eval):  506.518
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0822045,506.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.266
  maximum absolute entry in einsum_ir solution: 111.266
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144232
  time (eval):    0.0498513
  gflops (eval):  835.244
  gflops (total): 811.758
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144232,0.0498513,835.244,811.758

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110558
  gflops (total): 376.618
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,376.618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826354
  gflops (eval):  503.877
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826354,503.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.288
  maximum absolute entry in einsum_ir solution: 107.288
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144115
  time (eval):    0.0497734
  gflops (eval):  836.551
  gflops (total): 813.011
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144115,0.0497734,836.551,813.011

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108458
  gflops (total): 383.909
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831882
  gflops (eval):  500.528
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831882,500.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.497
  maximum absolute entry in einsum_ir solution: 116.497
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145885
  time (eval):    0.0499143
  gflops (eval):  834.19
  gflops (total): 810.502
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145885,0.0499143,834.19,810.502

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108327
  gflops (total): 384.372
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834425
  gflops (eval):  499.002
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834425,499.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.908
  maximum absolute entry in einsum_ir solution: 109.908
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144431
  time (eval):    0.0500286
  gflops (eval):  832.284
  gflops (total): 808.931
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144431,0.0500286,832.284,808.931

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108652
  gflops (total): 383.225
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824312
  gflops (eval):  505.125
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824312,505.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.085
  maximum absolute entry in einsum_ir solution: 112.085
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144357
  time (eval):    0.0497761
  gflops (eval):  836.506
  gflops (total): 812.93
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144357,0.0497761,836.506,812.93

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108968
  gflops (total): 382.111
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827652
  gflops (eval):  503.086
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827652,503.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.981
  maximum absolute entry in einsum_ir solution: 113.981
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00149623
  time (eval):    0.0498103
  gflops (eval):  835.933
  gflops (total): 811.555
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00149623,0.0498103,835.933,811.555

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108582
  gflops (total): 383.472
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825172
  gflops (eval):  504.598
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825172,504.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.778
  maximum absolute entry in einsum_ir solution: 110.778
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00151469
  time (eval):    0.049626
  gflops (eval):  839.037
  gflops (total): 814.186
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00151469,0.049626,839.037,814.186

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.111102
  gflops (total): 374.774
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,374.774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825406
  gflops (eval):  504.455
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825406,504.455,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.421
  maximum absolute entry in einsum_ir solution: 105.421
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00142797
  time (eval):    0.050052
  gflops (eval):  831.896
  gflops (total): 808.821
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00142797,0.050052,831.896,808.821

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109097
  gflops (total): 381.661
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0820609
  gflops (eval):  507.404
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0820609,507.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.4
  maximum absolute entry in einsum_ir solution: 111.4
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00149038
  time (eval):    0.0497906
  gflops (eval):  836.263
  gflops (total): 811.959
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00149038,0.0497906,836.263,811.959

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109962
  gflops (total): 378.657
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827777
  gflops (eval):  503.011
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827777,503.011,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.128
  maximum absolute entry in einsum_ir solution: 112.128
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144309
  time (eval):    0.0499416
  gflops (eval):  833.735
  gflops (total): 810.32
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144309,0.0499416,833.735,810.32

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10993
  gflops (total): 378.767
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826658
  gflops (eval):  503.691
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826658,503.691,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.787
  maximum absolute entry in einsum_ir solution: 109.787
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00160168
  time (eval):    0.0499498
  gflops (eval):  833.598
  gflops (total): 807.698
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00160168,0.0499498,833.598,807.698

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10933
  gflops (total): 380.849
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,380.849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832778
  gflops (eval):  499.99
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832778,499.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      130.425
  maximum absolute entry in einsum_ir solution: 130.425
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00141337
  time (eval):    0.0497447
  gflops (eval):  837.034
  gflops (total): 813.909
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00141337,0.0497447,837.034,813.909

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108909
  gflops (total): 382.321
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829097
  gflops (eval):  502.209
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829097,502.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.642
  maximum absolute entry in einsum_ir solution: 113.642
  maximum element-wise difference:              0.000137329
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144424
  time (eval):    0.0499517
  gflops (eval):  833.566
  gflops (total): 810.143
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144424,0.0499517,833.566,810.143

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108767
  gflops (total): 382.82
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828594
  gflops (eval):  502.514
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828594,502.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.7
  maximum absolute entry in einsum_ir solution: 114.7
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145038
  time (eval):    0.049637
  gflops (eval):  838.85
  gflops (total): 815.035
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145038,0.049637,838.85,815.035

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108814
  gflops (total): 382.652
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0838579
  gflops (eval):  496.531
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0838579,496.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.343
  maximum absolute entry in einsum_ir solution: 110.343
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145539
  time (eval):    0.0500342
  gflops (eval):  832.191
  gflops (total): 808.668
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145539,0.0500342,832.191,808.668

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108715
  gflops (total): 383.001
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830885
  gflops (eval):  501.129
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830885,501.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.554
  maximum absolute entry in einsum_ir solution: 108.554
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145172
  time (eval):    0.0498234
  gflops (eval):  835.712
  gflops (total): 812.051
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145172,0.0498234,835.712,812.051

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108577
  gflops (total): 383.489
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083219
  gflops (eval):  500.343
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083219,500.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.407
  maximum absolute entry in einsum_ir solution: 112.407
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00147834
  time (eval):    0.0499554
  gflops (eval):  833.504
  gflops (total): 809.547
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00147834,0.0499554,833.504,809.547

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.107996
  gflops (total): 385.551
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825169
  gflops (eval):  504.6
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825169,504.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.4
  maximum absolute entry in einsum_ir solution: 113.4
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0014798
  time (eval):    0.0500575
  gflops (eval):  831.803
  gflops (total): 807.92
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0014798,0.0500575,831.803,807.92

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108572
  gflops (total): 383.505
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0841194
  gflops (eval):  494.987
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0841194,494.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.754
  maximum absolute entry in einsum_ir solution: 109.754
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145604
  time (eval):    0.0497462
  gflops (eval):  837.009
  gflops (total): 813.207
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145604,0.0497462,837.009,813.207

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108775
  gflops (total): 382.789
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827153
  gflops (eval):  503.39
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827153,503.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.358
  maximum absolute entry in einsum_ir solution: 113.358
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144841
  time (eval):    0.0497884
  gflops (eval):  836.3
  gflops (total): 812.659
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144841,0.0497884,836.3,812.659

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108504
  gflops (total): 383.746
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831119
  gflops (eval):  500.988
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831119,500.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.879
  maximum absolute entry in einsum_ir solution: 109.879
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00175715
  time (eval):    0.0499288
  gflops (eval):  833.949
  gflops (total): 805.597
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00175715,0.0499288,833.949,805.597

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108417
  gflops (total): 384.053
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834451
  gflops (eval):  498.987
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834451,498.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.043
  maximum absolute entry in einsum_ir solution: 108.043
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00157893
  time (eval):    0.0499798
  gflops (eval):  833.097
  gflops (total): 807.584
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00157893,0.0499798,833.097,807.584

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110726
  gflops (total): 376.047
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,376.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837359
  gflops (eval):  497.255
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837359,497.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.917
  maximum absolute entry in einsum_ir solution: 107.917
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145192
  time (eval):    0.0501831
  gflops (eval):  829.722
  gflops (total): 806.391
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145192,0.0501831,829.722,806.391

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108387
  gflops (total): 384.161
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083448
  gflops (eval):  498.97
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083448,498.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.246
  maximum absolute entry in einsum_ir solution: 115.246
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144466
  time (eval):    0.0496224
  gflops (eval):  839.098
  gflops (total): 815.361
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144466,0.0496224,839.098,815.361

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108451
  gflops (total): 383.935
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835369
  gflops (eval):  498.439
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835369,498.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.362
  maximum absolute entry in einsum_ir solution: 112.362
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00142904
  time (eval):    0.0497672
  gflops (eval):  836.656
  gflops (total): 813.303
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00142904,0.0497672,836.656,813.303

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108614
  gflops (total): 383.359
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0840731
  gflops (eval):  495.26
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0840731,495.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.685
  maximum absolute entry in einsum_ir solution: 110.685
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145556
  time (eval):    0.0498264
  gflops (eval):  835.662
  gflops (total): 811.943
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145556,0.0498264,835.662,811.943

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108645
  gflops (total): 383.249
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834263
  gflops (eval):  499.1
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834263,499.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.439
  maximum absolute entry in einsum_ir solution: 116.439
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0014386
  time (eval):    0.0496325
  gflops (eval):  838.927
  gflops (total): 815.295
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0014386,0.0496325,838.927,815.295

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10787
  gflops (total): 386.001
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,386.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827068
  gflops (eval):  503.442
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827068,503.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.838
  maximum absolute entry in einsum_ir solution: 124.838
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143592
  time (eval):    0.0498953
  gflops (eval):  834.508
  gflops (total): 811.164
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143592,0.0498953,834.508,811.164

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10883
  gflops (total): 382.596
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833157
  gflops (eval):  499.762
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833157,499.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.806
  maximum absolute entry in einsum_ir solution: 113.806
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145573
  time (eval):    0.0500809
  gflops (eval):  831.416
  gflops (total): 807.931
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145573,0.0500809,831.416,807.931

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108247
  gflops (total): 384.659
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826347
  gflops (eval):  503.881
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826347,503.881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.629
  maximum absolute entry in einsum_ir solution: 120.629
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144583
  time (eval):    0.0499481
  gflops (eval):  833.625
  gflops (total): 810.173
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144583,0.0499481,833.625,810.173

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108427
  gflops (total): 384.02
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825792
  gflops (eval):  504.219
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825792,504.219,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.773
  maximum absolute entry in einsum_ir solution: 110.773
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145057
  time (eval):    0.0498508
  gflops (eval):  835.253
  gflops (total): 811.636
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145057,0.0498508,835.253,811.636

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110369
  gflops (total): 377.261
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,377.261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826846
  gflops (eval):  503.577
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826846,503.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.268
  maximum absolute entry in einsum_ir solution: 110.268
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145035
  time (eval):    0.049767
  gflops (eval):  836.66
  gflops (total): 812.968
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145035,0.049767,836.66,812.968

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10805
  gflops (total): 385.359
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827564
  gflops (eval):  503.14
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827564,503.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.671
  maximum absolute entry in einsum_ir solution: 108.671
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144398
  time (eval):    0.0499806
  gflops (eval):  833.085
  gflops (total): 809.692
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144398,0.0499806,833.085,809.692

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108235
  gflops (total): 384.702
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828294
  gflops (eval):  502.697
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828294,502.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.985
  maximum absolute entry in einsum_ir solution: 111.985
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145473
  time (eval):    0.0500289
  gflops (eval):  832.28
  gflops (total): 808.763
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145473,0.0500289,832.28,808.763

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108526
  gflops (total): 383.669
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828119
  gflops (eval):  502.803
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828119,502.803,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.201
  maximum absolute entry in einsum_ir solution: 115.201
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00172669
  time (eval):    0.0499941
  gflops (eval):  832.859
  gflops (total): 805.054
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00172669,0.0499941,832.859,805.054

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108452
  gflops (total): 383.929
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829034
  gflops (eval):  502.248
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829034,502.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.079
  maximum absolute entry in einsum_ir solution: 118.079
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144906
  time (eval):    0.050008
  gflops (eval):  832.627
  gflops (total): 809.18
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144906,0.050008,832.627,809.18

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108397
  gflops (total): 384.125
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824602
  gflops (eval):  504.947
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824602,504.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.277
  maximum absolute entry in einsum_ir solution: 107.277
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143228
  time (eval):    0.0498655
  gflops (eval):  835.006
  gflops (total): 811.692
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143228,0.0498655,835.006,811.692

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108912
  gflops (total): 382.308
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839512
  gflops (eval):  495.979
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839512,495.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.896
  maximum absolute entry in einsum_ir solution: 115.896
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145589
  time (eval):    0.0497768
  gflops (eval):  836.494
  gflops (total): 812.723
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145589,0.0497768,836.494,812.723

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108625
  gflops (total): 383.32
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0822063
  gflops (eval):  506.507
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0822063,506.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.635
  maximum absolute entry in einsum_ir solution: 111.635
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145463
  time (eval):    0.0499582
  gflops (eval):  833.457
  gflops (total): 809.876
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145463,0.0499582,833.457,809.876

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109154
  gflops (total): 381.461
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835966
  gflops (eval):  498.083
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835966,498.083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      127.733
  maximum absolute entry in einsum_ir solution: 127.733
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144602
  time (eval):    0.0498112
  gflops (eval):  835.918
  gflops (total): 812.336
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144602,0.0498112,835.918,812.336

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110146
  gflops (total): 378.026
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832761
  gflops (eval):  500
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832761,500,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.853
  maximum absolute entry in einsum_ir solution: 105.853
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144706
  time (eval):    0.0499907
  gflops (eval):  832.916
  gflops (total): 809.485
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144706,0.0499907,832.916,809.485

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.111024
  gflops (total): 375.038
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,375.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.082915
  gflops (eval):  502.177
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.082915,502.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.144
  maximum absolute entry in einsum_ir solution: 114.144
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144849
  time (eval):    0.0500298
  gflops (eval):  832.264
  gflops (total): 808.846
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144849,0.0500298,832.264,808.846

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108654
  gflops (total): 383.218
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831158
  gflops (eval):  500.964
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831158,500.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.745
  maximum absolute entry in einsum_ir solution: 110.745
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144248
  time (eval):    0.0497808
  gflops (eval):  836.428
  gflops (total): 812.874
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144248,0.0497808,836.428,812.874

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109085
  gflops (total): 381.703
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825978
  gflops (eval):  504.106
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825978,504.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.453
  maximum absolute entry in einsum_ir solution: 110.453
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00146381
  time (eval):    0.0496931
  gflops (eval):  837.904
  gflops (total): 813.928
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00146381,0.0496931,837.904,813.928

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108233
  gflops (total): 384.706
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830328
  gflops (eval):  501.465
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830328,501.465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.976
  maximum absolute entry in einsum_ir solution: 119.976
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144512
  time (eval):    0.0498725
  gflops (eval):  834.889
  gflops (total): 811.379
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144512,0.0498725,834.889,811.379

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10867
  gflops (total): 383.161
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827262
  gflops (eval):  503.323
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827262,503.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.325
  maximum absolute entry in einsum_ir solution: 111.326
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00141664
  time (eval):    0.0498056
  gflops (eval):  836.01
  gflops (total): 812.889
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00141664,0.0498056,836.01,812.889

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110654
  gflops (total): 376.292
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,376.292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831839
  gflops (eval):  500.554
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831839,500.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.291
  maximum absolute entry in einsum_ir solution: 110.291
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145414
  time (eval):    0.0498946
  gflops (eval):  834.519
  gflops (total): 810.886
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145414,0.0498946,834.519,810.886

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10752
  gflops (total): 387.259
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,387.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832865
  gflops (eval):  499.937
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832865,499.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.692
  maximum absolute entry in einsum_ir solution: 114.692
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144975
  time (eval):    0.0498612
  gflops (eval):  835.078
  gflops (total): 811.484
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144975,0.0498612,835.078,811.484

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108524
  gflops (total): 383.674
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823277
  gflops (eval):  505.76
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823277,505.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.214
  maximum absolute entry in einsum_ir solution: 117.214
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00146064
  time (eval):    0.0497541
  gflops (eval):  836.876
  gflops (total): 813.008
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00146064,0.0497541,836.876,813.008

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108439
  gflops (total): 383.978
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830565
  gflops (eval):  501.322
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830565,501.322,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.34
  maximum absolute entry in einsum_ir solution: 106.34
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0014897
  time (eval):    0.0499201
  gflops (eval):  834.094
  gflops (total): 809.925
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0014897,0.0499201,834.094,809.925

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108719
  gflops (total): 382.989
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834304
  gflops (eval):  499.075
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834304,499.075,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.055
  maximum absolute entry in einsum_ir solution: 116.055
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00149904
  time (eval):    0.0498071
  gflops (eval):  835.985
  gflops (total): 811.56
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00149904,0.0498071,835.985,811.56

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10861
  gflops (total): 383.372
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083218
  gflops (eval):  500.349
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083218,500.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.968
  maximum absolute entry in einsum_ir solution: 113.968
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0014362
  time (eval):    0.0498923
  gflops (eval):  834.559
  gflops (total): 811.208
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0014362,0.0498923,834.559,811.208

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108793
  gflops (total): 382.728
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827733
  gflops (eval):  503.037
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827733,503.037,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.384
  maximum absolute entry in einsum_ir solution: 110.384
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144723
  time (eval):    0.0499093
  gflops (eval):  834.274
  gflops (total): 810.764
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144723,0.0499093,834.274,810.764

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10781
  gflops (total): 386.217
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,386.217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.082971
  gflops (eval):  501.839
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.082971,501.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.451
  maximum absolute entry in einsum_ir solution: 111.451
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00149681
  time (eval):    0.0498134
  gflops (eval):  835.88
  gflops (total): 811.496
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00149681,0.0498134,835.88,811.496

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108463
  gflops (total): 383.891
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827128
  gflops (eval):  503.405
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827128,503.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.26
  maximum absolute entry in einsum_ir solution: 116.26
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00146091
  time (eval):    0.0497697
  gflops (eval):  836.614
  gflops (total): 812.757
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00146091,0.0497697,836.614,812.757

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109367
  gflops (total): 380.719
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,380.719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831174
  gflops (eval):  500.955
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831174,500.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.117
  maximum absolute entry in einsum_ir solution: 111.118
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145451
  time (eval):    0.0497229
  gflops (eval):  837.401
  gflops (total): 813.602
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145451,0.0497229,837.401,813.602

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109368
  gflops (total): 380.714
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,380.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839065
  gflops (eval):  496.243
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839065,496.243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.845
  maximum absolute entry in einsum_ir solution: 109.845
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144778
  time (eval):    0.0496108
  gflops (eval):  839.294
  gflops (total): 815.495
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144778,0.0496108,839.294,815.495

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108492
  gflops (total): 383.788
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.788

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831785
  gflops (eval):  500.587
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831785,500.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.533
  maximum absolute entry in einsum_ir solution: 111.533
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00173032
  time (eval):    0.0499699
  gflops (eval):  833.262
  gflops (total): 805.374
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00173032,0.0499699,833.262,805.374

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.107632
  gflops (total): 386.856
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,386.856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0819849
  gflops (eval):  507.874
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0819849,507.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.952
  maximum absolute entry in einsum_ir solution: 110.952
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00149387
  time (eval):    0.0497493
  gflops (eval):  836.957
  gflops (total): 812.557
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00149387,0.0497493,836.957,812.557

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109064
  gflops (total): 381.777
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826643
  gflops (eval):  503.7
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826643,503.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.982
  maximum absolute entry in einsum_ir solution: 107.982
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145218
  time (eval):    0.049891
  gflops (eval):  834.58
  gflops (total): 810.975
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145218,0.049891,834.58,810.975

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10869
  gflops (total): 383.089
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826602
  gflops (eval):  503.725
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826602,503.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.2
  maximum absolute entry in einsum_ir solution: 110.2
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145601
  time (eval):    0.0497473
  gflops (eval):  836.991
  gflops (total): 813.191
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145601,0.0497473,836.991,813.191

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108544
  gflops (total): 383.605
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828778
  gflops (eval):  502.403
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828778,502.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.772
  maximum absolute entry in einsum_ir solution: 108.772
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144518
  time (eval):    0.0499153
  gflops (eval):  834.174
  gflops (total): 810.702
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144518,0.0499153,834.174,810.702

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108048
  gflops (total): 385.367
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0818211
  gflops (eval):  508.891
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0818211,508.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.29
  maximum absolute entry in einsum_ir solution: 106.29
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00149257
  time (eval):    0.05003
  gflops (eval):  832.262
  gflops (total): 808.152
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00149257,0.05003,832.262,808.152

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108883
  gflops (total): 382.412
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827049
  gflops (eval):  503.453
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827049,503.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.164
  maximum absolute entry in einsum_ir solution: 113.164
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144968
  time (eval):    0.0498774
  gflops (eval):  834.807
  gflops (total): 811.229
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144968,0.0498774,834.807,811.229

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10857
  gflops (total): 383.512
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835496
  gflops (eval):  498.363
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835496,498.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.086
  maximum absolute entry in einsum_ir solution: 108.086
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00147197
  time (eval):    0.050111
  gflops (eval):  830.916
  gflops (total): 807.205
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00147197,0.050111,830.916,807.205

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108135
  gflops (total): 385.055
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829561
  gflops (eval):  501.928
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829561,501.928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.306
  maximum absolute entry in einsum_ir solution: 109.306
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00142321
  time (eval):    0.049836
  gflops (eval):  835.501
  gflops (total): 812.303
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00142321,0.049836,835.501,812.303

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108674
  gflops (total): 383.145
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827451
  gflops (eval):  503.209
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827451,503.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.361
  maximum absolute entry in einsum_ir solution: 108.361
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145089
  time (eval):    0.0500001
  gflops (eval):  832.76
  gflops (total): 809.276
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145089,0.0500001,832.76,809.276

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110388
  gflops (total): 377.197
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,377.197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083171
  gflops (eval):  500.631
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083171,500.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.888
  maximum absolute entry in einsum_ir solution: 112.888
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145436
  time (eval):    0.0497438
  gflops (eval):  837.049
  gflops (total): 813.271
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145436,0.0497438,837.049,813.271

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109826
  gflops (total): 379.127
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,379.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823733
  gflops (eval):  505.48
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823733,505.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.715
  maximum absolute entry in einsum_ir solution: 108.715
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144865
  time (eval):    0.0497925
  gflops (eval):  836.231
  gflops (total): 812.59
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144865,0.0497925,836.231,812.59

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108419
  gflops (total): 384.046
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827688
  gflops (eval):  503.064
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827688,503.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.245
  maximum absolute entry in einsum_ir solution: 105.245
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00151075
  time (eval):    0.0498443
  gflops (eval):  835.362
  gflops (total): 810.787
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00151075,0.0498443,835.362,810.787

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108352
  gflops (total): 384.285
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825914
  gflops (eval):  504.145
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825914,504.145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.557
  maximum absolute entry in einsum_ir solution: 116.557
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145353
  time (eval):    0.049829
  gflops (eval):  835.619
  gflops (total): 811.934
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145353,0.049829,835.619,811.934

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110243
  gflops (total): 377.693
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,377.693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825574
  gflops (eval):  504.352
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825574,504.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      125.639
  maximum absolute entry in einsum_ir solution: 125.639
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145152
  time (eval):    0.0498349
  gflops (eval):  835.519
  gflops (total): 811.872
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145152,0.0498349,835.519,811.872

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108375
  gflops (total): 384.204
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830263
  gflops (eval):  501.504
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830263,501.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.761
  maximum absolute entry in einsum_ir solution: 114.761
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144701
  time (eval):    0.0497445
  gflops (eval):  837.037
  gflops (total): 813.377
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144701,0.0497445,837.037,813.377

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108958
  gflops (total): 382.147
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825456
  gflops (eval):  504.424
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825456,504.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.673
  maximum absolute entry in einsum_ir solution: 110.673
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143913
  time (eval):    0.0499559
  gflops (eval):  833.496
  gflops (total): 810.157
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143913,0.0499559,833.496,810.157

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108724
  gflops (total): 382.968
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827402
  gflops (eval):  503.238
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827402,503.238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.926
  maximum absolute entry in einsum_ir solution: 120.926
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00146373
  time (eval):    0.0499332
  gflops (eval):  833.874
  gflops (total): 810.126
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00146373,0.0499332,833.874,810.126

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108447
  gflops (total): 383.948
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826282
  gflops (eval):  503.92
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826282,503.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.186
  maximum absolute entry in einsum_ir solution: 107.187
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143443
  time (eval):    0.0499127
  gflops (eval):  834.217
  gflops (total): 810.913
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143443,0.0499127,834.217,810.913

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108992
  gflops (total): 382.027
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825747
  gflops (eval):  504.247
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825747,504.247,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.136
  maximum absolute entry in einsum_ir solution: 108.136
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143627
  time (eval):    0.0498629
  gflops (eval):  835.051
  gflops (total): 811.671
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143627,0.0498629,835.051,811.671

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108487
  gflops (total): 383.808
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829066
  gflops (eval):  502.228
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829066,502.228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.005
  maximum absolute entry in einsum_ir solution: 113.005
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144047
  time (eval):    0.0499088
  gflops (eval):  834.282
  gflops (total): 810.878
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144047,0.0499088,834.282,810.878

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108902
  gflops (total): 382.345
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.345

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832286
  gflops (eval):  500.285
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832286,500.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.234
  maximum absolute entry in einsum_ir solution: 106.234
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00171577
  time (eval):    0.0497902
  gflops (eval):  836.269
  gflops (total): 808.411
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00171577,0.0497902,836.269,808.411

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109106
  gflops (total): 381.631
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827004
  gflops (eval):  503.48
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827004,503.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.097
  maximum absolute entry in einsum_ir solution: 119.097
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144725
  time (eval):    0.0499737
  gflops (eval):  833.199
  gflops (total): 809.749
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144725,0.0499737,833.199,809.749

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108326
  gflops (total): 384.377
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831654
  gflops (eval):  500.665
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831654,500.665,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.191
  maximum absolute entry in einsum_ir solution: 110.191
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144831
  time (eval):    0.85474
  gflops (eval):  889.9
  gflops (total): 888.395
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144831,0.85474,889.9,888.395

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790957
  gflops (total): 961.662
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790299
  gflops (eval):  962.462
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790299,962.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.662
  maximum absolute entry in einsum_ir solution: 465.662
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00152065
  time (eval):    0.855113
  gflops (eval):  889.512
  gflops (total): 887.933
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00152065,0.855113,889.512,887.933

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789038
  gflops (total): 964
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78363
  gflops (eval):  970.652
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78363,970.652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.109
  maximum absolute entry in einsum_ir solution: 473.11
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142924
  time (eval):    0.854848
  gflops (eval):  889.787
  gflops (total): 888.302
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142924,0.854848,889.787,888.302

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.794356
  gflops (total): 957.546
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,957.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78955
  gflops (eval):  963.375
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78955,963.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.901
  maximum absolute entry in einsum_ir solution: 476.901
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143731
  time (eval):    0.854936
  gflops (eval):  889.696
  gflops (total): 888.202
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143731,0.854936,889.696,888.202

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793549
  gflops (total): 958.52
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786104
  gflops (eval):  967.598
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786104,967.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.924
  maximum absolute entry in einsum_ir solution: 472.924
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014406
  time (eval):    0.855591
  gflops (eval):  889.014
  gflops (total): 887.52
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014406,0.855591,889.014,887.52

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790484
  gflops (total): 962.237
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.237

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785957
  gflops (eval):  967.779
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785957,967.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.584
  maximum absolute entry in einsum_ir solution: 505.584
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00147987
  time (eval):    0.855402
  gflops (eval):  889.211
  gflops (total): 887.675
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00147987,0.855402,889.211,887.675

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.794202
  gflops (total): 957.732
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,957.732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78516
  gflops (eval):  968.761
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78516,968.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.251
  maximum absolute entry in einsum_ir solution: 483.251
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143539
  time (eval):    0.854971
  gflops (eval):  889.659
  gflops (total): 888.168
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143539,0.854971,889.659,888.168

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.784279
  gflops (total): 969.849
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,969.849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78408
  gflops (eval):  970.096
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78408,970.096,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.903
  maximum absolute entry in einsum_ir solution: 473.903
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142854
  time (eval):    0.855286
  gflops (eval):  889.331
  gflops (total): 887.848
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142854,0.855286,889.331,887.848

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788639
  gflops (total): 964.488
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790762
  gflops (eval):  961.899
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790762,961.899,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.009
  maximum absolute entry in einsum_ir solution: 489.008
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142707
  time (eval):    0.854783
  gflops (eval):  889.855
  gflops (total): 888.371
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142707,0.854783,889.855,888.371

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78856
  gflops (total): 964.585
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784029
  gflops (eval):  970.159
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784029,970.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.974
  maximum absolute entry in einsum_ir solution: 489.973
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140676
  time (eval):    0.855192
  gflops (eval):  889.43
  gflops (total): 887.969
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140676,0.855192,889.43,887.969

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792146
  gflops (total): 960.218
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785065
  gflops (eval):  968.878
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785065,968.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.252
  maximum absolute entry in einsum_ir solution: 487.252
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143813
  time (eval):    0.854637
  gflops (eval):  890.007
  gflops (total): 888.512
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143813,0.854637,890.007,888.512

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787557
  gflops (total): 965.812
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78983
  gflops (eval):  963.033
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78983,963.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.834
  maximum absolute entry in einsum_ir solution: 487.834
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143926
  time (eval):    0.856071
  gflops (eval):  888.516
  gflops (total): 887.025
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143926,0.856071,888.516,887.025

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786277
  gflops (total): 967.385
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78518
  gflops (eval):  968.736
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78518,968.736,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.991
  maximum absolute entry in einsum_ir solution: 516.99
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142123
  time (eval):    0.855414
  gflops (eval):  889.199
  gflops (total): 887.724
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142123,0.855414,889.199,887.724

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791376
  gflops (total): 961.152
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789162
  gflops (eval):  963.849
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789162,963.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.596
  maximum absolute entry in einsum_ir solution: 477.596
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00149408
  time (eval):    0.855256
  gflops (eval):  889.363
  gflops (total): 887.812
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00149408,0.855256,889.363,887.812

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787495
  gflops (total): 965.889
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786387
  gflops (eval):  967.249
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786387,967.249,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.167
  maximum absolute entry in einsum_ir solution: 458.167
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144856
  time (eval):    0.854859
  gflops (eval):  889.776
  gflops (total): 888.271
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144856,0.854859,889.776,888.271

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793075
  gflops (total): 959.092
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783591
  gflops (eval):  970.701
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783591,970.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.914
  maximum absolute entry in einsum_ir solution: 475.912
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014311
  time (eval):    0.857009
  gflops (eval):  887.544
  gflops (total): 886.064
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014311,0.857009,887.544,886.064

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788413
  gflops (total): 964.765
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791699
  gflops (eval):  960.76
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791699,960.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.668
  maximum absolute entry in einsum_ir solution: 494.667
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143573
  time (eval):    0.855834
  gflops (eval):  888.762
  gflops (total): 887.274
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143573,0.855834,888.762,887.274

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786144
  gflops (total): 967.548
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78732
  gflops (eval):  966.103
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78732,966.103,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.251
  maximum absolute entry in einsum_ir solution: 466.251
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00148586
  time (eval):    0.855595
  gflops (eval):  889.01
  gflops (total): 887.469
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00148586,0.855595,889.01,887.469

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788692
  gflops (total): 964.423
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789223
  gflops (eval):  963.774
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789223,963.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.999
  maximum absolute entry in einsum_ir solution: 456.998
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140796
  time (eval):    0.857124
  gflops (eval):  887.424
  gflops (total): 885.969
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140796,0.857124,887.424,885.969

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.79188
  gflops (total): 960.54
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785645
  gflops (eval):  968.164
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785645,968.164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.484
  maximum absolute entry in einsum_ir solution: 521.484
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00148176
  time (eval):    0.856016
  gflops (eval):  888.573
  gflops (total): 887.037
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00148176,0.856016,888.573,887.037

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786974
  gflops (total): 966.528
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786466
  gflops (eval):  967.153
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786466,967.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.932
  maximum absolute entry in einsum_ir solution: 476.932
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00151581
  time (eval):    0.856173
  gflops (eval):  888.41
  gflops (total): 886.84
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00151581,0.856173,888.41,886.84

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787243
  gflops (total): 966.197
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784521
  gflops (eval):  969.551
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784521,969.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.128
  maximum absolute entry in einsum_ir solution: 471.129
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00148196
  time (eval):    0.856148
  gflops (eval):  888.436
  gflops (total): 886.901
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00148196,0.856148,888.436,886.901

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790123
  gflops (total): 962.677
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.7842
  gflops (eval):  969.947
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.7842,969.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.521
  maximum absolute entry in einsum_ir solution: 505.521
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141657
  time (eval):    0.861464
  gflops (eval):  882.954
  gflops (total): 881.504
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141657,0.861464,882.954,881.504

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792112
  gflops (total): 960.259
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783243
  gflops (eval):  971.133
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783243,971.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.021
  maximum absolute entry in einsum_ir solution: 500.021
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144065
  time (eval):    0.855468
  gflops (eval):  889.142
  gflops (total): 887.648
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144065,0.855468,889.142,887.648

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790757
  gflops (total): 961.905
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785811
  gflops (eval):  967.959
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785811,967.959,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.732
  maximum absolute entry in einsum_ir solution: 514.732
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143414
  time (eval):    0.855362
  gflops (eval):  889.252
  gflops (total): 887.764
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143414,0.855362,889.252,887.764

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786734
  gflops (total): 966.823
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786097
  gflops (eval):  967.607
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786097,967.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.886
  maximum absolute entry in einsum_ir solution: 501.886
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00145377
  time (eval):    0.855886
  gflops (eval):  888.708
  gflops (total): 887.201
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00145377,0.855886,888.708,887.201

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785551
  gflops (total): 968.279
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.279

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.79185
  gflops (eval):  960.577
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.79185,960.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.191
  maximum absolute entry in einsum_ir solution: 515.19
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143382
  time (eval):    0.856787
  gflops (eval):  887.773
  gflops (total): 886.29
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143382,0.856787,887.773,886.29

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786636
  gflops (total): 966.943
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784733
  gflops (eval):  969.289
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784733,969.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.93
  maximum absolute entry in einsum_ir solution: 466.93
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143922
  time (eval):    0.855307
  gflops (eval):  889.31
  gflops (total): 887.816
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143922,0.855307,889.31,887.816

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788173
  gflops (total): 965.058
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785004
  gflops (eval):  968.954
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785004,968.954,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.317
  maximum absolute entry in einsum_ir solution: 481.317
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144873
  time (eval):    0.856076
  gflops (eval):  888.511
  gflops (total): 887.009
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144873,0.856076,888.511,887.009

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793146
  gflops (total): 959.007
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785913
  gflops (eval):  967.834
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785913,967.834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.395
  maximum absolute entry in einsum_ir solution: 493.396
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143832
  time (eval):    0.85591
  gflops (eval):  888.683
  gflops (total): 887.192
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143832,0.85591,888.683,887.192

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789991
  gflops (total): 962.838
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787766
  gflops (eval):  965.557
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787766,965.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.028
  maximum absolute entry in einsum_ir solution: 454.028
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00154474
  time (eval):    0.855672
  gflops (eval):  888.931
  gflops (total): 887.329
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00154474,0.855672,888.931,887.329

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788511
  gflops (total): 964.645
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784955
  gflops (eval):  969.014
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784955,969.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.956
  maximum absolute entry in einsum_ir solution: 474.957
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143783
  time (eval):    0.856456
  gflops (eval):  888.117
  gflops (total): 886.628
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143783,0.856456,888.117,886.628

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791117
  gflops (total): 961.466
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783926
  gflops (eval):  970.286
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783926,970.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.562
  maximum absolute entry in einsum_ir solution: 486.562
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00169096
  time (eval):    0.85578
  gflops (eval):  888.818
  gflops (total): 887.065
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00169096,0.85578,888.818,887.065

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.79208
  gflops (total): 960.298
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785292
  gflops (eval):  968.599
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785292,968.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.961
  maximum absolute entry in einsum_ir solution: 492.961
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143865
  time (eval):    0.856017
  gflops (eval):  888.572
  gflops (total): 887.081
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143865,0.856017,888.572,887.081

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793734
  gflops (total): 958.296
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784964
  gflops (eval):  969.003
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784964,969.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.532
  maximum absolute entry in einsum_ir solution: 503.532
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143144
  time (eval):    0.856045
  gflops (eval):  888.543
  gflops (total): 887.06
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143144,0.856045,888.543,887.06

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788123
  gflops (total): 965.119
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785581
  gflops (eval):  968.242
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785581,968.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.777
  maximum absolute entry in einsum_ir solution: 501.778
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143597
  time (eval):    0.85646
  gflops (eval):  888.112
  gflops (total): 886.626
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143597,0.85646,888.112,886.626

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793525
  gflops (total): 958.549
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78378
  gflops (eval):  970.467
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78378,970.467,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.704
  maximum absolute entry in einsum_ir solution: 491.704
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00148954
  time (eval):    0.856598
  gflops (eval):  887.969
  gflops (total): 886.428
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00148954,0.856598,887.969,886.428

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793014
  gflops (total): 959.167
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784987
  gflops (eval):  968.975
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784987,968.975,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.544
  maximum absolute entry in einsum_ir solution: 466.544
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143264
  time (eval):    0.856066
  gflops (eval):  888.521
  gflops (total): 887.036
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143264,0.856066,888.521,887.036

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78804
  gflops (total): 965.221
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785787
  gflops (eval):  967.988
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785787,967.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.671
  maximum absolute entry in einsum_ir solution: 492.671
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144438
  time (eval):    0.857039
  gflops (eval):  887.512
  gflops (total): 886.019
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144438,0.857039,887.512,886.019

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790744
  gflops (total): 961.92
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789114
  gflops (eval):  963.907
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789114,963.907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.221
  maximum absolute entry in einsum_ir solution: 484.221
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143887
  time (eval):    0.856349
  gflops (eval):  888.227
  gflops (total): 886.737
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143887,0.856349,888.227,886.737

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788771
  gflops (total): 964.326
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788616
  gflops (eval):  964.516
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788616,964.516,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.256
  maximum absolute entry in einsum_ir solution: 474.257
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141772
  time (eval):    0.85503
  gflops (eval):  889.598
  gflops (total): 888.125
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141772,0.85503,889.598,888.125

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788601
  gflops (total): 964.534
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789427
  gflops (eval):  963.525
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789427,963.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.049
  maximum absolute entry in einsum_ir solution: 484.05
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00147399
  time (eval):    0.85438
  gflops (eval):  890.274
  gflops (total): 888.741
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00147399,0.85438,890.274,888.741

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.79348
  gflops (total): 958.603
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786623
  gflops (eval):  966.96
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786623,966.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.662
  maximum absolute entry in einsum_ir solution: 469.663
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144906
  time (eval):    0.856095
  gflops (eval):  888.491
  gflops (total): 886.99
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144906,0.856095,888.491,886.99

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.796054
  gflops (total): 955.504
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,955.504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790467
  gflops (eval):  962.257
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790467,962.257,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.31
  maximum absolute entry in einsum_ir solution: 464.31
  maximum element-wise difference:              0.00196838
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00161064
  time (eval):    0.855606
  gflops (eval):  888.999
  gflops (total): 887.329
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00161064,0.855606,888.999,887.329

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788055
  gflops (total): 965.203
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786724
  gflops (eval):  966.835
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786724,966.835,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.935
  maximum absolute entry in einsum_ir solution: 482.934
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143383
  time (eval):    0.855492
  gflops (eval):  889.117
  gflops (total): 887.63
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143383,0.855492,889.117,887.63

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789543
  gflops (total): 963.384
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785612
  gflops (eval):  968.204
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785612,968.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.944
  maximum absolute entry in einsum_ir solution: 478.943
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143043
  time (eval):    0.855545
  gflops (eval):  889.062
  gflops (total): 887.578
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143043,0.855545,889.062,887.578

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.7934
  gflops (total): 958.7
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789717
  gflops (eval):  963.171
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789717,963.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.208
  maximum absolute entry in einsum_ir solution: 463.208
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00149154
  time (eval):    0.855964
  gflops (eval):  888.627
  gflops (total): 887.082
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00149154,0.855964,888.627,887.082

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787097
  gflops (total): 966.378
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784483
  gflops (eval):  969.598
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784483,969.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.183
  maximum absolute entry in einsum_ir solution: 488.182
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143167
  time (eval):    0.855693
  gflops (eval):  888.908
  gflops (total): 887.423
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143167,0.855693,888.908,887.423

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788674
  gflops (total): 964.445
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783236
  gflops (eval):  971.142
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783236,971.142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.743
  maximum absolute entry in einsum_ir solution: 500.743
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143708
  time (eval):    0.855923
  gflops (eval):  888.67
  gflops (total): 887.18
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143708,0.855923,888.67,887.18

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788512
  gflops (total): 964.643
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785233
  gflops (eval):  968.671
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785233,968.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.083
  maximum absolute entry in einsum_ir solution: 474.083
  maximum element-wise difference:              0.00202942
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141139
  time (eval):    0.856033
  gflops (eval):  888.555
  gflops (total): 887.093
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141139,0.856033,888.555,887.093

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788015
  gflops (total): 965.251
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784444
  gflops (eval):  969.646
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784444,969.646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.504
  maximum absolute entry in einsum_ir solution: 507.504
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144128
  time (eval):    0.856502
  gflops (eval):  888.069
  gflops (total): 886.577
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144128,0.856502,888.069,886.577

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790884
  gflops (total): 961.75
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785616
  gflops (eval):  968.199
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785616,968.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.282
  maximum absolute entry in einsum_ir solution: 496.282
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143413
  time (eval):    0.855288
  gflops (eval):  889.329
  gflops (total): 887.84
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143413,0.855288,889.329,887.84

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787475
  gflops (total): 965.913
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790613
  gflops (eval):  962.079
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790613,962.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.235
  maximum absolute entry in einsum_ir solution: 476.234
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142124
  time (eval):    0.855467
  gflops (eval):  889.143
  gflops (total): 887.668
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142124,0.855467,889.143,887.668

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792882
  gflops (total): 959.326
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78574
  gflops (eval):  968.046
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78574,968.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.696
  maximum absolute entry in einsum_ir solution: 492.696
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00154628
  time (eval):    0.854781
  gflops (eval):  889.857
  gflops (total): 888.25
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00154628,0.854781,889.857,888.25

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791047
  gflops (total): 961.552
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787414
  gflops (eval):  965.989
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787414,965.989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.672
  maximum absolute entry in einsum_ir solution: 474.673
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00171149
  time (eval):    0.855703
  gflops (eval):  888.897
  gflops (total): 887.123
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00171149,0.855703,888.897,887.123

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789305
  gflops (total): 963.674
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784371
  gflops (eval):  969.736
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784371,969.736,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.809
  maximum absolute entry in einsum_ir solution: 509.81
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143908
  time (eval):    0.856132
  gflops (eval):  888.453
  gflops (total): 886.962
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143908,0.856132,888.453,886.962

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788543
  gflops (total): 964.605
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784059
  gflops (eval):  970.121
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784059,970.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.716
  maximum absolute entry in einsum_ir solution: 461.716
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00178383
  time (eval):    0.856373
  gflops (eval):  888.202
  gflops (total): 886.356
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00178383,0.856373,888.202,886.356

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787767
  gflops (total): 965.556
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784292
  gflops (eval):  969.834
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784292,969.834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.724
  maximum absolute entry in einsum_ir solution: 485.725
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00153565
  time (eval):    0.855755
  gflops (eval):  888.844
  gflops (total): 887.252
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00153565,0.855755,888.844,887.252

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791716
  gflops (total): 960.739
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785491
  gflops (eval):  968.353
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785491,968.353,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.819
  maximum absolute entry in einsum_ir solution: 495.819
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142091
  time (eval):    0.855566
  gflops (eval):  889.04
  gflops (total): 887.566
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142091,0.855566,889.04,887.566

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793232
  gflops (total): 958.903
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.903

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784682
  gflops (eval):  969.351
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784682,969.351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.484
  maximum absolute entry in einsum_ir solution: 481.483
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144272
  time (eval):    0.855442
  gflops (eval):  889.169
  gflops (total): 887.672
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144272,0.855442,889.169,887.672

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786457
  gflops (total): 967.163
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790149
  gflops (eval):  962.645
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790149,962.645,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.809
  maximum absolute entry in einsum_ir solution: 502.809
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144014
  time (eval):    0.854774
  gflops (eval):  889.864
  gflops (total): 888.367
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144014,0.854774,889.864,888.367

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787497
  gflops (total): 965.886
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789792
  gflops (eval):  963.079
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789792,963.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.876
  maximum absolute entry in einsum_ir solution: 498.877
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143733
  time (eval):    0.855779
  gflops (eval):  888.819
  gflops (total): 887.329
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143733,0.855779,888.819,887.329

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792124
  gflops (total): 960.245
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785799
  gflops (eval):  967.974
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785799,967.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.409
  maximum absolute entry in einsum_ir solution: 497.409
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143989
  time (eval):    0.857228
  gflops (eval):  887.317
  gflops (total): 885.829
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143989,0.857228,887.317,885.829

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790025
  gflops (total): 962.795
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786686
  gflops (eval):  966.882
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786686,966.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.028
  maximum absolute entry in einsum_ir solution: 495.029
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014225
  time (eval):    0.854433
  gflops (eval):  890.219
  gflops (total): 888.739
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014225,0.854433,890.219,888.739

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788183
  gflops (total): 965.046
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785948
  gflops (eval):  967.79
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785948,967.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.523
  maximum absolute entry in einsum_ir solution: 482.524
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143902
  time (eval):    0.856488
  gflops (eval):  888.083
  gflops (total): 886.594
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143902,0.856488,888.083,886.594

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78782
  gflops (total): 965.491
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784819
  gflops (eval):  969.183
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784819,969.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.757
  maximum absolute entry in einsum_ir solution: 466.758
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143671
  time (eval):    0.856095
  gflops (eval):  888.491
  gflops (total): 887.002
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143671,0.856095,888.491,887.002

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788591
  gflops (total): 964.546
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789344
  gflops (eval):  963.627
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789344,963.627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.956
  maximum absolute entry in einsum_ir solution: 481.955
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144465
  time (eval):    0.854039
  gflops (eval):  890.63
  gflops (total): 889.126
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144465,0.854039,890.63,889.126

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787479
  gflops (total): 965.909
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784259
  gflops (eval):  969.875
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784259,969.875,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.217
  maximum absolute entry in einsum_ir solution: 470.217
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143236
  time (eval):    0.856343
  gflops (eval):  888.234
  gflops (total): 886.75
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143236,0.856343,888.234,886.75

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788479
  gflops (total): 964.683
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790772
  gflops (eval):  961.887
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790772,961.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.716
  maximum absolute entry in einsum_ir solution: 470.716
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142904
  time (eval):    0.855927
  gflops (eval):  888.665
  gflops (total): 887.184
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142904,0.855927,888.665,887.184

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789562
  gflops (total): 963.36
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785622
  gflops (eval):  968.192
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785622,968.192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.442
  maximum absolute entry in einsum_ir solution: 487.442
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143255
  time (eval):    0.856704
  gflops (eval):  887.859
  gflops (total): 886.377
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143255,0.856704,887.859,886.377

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.79214
  gflops (total): 960.225
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785236
  gflops (eval):  968.667
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785236,968.667,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.922
  maximum absolute entry in einsum_ir solution: 532.921
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0015358
  time (eval):    0.855121
  gflops (eval):  889.503
  gflops (total): 887.909
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0015358,0.855121,889.503,887.909

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787422
  gflops (total): 965.979
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787163
  gflops (eval):  966.296
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787163,966.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.914
  maximum absolute entry in einsum_ir solution: 498.914
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143945
  time (eval):    0.859948
  gflops (eval):  884.51
  gflops (total): 883.032
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143945,0.859948,884.51,883.032

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786826
  gflops (total): 966.711
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787741
  gflops (eval):  965.587
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787741,965.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.987
  maximum absolute entry in einsum_ir solution: 458.988
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00153808
  time (eval):    0.855925
  gflops (eval):  888.668
  gflops (total): 887.074
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00153808,0.855925,888.668,887.074

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787756
  gflops (total): 965.569
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784347
  gflops (eval):  969.765
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784347,969.765,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.504
  maximum absolute entry in einsum_ir solution: 481.505
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00150398
  time (eval):    0.856009
  gflops (eval):  888.58
  gflops (total): 887.021
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00150398,0.856009,888.58,887.021

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790894
  gflops (total): 961.738
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785878
  gflops (eval):  967.877
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785878,967.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.774
  maximum absolute entry in einsum_ir solution: 480.774
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144849
  time (eval):    0.855506
  gflops (eval):  889.103
  gflops (total): 887.6
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144849,0.855506,889.103,887.6

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787908
  gflops (total): 965.382
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786043
  gflops (eval):  967.673
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786043,967.673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.263
  maximum absolute entry in einsum_ir solution: 479.263
  maximum element-wise difference:              0.00209045
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142686
  time (eval):    0.856128
  gflops (eval):  888.457
  gflops (total): 886.979
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142686,0.856128,888.457,886.979

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788509
  gflops (total): 964.646
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786772
  gflops (eval):  966.776
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786772,966.776,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.03
  maximum absolute entry in einsum_ir solution: 517.03
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00152451
  time (eval):    0.855824
  gflops (eval):  888.773
  gflops (total): 887.192
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00152451,0.855824,888.773,887.192

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787922
  gflops (total): 965.365
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788583
  gflops (eval):  964.556
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788583,964.556,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.365
  maximum absolute entry in einsum_ir solution: 531.365
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00148352
  time (eval):    0.858035
  gflops (eval):  886.482
  gflops (total): 884.952
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00148352,0.858035,886.482,884.952

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790652
  gflops (total): 962.032
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783622
  gflops (eval):  970.663
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783622,970.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.066
  maximum absolute entry in einsum_ir solution: 489.066
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141452
  time (eval):    0.856917
  gflops (eval):  887.638
  gflops (total): 886.175
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141452,0.856917,887.638,886.175

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786544
  gflops (total): 967.057
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784916
  gflops (eval):  969.062
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784916,969.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.47
  maximum absolute entry in einsum_ir solution: 512.469
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141469
  time (eval):    0.855579
  gflops (eval):  889.027
  gflops (total): 887.559
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141469,0.855579,889.027,887.559

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.794987
  gflops (total): 956.786
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,956.786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786261
  gflops (eval):  967.405
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786261,967.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.109
  maximum absolute entry in einsum_ir solution: 483.109
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143845
  time (eval):    0.85607
  gflops (eval):  888.517
  gflops (total): 887.027
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143845,0.85607,888.517,887.027

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789587
  gflops (total): 963.329
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788247
  gflops (eval):  964.967
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788247,964.967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.806
  maximum absolute entry in einsum_ir solution: 476.805
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00145006
  time (eval):    0.856332
  gflops (eval):  888.245
  gflops (total): 886.744
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00145006,0.856332,888.245,886.744

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787617
  gflops (total): 965.739
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785607
  gflops (eval):  968.211
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785607,968.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.875
  maximum absolute entry in einsum_ir solution: 492.874
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144076
  time (eval):    0.85628
  gflops (eval):  888.299
  gflops (total): 886.807
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144076,0.85628,888.299,886.807

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788492
  gflops (total): 964.667
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785587
  gflops (eval):  968.235
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785587,968.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.972
  maximum absolute entry in einsum_ir solution: 470.971
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143079
  time (eval):    0.857302
  gflops (eval):  887.24
  gflops (total): 885.762
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143079,0.857302,887.24,885.762

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788172
  gflops (total): 965.059
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786698
  gflops (eval):  966.867
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786698,966.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      460.936
  maximum absolute entry in einsum_ir solution: 460.936
  maximum element-wise difference:              0.00239563
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143456
  time (eval):    0.855431
  gflops (eval):  889.18
  gflops (total): 887.692
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143456,0.855431,889.18,887.692

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787365
  gflops (total): 966.049
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784854
  gflops (eval):  969.139
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784854,969.139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.743
  maximum absolute entry in einsum_ir solution: 483.743
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143254
  time (eval):    0.856045
  gflops (eval):  888.543
  gflops (total): 887.058
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143254,0.856045,888.543,887.058

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787678
  gflops (total): 965.665
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.665

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.792863
  gflops (eval):  959.349
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.792863,959.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.582
  maximum absolute entry in einsum_ir solution: 484.581
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142751
  time (eval):    0.856512
  gflops (eval):  888.059
  gflops (total): 886.581
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142751,0.856512,888.059,886.581

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787847
  gflops (total): 965.458
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783721
  gflops (eval):  970.54
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783721,970.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.81
  maximum absolute entry in einsum_ir solution: 498.811
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143695
  time (eval):    0.855879
  gflops (eval):  888.715
  gflops (total): 887.226
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143695,0.855879,888.715,887.226

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788714
  gflops (total): 964.395
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784462
  gflops (eval):  969.624
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784462,969.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      449.402
  maximum absolute entry in einsum_ir solution: 449.402
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144559
  time (eval):    0.854994
  gflops (eval):  889.635
  gflops (total): 888.134
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144559,0.854994,889.635,888.134

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791234
  gflops (total): 961.325
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784799
  gflops (eval):  969.208
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784799,969.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.788
  maximum absolute entry in einsum_ir solution: 483.788
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00148564
  time (eval):    0.856482
  gflops (eval):  888.09
  gflops (total): 886.552
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00148564,0.856482,888.09,886.552

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790071
  gflops (total): 962.739
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790658
  gflops (eval):  962.025
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790658,962.025,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.806
  maximum absolute entry in einsum_ir solution: 475.806
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00145202
  time (eval):    0.855857
  gflops (eval):  888.738
  gflops (total): 887.232
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00145202,0.855857,888.738,887.232

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788733
  gflops (total): 964.373
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784662
  gflops (eval):  969.376
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784662,969.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.163
  maximum absolute entry in einsum_ir solution: 478.163
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144445
  time (eval):    0.856183
  gflops (eval):  888.4
  gflops (total): 886.903
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144445,0.856183,888.4,886.903

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786773
  gflops (total): 966.775
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78239
  gflops (eval):  972.191
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78239,972.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.258
  maximum absolute entry in einsum_ir solution: 475.257
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144019
  time (eval):    0.855996
  gflops (eval):  888.594
  gflops (total): 887.101
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144019,0.855996,888.594,887.101

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788842
  gflops (total): 964.24
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786315
  gflops (eval):  967.338
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786315,967.338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.654
  maximum absolute entry in einsum_ir solution: 472.654
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142139
  time (eval):    0.855703
  gflops (eval):  888.897
  gflops (total): 887.423
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142139,0.855703,888.897,887.423

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787422
  gflops (total): 965.979
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788373
  gflops (eval):  964.813
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788373,964.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.532
  maximum absolute entry in einsum_ir solution: 512.531
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00150694
  time (eval):    0.857235
  gflops (eval):  887.309
  gflops (total): 885.752
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00150694,0.857235,887.309,885.752

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792308
  gflops (total): 960.022
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789193
  gflops (eval):  963.81
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789193,963.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.48
  maximum absolute entry in einsum_ir solution: 485.48
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143805
  time (eval):    0.854962
  gflops (eval):  889.668
  gflops (total): 888.174
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143805,0.854962,889.668,888.174

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78846
  gflops (total): 964.707
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786211
  gflops (eval):  967.466
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786211,967.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.391
  maximum absolute entry in einsum_ir solution: 480.392
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143771
  time (eval):    0.855928
  gflops (eval):  888.664
  gflops (total): 887.174
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143771,0.855928,888.664,887.174

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789844
  gflops (total): 963.016
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.016

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787092
  gflops (eval):  966.383
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787092,966.383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.346
  maximum absolute entry in einsum_ir solution: 508.346
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00147661
  time (eval):    0.855903
  gflops (eval):  888.69
  gflops (total): 887.159
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00147661,0.855903,888.69,887.159

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790541
  gflops (total): 962.167
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785167
  gflops (eval):  968.752
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785167,968.752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.357
  maximum absolute entry in einsum_ir solution: 491.355
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143978
  time (eval):    0.855681
  gflops (eval):  888.921
  gflops (total): 887.428
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143978,0.855681,888.921,887.428

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789465
  gflops (total): 963.479
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785832
  gflops (eval):  967.933
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785832,967.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.03
  maximum absolute entry in einsum_ir solution: 495.03
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00154608
  time (eval):    0.856415
  gflops (eval):  888.159
  gflops (total): 886.559
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00154608,0.856415,888.159,886.559

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78803
  gflops (total): 965.233
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786193
  gflops (eval):  967.488
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786193,967.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.766
  maximum absolute entry in einsum_ir solution: 478.766
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145568
  time (eval):    1.01317
  gflops (eval):  905.688
  gflops (total): 904.389
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145568,1.01317,905.688,904.389

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00032
  gflops (total): 917.322
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943942
  gflops (eval):  972.115
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943942,972.115,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.569
  maximum absolute entry in einsum_ir solution: 536.568
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147961
  time (eval):    1.01232
  gflops (eval):  906.453
  gflops (total): 905.13
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147961,1.01232,906.453,905.13

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998321
  gflops (total): 919.162
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943455
  gflops (eval):  972.616
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943455,972.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.813
  maximum absolute entry in einsum_ir solution: 515.813
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014786
  time (eval):    1.01937
  gflops (eval):  900.186
  gflops (total): 898.882
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014786,1.01937,900.186,898.882

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998684
  gflops (total): 918.829
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943698
  gflops (eval):  972.366
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943698,972.366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.575
  maximum absolute entry in einsum_ir solution: 516.575
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014821
  time (eval):    1.01175
  gflops (eval):  906.962
  gflops (total): 905.635
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014821,1.01175,906.962,905.635

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998554
  gflops (total): 918.948
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94534
  gflops (eval):  970.677
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94534,970.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.344
  maximum absolute entry in einsum_ir solution: 516.344
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146008
  time (eval):    1.01395
  gflops (eval):  904.992
  gflops (total): 903.691
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146008,1.01395,904.992,903.691

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999022
  gflops (total): 918.518
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943963
  gflops (eval):  972.092
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943963,972.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.271
  maximum absolute entry in einsum_ir solution: 524.271
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147104
  time (eval):    1.01153
  gflops (eval):  907.157
  gflops (total): 905.84
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147104,1.01153,907.157,905.84

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997013
  gflops (total): 920.369
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943034
  gflops (eval):  973.05
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943034,973.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.663
  maximum absolute entry in einsum_ir solution: 537.663
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146018
  time (eval):    1.01245
  gflops (eval):  906.336
  gflops (total): 905.03
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146018,1.01245,906.336,905.03

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997721
  gflops (total): 919.715
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942829
  gflops (eval):  973.262
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942829,973.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.281
  maximum absolute entry in einsum_ir solution: 510.28
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145407
  time (eval):    1.01203
  gflops (eval):  906.716
  gflops (total): 905.415
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145407,1.01203,906.716,905.415

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996152
  gflops (total): 921.164
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942336
  gflops (eval):  973.771
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942336,973.771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.852
  maximum absolute entry in einsum_ir solution: 515.853
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014712
  time (eval):    1.01647
  gflops (eval):  902.754
  gflops (total): 901.449
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014712,1.01647,902.754,901.449

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999106
  gflops (total): 918.441
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943594
  gflops (eval):  972.473
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943594,972.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.427
  maximum absolute entry in einsum_ir solution: 507.427
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145702
  time (eval):    1.01155
  gflops (eval):  907.139
  gflops (total): 905.834
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145702,1.01155,907.139,905.834

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996943
  gflops (total): 920.434
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944268
  gflops (eval):  971.778
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944268,971.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.12
  maximum absolute entry in einsum_ir solution: 492.12
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145699
  time (eval):    1.01212
  gflops (eval):  906.632
  gflops (total): 905.329
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145699,1.01212,906.632,905.329

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996479
  gflops (total): 920.862
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944894
  gflops (eval):  971.134
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944894,971.134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.989
  maximum absolute entry in einsum_ir solution: 514.988
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146575
  time (eval):    1.01193
  gflops (eval):  906.799
  gflops (total): 905.487
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146575,1.01193,906.799,905.487

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998859
  gflops (total): 918.668
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944896
  gflops (eval):  971.133
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944896,971.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.934
  maximum absolute entry in einsum_ir solution: 503.934
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146655
  time (eval):    1.02104
  gflops (eval):  898.708
  gflops (total): 897.419
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146655,1.02104,898.708,897.419

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00071
  gflops (total): 916.969
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945216
  gflops (eval):  970.804
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945216,970.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.137
  maximum absolute entry in einsum_ir solution: 484.138
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147025
  time (eval):    1.0138
  gflops (eval):  905.127
  gflops (total): 903.817
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147025,1.0138,905.127,903.817

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997944
  gflops (total): 919.511
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942958
  gflops (eval):  973.129
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942958,973.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.494
  maximum absolute entry in einsum_ir solution: 515.495
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0017341
  time (eval):    1.01812
  gflops (eval):  901.289
  gflops (total): 899.756
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0017341,1.01812,901.289,899.756

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997365
  gflops (total): 920.044
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944927
  gflops (eval):  971.101
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944927,971.101,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.101
  maximum absolute entry in einsum_ir solution: 483.102
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147556
  time (eval):    1.01171
  gflops (eval):  906.996
  gflops (total): 905.675
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147556,1.01171,906.996,905.675

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998123
  gflops (total): 919.345
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.345

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945168
  gflops (eval):  970.854
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945168,970.854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.826
  maximum absolute entry in einsum_ir solution: 500.827
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146204
  time (eval):    1.01139
  gflops (eval):  907.285
  gflops (total): 905.976
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146204,1.01139,907.285,905.976

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997486
  gflops (total): 919.932
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942912
  gflops (eval):  973.177
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942912,973.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.191
  maximum absolute entry in einsum_ir solution: 531.191
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145754
  time (eval):    1.01153
  gflops (eval):  907.162
  gflops (total): 905.857
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145754,1.01153,907.162,905.857

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997454
  gflops (total): 919.962
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943729
  gflops (eval):  972.334
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943729,972.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.311
  maximum absolute entry in einsum_ir solution: 506.31
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146962
  time (eval):    1.01156
  gflops (eval):  907.132
  gflops (total): 905.816
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146962,1.01156,907.132,905.816

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00223
  gflops (total): 915.578
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942391
  gflops (eval):  973.715
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942391,973.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.206
  maximum absolute entry in einsum_ir solution: 508.206
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146814
  time (eval):    1.01385
  gflops (eval):  905.087
  gflops (total): 903.778
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146814,1.01385,905.087,903.778

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999176
  gflops (total): 918.377
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943508
  gflops (eval):  972.561
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943508,972.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.672
  maximum absolute entry in einsum_ir solution: 512.672
  maximum element-wise difference:              0.00242615
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147647
  time (eval):    1.01342
  gflops (eval):  905.47
  gflops (total): 904.152
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147647,1.01342,905.47,904.152

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996759
  gflops (total): 920.604
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942924
  gflops (eval):  973.164
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942924,973.164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.071
  maximum absolute entry in einsum_ir solution: 492.071
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146022
  time (eval):    1.01274
  gflops (eval):  906.079
  gflops (total): 904.774
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146022,1.01274,906.079,904.774

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997625
  gflops (total): 919.804
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944554
  gflops (eval):  971.485
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944554,971.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.877
  maximum absolute entry in einsum_ir solution: 488.876
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00158901
  time (eval):    1.01168
  gflops (eval):  907.028
  gflops (total): 905.605
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00158901,1.01168,907.028,905.605

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999211
  gflops (total): 918.344
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943798
  gflops (eval):  972.263
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943798,972.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.118
  maximum absolute entry in einsum_ir solution: 496.119
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145727
  time (eval):    1.01264
  gflops (eval):  906.165
  gflops (total): 904.863
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145727,1.01264,906.165,904.863

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999012
  gflops (total): 918.527
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943357
  gflops (eval):  972.717
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943357,972.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.365
  maximum absolute entry in einsum_ir solution: 523.365
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014611
  time (eval):    1.01195
  gflops (eval):  906.782
  gflops (total): 905.474
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014611,1.01195,906.782,905.474

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998458
  gflops (total): 919.037
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945148
  gflops (eval):  970.874
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945148,970.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.924
  maximum absolute entry in einsum_ir solution: 493.924
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145999
  time (eval):    1.01261
  gflops (eval):  906.189
  gflops (total): 904.884
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145999,1.01261,906.189,904.884

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998825
  gflops (total): 918.699
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943944
  gflops (eval):  972.113
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943944,972.113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.656
  maximum absolute entry in einsum_ir solution: 517.656
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146093
  time (eval):    1.01685
  gflops (eval):  902.416
  gflops (total): 901.122
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146093,1.01685,902.416,901.122

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997684
  gflops (total): 919.75
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944598
  gflops (eval):  971.439
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944598,971.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.889
  maximum absolute entry in einsum_ir solution: 503.889
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00148077
  time (eval):    1.01167
  gflops (eval):  907.032
  gflops (total): 905.706
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00148077,1.01167,907.032,905.706

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998369
  gflops (total): 919.119
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943398
  gflops (eval):  972.675
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943398,972.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.056
  maximum absolute entry in einsum_ir solution: 525.056
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146926
  time (eval):    1.0134
  gflops (eval):  905.489
  gflops (total): 904.179
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146926,1.0134,905.489,904.179

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997957
  gflops (total): 919.498
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943879
  gflops (eval):  972.179
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943879,972.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.43
  maximum absolute entry in einsum_ir solution: 534.429
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146832
  time (eval):    1.02449
  gflops (eval):  895.686
  gflops (total): 894.405
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146832,1.02449,895.686,894.405

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998203
  gflops (total): 919.272
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94436
  gflops (eval):  971.684
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94436,971.684,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.252
  maximum absolute entry in einsum_ir solution: 504.252
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00148438
  time (eval):    1.01261
  gflops (eval):  906.192
  gflops (total): 904.865
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00148438,1.01261,906.192,904.865

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997409
  gflops (total): 920.003
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945955
  gflops (eval):  970.046
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945955,970.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.293
  maximum absolute entry in einsum_ir solution: 503.292
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00173486
  time (eval):    1.01901
  gflops (eval):  900.501
  gflops (total): 898.97
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00173486,1.01901,900.501,898.97

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.0007
  gflops (total): 916.976
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944861
  gflops (eval):  971.169
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944861,971.169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.91
  maximum absolute entry in einsum_ir solution: 506.91
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014649
  time (eval):    1.01225
  gflops (eval):  906.513
  gflops (total): 905.203
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014649,1.01225,906.513,905.203

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999336
  gflops (total): 918.229
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945836
  gflops (eval):  970.167
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945836,970.167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.736
  maximum absolute entry in einsum_ir solution: 517.736
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147183
  time (eval):    1.01551
  gflops (eval):  903.605
  gflops (total): 902.297
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147183,1.01551,903.605,902.297

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996759
  gflops (total): 920.603
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94327
  gflops (eval):  972.807
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94327,972.807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.187
  maximum absolute entry in einsum_ir solution: 525.187
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145843
  time (eval):    1.01231
  gflops (eval):  906.464
  gflops (total): 905.16
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145843,1.01231,906.464,905.16

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99878
  gflops (total): 918.74
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.948287
  gflops (eval):  967.66
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.948287,967.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.216
  maximum absolute entry in einsum_ir solution: 508.216
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146081
  time (eval):    1.01265
  gflops (eval):  906.159
  gflops (total): 904.854
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146081,1.01265,906.159,904.854

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998108
  gflops (total): 919.359
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944359
  gflops (eval):  971.685
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944359,971.685,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.548
  maximum absolute entry in einsum_ir solution: 522.547
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146871
  time (eval):    1.01165
  gflops (eval):  907.055
  gflops (total): 905.74
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146871,1.01165,907.055,905.74

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997374
  gflops (total): 920.035
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943827
  gflops (eval):  972.233
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943827,972.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.069
  maximum absolute entry in einsum_ir solution: 493.068
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00160936
  time (eval):    1.01171
  gflops (eval):  907
  gflops (total): 905.559
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00160936,1.01171,907,905.559

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997803
  gflops (total): 919.64
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944486
  gflops (eval):  971.554
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944486,971.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      574.496
  maximum absolute entry in einsum_ir solution: 574.495
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147159
  time (eval):    1.01261
  gflops (eval):  906.192
  gflops (total): 904.877
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147159,1.01261,906.192,904.877

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998754
  gflops (total): 918.764
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944905
  gflops (eval):  971.124
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944905,971.124,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.997
  maximum absolute entry in einsum_ir solution: 524.997
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014777
  time (eval):    1.01207
  gflops (eval):  906.676
  gflops (total): 905.354
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014777,1.01207,906.676,905.354

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00218
  gflops (total): 915.627
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944412
  gflops (eval):  971.63
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944412,971.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.753
  maximum absolute entry in einsum_ir solution: 497.753
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145943
  time (eval):    1.01314
  gflops (eval):  905.714
  gflops (total): 904.412
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145943,1.01314,905.714,904.412

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999398
  gflops (total): 918.172
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944016
  gflops (eval):  972.039
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944016,972.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.909
  maximum absolute entry in einsum_ir solution: 554.909
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145585
  time (eval):    1.01123
  gflops (eval):  907.431
  gflops (total): 906.127
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145585,1.01123,907.431,906.127

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997279
  gflops (total): 920.123
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944615
  gflops (eval):  971.422
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944615,971.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.371
  maximum absolute entry in einsum_ir solution: 540.371
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146895
  time (eval):    1.01142
  gflops (eval):  907.262
  gflops (total): 905.946
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146895,1.01142,907.262,905.946

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99863
  gflops (total): 918.878
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943261
  gflops (eval):  972.817
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943261,972.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.163
  maximum absolute entry in einsum_ir solution: 528.163
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014559
  time (eval):    1.01105
  gflops (eval):  907.587
  gflops (total): 906.282
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014559,1.01105,907.587,906.282

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996263
  gflops (total): 921.061
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94174
  gflops (eval):  974.387
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94174,974.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.675
  maximum absolute entry in einsum_ir solution: 515.675
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145198
  time (eval):    1.01381
  gflops (eval):  905.123
  gflops (total): 903.828
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145198,1.01381,905.123,903.828

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997857
  gflops (total): 919.59
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.955107
  gflops (eval):  960.751
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.955107,960.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.234
  maximum absolute entry in einsum_ir solution: 504.233
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147
  time (eval):    1.01414
  gflops (eval):  904.823
  gflops (total): 903.513
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147,1.01414,904.823,903.513

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998839
  gflops (total): 918.686
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945536
  gflops (eval):  970.475
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945536,970.475,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.924
  maximum absolute entry in einsum_ir solution: 491.923
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147767
  time (eval):    1.01126
  gflops (eval):  907.401
  gflops (total): 906.077
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147767,1.01126,907.401,906.077

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997683
  gflops (total): 919.75
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942575
  gflops (eval):  973.525
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942575,973.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.448
  maximum absolute entry in einsum_ir solution: 545.449
  maximum element-wise difference:              0.00224304
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014594
  time (eval):    1.01083
  gflops (eval):  907.785
  gflops (total): 906.477
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014594,1.01083,907.785,906.477

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997259
  gflops (total): 920.142
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941421
  gflops (eval):  974.718
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941421,974.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.15
  maximum absolute entry in einsum_ir solution: 553.149
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146063
  time (eval):    1.01013
  gflops (eval):  908.418
  gflops (total): 907.106
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146063,1.01013,908.418,907.106

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997241
  gflops (total): 920.158
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944261
  gflops (eval):  971.786
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944261,971.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      564.194
  maximum absolute entry in einsum_ir solution: 564.193
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145901
  time (eval):    1.01111
  gflops (eval):  907.541
  gflops (total): 906.233
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145901,1.01111,907.541,906.233

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997274
  gflops (total): 920.128
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944443
  gflops (eval):  971.599
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944443,971.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.625
  maximum absolute entry in einsum_ir solution: 499.626
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146804
  time (eval):    1.0138
  gflops (eval):  905.127
  gflops (total): 903.818
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146804,1.0138,905.127,903.818

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998185
  gflops (total): 919.288
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942318
  gflops (eval):  973.79
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942318,973.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.071
  maximum absolute entry in einsum_ir solution: 507.072
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00150294
  time (eval):    1.01237
  gflops (eval):  906.407
  gflops (total): 905.064
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00150294,1.01237,906.407,905.064

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998632
  gflops (total): 918.877
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94231
  gflops (eval):  973.798
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94231,973.798,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.074
  maximum absolute entry in einsum_ir solution: 547.073
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00151723
  time (eval):    1.01264
  gflops (eval):  906.164
  gflops (total): 904.808
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00151723,1.01264,906.164,904.808

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00048
  gflops (total): 917.182
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942515
  gflops (eval):  973.586
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942515,973.586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.255
  maximum absolute entry in einsum_ir solution: 494.254
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014691
  time (eval):    1.014
  gflops (eval):  904.947
  gflops (total): 903.638
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014691,1.014,904.947,903.638

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999237
  gflops (total): 918.32
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945817
  gflops (eval):  970.187
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945817,970.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.361
  maximum absolute entry in einsum_ir solution: 524.362
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00148409
  time (eval):    1.01084
  gflops (eval):  907.782
  gflops (total): 906.451
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00148409,1.01084,907.782,906.451

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99795
  gflops (total): 919.505
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944481
  gflops (eval):  971.56
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944481,971.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.831
  maximum absolute entry in einsum_ir solution: 527.831
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014618
  time (eval):    1.01116
  gflops (eval):  907.49
  gflops (total): 906.18
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014618,1.01116,907.49,906.18

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99909
  gflops (total): 918.456
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943622
  gflops (eval):  972.444
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943622,972.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.601
  maximum absolute entry in einsum_ir solution: 500.601
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146262
  time (eval):    1.01087
  gflops (eval):  907.751
  gflops (total): 906.44
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146262,1.01087,907.751,906.44

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997803
  gflops (total): 919.64
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943192
  gflops (eval):  972.887
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943192,972.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.248
  maximum absolute entry in einsum_ir solution: 501.248
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147909
  time (eval):    1.01075
  gflops (eval):  907.864
  gflops (total): 906.537
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147909,1.01075,907.864,906.537

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99826
  gflops (total): 919.219
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944598
  gflops (eval):  971.44
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944598,971.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.504
  maximum absolute entry in einsum_ir solution: 528.504
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147042
  time (eval):    1.01099
  gflops (eval):  907.64
  gflops (total): 906.322
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147042,1.01099,907.64,906.322

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996909
  gflops (total): 920.465
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942861
  gflops (eval):  973.229
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942861,973.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.48
  maximum absolute entry in einsum_ir solution: 514.478
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014698
  time (eval):    1.01096
  gflops (eval):  907.673
  gflops (total): 906.355
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014698,1.01096,907.673,906.355

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997507
  gflops (total): 919.913
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943069
  gflops (eval):  973.015
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943069,973.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.512
  maximum absolute entry in einsum_ir solution: 524.512
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147085
  time (eval):    1.01298
  gflops (eval):  905.865
  gflops (total): 904.552
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147085,1.01298,905.865,904.552

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999863
  gflops (total): 917.745
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945414
  gflops (eval):  970.601
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945414,970.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.191
  maximum absolute entry in einsum_ir solution: 489.192
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0015438
  time (eval):    1.01638
  gflops (eval):  902.835
  gflops (total): 901.466
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0015438,1.01638,902.835,901.466

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997637
  gflops (total): 919.793
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942458
  gflops (eval):  973.645
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942458,973.645,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.516
  maximum absolute entry in einsum_ir solution: 514.516
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146218
  time (eval):    1.01075
  gflops (eval):  907.857
  gflops (total): 906.546
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146218,1.01075,907.857,906.546

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997747
  gflops (total): 919.691
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945716
  gflops (eval):  970.291
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945716,970.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.42
  maximum absolute entry in einsum_ir solution: 553.42
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145595
  time (eval):    1.01165
  gflops (eval):  907.055
  gflops (total): 905.751
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145595,1.01165,907.055,905.751

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00169
  gflops (total): 916.072
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.072

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946872
  gflops (eval):  969.106
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946872,969.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.795
  maximum absolute entry in einsum_ir solution: 499.795
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00187408
  time (eval):    1.01078
  gflops (eval):  907.831
  gflops (total): 906.151
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00187408,1.01078,907.831,906.151

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996655
  gflops (total): 920.7
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942705
  gflops (eval):  973.39
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942705,973.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.809
  maximum absolute entry in einsum_ir solution: 530.808
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0015108
  time (eval):    1.00988
  gflops (eval):  908.645
  gflops (total): 907.288
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0015108,1.00988,908.645,907.288

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.994656
  gflops (total): 922.55
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,922.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943105
  gflops (eval):  972.977
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943105,972.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.871
  maximum absolute entry in einsum_ir solution: 508.871
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00153239
  time (eval):    1.01214
  gflops (eval):  906.616
  gflops (total): 905.245
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00153239,1.01214,906.616,905.245

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998957
  gflops (total): 918.578
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94418
  gflops (eval):  971.869
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94418,971.869,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.329
  maximum absolute entry in einsum_ir solution: 508.329
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00150018
  time (eval):    1.01122
  gflops (eval):  907.438
  gflops (total): 906.094
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00150018,1.01122,907.438,906.094

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996856
  gflops (total): 920.513
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942411
  gflops (eval):  973.694
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942411,973.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.304
  maximum absolute entry in einsum_ir solution: 515.304
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00148281
  time (eval):    1.01047
  gflops (eval):  908.108
  gflops (total): 906.778
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00148281,1.01047,908.108,906.778

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.995618
  gflops (total): 921.658
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943321
  gflops (eval):  972.755
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943321,972.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.959
  maximum absolute entry in einsum_ir solution: 495.959
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00144762
  time (eval):    1.01188
  gflops (eval):  906.847
  gflops (total): 905.552
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00144762,1.01188,906.847,905.552

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998089
  gflops (total): 919.376
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.376

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942754
  gflops (eval):  973.339
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942754,973.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.259
  maximum absolute entry in einsum_ir solution: 501.258
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00144552
  time (eval):    1.01147
  gflops (eval):  907.215
  gflops (total): 905.92
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00144552,1.01147,907.215,905.92

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.995706
  gflops (total): 921.577
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942787
  gflops (eval):  973.305
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942787,973.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.894
  maximum absolute entry in einsum_ir solution: 502.894
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145179
  time (eval):    1.01148
  gflops (eval):  907.204
  gflops (total): 905.904
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145179,1.01148,907.204,905.904

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997093
  gflops (total): 920.295
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943065
  gflops (eval):  973.018
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943065,973.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.13
  maximum absolute entry in einsum_ir solution: 508.13
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00148973
  time (eval):    1.01207
  gflops (eval):  906.672
  gflops (total): 905.34
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00148973,1.01207,906.672,905.34

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00287
  gflops (total): 914.995
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,914.995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.948434
  gflops (eval):  967.51
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.948434,967.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.573
  maximum absolute entry in einsum_ir solution: 526.574
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146601
  time (eval):    1.01625
  gflops (eval):  902.947
  gflops (total): 901.646
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146601,1.01625,902.947,901.646

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997929
  gflops (total): 919.524
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941735
  gflops (eval):  974.393
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941735,974.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.361
  maximum absolute entry in einsum_ir solution: 492.361
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014691
  time (eval):    1.01411
  gflops (eval):  904.848
  gflops (total): 903.539
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014691,1.01411,904.848,903.539

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998185
  gflops (total): 919.288
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944121
  gflops (eval):  971.93
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944121,971.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.104
  maximum absolute entry in einsum_ir solution: 514.102
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.001457
  time (eval):    1.01138
  gflops (eval):  907.292
  gflops (total): 905.987
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.001457,1.01138,907.292,905.987

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.995596
  gflops (total): 921.679
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.9445
  gflops (eval):  971.54
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.9445,971.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.185
  maximum absolute entry in einsum_ir solution: 509.184
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146313
  time (eval):    1.02296
  gflops (eval):  897.027
  gflops (total): 895.746
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146313,1.02296,897.027,895.746

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997049
  gflops (total): 920.336
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94253
  gflops (eval):  973.571
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94253,973.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.403
  maximum absolute entry in einsum_ir solution: 514.404
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147578
  time (eval):    1.01101
  gflops (eval):  907.622
  gflops (total): 906.299
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147578,1.01101,907.622,906.299

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999988
  gflops (total): 917.63
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.947415
  gflops (eval):  968.551
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.947415,968.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.216
  maximum absolute entry in einsum_ir solution: 493.216
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014605
  time (eval):    1.01292
  gflops (eval):  905.914
  gflops (total): 904.61
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014605,1.01292,905.914,904.61

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998108
  gflops (total): 919.359
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942743
  gflops (eval):  973.351
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942743,973.351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.209
  maximum absolute entry in einsum_ir solution: 514.209
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00153024
  time (eval):    1.01297
  gflops (eval):  905.87
  gflops (total): 904.504
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00153024,1.01297,905.87,904.504

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998533
  gflops (total): 918.967
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943735
  gflops (eval):  972.328
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943735,972.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.76
  maximum absolute entry in einsum_ir solution: 486.76
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00153728
  time (eval):    1.025
  gflops (eval):  895.236
  gflops (total): 893.895
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00153728,1.025,895.236,893.895

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997103
  gflops (total): 920.285
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943926
  gflops (eval):  972.131
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943926,972.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.208
  maximum absolute entry in einsum_ir solution: 507.208
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00174681
  time (eval):    1.01169
  gflops (eval):  907.017
  gflops (total): 905.454
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00174681,1.01169,907.017,905.454

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.995398
  gflops (total): 921.862
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943815
  gflops (eval):  972.245
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943815,972.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.896
  maximum absolute entry in einsum_ir solution: 509.896
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146967
  time (eval):    1.01244
  gflops (eval):  906.341
  gflops (total): 905.027
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146967,1.01244,906.341,905.027

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996151
  gflops (total): 921.165
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942325
  gflops (eval):  973.783
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942325,973.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.719
  maximum absolute entry in einsum_ir solution: 494.719
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147082
  time (eval):    1.01584
  gflops (eval):  903.315
  gflops (total): 902.008
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147082,1.01584,903.315,902.008

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998169
  gflops (total): 919.303
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944856
  gflops (eval):  971.174
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944856,971.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.883
  maximum absolute entry in einsum_ir solution: 529.882
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00144597
  time (eval):    1.01432
  gflops (eval):  904.668
  gflops (total): 903.38
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00144597,1.01432,904.668,903.38

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996791
  gflops (total): 920.573
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.947502
  gflops (eval):  968.462
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.947502,968.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.071
  maximum absolute entry in einsum_ir solution: 509.071
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147381
  time (eval):    1.01657
  gflops (eval):  902.664
  gflops (total): 901.357
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147381,1.01657,902.664,901.357

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999185
  gflops (total): 918.368
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945241
  gflops (eval):  970.779
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945241,970.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.35
  maximum absolute entry in einsum_ir solution: 502.35
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145849
  time (eval):    1.01239
  gflops (eval):  906.385
  gflops (total): 905.081
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145849,1.01239,906.385,905.081

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996264
  gflops (total): 921.061
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943784
  gflops (eval):  972.277
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943784,972.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      565.072
  maximum absolute entry in einsum_ir solution: 565.072
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00186759
  time (eval):    1.01661
  gflops (eval):  902.629
  gflops (total): 900.974
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00186759,1.01661,902.629,900.974

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996308
  gflops (total): 921.02
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945682
  gflops (eval):  970.326
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945682,970.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      581.824
  maximum absolute entry in einsum_ir solution: 581.823
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147465
  time (eval):    1.0133
  gflops (eval):  905.579
  gflops (total): 904.263
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147465,1.0133,905.579,904.263

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996325
  gflops (total): 921.004
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945101
  gflops (eval):  970.922
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945101,970.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.714
  maximum absolute entry in einsum_ir solution: 533.715
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.001477
  time (eval):    1.01994
  gflops (eval):  899.679
  gflops (total): 898.378
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.001477,1.01994,899.679,898.378

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998437
  gflops (total): 919.056
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945145
  gflops (eval):  970.877
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945145,970.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.967
  maximum absolute entry in einsum_ir solution: 504.967
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147742
  time (eval):    1.01299
  gflops (eval):  905.853
  gflops (total): 904.533
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147742,1.01299,905.853,904.533

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999789
  gflops (total): 917.813
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94533
  gflops (eval):  970.687
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94533,970.687,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.623
  maximum absolute entry in einsum_ir solution: 527.622
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145582
  time (eval):    1.01323
  gflops (eval):  905.635
  gflops (total): 904.335
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145582,1.01323,905.635,904.335

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999029
  gflops (total): 918.512
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942115
  gflops (eval):  973.999
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942115,973.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.273
  maximum absolute entry in einsum_ir solution: 505.273
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00159239
  time (eval):    1.01221
  gflops (eval):  906.547
  gflops (total): 905.123
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00159239,1.01221,906.547,905.123

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00215
  gflops (total): 915.652
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945222
  gflops (eval):  970.798
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945222,970.798,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.005
  maximum absolute entry in einsum_ir solution: 516.005
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146534
  time (eval):    1.01685
  gflops (eval):  902.418
  gflops (total): 901.119
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146534,1.01685,902.418,901.119

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00041
  gflops (total): 917.247
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945108
  gflops (eval):  970.915
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945108,970.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.758
  maximum absolute entry in einsum_ir solution: 510.759
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014727
  time (eval):    1.01344
  gflops (eval):  905.454
  gflops (total): 904.14
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014727,1.01344,905.454,904.14

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99883
  gflops (total): 918.695
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94271
  gflops (eval):  973.384
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94271,973.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.398
  maximum absolute entry in einsum_ir solution: 500.398
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147317
  time (eval):    1.01389
  gflops (eval):  905.046
  gflops (total): 903.733
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147317,1.01389,905.046,903.733

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00272
  gflops (total): 915.13
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945357
  gflops (eval):  970.66
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945357,970.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.133
  maximum absolute entry in einsum_ir solution: 523.132
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014673
  time (eval):    1.01164
  gflops (eval):  907.066
  gflops (total): 905.752
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014673,1.01164,907.066,905.752

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998762
  gflops (total): 918.757
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944207
  gflops (eval):  971.841
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944207,971.841,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.748
  maximum absolute entry in einsum_ir solution: 499.747
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014714
  time (eval):    1.01241
  gflops (eval):  906.368
  gflops (total): 905.053
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014714,1.01241,906.368,905.053

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99854
  gflops (total): 918.961
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943863
  gflops (eval):  972.196
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943863,972.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.173
  maximum absolute entry in einsum_ir solution: 517.173
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00148038
  time (eval):    1.01466
  gflops (eval):  904.357
  gflops (total): 903.04
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00148038,1.01466,904.357,903.04

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997735
  gflops (total): 919.703
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943052
  gflops (eval):  973.032
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943052,973.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.276
  maximum absolute entry in einsum_ir solution: 540.277
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00176608
  time (eval):    1.01174
  gflops (eval):  906.968
  gflops (total): 905.388
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00176608,1.01174,906.968,905.388

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996271
  gflops (total): 921.054
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943694
  gflops (eval):  972.369
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943694,972.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.231
  maximum absolute entry in einsum_ir solution: 490.232
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00148569
  time (eval):    1.21468
  gflops (eval):  863.367
  gflops (total): 862.312
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00148569,1.21468,863.367,862.312

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14888
  gflops (total): 912.814
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.074
  gflops (eval):  976.462
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.074,976.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.953
  maximum absolute entry in einsum_ir solution: 532.952
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00142834
  time (eval):    1.21428
  gflops (eval):  863.656
  gflops (total): 862.641
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00142834,1.21428,863.656,862.641

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14986
  gflops (total): 912.035
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07327
  gflops (eval):  977.118
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07327,977.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      575.511
  maximum absolute entry in einsum_ir solution: 575.512
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00150556
  time (eval):    1.21248
  gflops (eval):  864.932
  gflops (total): 863.86
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00150556,1.21248,864.932,863.86

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14876
  gflops (total): 912.911
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06864
  gflops (eval):  981.356
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06864,981.356,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.097
  maximum absolute entry in einsum_ir solution: 553.096
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144984
  time (eval):    1.21563
  gflops (eval):  862.695
  gflops (total): 861.668
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144984,1.21563,862.695,861.668

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14932
  gflops (total): 912.465
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07772
  gflops (eval):  973.087
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07772,973.087,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.265
  maximum absolute entry in einsum_ir solution: 534.265
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145945
  time (eval):    1.21231
  gflops (eval):  865.053
  gflops (total): 864.013
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145945,1.21231,865.053,864.013

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14773
  gflops (total): 913.734
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0775
  gflops (eval):  973.29
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0775,973.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.937
  maximum absolute entry in einsum_ir solution: 561.936
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144788
  time (eval):    1.20911
  gflops (eval):  867.345
  gflops (total): 866.308
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144788,1.20911,867.345,866.308

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1482
  gflops (total): 913.356
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07734
  gflops (eval):  973.433
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07734,973.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      587.797
  maximum absolute entry in einsum_ir solution: 587.798
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0257482
  time (eval):    1.21497
  gflops (eval):  863.163
  gflops (total): 845.25
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0257482,1.21497,863.163,845.25

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15106
  gflops (total): 911.088
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07928
  gflops (eval):  971.683
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07928,971.683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      567.008
  maximum absolute entry in einsum_ir solution: 567.007
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147947
  time (eval):    1.21574
  gflops (eval):  862.617
  gflops (total): 861.568
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147947,1.21574,862.617,861.568

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1465
  gflops (total): 914.709
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07104
  gflops (eval):  979.161
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07104,979.161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      565.431
  maximum absolute entry in einsum_ir solution: 565.432
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146523
  time (eval):    1.21547
  gflops (eval):  862.804
  gflops (total): 861.765
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146523,1.21547,862.804,861.765

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1472
  gflops (total): 914.152
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08054
  gflops (eval):  970.549
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08054,970.549,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.987
  maximum absolute entry in einsum_ir solution: 522.988
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145753
  time (eval):    1.21085
  gflops (eval):  866.098
  gflops (total): 865.057
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145753,1.21085,866.098,865.057

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14735
  gflops (total): 914.037
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07195
  gflops (eval):  978.325
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07195,978.325,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      567.812
  maximum absolute entry in einsum_ir solution: 567.812
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145159
  time (eval):    1.2177
  gflops (eval):  861.224
  gflops (total): 860.198
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145159,1.2177,861.224,860.198

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14811
  gflops (total): 913.432
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07439
  gflops (eval):  976.1
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07439,976.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      544.382
  maximum absolute entry in einsum_ir solution: 544.381
  maximum element-wise difference:              0.00286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146125
  time (eval):    1.21662
  gflops (eval):  861.988
  gflops (total): 860.954
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146125,1.21662,861.988,860.954

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14824
  gflops (total): 913.327
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07112
  gflops (eval):  979.083
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07112,979.083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.15
  maximum absolute entry in einsum_ir solution: 523.15
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0014453
  time (eval):    1.21962
  gflops (eval):  859.868
  gflops (total): 858.85
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0014453,1.21962,859.868,858.85

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14804
  gflops (total): 913.487
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07554
  gflops (eval):  975.06
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07554,975.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      575.585
  maximum absolute entry in einsum_ir solution: 575.584
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145062
  time (eval):    1.21736
  gflops (eval):  861.47
  gflops (total): 860.445
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145062,1.21736,861.47,860.445

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14771
  gflops (total): 913.745
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07577
  gflops (eval):  974.849
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07577,974.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      585.637
  maximum absolute entry in einsum_ir solution: 585.637
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146727
  time (eval):    1.21027
  gflops (eval):  866.518
  gflops (total): 865.468
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146727,1.21027,866.518,865.468

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14729
  gflops (total): 914.084
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0756
  gflops (eval):  975.009
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0756,975.009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.326
  maximum absolute entry in einsum_ir solution: 535.326
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147408
  time (eval):    1.21753
  gflops (eval):  861.346
  gflops (total): 860.304
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147408,1.21753,861.346,860.304

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14713
  gflops (total): 914.205
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07979
  gflops (eval):  971.227
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07979,971.227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.091
  maximum absolute entry in einsum_ir solution: 530.091
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00148111
  time (eval):    1.21631
  gflops (eval):  862.215
  gflops (total): 861.166
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00148111,1.21631,862.215,861.166

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14949
  gflops (total): 912.33
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07867
  gflops (eval):  972.23
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07867,972.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.184
  maximum absolute entry in einsum_ir solution: 552.185
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00158555
  time (eval):    1.21795
  gflops (eval):  861.048
  gflops (total): 859.929
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00158555,1.21795,861.048,859.929

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1466
  gflops (total): 914.627
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0721
  gflops (eval):  978.187
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0721,978.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.151
  maximum absolute entry in einsum_ir solution: 539.151
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0014515
  time (eval):    1.21611
  gflops (eval):  862.35
  gflops (total): 861.322
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0014515,1.21611,862.35,861.322

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14691
  gflops (total): 914.382
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07058
  gflops (eval):  979.578
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07058,979.578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      572.497
  maximum absolute entry in einsum_ir solution: 572.497
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145849
  time (eval):    1.21579
  gflops (eval):  862.578
  gflops (total): 861.545
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145849,1.21579,862.578,861.545

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14763
  gflops (total): 913.812
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07424
  gflops (eval):  976.237
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07424,976.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      562.624
  maximum absolute entry in einsum_ir solution: 562.623
  maximum element-wise difference:              0.00302124
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146894
  time (eval):    1.21261
  gflops (eval):  864.839
  gflops (total): 863.793
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146894,1.21261,864.839,863.793

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15071
  gflops (total): 911.366
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06884
  gflops (eval):  981.177
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06884,981.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      565.12
  maximum absolute entry in einsum_ir solution: 565.119
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146432
  time (eval):    1.21655
  gflops (eval):  862.04
  gflops (total): 861.004
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146432,1.21655,862.04,861.004

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14745
  gflops (total): 913.954
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07316
  gflops (eval):  977.22
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07316,977.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.156
  maximum absolute entry in einsum_ir solution: 543.156
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145285
  time (eval):    1.21962
  gflops (eval):  859.874
  gflops (total): 858.85
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145285,1.21962,859.874,858.85

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14707
  gflops (total): 914.258
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07587
  gflops (eval):  974.764
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07587,974.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.292
  maximum absolute entry in einsum_ir solution: 548.292
  maximum element-wise difference:              0.00289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145859
  time (eval):    1.2143
  gflops (eval):  863.637
  gflops (total): 862.601
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145859,1.2143,863.637,862.601

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14768
  gflops (total): 913.767
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07498
  gflops (eval):  975.566
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07498,975.566,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.932
  maximum absolute entry in einsum_ir solution: 539.932
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00150774
  time (eval):    1.21952
  gflops (eval):  859.939
  gflops (total): 858.877
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00150774,1.21952,859.939,858.877

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14706
  gflops (total): 914.261
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07326
  gflops (eval):  977.129
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07326,977.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      559.862
  maximum absolute entry in einsum_ir solution: 559.863
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00187468
  time (eval):    1.21488
  gflops (eval):  863.223
  gflops (total): 861.893
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00187468,1.21488,863.223,861.893

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14786
  gflops (total): 913.625
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.625

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07831
  gflops (eval):  972.552
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07831,972.552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.044
  maximum absolute entry in einsum_ir solution: 540.044
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145629
  time (eval):    1.21418
  gflops (eval):  863.724
  gflops (total): 862.689
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145629,1.21418,863.724,862.689

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1466
  gflops (total): 914.634
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07442
  gflops (eval):  976.075
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07442,976.075,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      565.693
  maximum absolute entry in einsum_ir solution: 565.692
  maximum element-wise difference:              0.0027771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00157046
  time (eval):    1.21705
  gflops (eval):  861.689
  gflops (total): 860.579
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00157046,1.21705,861.689,860.579

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14667
  gflops (total): 914.575
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06941
  gflops (eval):  980.648
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06941,980.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.572
  maximum absolute entry in einsum_ir solution: 524.572
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146308
  time (eval):    1.2155
  gflops (eval):  862.788
  gflops (total): 861.751
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146308,1.2155,862.788,861.751

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15194
  gflops (total): 910.392
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07755
  gflops (eval):  973.242
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07755,973.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.115
  maximum absolute entry in einsum_ir solution: 524.115
  maximum element-wise difference:              0.00257874
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146559
  time (eval):    1.21295
  gflops (eval):  864.6
  gflops (total): 863.557
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146559,1.21295,864.6,863.557

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14655
  gflops (total): 914.672
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07703
  gflops (eval):  973.712
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07703,973.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.999
  maximum absolute entry in einsum_ir solution: 542.999
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145595
  time (eval):    1.21822
  gflops (eval):  860.859
  gflops (total): 859.831
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145595,1.21822,860.859,859.831

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14607
  gflops (total): 915.058
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0759
  gflops (eval):  974.73
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0759,974.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.786
  maximum absolute entry in einsum_ir solution: 540.786
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00151347
  time (eval):    1.21568
  gflops (eval):  862.658
  gflops (total): 861.585
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00151347,1.21568,862.658,861.585

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14819
  gflops (total): 913.363
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07343
  gflops (eval):  976.979
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07343,976.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      576.511
  maximum absolute entry in einsum_ir solution: 576.511
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145407
  time (eval):    1.215
  gflops (eval):  863.138
  gflops (total): 862.107
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145407,1.215,863.138,862.107

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14597
  gflops (total): 915.137
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07942
  gflops (eval):  971.555
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07942,971.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.746
  maximum absolute entry in einsum_ir solution: 540.745
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147072
  time (eval):    1.2166
  gflops (eval):  862.005
  gflops (total): 860.964
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147072,1.2166,862.005,860.964

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14659
  gflops (total): 914.639
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07431
  gflops (eval):  976.177
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07431,976.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.212
  maximum absolute entry in einsum_ir solution: 529.213
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146059
  time (eval):    1.21045
  gflops (eval):  866.383
  gflops (total): 865.338
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146059,1.21045,866.383,865.338

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14793
  gflops (total): 913.569
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07147
  gflops (eval):  978.762
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07147,978.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.756
  maximum absolute entry in einsum_ir solution: 530.754
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145672
  time (eval):    1.21973
  gflops (eval):  859.791
  gflops (total): 858.765
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145672,1.21973,859.791,858.765

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14613
  gflops (total): 915.007
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07415
  gflops (eval):  976.324
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07415,976.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.686
  maximum absolute entry in einsum_ir solution: 548.687
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144841
  time (eval):    1.21871
  gflops (eval):  860.513
  gflops (total): 859.492
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144841,1.21871,860.513,859.492

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14725
  gflops (total): 914.11
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07621
  gflops (eval):  974.457
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07621,974.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.412
  maximum absolute entry in einsum_ir solution: 548.414
  maximum element-wise difference:              0.00289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145381
  time (eval):    1.21593
  gflops (eval):  862.483
  gflops (total): 861.453
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145381,1.21593,862.483,861.453

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1469
  gflops (total): 914.39
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06959
  gflops (eval):  980.482
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06959,980.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.599
  maximum absolute entry in einsum_ir solution: 551.599
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145226
  time (eval):    1.21565
  gflops (eval):  862.678
  gflops (total): 861.648
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145226,1.21565,862.678,861.648

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1514
  gflops (total): 910.817
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07421
  gflops (eval):  976.271
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07421,976.271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.779
  maximum absolute entry in einsum_ir solution: 554.779
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0014629
  time (eval):    1.21371
  gflops (eval):  864.057
  gflops (total): 863.016
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0014629,1.21371,864.057,863.016

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15188
  gflops (total): 910.435
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07501
  gflops (eval):  975.538
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07501,975.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      582.772
  maximum absolute entry in einsum_ir solution: 582.772
  maximum element-wise difference:              0.00299072
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145656
  time (eval):    1.21781
  gflops (eval):  861.153
  gflops (total): 860.124
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145656,1.21781,861.153,860.124

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14769
  gflops (total): 913.764
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07554
  gflops (eval):  975.059
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07554,975.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.452
  maximum absolute entry in einsum_ir solution: 521.453
  maximum element-wise difference:              0.0027771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00150106
  time (eval):    1.21243
  gflops (eval):  864.969
  gflops (total): 863.9
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00150106,1.21243,864.969,863.9

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14655
  gflops (total): 914.668
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07789
  gflops (eval):  972.933
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07789,972.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.002
  maximum absolute entry in einsum_ir solution: 526.002
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147612
  time (eval):    1.20878
  gflops (eval):  867.585
  gflops (total): 866.527
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147612,1.20878,867.585,866.527

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14704
  gflops (total): 914.283
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07694
  gflops (eval):  973.794
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07694,973.794,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.263
  maximum absolute entry in einsum_ir solution: 555.261
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145472
  time (eval):    1.21586
  gflops (eval):  862.529
  gflops (total): 861.498
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145472,1.21586,862.529,861.498

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14765
  gflops (total): 913.795
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07513
  gflops (eval):  975.434
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07513,975.434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.735
  maximum absolute entry in einsum_ir solution: 543.735
  maximum element-wise difference:              0.0027771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145601
  time (eval):    1.21677
  gflops (eval):  861.886
  gflops (total): 860.856
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145601,1.21677,861.886,860.856

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14558
  gflops (total): 915.445
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08071
  gflops (eval):  970.396
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08071,970.396,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.086
  maximum absolute entry in einsum_ir solution: 555.087
  maximum element-wise difference:              0.00286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00157021
  time (eval):    1.21591
  gflops (eval):  862.494
  gflops (total): 861.382
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00157021,1.21591,862.494,861.382

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14773
  gflops (total): 913.729
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07706
  gflops (eval):  973.688
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07706,973.688,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.982
  maximum absolute entry in einsum_ir solution: 539.983
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0017006
  time (eval):    1.21847
  gflops (eval):  860.683
  gflops (total): 859.484
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0017006,1.21847,860.683,859.484

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15459
  gflops (total): 908.305
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,908.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07525
  gflops (eval):  975.319
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07525,975.319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      568.418
  maximum absolute entry in einsum_ir solution: 568.417
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145789
  time (eval):    1.21249
  gflops (eval):  864.926
  gflops (total): 863.887
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145789,1.21249,864.926,863.887

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14741
  gflops (total): 913.983
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07265
  gflops (eval):  977.691
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07265,977.691,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      568.514
  maximum absolute entry in einsum_ir solution: 568.514
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147203
  time (eval):    1.21394
  gflops (eval):  863.895
  gflops (total): 862.848
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147203,1.21394,863.895,862.848

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14788
  gflops (total): 913.609
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07184
  gflops (eval):  978.423
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07184,978.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.99
  maximum absolute entry in einsum_ir solution: 527.991
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00148752
  time (eval):    1.21358
  gflops (eval):  864.154
  gflops (total): 863.096
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00148752,1.21358,864.154,863.096

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14784
  gflops (total): 913.64
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08448
  gflops (eval):  967.026
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08448,967.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.883
  maximum absolute entry in einsum_ir solution: 546.883
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0014541
  time (eval):    1.21616
  gflops (eval):  862.321
  gflops (total): 861.291
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0014541,1.21616,862.321,861.291

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14455
  gflops (total): 916.268
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,916.268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08059
  gflops (eval):  970.499
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08059,970.499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.764
  maximum absolute entry in einsum_ir solution: 541.763
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145653
  time (eval):    1.21569
  gflops (eval):  862.65
  gflops (total): 861.618
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145653,1.21569,862.65,861.618

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14553
  gflops (total): 915.488
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07638
  gflops (eval):  974.3
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07638,974.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.771
  maximum absolute entry in einsum_ir solution: 518.772
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145481
  time (eval):    1.21854
  gflops (eval):  860.637
  gflops (total): 859.61
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145481,1.21854,860.637,859.61

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14584
  gflops (total): 915.239
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07561
  gflops (eval):  974.999
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07561,974.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      591.848
  maximum absolute entry in einsum_ir solution: 591.85
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144116
  time (eval):    1.21343
  gflops (eval):  864.256
  gflops (total): 863.23
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144116,1.21343,864.256,863.23

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14815
  gflops (total): 913.395
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08029
  gflops (eval):  970.777
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08029,970.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.4
  maximum absolute entry in einsum_ir solution: 534.4
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145446
  time (eval):    1.21413
  gflops (eval):  863.76
  gflops (total): 862.726
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145446,1.21413,863.76,862.726

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14558
  gflops (total): 915.442
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07204
  gflops (eval):  978.246
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07204,978.246,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      588.154
  maximum absolute entry in einsum_ir solution: 588.154
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144837
  time (eval):    1.21937
  gflops (eval):  860.049
  gflops (total): 859.028
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144837,1.21937,860.049,859.028

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14891
  gflops (total): 912.791
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07586
  gflops (eval):  974.773
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07586,974.773,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.495
  maximum absolute entry in einsum_ir solution: 541.495
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00148913
  time (eval):    1.21153
  gflops (eval):  865.614
  gflops (total): 864.552
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00148913,1.21153,865.614,864.552

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14908
  gflops (total): 912.661
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07298
  gflops (eval):  977.383
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07298,977.383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.454
  maximum absolute entry in einsum_ir solution: 561.453
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146845
  time (eval):    1.21118
  gflops (eval):  865.867
  gflops (total): 864.818
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146845,1.21118,865.867,864.818

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14853
  gflops (total): 913.092
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07558
  gflops (eval):  975.026
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07558,975.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      569.08
  maximum absolute entry in einsum_ir solution: 569.081
  maximum element-wise difference:              0.00283813
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145928
  time (eval):    1.21594
  gflops (eval):  862.473
  gflops (total): 861.439
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145928,1.21594,862.473,861.439

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14989
  gflops (total): 912.014
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07702
  gflops (eval):  973.721
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07702,973.721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      569.951
  maximum absolute entry in einsum_ir solution: 569.95
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00175454
  time (eval):    1.21058
  gflops (eval):  866.292
  gflops (total): 865.038
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00175454,1.21058,866.292,865.038

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14534
  gflops (total): 915.638
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.638

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07525
  gflops (eval):  975.32
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07525,975.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.499
  maximum absolute entry in einsum_ir solution: 543.499
  maximum element-wise difference:              0.0027771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00150774
  time (eval):    1.21464
  gflops (eval):  863.396
  gflops (total): 862.326
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00150774,1.21464,863.396,862.326

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14732
  gflops (total): 914.054
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07105
  gflops (eval):  979.151
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07105,979.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      598.436
  maximum absolute entry in einsum_ir solution: 598.437
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0014617
  time (eval):    1.21694
  gflops (eval):  861.764
  gflops (total): 860.73
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0014617,1.21694,861.764,860.73

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14734
  gflops (total): 914.042
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07576
  gflops (eval):  974.859
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07576,974.859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.02
  maximum absolute entry in einsum_ir solution: 560.019
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00149789
  time (eval):    1.21703
  gflops (eval):  861.7
  gflops (total): 860.64
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00149789,1.21703,861.7,860.64

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14924
  gflops (total): 912.527
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0804
  gflops (eval):  970.675
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0804,970.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.405
  maximum absolute entry in einsum_ir solution: 552.404
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145637
  time (eval):    1.21335
  gflops (eval):  864.316
  gflops (total): 863.28
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145637,1.21335,864.316,863.28

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14639
  gflops (total): 914.803
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0789
  gflops (eval):  972.023
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0789,972.023,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.506
  maximum absolute entry in einsum_ir solution: 537.506
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00152778
  time (eval):    1.21066
  gflops (eval):  866.237
  gflops (total): 865.145
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00152778,1.21066,866.237,865.145

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1483
  gflops (total): 913.277
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07558
  gflops (eval):  975.026
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07558,975.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      575.537
  maximum absolute entry in einsum_ir solution: 575.537
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0014839
  time (eval):    1.21671
  gflops (eval):  861.931
  gflops (total): 860.881
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0014839,1.21671,861.931,860.881

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14867
  gflops (total): 912.981
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07679
  gflops (eval):  973.924
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07679,973.924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.389
  maximum absolute entry in einsum_ir solution: 561.389
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00172152
  time (eval):    1.21698
  gflops (eval):  861.739
  gflops (total): 860.521
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00172152,1.21698,861.739,860.521

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14741
  gflops (total): 913.982
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06701
  gflops (eval):  982.857
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06701,982.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.025
  maximum absolute entry in einsum_ir solution: 547.025
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145397
  time (eval):    1.21665
  gflops (eval):  861.968
  gflops (total): 860.939
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145397,1.21665,861.968,860.939

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14782
  gflops (total): 913.66
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0752
  gflops (eval):  975.372
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0752,975.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.813
  maximum absolute entry in einsum_ir solution: 536.812
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00152838
  time (eval):    1.2142
  gflops (eval):  863.708
  gflops (total): 862.622
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00152838,1.2142,863.708,862.622

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14587
  gflops (total): 915.216
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07874
  gflops (eval):  972.17
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07874,972.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.376
  maximum absolute entry in einsum_ir solution: 514.377
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146439
  time (eval):    1.2169
  gflops (eval):  861.795
  gflops (total): 860.759
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146439,1.2169,861.795,860.759

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14832
  gflops (total): 913.263
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.263

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07164
  gflops (eval):  978.613
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07164,978.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      581.275
  maximum absolute entry in einsum_ir solution: 581.274
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146226
  time (eval):    1.21571
  gflops (eval):  862.639
  gflops (total): 861.602
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146226,1.21571,862.639,861.602

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14898
  gflops (total): 912.737
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07716
  gflops (eval):  973.596
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07716,973.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.031
  maximum absolute entry in einsum_ir solution: 529.031
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146091
  time (eval):    1.20163
  gflops (eval):  872.747
  gflops (total): 871.687
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146091,1.20163,872.747,871.687

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1492
  gflops (total): 912.561
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07765
  gflops (eval):  973.149
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07765,973.149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.78
  maximum absolute entry in einsum_ir solution: 555.779
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145545
  time (eval):    1.21633
  gflops (eval):  862.199
  gflops (total): 861.169
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145545,1.21633,862.199,861.169

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15676
  gflops (total): 906.594
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,906.594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07917
  gflops (eval):  971.781
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07917,971.781,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.814
  maximum absolute entry in einsum_ir solution: 537.812
  maximum element-wise difference:              0.0027771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144482
  time (eval):    1.21666
  gflops (eval):  861.966
  gflops (total): 860.944
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144482,1.21666,861.966,860.944

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15972
  gflops (total): 904.281
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,904.281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08071
  gflops (eval):  970.4
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08071,970.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.988
  maximum absolute entry in einsum_ir solution: 543.989
  maximum element-wise difference:              0.00283813
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147763
  time (eval):    1.21401
  gflops (eval):  863.841
  gflops (total): 862.791
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147763,1.21401,863.841,862.791

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14634
  gflops (total): 914.836
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08592
  gflops (eval):  965.744
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08592,965.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.799
  maximum absolute entry in einsum_ir solution: 543.798
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00173082
  time (eval):    1.21998
  gflops (eval):  859.615
  gflops (total): 858.397
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00173082,1.21998,859.615,858.397

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14713
  gflops (total): 914.207
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07625
  gflops (eval):  974.416
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07625,974.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.932
  maximum absolute entry in einsum_ir solution: 532.933
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146113
  time (eval):    1.21392
  gflops (eval):  863.906
  gflops (total): 862.868
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146113,1.21392,863.906,862.868

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14704
  gflops (total): 914.281
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08042
  gflops (eval):  970.655
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08042,970.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.755
  maximum absolute entry in einsum_ir solution: 536.755
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145239
  time (eval):    1.2206
  gflops (eval):  859.177
  gflops (total): 858.156
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145239,1.2206,859.177,858.156

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14862
  gflops (total): 913.024
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.075
  gflops (eval):  975.548
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.075,975.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      577.361
  maximum absolute entry in einsum_ir solution: 577.362
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145181
  time (eval):    1.21504
  gflops (eval):  863.11
  gflops (total): 862.08
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145181,1.21504,863.11,862.08

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15255
  gflops (total): 909.906
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,909.906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0705
  gflops (eval):  979.654
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0705,979.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.576
  maximum absolute entry in einsum_ir solution: 541.576
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146877
  time (eval):    1.21139
  gflops (eval):  865.713
  gflops (total): 864.664
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146877,1.21139,865.713,864.664

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15189
  gflops (total): 910.43
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07141
  gflops (eval):  978.82
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07141,978.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.562
  maximum absolute entry in einsum_ir solution: 552.561
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145183
  time (eval):    1.22076
  gflops (eval):  859.067
  gflops (total): 858.046
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145183,1.22076,859.067,858.046

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14793
  gflops (total): 913.575
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07197
  gflops (eval):  978.307
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07197,978.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      568.221
  maximum absolute entry in einsum_ir solution: 568.221
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147715
  time (eval):    1.21522
  gflops (eval):  862.985
  gflops (total): 861.937
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147715,1.21522,862.985,861.937

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14556
  gflops (total): 915.46
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07596
  gflops (eval):  974.683
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07596,974.683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.694
  maximum absolute entry in einsum_ir solution: 545.695
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146317
  time (eval):    1.21516
  gflops (eval):  863.026
  gflops (total): 861.989
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146317,1.21516,863.026,861.989

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14882
  gflops (total): 912.865
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07881
  gflops (eval):  972.104
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07881,972.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.753
  maximum absolute entry in einsum_ir solution: 552.752
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147316
  time (eval):    1.2181
  gflops (eval):  860.947
  gflops (total): 859.907
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147316,1.2181,860.947,859.907

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14898
  gflops (total): 912.741
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0757
  gflops (eval):  974.914
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0757,974.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.094
  maximum absolute entry in einsum_ir solution: 523.095
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145643
  time (eval):    1.21814
  gflops (eval):  860.916
  gflops (total): 859.887
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145643,1.21814,860.916,859.887

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14811
  gflops (total): 913.428
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07429
  gflops (eval):  976.199
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07429,976.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.15
  maximum absolute entry in einsum_ir solution: 547.149
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145451
  time (eval):    1.21694
  gflops (eval):  861.762
  gflops (total): 860.733
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145451,1.21694,861.762,860.733

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14683
  gflops (total): 914.447
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07051
  gflops (eval):  979.641
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07051,979.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      562.762
  maximum absolute entry in einsum_ir solution: 562.763
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146429
  time (eval):    1.2148
  gflops (eval):  863.281
  gflops (total): 862.242
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146429,1.2148,863.281,862.242

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1482
  gflops (total): 913.359
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07266
  gflops (eval):  977.674
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07266,977.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.982
  maximum absolute entry in einsum_ir solution: 540.983
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145482
  time (eval):    1.2118
  gflops (eval):  865.42
  gflops (total): 864.383
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145482,1.2118,865.42,864.383

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14636
  gflops (total): 914.825
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07256
  gflops (eval):  977.772
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07256,977.772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.87
  maximum absolute entry in einsum_ir solution: 543.87
  maximum element-wise difference:              0.00283813
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146006
  time (eval):    1.21544
  gflops (eval):  862.83
  gflops (total): 861.795
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146006,1.21544,862.83,861.795

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14556
  gflops (total): 915.459
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06876
  gflops (eval):  981.242
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06876,981.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      577.528
  maximum absolute entry in einsum_ir solution: 577.527
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0017424
  time (eval):    1.21413
  gflops (eval):  863.758
  gflops (total): 862.52
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0017424,1.21413,863.758,862.52

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14985
  gflops (total): 912.044
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06867
  gflops (eval):  981.327
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06867,981.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      566.636
  maximum absolute entry in einsum_ir solution: 566.637
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146662
  time (eval):    1.21422
  gflops (eval):  863.693
  gflops (total): 862.651
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146662,1.21422,863.693,862.651

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14625
  gflops (total): 914.908
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07498
  gflops (eval):  975.566
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07498,975.566,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.964
  maximum absolute entry in einsum_ir solution: 536.965
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144625
  time (eval):    1.21737
  gflops (eval):  861.46
  gflops (total): 860.438
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144625,1.21737,861.46,860.438

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14908
  gflops (total): 912.658
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07718
  gflops (eval):  973.576
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07718,973.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.32
  maximum absolute entry in einsum_ir solution: 545.321
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00148437
  time (eval):    1.2189
  gflops (eval):  860.376
  gflops (total): 859.33
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00148437,1.2189,860.376,859.33

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14843
  gflops (total): 913.176
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08117
  gflops (eval):  969.98
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08117,969.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      598.764
  maximum absolute entry in einsum_ir solution: 598.762
  maximum element-wise difference:              0.00311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145794
  time (eval):    1.22125
  gflops (eval):  858.722
  gflops (total): 857.698
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145794,1.22125,858.722,857.698

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14843
  gflops (total): 913.178
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07329
  gflops (eval):  977.104
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07329,977.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.224
  maximum absolute entry in einsum_ir solution: 532.223
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144071
  time (eval):    1.22029
  gflops (eval):  859.397
  gflops (total): 858.384
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144071,1.22029,859.397,858.384

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14962
  gflops (total): 912.227
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07775
  gflops (eval):  973.057
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07775,973.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.235
  maximum absolute entry in einsum_ir solution: 550.235
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00169356
  time (eval):    1.21727
  gflops (eval):  861.534
  gflops (total): 860.337
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00169356,1.21727,861.534,860.337

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14859
  gflops (total): 913.047
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07865
  gflops (eval):  972.248
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07865,972.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.561
  maximum absolute entry in einsum_ir solution: 549.56
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146518
  time (eval):    1.2151
  gflops (eval):  863.069
  gflops (total): 862.029
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146518,1.2151,863.069,862.029

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14827
  gflops (total): 913.299
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07772
  gflops (eval):  973.084
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07772,973.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      578.399
  maximum absolute entry in einsum_ir solution: 578.4
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00155206
  time (eval):    1.21792
  gflops (eval):  861.074
  gflops (total): 859.978
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00155206,1.21792,861.074,859.978

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14941
  gflops (total): 912.398
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07009
  gflops (eval):  980.027
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07009,980.027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.967
  maximum absolute entry in einsum_ir solution: 545.966
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00145993
  time (eval):    1.217
  gflops (eval):  861.724
  gflops (total): 860.692
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00145993,1.217,861.724,860.692

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14745
  gflops (total): 913.953
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07958
  gflops (eval):  971.413
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07958,971.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.356
  maximum absolute entry in einsum_ir solution: 558.355
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00147806
  time (eval):    1.21684
  gflops (eval):  861.839
  gflops (total): 860.793
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00147806,1.21684,861.839,860.793

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14736
  gflops (total): 914.024
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07519
  gflops (eval):  975.374
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07519,975.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.358
  maximum absolute entry in einsum_ir solution: 540.359
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143961
  time (eval):    0.882763
  gflops (eval):  1039.48
  gflops (total): 1037.78
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143961,0.882763,1039.48,1037.78

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05805
  gflops (total): 867.266
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948069
  gflops (eval):  967.874
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948069,967.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.833
  maximum absolute entry in einsum_ir solution: 489.833
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146278
  time (eval):    0.881959
  gflops (eval):  1040.42
  gflops (total): 1038.7
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146278,0.881959,1040.42,1038.7

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05137
  gflops (total): 872.779
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946973
  gflops (eval):  968.995
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946973,968.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.865
  maximum absolute entry in einsum_ir solution: 477.866
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144071
  time (eval):    0.883083
  gflops (eval):  1039.1
  gflops (total): 1037.41
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144071,0.883083,1039.1,1037.41

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05325
  gflops (total): 871.217
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949444
  gflops (eval):  966.472
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949444,966.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.826
  maximum absolute entry in einsum_ir solution: 488.826
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00148404
  time (eval):    0.882774
  gflops (eval):  1039.46
  gflops (total): 1037.72
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00148404,0.882774,1039.46,1037.72

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04984
  gflops (total): 874.051
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945271
  gflops (eval):  970.739
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945271,970.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.884
  maximum absolute entry in einsum_ir solution: 500.884
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00148118
  time (eval):    0.882669
  gflops (eval):  1039.59
  gflops (total): 1037.85
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00148118,0.882669,1039.59,1037.85

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05634
  gflops (total): 868.674
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.952307
  gflops (eval):  963.567
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.952307,963.567,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.483
  maximum absolute entry in einsum_ir solution: 496.483
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.001469
  time (eval):    0.882835
  gflops (eval):  1039.39
  gflops (total): 1037.67
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.001469,0.882835,1039.39,1037.67

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05249
  gflops (total): 871.848
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945888
  gflops (eval):  970.106
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945888,970.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.585
  maximum absolute entry in einsum_ir solution: 477.585
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00149026
  time (eval):    0.882748
  gflops (eval):  1039.49
  gflops (total): 1037.74
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00149026,0.882748,1039.49,1037.74

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04603
  gflops (total): 877.234
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,877.234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944113
  gflops (eval):  971.93
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944113,971.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.708
  maximum absolute entry in einsum_ir solution: 461.708
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014711
  time (eval):    0.882547
  gflops (eval):  1039.73
  gflops (total): 1038
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014711,0.882547,1039.73,1038

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05706
  gflops (total): 868.08
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951942
  gflops (eval):  963.936
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951942,963.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.349
  maximum absolute entry in einsum_ir solution: 485.349
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014925
  time (eval):    0.882179
  gflops (eval):  1040.17
  gflops (total): 1038.41
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014925,0.882179,1040.17,1038.41

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05052
  gflops (total): 873.487
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945691
  gflops (eval):  970.308
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945691,970.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.632
  maximum absolute entry in einsum_ir solution: 465.633
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00149351
  time (eval):    0.882701
  gflops (eval):  1039.55
  gflops (total): 1037.79
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00149351,0.882701,1039.55,1037.79

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05516
  gflops (total): 869.645
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945774
  gflops (eval):  970.223
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945774,970.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.741
  maximum absolute entry in einsum_ir solution: 479.741
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00174277
  time (eval):    0.882665
  gflops (eval):  1039.59
  gflops (total): 1037.54
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00174277,0.882665,1039.59,1037.54

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0535
  gflops (total): 871.01
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944247
  gflops (eval):  971.791
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944247,971.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.832
  maximum absolute entry in einsum_ir solution: 470.832
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145837
  time (eval):    0.882485
  gflops (eval):  1039.8
  gflops (total): 1038.09
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145837,0.882485,1039.8,1038.09

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.06152
  gflops (total): 864.435
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,864.435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.952449
  gflops (eval):  963.423
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.952449,963.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.638
  maximum absolute entry in einsum_ir solution: 502.638
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145558
  time (eval):    0.882953
  gflops (eval):  1039.25
  gflops (total): 1037.54
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145558,0.882953,1039.25,1037.54

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05605
  gflops (total): 868.908
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949388
  gflops (eval):  966.53
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949388,966.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.621
  maximum absolute entry in einsum_ir solution: 488.62
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00169071
  time (eval):    0.882547
  gflops (eval):  1039.73
  gflops (total): 1037.74
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00169071,0.882547,1039.73,1037.74

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05492
  gflops (total): 869.842
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950186
  gflops (eval):  965.718
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950186,965.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.374
  maximum absolute entry in einsum_ir solution: 479.373
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144949
  time (eval):    0.882343
  gflops (eval):  1039.97
  gflops (total): 1038.27
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144949,0.882343,1039.97,1038.27

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05486
  gflops (total): 869.892
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948672
  gflops (eval):  967.259
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948672,967.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.702
  maximum absolute entry in einsum_ir solution: 515.701
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147027
  time (eval):    0.882588
  gflops (eval):  1039.68
  gflops (total): 1037.95
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147027,0.882588,1039.68,1037.95

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04816
  gflops (total): 875.448
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943526
  gflops (eval):  972.534
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943526,972.534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.95
  maximum absolute entry in einsum_ir solution: 469.951
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00177342
  time (eval):    0.882568
  gflops (eval):  1039.71
  gflops (total): 1037.62
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00177342,0.882568,1039.71,1037.62

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04776
  gflops (total): 875.785
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942358
  gflops (eval):  973.739
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942358,973.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.772
  maximum absolute entry in einsum_ir solution: 487.771
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146617
  time (eval):    0.882297
  gflops (eval):  1040.03
  gflops (total): 1038.3
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146617,0.882297,1040.03,1038.3

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05156
  gflops (total): 872.62
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942289
  gflops (eval):  973.811
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942289,973.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.827
  maximum absolute entry in einsum_ir solution: 502.828
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145461
  time (eval):    0.882052
  gflops (eval):  1040.31
  gflops (total): 1038.6
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145461,0.882052,1040.31,1038.6

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04943
  gflops (total): 874.394
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948919
  gflops (eval):  967.007
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948919,967.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.843
  maximum absolute entry in einsum_ir solution: 477.843
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146149
  time (eval):    0.88264
  gflops (eval):  1039.62
  gflops (total): 1037.9
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146149,0.88264,1039.62,1037.9

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05074
  gflops (total): 873.303
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947043
  gflops (eval):  968.922
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947043,968.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.776
  maximum absolute entry in einsum_ir solution: 482.776
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147127
  time (eval):    0.882483
  gflops (eval):  1039.81
  gflops (total): 1038.08
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147127,0.882483,1039.81,1038.08

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05787
  gflops (total): 867.413
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949712
  gflops (eval):  966.2
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949712,966.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.255
  maximum absolute entry in einsum_ir solution: 469.255
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146781
  time (eval):    0.882684
  gflops (eval):  1039.57
  gflops (total): 1037.84
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146781,0.882684,1039.57,1037.84

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04632
  gflops (total): 876.989
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,876.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943207
  gflops (eval):  972.864
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943207,972.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.804
  maximum absolute entry in einsum_ir solution: 491.804
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145264
  time (eval):    0.882184
  gflops (eval):  1040.16
  gflops (total): 1038.45
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145264,0.882184,1040.16,1038.45

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05057
  gflops (total): 873.439
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946839
  gflops (eval):  969.132
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946839,969.132,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.702
  maximum absolute entry in einsum_ir solution: 456.702
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146389
  time (eval):    0.882766
  gflops (eval):  1039.47
  gflops (total): 1037.75
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146389,0.882766,1039.47,1037.75

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04835
  gflops (total): 875.29
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943623
  gflops (eval):  972.434
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943623,972.434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.784
  maximum absolute entry in einsum_ir solution: 471.784
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147112
  time (eval):    0.882478
  gflops (eval):  1039.81
  gflops (total): 1038.08
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147112,0.882478,1039.81,1038.08

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05102
  gflops (total): 873.07
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94585
  gflops (eval):  970.144
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94585,970.144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.496
  maximum absolute entry in einsum_ir solution: 465.496
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014545
  time (eval):    0.882487
  gflops (eval):  1039.8
  gflops (total): 1038.09
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014545,0.882487,1039.8,1038.09

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05067
  gflops (total): 873.355
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944841
  gflops (eval):  971.18
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944841,971.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.229
  maximum absolute entry in einsum_ir solution: 531.229
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146196
  time (eval):    0.882423
  gflops (eval):  1039.88
  gflops (total): 1038.16
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146196,0.882423,1039.88,1038.16

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05104
  gflops (total): 873.053
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947284
  gflops (eval):  968.676
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947284,968.676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.898
  maximum absolute entry in einsum_ir solution: 504.897
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014514
  time (eval):    0.881941
  gflops (eval):  1040.45
  gflops (total): 1038.74
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014514,0.881941,1040.45,1038.74

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05374
  gflops (total): 870.816
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951115
  gflops (eval):  964.774
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951115,964.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.069
  maximum absolute entry in einsum_ir solution: 465.069
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147211
  time (eval):    0.882584
  gflops (eval):  1039.69
  gflops (total): 1037.96
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147211,0.882584,1039.69,1037.96

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05272
  gflops (total): 871.654
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945961
  gflops (eval):  970.031
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945961,970.031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.041
  maximum absolute entry in einsum_ir solution: 483.042
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145833
  time (eval):    0.882541
  gflops (eval):  1039.74
  gflops (total): 1038.02
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145833,0.882541,1039.74,1038.02

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05636
  gflops (total): 868.657
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.95071
  gflops (eval):  965.186
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.95071,965.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.439
  maximum absolute entry in einsum_ir solution: 503.439
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144991
  time (eval):    0.88201
  gflops (eval):  1040.36
  gflops (total): 1038.66
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144991,0.88201,1040.36,1038.66

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05365
  gflops (total): 870.887
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950801
  gflops (eval):  965.093
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950801,965.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.031
  maximum absolute entry in einsum_ir solution: 481.03
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147609
  time (eval):    0.882489
  gflops (eval):  1039.8
  gflops (total): 1038.06
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147609,0.882489,1039.8,1038.06

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05909
  gflops (total): 866.411
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,866.411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94993
  gflops (eval):  965.978
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94993,965.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.802
  maximum absolute entry in einsum_ir solution: 480.803
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00152346
  time (eval):    0.891981
  gflops (eval):  1028.73
  gflops (total): 1026.98
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00152346,0.891981,1028.73,1026.98

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05158
  gflops (total): 872.606
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946361
  gflops (eval):  969.62
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946361,969.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.528
  maximum absolute entry in einsum_ir solution: 476.528
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146587
  time (eval):    0.881999
  gflops (eval):  1040.38
  gflops (total): 1038.65
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146587,0.881999,1040.38,1038.65

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05521
  gflops (total): 869.604
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94652
  gflops (eval):  969.458
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94652,969.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.456
  maximum absolute entry in einsum_ir solution: 498.457
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00187092
  time (eval):    0.882505
  gflops (eval):  1039.78
  gflops (total): 1037.58
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00187092,0.882505,1039.78,1037.58

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05721
  gflops (total): 867.952
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948932
  gflops (eval):  966.994
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948932,966.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.996
  maximum absolute entry in einsum_ir solution: 464.996
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00170607
  time (eval):    0.884213
  gflops (eval):  1037.77
  gflops (total): 1035.77
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00170607,0.884213,1037.77,1035.77

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05361
  gflops (total): 870.923
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951593
  gflops (eval):  964.29
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951593,964.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.545
  maximum absolute entry in einsum_ir solution: 482.546
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145492
  time (eval):    0.882191
  gflops (eval):  1040.15
  gflops (total): 1038.44
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145492,0.882191,1040.15,1038.44

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05759
  gflops (total): 867.642
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947242
  gflops (eval):  968.719
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947242,968.719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.87
  maximum absolute entry in einsum_ir solution: 519.87
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00152851
  time (eval):    0.881815
  gflops (eval):  1040.59
  gflops (total): 1038.79
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00152851,0.881815,1040.59,1038.79

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05505
  gflops (total): 869.735
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946815
  gflops (eval):  969.156
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946815,969.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.503
  maximum absolute entry in einsum_ir solution: 515.503
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014608
  time (eval):    0.880973
  gflops (eval):  1041.59
  gflops (total): 1039.86
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014608,0.880973,1041.59,1039.86

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04701
  gflops (total): 876.413
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,876.413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942554
  gflops (eval):  973.537
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942554,973.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.686
  maximum absolute entry in einsum_ir solution: 488.685
  maximum element-wise difference:              0.00184631
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00154267
  time (eval):    0.882379
  gflops (eval):  1039.93
  gflops (total): 1038.11
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00154267,0.882379,1039.93,1038.11

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04635
  gflops (total): 876.962
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,876.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946158
  gflops (eval):  969.829
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946158,969.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.518
  maximum absolute entry in einsum_ir solution: 472.517
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145801
  time (eval):    0.881546
  gflops (eval):  1040.91
  gflops (total): 1039.19
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145801,0.881546,1040.91,1039.19

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05144
  gflops (total): 872.717
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.717

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942067
  gflops (eval):  974.041
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942067,974.041,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.405
  maximum absolute entry in einsum_ir solution: 476.405
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145543
  time (eval):    0.881678
  gflops (eval):  1040.76
  gflops (total): 1039.04
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145543,0.881678,1040.76,1039.04

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05353
  gflops (total): 870.989
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.952162
  gflops (eval):  963.714
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.952162,963.714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.081
  maximum absolute entry in einsum_ir solution: 500.081
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147597
  time (eval):    0.881775
  gflops (eval):  1040.64
  gflops (total): 1038.9
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147597,0.881775,1040.64,1038.9

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04857
  gflops (total): 875.107
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94745
  gflops (eval):  968.507
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94745,968.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.849
  maximum absolute entry in einsum_ir solution: 473.848
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145386
  time (eval):    0.882147
  gflops (eval):  1040.2
  gflops (total): 1038.49
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145386,0.882147,1040.2,1038.49

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05166
  gflops (total): 872.539
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951025
  gflops (eval):  964.866
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951025,964.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.615
  maximum absolute entry in einsum_ir solution: 499.616
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00151842
  time (eval):    0.882405
  gflops (eval):  1039.9
  gflops (total): 1038.11
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00151842,0.882405,1039.9,1038.11

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05329
  gflops (total): 871.189
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949342
  gflops (eval):  966.576
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949342,966.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.936
  maximum absolute entry in einsum_ir solution: 477.937
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147433
  time (eval):    0.882935
  gflops (eval):  1039.27
  gflops (total): 1037.54
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147433,0.882935,1039.27,1037.54

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05076
  gflops (total): 873.28
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948108
  gflops (eval):  967.834
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948108,967.834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.691
  maximum absolute entry in einsum_ir solution: 463.691
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146573
  time (eval):    0.882908
  gflops (eval):  1039.31
  gflops (total): 1037.58
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146573,0.882908,1039.31,1037.58

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0529
  gflops (total): 871.506
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946422
  gflops (eval):  969.559
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946422,969.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.851
  maximum absolute entry in einsum_ir solution: 493.852
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00167768
  time (eval):    0.882197
  gflops (eval):  1040.14
  gflops (total): 1038.17
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00167768,0.882197,1040.14,1038.17

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05129
  gflops (total): 872.844
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.844

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94522
  gflops (eval):  970.792
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94522,970.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.399
  maximum absolute entry in einsum_ir solution: 486.399
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147479
  time (eval):    0.881396
  gflops (eval):  1041.09
  gflops (total): 1039.35
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147479,0.881396,1041.09,1039.35

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05486
  gflops (total): 869.887
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950431
  gflops (eval):  965.469
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950431,965.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.746
  maximum absolute entry in einsum_ir solution: 479.747
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00151388
  time (eval):    0.882149
  gflops (eval):  1040.2
  gflops (total): 1038.42
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00151388,0.882149,1040.2,1038.42

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05245
  gflops (total): 871.882
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942066
  gflops (eval):  974.042
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942066,974.042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.361
  maximum absolute entry in einsum_ir solution: 476.361
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146007
  time (eval):    0.88159
  gflops (eval):  1040.86
  gflops (total): 1039.14
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146007,0.88159,1040.86,1039.14

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05616
  gflops (total): 868.822
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941706
  gflops (eval):  974.414
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941706,974.414,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.054
  maximum absolute entry in einsum_ir solution: 481.054
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00149928
  time (eval):    0.882581
  gflops (eval):  1039.69
  gflops (total): 1037.93
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00149928,0.882581,1039.69,1037.93

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04416
  gflops (total): 878.804
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,878.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.939903
  gflops (eval):  976.283
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.939903,976.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.657
  maximum absolute entry in einsum_ir solution: 474.657
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014607
  time (eval):    0.881791
  gflops (eval):  1040.62
  gflops (total): 1038.9
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014607,0.881791,1040.62,1038.9

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04653
  gflops (total): 876.816
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,876.816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943643
  gflops (eval):  972.413
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943643,972.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.275
  maximum absolute entry in einsum_ir solution: 475.275
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143991
  time (eval):    0.882721
  gflops (eval):  1039.53
  gflops (total): 1037.83
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143991,0.882721,1039.53,1037.83

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04773
  gflops (total): 875.811
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949873
  gflops (eval):  966.036
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949873,966.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.28
  maximum absolute entry in einsum_ir solution: 477.279
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00149034
  time (eval):    0.882309
  gflops (eval):  1040.01
  gflops (total): 1038.26
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00149034,0.882309,1040.01,1038.26

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05729
  gflops (total): 867.89
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950283
  gflops (eval):  965.62
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950283,965.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.81
  maximum absolute entry in einsum_ir solution: 483.809
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146022
  time (eval):    0.883157
  gflops (eval):  1039.01
  gflops (total): 1037.3
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146022,0.883157,1039.01,1037.3

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04905
  gflops (total): 874.703
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942059
  gflops (eval):  974.049
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942059,974.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.256
  maximum absolute entry in einsum_ir solution: 469.256
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144894
  time (eval):    0.883071
  gflops (eval):  1039.11
  gflops (total): 1037.41
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144894,0.883071,1039.11,1037.41

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04818
  gflops (total): 875.43
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949262
  gflops (eval):  966.657
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949262,966.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.277
  maximum absolute entry in einsum_ir solution: 513.277
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00150364
  time (eval):    0.882381
  gflops (eval):  1039.93
  gflops (total): 1038.16
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00150364,0.882381,1039.93,1038.16

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05053
  gflops (total): 873.477
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.940248
  gflops (eval):  975.925
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.940248,975.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.923
  maximum absolute entry in einsum_ir solution: 475.923
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147348
  time (eval):    0.88216
  gflops (eval):  1040.19
  gflops (total): 1038.45
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147348,0.88216,1040.19,1038.45

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05073
  gflops (total): 873.312
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.312

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945309
  gflops (eval):  970.7
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945309,970.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.219
  maximum absolute entry in einsum_ir solution: 488.219
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00148914
  time (eval):    0.883307
  gflops (eval):  1038.84
  gflops (total): 1037.09
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00148914,0.883307,1038.84,1037.09

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05671
  gflops (total): 868.363
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951658
  gflops (eval):  964.224
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951658,964.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.969
  maximum absolute entry in einsum_ir solution: 478.969
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146683
  time (eval):    0.882196
  gflops (eval):  1040.14
  gflops (total): 1038.42
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146683,0.882196,1040.14,1038.42

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05516
  gflops (total): 869.639
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947331
  gflops (eval):  968.628
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947331,968.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.058
  maximum absolute entry in einsum_ir solution: 495.058
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147592
  time (eval):    0.882267
  gflops (eval):  1040.06
  gflops (total): 1038.32
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147592,0.882267,1040.06,1038.32

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05327
  gflops (total): 871.204
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.95077
  gflops (eval):  965.125
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.95077,965.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.449
  maximum absolute entry in einsum_ir solution: 494.449
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00161433
  time (eval):    0.883066
  gflops (eval):  1039.12
  gflops (total): 1037.22
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00161433,0.883066,1039.12,1037.22

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05193
  gflops (total): 872.312
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.312

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948842
  gflops (eval):  967.086
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948842,967.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.527
  maximum absolute entry in einsum_ir solution: 489.527
  maximum element-wise difference:              0.00227356
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014677
  time (eval):    0.882537
  gflops (eval):  1039.74
  gflops (total): 1038.02
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014677,0.882537,1039.74,1038.02

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04916
  gflops (total): 874.611
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.611

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950039
  gflops (eval):  965.867
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950039,965.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.39
  maximum absolute entry in einsum_ir solution: 475.391
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146721
  time (eval):    0.88256
  gflops (eval):  1039.72
  gflops (total): 1037.99
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146721,0.88256,1039.72,1037.99

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0544
  gflops (total): 870.266
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949911
  gflops (eval):  965.998
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949911,965.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.483
  maximum absolute entry in einsum_ir solution: 492.482
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00163714
  time (eval):    0.882642
  gflops (eval):  1039.62
  gflops (total): 1037.69
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00163714,0.882642,1039.62,1037.69

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05282
  gflops (total): 871.576
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948943
  gflops (eval):  966.983
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948943,966.983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.113
  maximum absolute entry in einsum_ir solution: 493.113
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145723
  time (eval):    0.889019
  gflops (eval):  1032.16
  gflops (total): 1030.47
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145723,0.889019,1032.16,1030.47

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05084
  gflops (total): 873.214
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945593
  gflops (eval):  970.408
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945593,970.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.577
  maximum absolute entry in einsum_ir solution: 489.577
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00149873
  time (eval):    0.882922
  gflops (eval):  1039.29
  gflops (total): 1037.53
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00149873,0.882922,1039.29,1037.53

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05475
  gflops (total): 869.977
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951878
  gflops (eval):  964.001
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951878,964.001,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.688
  maximum absolute entry in einsum_ir solution: 507.689
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147523
  time (eval):    0.882146
  gflops (eval):  1040.2
  gflops (total): 1038.47
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147523,0.882146,1040.2,1038.47

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05219
  gflops (total): 872.097
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942898
  gflops (eval):  973.182
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942898,973.182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.542
  maximum absolute entry in einsum_ir solution: 485.542
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146834
  time (eval):    0.881797
  gflops (eval):  1040.62
  gflops (total): 1038.89
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146834,0.881797,1040.62,1038.89

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05655
  gflops (total): 868.501
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950526
  gflops (eval):  965.372
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950526,965.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.304
  maximum absolute entry in einsum_ir solution: 454.304
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145267
  time (eval):    0.882692
  gflops (eval):  1039.56
  gflops (total): 1037.85
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145267,0.882692,1039.56,1037.85

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05616
  gflops (total): 868.816
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950522
  gflops (eval):  965.377
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950522,965.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.393
  maximum absolute entry in einsum_ir solution: 476.393
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147675
  time (eval):    0.883636
  gflops (eval):  1038.45
  gflops (total): 1036.72
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147675,0.883636,1038.45,1036.72

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0492
  gflops (total): 874.583
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949135
  gflops (eval):  966.787
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949135,966.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.773
  maximum absolute entry in einsum_ir solution: 509.773
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143918
  time (eval):    0.882205
  gflops (eval):  1040.13
  gflops (total): 1038.44
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143918,0.882205,1040.13,1038.44

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05415
  gflops (total): 870.475
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94465
  gflops (eval):  971.377
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94465,971.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.865
  maximum absolute entry in einsum_ir solution: 476.865
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147928
  time (eval):    0.882706
  gflops (eval):  1039.54
  gflops (total): 1037.8
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147928,0.882706,1039.54,1037.8

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05137
  gflops (total): 872.781
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94147
  gflops (eval):  974.658
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94147,974.658,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.786
  maximum absolute entry in einsum_ir solution: 537.787
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014925
  time (eval):    0.882053
  gflops (eval):  1040.31
  gflops (total): 1038.56
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014925,0.882053,1040.31,1038.56

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05316
  gflops (total): 871.295
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.939897
  gflops (eval):  976.289
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.939897,976.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.74
  maximum absolute entry in einsum_ir solution: 493.739
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146635
  time (eval):    0.882348
  gflops (eval):  1039.97
  gflops (total): 1038.24
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146635,0.882348,1039.97,1038.24

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05474
  gflops (total): 869.99
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948683
  gflops (eval):  967.248
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948683,967.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.168
  maximum absolute entry in einsum_ir solution: 472.169
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147117
  time (eval):    0.881154
  gflops (eval):  1041.37
  gflops (total): 1039.64
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147117,0.881154,1041.37,1039.64

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05267
  gflops (total): 871.702
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94449
  gflops (eval):  971.542
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94449,971.542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.504
  maximum absolute entry in einsum_ir solution: 462.503
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147649
  time (eval):    0.882125
  gflops (eval):  1040.23
  gflops (total): 1038.49
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147649,0.882125,1040.23,1038.49

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05519
  gflops (total): 869.616
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947474
  gflops (eval):  968.482
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947474,968.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.059
  maximum absolute entry in einsum_ir solution: 483.058
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146194
  time (eval):    0.882423
  gflops (eval):  1039.88
  gflops (total): 1038.16
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146194,0.882423,1039.88,1038.16

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05347
  gflops (total): 871.033
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950208
  gflops (eval):  965.695
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950208,965.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.609
  maximum absolute entry in einsum_ir solution: 506.61
  maximum element-wise difference:              0.00242615
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147537
  time (eval):    0.882496
  gflops (eval):  1039.79
  gflops (total): 1038.06
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147537,0.882496,1039.79,1038.06

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05472
  gflops (total): 870.004
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.953227
  gflops (eval):  962.637
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.953227,962.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.775
  maximum absolute entry in einsum_ir solution: 502.775
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146507
  time (eval):    0.88922
  gflops (eval):  1031.93
  gflops (total): 1030.23
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146507,0.88922,1031.93,1030.23

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04531
  gflops (total): 877.839
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,877.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943199
  gflops (eval):  972.872
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943199,972.872,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.401
  maximum absolute entry in einsum_ir solution: 470.4
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147272
  time (eval):    0.882738
  gflops (eval):  1039.51
  gflops (total): 1037.77
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147272,0.882738,1039.51,1037.77

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05096
  gflops (total): 873.121
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949999
  gflops (eval):  965.908
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949999,965.908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.972
  maximum absolute entry in einsum_ir solution: 524.973
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146326
  time (eval):    0.890899
  gflops (eval):  1029.98
  gflops (total): 1028.3
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146326,0.890899,1029.98,1028.3

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05282
  gflops (total): 871.577
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94708
  gflops (eval):  968.885
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94708,968.885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.852
  maximum absolute entry in einsum_ir solution: 516.853
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00186783
  time (eval):    0.882157
  gflops (eval):  1040.19
  gflops (total): 1037.99
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00186783,0.882157,1040.19,1037.99

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05727
  gflops (total): 867.909
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950351
  gflops (eval):  965.55
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950351,965.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.626
  maximum absolute entry in einsum_ir solution: 456.626
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146503
  time (eval):    0.881909
  gflops (eval):  1040.48
  gflops (total): 1038.76
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146503,0.881909,1040.48,1038.76

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05463
  gflops (total): 870.075
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949899
  gflops (eval):  966.009
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949899,966.009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.99
  maximum absolute entry in einsum_ir solution: 507.99
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00172767
  time (eval):    0.882468
  gflops (eval):  1039.82
  gflops (total): 1037.79
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00172767,0.882468,1039.82,1037.79

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05364
  gflops (total): 870.894
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949587
  gflops (eval):  966.327
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949587,966.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.001
  maximum absolute entry in einsum_ir solution: 490.001
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146867
  time (eval):    0.881526
  gflops (eval):  1040.94
  gflops (total): 1039.2
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146867,0.881526,1040.94,1039.2

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04937
  gflops (total): 874.441
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947403
  gflops (eval):  968.554
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947403,968.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.39
  maximum absolute entry in einsum_ir solution: 471.39
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146528
  time (eval):    0.882454
  gflops (eval):  1039.84
  gflops (total): 1038.12
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146528,0.882454,1039.84,1038.12

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04516
  gflops (total): 877.962
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,877.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944474
  gflops (eval):  971.558
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944474,971.558,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.424
  maximum absolute entry in einsum_ir solution: 528.424
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00148712
  time (eval):    0.882918
  gflops (eval):  1039.29
  gflops (total): 1037.55
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00148712,0.882918,1039.29,1037.55

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04844
  gflops (total): 875.218
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942288
  gflops (eval):  973.812
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942288,973.812,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.319
  maximum absolute entry in einsum_ir solution: 475.319
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146494
  time (eval):    0.882607
  gflops (eval):  1039.66
  gflops (total): 1037.94
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146494,0.882607,1039.66,1037.94

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04635
  gflops (total): 876.964
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,876.964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941687
  gflops (eval):  974.434
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941687,974.434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      460.41
  maximum absolute entry in einsum_ir solution: 460.41
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144396
  time (eval):    0.882502
  gflops (eval):  1039.78
  gflops (total): 1038.09
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144396,0.882502,1039.78,1038.09

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05144
  gflops (total): 872.716
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944653
  gflops (eval):  971.374
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944653,971.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.372
  maximum absolute entry in einsum_ir solution: 500.373
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145707
  time (eval):    0.882603
  gflops (eval):  1039.66
  gflops (total): 1037.95
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145707,0.882603,1039.66,1037.95

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0516
  gflops (total): 872.587
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946654
  gflops (eval):  969.321
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946654,969.321,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.141
  maximum absolute entry in einsum_ir solution: 483.142
  maximum element-wise difference:              0.00205994
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146047
  time (eval):    0.88204
  gflops (eval):  1040.33
  gflops (total): 1038.61
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146047,0.88204,1040.33,1038.61

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05256
  gflops (total): 871.794
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945291
  gflops (eval):  970.719
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945291,970.719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.788
  maximum absolute entry in einsum_ir solution: 485.787
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00147636
  time (eval):    0.882483
  gflops (eval):  1039.81
  gflops (total): 1038.07
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00147636,0.882483,1039.81,1038.07

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0457
  gflops (total): 877.511
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,877.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941492
  gflops (eval):  974.636
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941492,974.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.318
  maximum absolute entry in einsum_ir solution: 489.318
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00151126
  time (eval):    0.885547
  gflops (eval):  1036.21
  gflops (total): 1034.44
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00151126,0.885547,1036.21,1034.44

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04655
  gflops (total): 876.793
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,876.793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943056
  gflops (eval):  973.019
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943056,973.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.104
  maximum absolute entry in einsum_ir solution: 474.105
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145286
  time (eval):    0.881888
  gflops (eval):  1040.51
  gflops (total): 1038.8
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145286,0.881888,1040.51,1038.8

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05365
  gflops (total): 870.887
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944571
  gflops (eval):  971.459
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944571,971.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.297
  maximum absolute entry in einsum_ir solution: 470.297
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146507
  time (eval):    0.882284
  gflops (eval):  1040.04
  gflops (total): 1038.32
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146507,0.882284,1040.04,1038.32

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05772
  gflops (total): 867.539
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946306
  gflops (eval):  969.678
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946306,969.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.568
  maximum absolute entry in einsum_ir solution: 503.568
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00150069
  time (eval):    0.882955
  gflops (eval):  1039.25
  gflops (total): 1037.49
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00150069,0.882955,1039.25,1037.49

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05757
  gflops (total): 867.658
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.95166
  gflops (eval):  964.222
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.95166,964.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.26
  maximum absolute entry in einsum_ir solution: 488.26
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145954
  time (eval):    0.8826
  gflops (eval):  1039.67
  gflops (total): 1037.95
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145954,0.8826,1039.67,1037.95

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04593
  gflops (total): 877.32
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,877.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948636
  gflops (eval):  967.296
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948636,967.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.128
  maximum absolute entry in einsum_ir solution: 461.128
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00151889
  time (eval):    0.881753
  gflops (eval):  1040.67
  gflops (total): 1038.88
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00151889,0.881753,1040.67,1038.88

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0549
  gflops (total): 869.858
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.858

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949411
  gflops (eval):  966.506
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949411,966.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.431
  maximum absolute entry in einsum_ir solution: 480.431
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
