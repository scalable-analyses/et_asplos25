parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154867
  time (eval):    0.0426023
  gflops (eval):  119.433
  gflops (total): 115.244
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154867,0.0426023,119.433,115.244

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132425
  gflops (total): 38.4228
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0422633
  gflops (eval):  120.391
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0422633,120.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6132
  maximum absolute entry in einsum_ir solution: 40.6132
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161375
  time (eval):    0.0425946
  gflops (eval):  119.455
  gflops (total): 115.094
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00161375,0.0425946,119.455,115.094

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132457
  gflops (total): 38.4134
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433585
  gflops (eval):  117.35
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433585,117.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.694
  maximum absolute entry in einsum_ir solution: 38.694
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00166436
  time (eval):    0.0416878
  gflops (eval):  122.053
  gflops (total): 117.367
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00166436,0.0416878,122.053,117.367

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132305
  gflops (total): 38.4573
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430622
  gflops (eval):  118.157
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430622,118.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2037
  maximum absolute entry in einsum_ir solution: 41.2037
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015457
  time (eval):    0.0413025
  gflops (eval):  123.192
  gflops (total): 118.748
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015457,0.0413025,123.192,118.748

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131499
  gflops (total): 38.6933
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429478
  gflops (eval):  118.472
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429478,118.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4352
  maximum absolute entry in einsum_ir solution: 41.4352
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154045
  time (eval):    0.0422432
  gflops (eval):  120.448
  gflops (total): 116.211
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154045,0.0422432,120.448,116.211

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133859
  gflops (total): 38.0111
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.0111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430775
  gflops (eval):  118.115
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430775,118.115,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3967
  maximum absolute entry in einsum_ir solution: 42.3967
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153713
  time (eval):    0.0421905
  gflops (eval):  120.599
  gflops (total): 116.359
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153713,0.0421905,120.599,116.359

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132139
  gflops (total): 38.5059
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0425497
  gflops (eval):  119.581
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0425497,119.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1899
  maximum absolute entry in einsum_ir solution: 36.1899
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154138
  time (eval):    0.0406177
  gflops (eval):  125.269
  gflops (total): 120.689
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154138,0.0406177,125.269,120.689

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131871
  gflops (total): 38.5841
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427797
  gflops (eval):  118.938
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427797,118.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4501
  maximum absolute entry in einsum_ir solution: 40.4501
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158885
  time (eval):    0.0418112
  gflops (eval):  121.693
  gflops (total): 117.237
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158885,0.0418112,121.693,117.237

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132765
  gflops (total): 38.3241
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429451
  gflops (eval):  118.48
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429451,118.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8746
  maximum absolute entry in einsum_ir solution: 37.8746
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00160941
  time (eval):    0.0430708
  gflops (eval):  118.134
  gflops (total): 113.879
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00160941,0.0430708,118.134,113.879

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132539
  gflops (total): 38.3895
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429446
  gflops (eval):  118.481
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429446,118.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.207
  maximum absolute entry in einsum_ir solution: 36.2071
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153183
  time (eval):    0.0422891
  gflops (eval):  120.317
  gflops (total): 116.111
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153183,0.0422891,120.317,116.111

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130344
  gflops (total): 39.0359
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.0359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429567
  gflops (eval):  118.447
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429567,118.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5782
  maximum absolute entry in einsum_ir solution: 38.5782
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156954
  time (eval):    0.0414275
  gflops (eval):  122.82
  gflops (total): 118.337
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00156954,0.0414275,122.82,118.337

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132528
  gflops (total): 38.3929
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430725
  gflops (eval):  118.129
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430725,118.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.766
  maximum absolute entry in einsum_ir solution: 39.766
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153957
  time (eval):    0.0430009
  gflops (eval):  118.326
  gflops (total): 114.236
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153957,0.0430009,118.326,114.236

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131218
  gflops (total): 38.7759
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432388
  gflops (eval):  117.675
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432388,117.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0221
  maximum absolute entry in einsum_ir solution: 41.0221
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153766
  time (eval):    0.043302
  gflops (eval):  117.503
  gflops (total): 113.474
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153766,0.043302,117.503,113.474

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13151
  gflops (total): 38.6898
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429448
  gflops (eval):  118.48
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429448,118.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4528
  maximum absolute entry in einsum_ir solution: 44.4528
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.001643
  time (eval):    0.0411749
  gflops (eval):  123.573
  gflops (total): 118.832
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.001643,0.0411749,123.573,118.832

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13149
  gflops (total): 38.6959
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6959

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042904
  gflops (eval):  118.593
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.042904,118.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7873
  maximum absolute entry in einsum_ir solution: 38.7873
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152137
  time (eval):    0.041206
  gflops (eval):  123.48
  gflops (total): 119.083
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00152137,0.041206,123.48,119.083

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133806
  gflops (total): 38.026
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428915
  gflops (eval):  118.628
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428915,118.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.707
  maximum absolute entry in einsum_ir solution: 38.707
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153274
  time (eval):    0.0413218
  gflops (eval):  123.134
  gflops (total): 118.73
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153274,0.0413218,123.134,118.73

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132695
  gflops (total): 38.3444
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431568
  gflops (eval):  117.898
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431568,117.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5443
  maximum absolute entry in einsum_ir solution: 41.5443
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159875
  time (eval):    0.0439723
  gflops (eval):  115.712
  gflops (total): 111.652
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159875,0.0439723,115.712,111.652

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132471
  gflops (total): 38.4092
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431823
  gflops (eval):  117.829
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431823,117.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8151
  maximum absolute entry in einsum_ir solution: 38.8151
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155968
  time (eval):    0.0416377
  gflops (eval):  122.2
  gflops (total): 117.788
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00155968,0.0416377,122.2,117.788

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13164
  gflops (total): 38.6517
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426621
  gflops (eval):  119.265
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0426621,119.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8255
  maximum absolute entry in einsum_ir solution: 34.8255
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158428
  time (eval):    0.0418826
  gflops (eval):  121.485
  gflops (total): 117.057
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158428,0.0418826,121.485,117.057

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133656
  gflops (total): 38.0686
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.0686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043036
  gflops (eval):  118.229
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043036,118.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1176
  maximum absolute entry in einsum_ir solution: 38.1176
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015528
  time (eval):    0.0407295
  gflops (eval):  124.924
  gflops (total): 120.337
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015528,0.0407295,124.924,120.337

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131702
  gflops (total): 38.6336
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429204
  gflops (eval):  118.548
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429204,118.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1243
  maximum absolute entry in einsum_ir solution: 36.1243
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153684
  time (eval):    0.0414875
  gflops (eval):  122.642
  gflops (total): 118.261
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153684,0.0414875,122.642,118.261

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131793
  gflops (total): 38.607
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428162
  gflops (eval):  118.836
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428162,118.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4238
  maximum absolute entry in einsum_ir solution: 34.4238
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015473
  time (eval):    0.0420128
  gflops (eval):  121.109
  gflops (total): 116.807
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015473,0.0420128,121.109,116.807

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132332
  gflops (total): 38.4495
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429185
  gflops (eval):  118.553
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429185,118.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0773
  maximum absolute entry in einsum_ir solution: 37.0773
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015587
  time (eval):    0.0431201
  gflops (eval):  117.999
  gflops (total): 113.882
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015587,0.0431201,117.999,113.882

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132066
  gflops (total): 38.5269
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428871
  gflops (eval):  118.64
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428871,118.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0939
  maximum absolute entry in einsum_ir solution: 42.0939
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153613
  time (eval):    0.0420894
  gflops (eval):  120.888
  gflops (total): 116.632
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153613,0.0420894,120.888,116.632

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132055
  gflops (total): 38.5302
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430536
  gflops (eval):  118.181
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430536,118.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8286
  maximum absolute entry in einsum_ir solution: 37.8286
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00151678
  time (eval):    0.0430458
  gflops (eval):  118.202
  gflops (total): 114.179
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00151678,0.0430458,118.202,114.179

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.135656
  gflops (total): 37.5074
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,37.5074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429179
  gflops (eval):  118.555
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429179,118.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5453
  maximum absolute entry in einsum_ir solution: 36.5454
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159377
  time (eval):    0.0424744
  gflops (eval):  119.793
  gflops (total): 115.46
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159377,0.0424744,119.793,115.46

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133739
  gflops (total): 38.045
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429168
  gflops (eval):  118.558
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429168,118.558,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6671
  maximum absolute entry in einsum_ir solution: 37.6671
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158671
  time (eval):    0.0421114
  gflops (eval):  120.825
  gflops (total): 116.438
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158671,0.0421114,120.825,116.438

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132281
  gflops (total): 38.4645
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429728
  gflops (eval):  118.403
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429728,118.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4404
  maximum absolute entry in einsum_ir solution: 39.4404
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155828
  time (eval):    0.0439194
  gflops (eval):  115.851
  gflops (total): 111.882
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00155828,0.0439194,115.851,111.882

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131716
  gflops (total): 38.6294
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437315
  gflops (eval):  116.349
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437315,116.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2033
  maximum absolute entry in einsum_ir solution: 39.2033
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153237
  time (eval):    0.0409977
  gflops (eval):  124.107
  gflops (total): 119.636
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153237,0.0409977,124.107,119.636

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132538
  gflops (total): 38.3898
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042971
  gflops (eval):  118.408
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.042971,118.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5654
  maximum absolute entry in einsum_ir solution: 40.5654
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154188
  time (eval):    0.0425337
  gflops (eval):  119.625
  gflops (total): 115.441
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154188,0.0425337,119.625,115.441

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.1327
  gflops (total): 38.3431
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430709
  gflops (eval):  118.134
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430709,118.134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1984
  maximum absolute entry in einsum_ir solution: 38.1984
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015344
  time (eval):    0.0422976
  gflops (eval):  120.293
  gflops (total): 116.082
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015344,0.0422976,120.293,116.082

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131402
  gflops (total): 38.7219
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431495
  gflops (eval):  117.918
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431495,117.918,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0586
  maximum absolute entry in einsum_ir solution: 43.0586
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154605
  time (eval):    0.0431405
  gflops (eval):  117.943
  gflops (total): 113.862
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154605,0.0431405,117.943,113.862

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131354
  gflops (total): 38.736
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428676
  gflops (eval):  118.694
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428676,118.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1825
  maximum absolute entry in einsum_ir solution: 36.1825
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015332
  time (eval):    0.0432667
  gflops (eval):  117.599
  gflops (total): 113.574
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015332,0.0432667,117.599,113.574

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131769
  gflops (total): 38.614
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043135
  gflops (eval):  117.958
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043135,117.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.403
  maximum absolute entry in einsum_ir solution: 39.403
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0016022
  time (eval):    0.0423006
  gflops (eval):  120.285
  gflops (total): 115.895
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0016022,0.0423006,120.285,115.895

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132428
  gflops (total): 38.4218
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042965
  gflops (eval):  118.425
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.042965,118.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9973
  maximum absolute entry in einsum_ir solution: 38.9973
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153896
  time (eval):    0.0423132
  gflops (eval):  120.249
  gflops (total): 116.029
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153896,0.0423132,120.249,116.029

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13393
  gflops (total): 37.991
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,37.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427619
  gflops (eval):  118.987
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427619,118.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8402
  maximum absolute entry in einsum_ir solution: 39.8402
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158926
  time (eval):    0.0405946
  gflops (eval):  125.34
  gflops (total): 120.618
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00158926,0.0405946,125.34,120.618

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133237
  gflops (total): 38.1885
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.1885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427368
  gflops (eval):  119.057
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427368,119.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2977
  maximum absolute entry in einsum_ir solution: 36.2977
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015421
  time (eval):    0.0415277
  gflops (eval):  122.523
  gflops (total): 118.136
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015421,0.0415277,122.523,118.136

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132211
  gflops (total): 38.4849
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429757
  gflops (eval):  118.395
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429757,118.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2973
  maximum absolute entry in einsum_ir solution: 40.2973
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015555
  time (eval):    0.0420677
  gflops (eval):  120.951
  gflops (total): 116.638
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015555,0.0420677,120.951,116.638

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133563
  gflops (total): 38.0952
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.0952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430183
  gflops (eval):  118.278
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430183,118.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0674
  maximum absolute entry in einsum_ir solution: 43.0674
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154478
  time (eval):    0.0419599
  gflops (eval):  121.261
  gflops (total): 116.956
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154478,0.0419599,121.261,116.956

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13345
  gflops (total): 38.1274
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.1274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431379
  gflops (eval):  117.95
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431379,117.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5987
  maximum absolute entry in einsum_ir solution: 35.5987
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155242
  time (eval):    0.0420297
  gflops (eval):  121.06
  gflops (total): 116.748
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00155242,0.0420297,121.06,116.748

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132946
  gflops (total): 38.2722
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.2722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427647
  gflops (eval):  118.979
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427647,118.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0692
  maximum absolute entry in einsum_ir solution: 41.0692
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155374
  time (eval):    0.0420352
  gflops (eval):  121.044
  gflops (total): 116.73
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00155374,0.0420352,121.044,116.73

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133785
  gflops (total): 38.0321
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.0321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428158
  gflops (eval):  118.837
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428158,118.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7909
  maximum absolute entry in einsum_ir solution: 35.7909
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153331
  time (eval):    0.0422489
  gflops (eval):  120.432
  gflops (total): 116.214
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153331,0.0422489,120.432,116.214

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132451
  gflops (total): 38.415
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427147
  gflops (eval):  119.119
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427147,119.119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0272
  maximum absolute entry in einsum_ir solution: 35.0272
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00181282
  time (eval):    0.0407112
  gflops (eval):  124.981
  gflops (total): 119.653
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00181282,0.0407112,124.981,119.653

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131
  gflops (total): 38.8406
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427815
  gflops (eval):  118.933
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427815,118.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5405
  maximum absolute entry in einsum_ir solution: 40.5405
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00181687
  time (eval):    0.044054
  gflops (eval):  115.497
  gflops (total): 110.922
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00181687,0.044054,115.497,110.922

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133009
  gflops (total): 38.254
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427891
  gflops (eval):  118.911
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427891,118.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2356
  maximum absolute entry in einsum_ir solution: 41.2356
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153124
  time (eval):    0.0411796
  gflops (eval):  123.559
  gflops (total): 119.129
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153124,0.0411796,123.559,119.129

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.134245
  gflops (total): 37.9017
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,37.9017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431346
  gflops (eval):  117.959
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431346,117.959,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2467
  maximum absolute entry in einsum_ir solution: 41.2467
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00190813
  time (eval):    0.0427048
  gflops (eval):  119.146
  gflops (total): 114.05
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00190813,0.0427048,119.146,114.05

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132444
  gflops (total): 38.4172
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427505
  gflops (eval):  119.019
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427505,119.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6226
  maximum absolute entry in einsum_ir solution: 43.6226
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156776
  time (eval):    0.0414809
  gflops (eval):  122.662
  gflops (total): 118.194
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00156776,0.0414809,122.662,118.194

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131449
  gflops (total): 38.708
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430171
  gflops (eval):  118.281
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430171,118.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3802
  maximum absolute entry in einsum_ir solution: 39.3802
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159059
  time (eval):    0.0414996
  gflops (eval):  122.606
  gflops (total): 118.081
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00159059,0.0414996,122.606,118.081

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.134138
  gflops (total): 37.9319
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,37.9319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042896
  gflops (eval):  118.615
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.042896,118.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7668
  maximum absolute entry in einsum_ir solution: 38.7668
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155137
  time (eval):    0.0431625
  gflops (eval):  117.883
  gflops (total): 113.793
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00155137,0.0431625,117.883,113.793

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132583
  gflops (total): 38.3768
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3768

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433112
  gflops (eval):  117.478
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433112,117.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4303
  maximum absolute entry in einsum_ir solution: 42.4303
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152264
  time (eval):    0.0440003
  gflops (eval):  115.638
  gflops (total): 111.77
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00152264,0.0440003,115.638,111.77

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128956
  gflops (total): 39.4563
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431121
  gflops (eval):  118.021
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431121,118.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7464
  maximum absolute entry in einsum_ir solution: 36.7464
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00213261
  time (eval):    0.0434475
  gflops (eval):  117.11
  gflops (total): 111.63
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00213261,0.0434475,117.11,111.63

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130973
  gflops (total): 38.8485
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0425085
  gflops (eval):  119.697
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0425085,119.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2785
  maximum absolute entry in einsum_ir solution: 39.2785
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154386
  time (eval):    0.0408731
  gflops (eval):  124.486
  gflops (total): 119.955
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154386,0.0408731,124.486,119.955

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133142
  gflops (total): 38.2156
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.2156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043543
  gflops (eval):  116.853
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043543,116.853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8409
  maximum absolute entry in einsum_ir solution: 40.8409
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154207
  time (eval):    0.0409678
  gflops (eval):  124.198
  gflops (total): 119.693
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154207,0.0409678,124.198,119.693

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132639
  gflops (total): 38.3605
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428343
  gflops (eval):  118.786
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428343,118.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4688
  maximum absolute entry in einsum_ir solution: 35.4688
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153995
  time (eval):    0.0412887
  gflops (eval):  123.233
  gflops (total): 118.802
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153995,0.0412887,123.233,118.802

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131128
  gflops (total): 38.8026
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430211
  gflops (eval):  118.27
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430211,118.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8585
  maximum absolute entry in einsum_ir solution: 36.8585
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153116
  time (eval):    0.0440444
  gflops (eval):  115.522
  gflops (total): 111.641
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153116,0.0440444,115.522,111.641

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132443
  gflops (total): 38.4175
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427956
  gflops (eval):  118.894
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427956,118.894,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9943
  maximum absolute entry in einsum_ir solution: 35.9943
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153582
  time (eval):    0.0429357
  gflops (eval):  118.506
  gflops (total): 114.413
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153582,0.0429357,118.506,114.413

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132488
  gflops (total): 38.4044
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429974
  gflops (eval):  118.335
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429974,118.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4573
  maximum absolute entry in einsum_ir solution: 38.4573
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154144
  time (eval):    0.0405114
  gflops (eval):  125.597
  gflops (total): 120.993
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154144,0.0405114,125.597,120.993

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133631
  gflops (total): 38.0759
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.0759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429808
  gflops (eval):  118.381
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429808,118.381,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.94
  maximum absolute entry in einsum_ir solution: 42.94
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154334
  time (eval):    0.0410593
  gflops (eval):  123.921
  gflops (total): 119.432
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154334,0.0410593,123.921,119.432

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130406
  gflops (total): 39.0174
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.0174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432417
  gflops (eval):  117.667
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432417,117.667,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3277
  maximum absolute entry in einsum_ir solution: 39.3277
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00170821
  time (eval):    0.0432338
  gflops (eval):  117.688
  gflops (total): 113.215
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00170821,0.0432338,117.688,113.215

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131389
  gflops (total): 38.7257
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430208
  gflops (eval):  118.271
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430208,118.271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8214
  maximum absolute entry in einsum_ir solution: 37.8214
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154392
  time (eval):    0.0412005
  gflops (eval):  123.497
  gflops (total): 119.036
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154392,0.0412005,123.497,119.036

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132109
  gflops (total): 38.5146
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430666
  gflops (eval):  118.145
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430666,118.145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0471
  maximum absolute entry in einsum_ir solution: 41.0471
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155451
  time (eval):    0.0407977
  gflops (eval):  124.716
  gflops (total): 120.138
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00155451,0.0407977,124.716,120.138

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132143
  gflops (total): 38.5045
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430603
  gflops (eval):  118.163
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430603,118.163,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3575
  maximum absolute entry in einsum_ir solution: 39.3575
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153927
  time (eval):    0.0420893
  gflops (eval):  120.889
  gflops (total): 116.623
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153927,0.0420893,120.889,116.623

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13516
  gflops (total): 37.6451
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,37.6451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429847
  gflops (eval):  118.371
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429847,118.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4341
  maximum absolute entry in einsum_ir solution: 38.4341
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154425
  time (eval):    0.0411345
  gflops (eval):  123.695
  gflops (total): 119.219
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154425,0.0411345,123.695,119.219

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13197
  gflops (total): 38.5551
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431104
  gflops (eval):  118.025
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431104,118.025,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.1529
  maximum absolute entry in einsum_ir solution: 46.1529
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00179804
  time (eval):    0.0416486
  gflops (eval):  122.168
  gflops (total): 117.112
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00179804,0.0416486,122.168,117.112

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131179
  gflops (total): 38.7875
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429536
  gflops (eval):  118.456
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429536,118.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1428
  maximum absolute entry in einsum_ir solution: 37.1428
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00168038
  time (eval):    0.0432208
  gflops (eval):  117.724
  gflops (total): 113.318
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00168038,0.0432208,117.724,113.318

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132905
  gflops (total): 38.2838
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.2838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431122
  gflops (eval):  118.02
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431122,118.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.505
  maximum absolute entry in einsum_ir solution: 42.505
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154307
  time (eval):    0.0416418
  gflops (eval):  122.188
  gflops (total): 117.822
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154307,0.0416418,122.188,117.822

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132943
  gflops (total): 38.2729
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.2729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429775
  gflops (eval):  118.39
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429775,118.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1028
  maximum absolute entry in einsum_ir solution: 42.1028
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00151575
  time (eval):    0.0420585
  gflops (eval):  120.977
  gflops (total): 116.769
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00151575,0.0420585,120.977,116.769

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.1328
  gflops (total): 38.3141
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428175
  gflops (eval):  118.833
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428175,118.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2735
  maximum absolute entry in einsum_ir solution: 40.2735
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154711
  time (eval):    0.0418876
  gflops (eval):  121.471
  gflops (total): 117.144
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154711,0.0418876,121.471,117.144

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130726
  gflops (total): 38.9221
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.9221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428535
  gflops (eval):  118.733
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428535,118.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1577
  maximum absolute entry in einsum_ir solution: 36.1577
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153132
  time (eval):    0.0413157
  gflops (eval):  123.152
  gflops (total): 118.751
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153132,0.0413157,123.152,118.751

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131598
  gflops (total): 38.664
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428423
  gflops (eval):  118.764
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0428423,118.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4507
  maximum absolute entry in einsum_ir solution: 40.4507
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155666
  time (eval):    0.0418904
  gflops (eval):  121.463
  gflops (total): 117.111
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00155666,0.0418904,121.463,117.111

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132769
  gflops (total): 38.323
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429623
  gflops (eval):  118.432
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429623,118.432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8879
  maximum absolute entry in einsum_ir solution: 38.8879
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152651
  time (eval):    0.0416476
  gflops (eval):  122.171
  gflops (total): 117.851
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00152651,0.0416476,122.171,117.851

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133764
  gflops (total): 38.038
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042958
  gflops (eval):  118.444
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.042958,118.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8102
  maximum absolute entry in einsum_ir solution: 39.8102
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00168553
  time (eval):    0.0422161
  gflops (eval):  120.526
  gflops (total): 115.898
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00168553,0.0422161,120.526,115.898

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131667
  gflops (total): 38.6437
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429523
  gflops (eval):  118.46
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429523,118.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3431
  maximum absolute entry in einsum_ir solution: 39.3431
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155086
  time (eval):    0.043622
  gflops (eval):  116.641
  gflops (total): 112.637
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00155086,0.043622,116.641,112.637

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132315
  gflops (total): 38.4545
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0424336
  gflops (eval):  119.908
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0424336,119.908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.736
  maximum absolute entry in einsum_ir solution: 37.736
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153085
  time (eval):    0.0450601
  gflops (eval):  112.919
  gflops (total): 109.208
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153085,0.0450601,112.919,109.208

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133202
  gflops (total): 38.1986
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.1986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437744
  gflops (eval):  116.235
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437744,116.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8454
  maximum absolute entry in einsum_ir solution: 36.8454
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00209972
  time (eval):    0.0444567
  gflops (eval):  114.451
  gflops (total): 109.289
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00209972,0.0444567,114.451,109.289

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132828
  gflops (total): 38.3059
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431318
  gflops (eval):  117.967
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431318,117.967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2952
  maximum absolute entry in einsum_ir solution: 36.2952
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00166223
  time (eval):    0.0429135
  gflops (eval):  118.567
  gflops (total): 114.145
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00166223,0.0429135,118.567,114.145

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132091
  gflops (total): 38.5197
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429735
  gflops (eval):  118.401
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429735,118.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0837
  maximum absolute entry in einsum_ir solution: 36.0837
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015227
  time (eval):    0.0420797
  gflops (eval):  120.916
  gflops (total): 116.694
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0015227,0.0420797,120.916,116.694

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131737
  gflops (total): 38.6234
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430643
  gflops (eval):  118.152
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430643,118.152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7705
  maximum absolute entry in einsum_ir solution: 42.7705
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00163959
  time (eval):    0.04178
  gflops (eval):  121.784
  gflops (total): 117.185
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00163959,0.04178,121.784,117.185

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131223
  gflops (total): 38.7745
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426489
  gflops (eval):  119.302
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0426489,119.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6232
  maximum absolute entry in einsum_ir solution: 38.6232
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153222
  time (eval):    0.0424405
  gflops (eval):  119.888
  gflops (total): 115.711
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153222,0.0424405,119.888,115.711

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133794
  gflops (total): 38.0294
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.0294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431686
  gflops (eval):  117.866
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431686,117.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0028
  maximum absolute entry in einsum_ir solution: 42.0028
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161836
  time (eval):    0.0426083
  gflops (eval):  119.416
  gflops (total): 115.046
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00161836,0.0426083,119.416,115.046

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131839
  gflops (total): 38.5933
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432203
  gflops (eval):  117.725
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432203,117.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7218
  maximum absolute entry in einsum_ir solution: 35.7218
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154516
  time (eval):    0.0428206
  gflops (eval):  118.824
  gflops (total): 114.686
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154516,0.0428206,118.824,114.686

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13128
  gflops (total): 38.7577
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430786
  gflops (eval):  118.112
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430786,118.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9832
  maximum absolute entry in einsum_ir solution: 37.9832
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154031
  time (eval):    0.0415806
  gflops (eval):  122.367
  gflops (total): 117.996
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154031,0.0415806,122.367,117.996

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130152
  gflops (total): 39.0937
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.0937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426867
  gflops (eval):  119.197
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0426867,119.197,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6926
  maximum absolute entry in einsum_ir solution: 36.6926
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153234
  time (eval):    0.0428223
  gflops (eval):  118.819
  gflops (total): 114.714
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153234,0.0428223,118.819,114.714

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133469
  gflops (total): 38.1222
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.1222

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434044
  gflops (eval):  117.226
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434044,117.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0528
  maximum absolute entry in einsum_ir solution: 39.0528
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153769
  time (eval):    0.0416942
  gflops (eval):  122.034
  gflops (total): 117.694
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153769,0.0416942,122.034,117.694

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133197
  gflops (total): 38.2
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427552
  gflops (eval):  119.006
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0427552,119.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1824
  maximum absolute entry in einsum_ir solution: 40.1824
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157706
  time (eval):    0.0417837
  gflops (eval):  121.773
  gflops (total): 117.344
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157706,0.0417837,121.773,117.344

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13159
  gflops (total): 38.6663
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429725
  gflops (eval):  118.404
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429725,118.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3458
  maximum absolute entry in einsum_ir solution: 38.3458
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00151916
  time (eval):    0.0413105
  gflops (eval):  123.168
  gflops (total): 118.799
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00151916,0.0413105,123.168,118.799

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131531
  gflops (total): 38.6839
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042927
  gflops (eval):  118.53
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.042927,118.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5448
  maximum absolute entry in einsum_ir solution: 39.5448
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161125
  time (eval):    0.0428765
  gflops (eval):  118.669
  gflops (total): 114.371
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00161125,0.0428765,118.669,114.371

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132657
  gflops (total): 38.3553
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431182
  gflops (eval):  118.004
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431182,118.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6698
  maximum absolute entry in einsum_ir solution: 37.6698
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154581
  time (eval):    0.0422313
  gflops (eval):  120.482
  gflops (total): 116.228
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154581,0.0422313,120.482,116.228

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132406
  gflops (total): 38.4282
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431606
  gflops (eval):  117.888
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431606,117.888,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1217
  maximum absolute entry in einsum_ir solution: 41.1217
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154986
  time (eval):    0.0424428
  gflops (eval):  119.882
  gflops (total): 115.658
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154986,0.0424428,119.882,115.658

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131149
  gflops (total): 38.7964
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434578
  gflops (eval):  117.082
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434578,117.082,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4019
  maximum absolute entry in einsum_ir solution: 38.4019
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154327
  time (eval):    0.0414057
  gflops (eval):  122.884
  gflops (total): 118.469
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154327,0.0414057,122.884,118.469

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132327
  gflops (total): 38.4512
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431719
  gflops (eval):  117.857
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431719,117.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6901
  maximum absolute entry in einsum_ir solution: 35.6901
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161238
  time (eval):    0.0414622
  gflops (eval):  122.717
  gflops (total): 118.124
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00161238,0.0414622,122.717,118.124

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131044
  gflops (total): 38.8276
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431879
  gflops (eval):  117.813
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431879,117.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.073
  maximum absolute entry in einsum_ir solution: 35.073
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153312
  time (eval):    0.0431767
  gflops (eval):  117.844
  gflops (total): 113.803
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153312,0.0431767,117.844,113.803

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131635
  gflops (total): 38.6531
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430824
  gflops (eval):  118.102
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430824,118.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8375
  maximum absolute entry in einsum_ir solution: 36.8375
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152695
  time (eval):    0.04209
  gflops (eval):  120.886
  gflops (total): 116.654
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00152695,0.04209,120.886,116.654

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132434
  gflops (total): 38.42
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429736
  gflops (eval):  118.401
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429736,118.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1518
  maximum absolute entry in einsum_ir solution: 36.1518
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154436
  time (eval):    0.043371
  gflops (eval):  117.316
  gflops (total): 113.282
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154436,0.043371,117.316,113.282

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13247
  gflops (total): 38.4097
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430575
  gflops (eval):  118.17
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430575,118.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.518
  maximum absolute entry in einsum_ir solution: 38.518
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154327
  time (eval):    0.0418916
  gflops (eval):  121.459
  gflops (total): 117.144
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154327,0.0418916,121.459,117.144

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13259
  gflops (total): 38.3749
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.3749

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432434
  gflops (eval):  117.662
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432434,117.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7955
  maximum absolute entry in einsum_ir solution: 38.7955
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152877
  time (eval):    0.0412139
  gflops (eval):  123.456
  gflops (total): 119.041
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00152877,0.0412139,123.456,119.041

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.134151
  gflops (total): 37.9284
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,37.9284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042873
  gflops (eval):  118.679
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.042873,118.679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8333
  maximum absolute entry in einsum_ir solution: 39.8333
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153596
  time (eval):    0.0433078
  gflops (eval):  117.487
  gflops (total): 113.463
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00153596,0.0433078,117.487,113.463

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131629
  gflops (total): 38.6549
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430465
  gflops (eval):  118.201
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430465,118.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1111
  maximum absolute entry in einsum_ir solution: 45.1111
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152833
  time (eval):    0.0409822
  gflops (eval):  124.154
  gflops (total): 119.691
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00152833,0.0409822,124.154,119.691

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132386
  gflops (total): 38.4338
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.4338

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429769
  gflops (eval):  118.392
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429769,118.392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7986
  maximum absolute entry in einsum_ir solution: 43.7986
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00181072
  time (eval):    0.0419045
  gflops (eval):  121.422
  gflops (total): 116.392
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00181072,0.0419045,121.422,116.392

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131935
  gflops (total): 38.5653
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.5653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431189
  gflops (eval):  118.002
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0431189,118.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9622
  maximum absolute entry in einsum_ir solution: 36.9622
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154507
  time (eval):    0.041813
  gflops (eval):  121.687
  gflops (total): 117.351
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00154507,0.041813,121.687,117.351

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131147
  gflops (total): 38.7971
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433579
  gflops (eval):  117.352
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433579,117.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.8939
  maximum absolute entry in einsum_ir solution: 45.8939
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153922
  time (eval):    0.0455729
  gflops (eval):  111.648
  gflops (total): 108
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153922,0.0455729,111.648,108

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.134072
  gflops (total): 37.9506
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.9506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432316
  gflops (eval):  117.694
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432316,117.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4702
  maximum absolute entry in einsum_ir solution: 40.4702
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155441
  time (eval):    0.0429136
  gflops (eval):  118.567
  gflops (total): 114.422
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155441,0.0429136,118.567,114.422

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132914
  gflops (total): 38.2813
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.2813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427692
  gflops (eval):  118.967
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427692,118.967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3327
  maximum absolute entry in einsum_ir solution: 39.3327
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153888
  time (eval):    0.0436793
  gflops (eval):  116.488
  gflops (total): 112.524
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153888,0.0436793,116.488,112.524

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131865
  gflops (total): 38.5859
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428408
  gflops (eval):  118.768
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428408,118.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9782
  maximum absolute entry in einsum_ir solution: 36.9782
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154861
  time (eval):    0.0460401
  gflops (eval):  110.515
  gflops (total): 106.919
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154861,0.0460401,110.515,106.919

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132397
  gflops (total): 38.4307
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4307

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0423964
  gflops (eval):  120.013
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0423964,120.013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6593
  maximum absolute entry in einsum_ir solution: 37.6593
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00182443
  time (eval):    0.0455927
  gflops (eval):  111.599
  gflops (total): 107.305
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00182443,0.0455927,111.599,107.305

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.135905
  gflops (total): 37.4389
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.4389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430218
  gflops (eval):  118.268
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430218,118.268,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3877
  maximum absolute entry in einsum_ir solution: 38.3877
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0017958
  time (eval):    0.0444522
  gflops (eval):  114.463
  gflops (total): 110.018
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0017958,0.0444522,114.463,110.018

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131484
  gflops (total): 38.6976
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426107
  gflops (eval):  119.409
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426107,119.409,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5132
  maximum absolute entry in einsum_ir solution: 37.5132
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154664
  time (eval):    0.0447047
  gflops (eval):  113.816
  gflops (total): 110.01
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154664,0.0447047,113.816,110.01

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133153
  gflops (total): 38.2126
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.2126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428572
  gflops (eval):  118.722
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428572,118.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6509
  maximum absolute entry in einsum_ir solution: 38.6509
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154361
  time (eval):    0.0426555
  gflops (eval):  119.284
  gflops (total): 115.118
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154361,0.0426555,119.284,115.118

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132439
  gflops (total): 38.4186
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042561
  gflops (eval):  119.549
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.042561,119.549,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7432
  maximum absolute entry in einsum_ir solution: 38.7432
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154773
  time (eval):    0.0437781
  gflops (eval):  116.225
  gflops (total): 112.256
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154773,0.0437781,116.225,112.256

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.135985
  gflops (total): 37.4167
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.4167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433257
  gflops (eval):  117.439
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433257,117.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8547
  maximum absolute entry in einsum_ir solution: 39.8547
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153883
  time (eval):    0.0464602
  gflops (eval):  109.515
  gflops (total): 106.004
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153883,0.0464602,109.515,106.004

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131905
  gflops (total): 38.5742
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429985
  gflops (eval):  118.332
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429985,118.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.35
  maximum absolute entry in einsum_ir solution: 37.35
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154211
  time (eval):    0.042897
  gflops (eval):  118.612
  gflops (total): 114.496
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154211,0.042897,118.612,114.496

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131256
  gflops (total): 38.7647
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7647

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428944
  gflops (eval):  118.62
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428944,118.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2239
  maximum absolute entry in einsum_ir solution: 42.2239
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161081
  time (eval):    0.0450216
  gflops (eval):  113.015
  gflops (total): 109.111
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161081,0.0450216,113.015,109.111

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132528
  gflops (total): 38.3927
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.3927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430721
  gflops (eval):  118.13
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430721,118.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2505
  maximum absolute entry in einsum_ir solution: 39.2505
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154097
  time (eval):    0.0444495
  gflops (eval):  114.47
  gflops (total): 110.634
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154097,0.0444495,114.47,110.634

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131501
  gflops (total): 38.6926
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429978
  gflops (eval):  118.334
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429978,118.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6614
  maximum absolute entry in einsum_ir solution: 38.6614
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154275
  time (eval):    0.0433786
  gflops (eval):  117.296
  gflops (total): 113.267
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154275,0.0433786,117.296,113.267

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131769
  gflops (total): 38.6138
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435468
  gflops (eval):  116.843
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435468,116.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4593
  maximum absolute entry in einsum_ir solution: 38.4593
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154302
  time (eval):    0.0439316
  gflops (eval):  115.819
  gflops (total): 111.889
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154302,0.0439316,115.819,111.889

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133798
  gflops (total): 38.0284
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.0284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431002
  gflops (eval):  118.053
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431002,118.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0536
  maximum absolute entry in einsum_ir solution: 36.0536
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153768
  time (eval):    0.0436437
  gflops (eval):  116.583
  gflops (total): 112.615
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153768,0.0436437,116.583,112.615

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133224
  gflops (total): 38.1923
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427207
  gflops (eval):  119.102
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427207,119.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8092
  maximum absolute entry in einsum_ir solution: 38.8092
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153737
  time (eval):    0.0435613
  gflops (eval):  116.804
  gflops (total): 112.822
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153737,0.0435613,116.804,112.822

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133414
  gflops (total): 38.1378
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437978
  gflops (eval):  116.173
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0437978,116.173,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1557
  maximum absolute entry in einsum_ir solution: 39.1557
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155135
  time (eval):    0.0429805
  gflops (eval):  118.382
  gflops (total): 114.258
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155135,0.0429805,118.382,114.258

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132377
  gflops (total): 38.4365
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428847
  gflops (eval):  118.647
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428847,118.647,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0443
  maximum absolute entry in einsum_ir solution: 38.0443
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153216
  time (eval):    0.0432049
  gflops (eval):  117.767
  gflops (total): 113.734
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153216,0.0432049,117.767,113.734

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132634
  gflops (total): 38.362
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428333
  gflops (eval):  118.789
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428333,118.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0066
  maximum absolute entry in einsum_ir solution: 35.0066
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154145
  time (eval):    0.0433859
  gflops (eval):  117.276
  gflops (total): 113.252
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154145,0.0433859,117.276,113.252

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13315
  gflops (total): 38.2133
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.2133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431446
  gflops (eval):  117.932
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431446,117.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4532
  maximum absolute entry in einsum_ir solution: 40.4532
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154369
  time (eval):    0.0437391
  gflops (eval):  116.329
  gflops (total): 112.363
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154369,0.0437391,116.329,112.363

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132896
  gflops (total): 38.2864
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.2864

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429422
  gflops (eval):  118.487
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429422,118.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.1115
  maximum absolute entry in einsum_ir solution: 46.1115
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152966
  time (eval):    0.0442861
  gflops (eval):  114.892
  gflops (total): 111.056
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00152966,0.0442861,114.892,111.056

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132931
  gflops (total): 38.2763
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.2763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429521
  gflops (eval):  118.46
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429521,118.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1623
  maximum absolute entry in einsum_ir solution: 40.1623
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159252
  time (eval):    0.0435197
  gflops (eval):  116.915
  gflops (total): 112.788
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159252,0.0435197,116.915,112.788

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131708
  gflops (total): 38.6319
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426916
  gflops (eval):  119.183
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426916,119.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4154
  maximum absolute entry in einsum_ir solution: 40.4154
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00178837
  time (eval):    0.0466862
  gflops (eval):  108.986
  gflops (total): 104.965
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00178837,0.0466862,108.986,104.965

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.134823
  gflops (total): 37.7393
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.7393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430842
  gflops (eval):  118.097
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430842,118.097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3935
  maximum absolute entry in einsum_ir solution: 38.3935
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153423
  time (eval):    0.044135
  gflops (eval):  115.285
  gflops (total): 111.412
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153423,0.044135,115.285,111.412

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133223
  gflops (total): 38.1926
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430933
  gflops (eval):  118.072
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430933,118.072,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7534
  maximum absolute entry in einsum_ir solution: 33.7534
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158544
  time (eval):    0.0459902
  gflops (eval):  110.635
  gflops (total): 106.948
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158544,0.0459902,110.635,106.948

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133409
  gflops (total): 38.1393
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426433
  gflops (eval):  119.318
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426433,119.318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.271
  maximum absolute entry in einsum_ir solution: 40.271
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153637
  time (eval):    0.0455464
  gflops (eval):  111.713
  gflops (total): 108.067
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153637,0.0455464,111.713,108.067

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.134316
  gflops (total): 37.8817
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.8817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427828
  gflops (eval):  118.929
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427828,118.929,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.626
  maximum absolute entry in einsum_ir solution: 40.6259
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.001565
  time (eval):    0.0450051
  gflops (eval):  113.057
  gflops (total): 109.257
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.001565,0.0450051,113.057,109.257

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13174
  gflops (total): 38.6223
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429763
  gflops (eval):  118.394
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429763,118.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0065
  maximum absolute entry in einsum_ir solution: 39.0065
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153245
  time (eval):    0.0451899
  gflops (eval):  112.594
  gflops (total): 108.901
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153245,0.0451899,112.594,108.901

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13228
  gflops (total): 38.4646
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429192
  gflops (eval):  118.551
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429192,118.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.142
  maximum absolute entry in einsum_ir solution: 42.142
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152412
  time (eval):    0.044558
  gflops (eval):  114.191
  gflops (total): 110.414
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00152412,0.044558,114.191,110.414

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130893
  gflops (total): 38.8722
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.8722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430482
  gflops (eval):  118.196
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430482,118.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.637
  maximum absolute entry in einsum_ir solution: 39.637
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155734
  time (eval):    0.044415
  gflops (eval):  114.558
  gflops (total): 110.678
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155734,0.044415,114.558,110.678

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132738
  gflops (total): 38.332
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434451
  gflops (eval):  117.116
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434451,117.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.7632
  maximum absolute entry in einsum_ir solution: 40.7632
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015427
  time (eval):    0.045916
  gflops (eval):  110.814
  gflops (total): 107.211
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015427,0.045916,110.814,107.211

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132212
  gflops (total): 38.4845
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4845

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428064
  gflops (eval):  118.864
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428064,118.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1644
  maximum absolute entry in einsum_ir solution: 45.1644
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153509
  time (eval):    0.0435621
  gflops (eval):  116.801
  gflops (total): 112.826
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153509,0.0435621,116.801,112.826

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131417
  gflops (total): 38.7175
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430798
  gflops (eval):  118.109
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430798,118.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8558
  maximum absolute entry in einsum_ir solution: 40.8558
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0017022
  time (eval):    0.0440739
  gflops (eval):  115.445
  gflops (total): 111.152
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0017022,0.0440739,115.445,111.152

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131405
  gflops (total): 38.721
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432389
  gflops (eval):  117.674
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432389,117.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.633
  maximum absolute entry in einsum_ir solution: 40.633
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153718
  time (eval):    0.0451939
  gflops (eval):  112.584
  gflops (total): 108.881
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153718,0.0451939,112.584,108.881

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132095
  gflops (total): 38.5187
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5187

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427263
  gflops (eval):  119.086
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427263,119.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.7153
  maximum absolute entry in einsum_ir solution: 40.7154
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015443
  time (eval):    0.044859
  gflops (eval):  113.425
  gflops (total): 109.65
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015443,0.044859,113.425,109.65

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131886
  gflops (total): 38.5795
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429749
  gflops (eval):  118.397
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429749,118.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1334
  maximum absolute entry in einsum_ir solution: 38.1334
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154499
  time (eval):    0.0445553
  gflops (eval):  114.198
  gflops (total): 110.371
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154499,0.0445553,114.198,110.371

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132062
  gflops (total): 38.5282
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043656
  gflops (eval):  116.55
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043656,116.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3523
  maximum absolute entry in einsum_ir solution: 40.3523
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155169
  time (eval):    0.0437242
  gflops (eval):  116.368
  gflops (total): 112.38
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155169,0.0437242,116.368,112.38

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133825
  gflops (total): 38.0207
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.0207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0425844
  gflops (eval):  119.483
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0425844,119.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5473
  maximum absolute entry in einsum_ir solution: 38.5473
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153552
  time (eval):    0.0448167
  gflops (eval):  113.532
  gflops (total): 109.771
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153552,0.0448167,113.532,109.771

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133485
  gflops (total): 38.1174
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435728
  gflops (eval):  116.773
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435728,116.773,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9988
  maximum absolute entry in einsum_ir solution: 35.9988
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152392
  time (eval):    0.0443537
  gflops (eval):  114.717
  gflops (total): 110.906
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00152392,0.0443537,114.717,110.906

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131781
  gflops (total): 38.6105
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428554
  gflops (eval):  118.728
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428554,118.728,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2503
  maximum absolute entry in einsum_ir solution: 39.2503
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00158023
  time (eval):    0.044596
  gflops (eval):  114.093
  gflops (total): 110.189
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00158023,0.044596,114.093,110.189

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131433
  gflops (total): 38.7125
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426474
  gflops (eval):  119.307
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426474,119.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8896
  maximum absolute entry in einsum_ir solution: 36.8896
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015996
  time (eval):    0.0436678
  gflops (eval):  116.519
  gflops (total): 112.401
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015996,0.0436678,116.519,112.401

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129596
  gflops (total): 39.2615
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.2615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426907
  gflops (eval):  119.186
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426907,119.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1962
  maximum absolute entry in einsum_ir solution: 37.1962
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153777
  time (eval):    0.0445922
  gflops (eval):  114.103
  gflops (total): 110.3
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153777,0.0445922,114.103,110.3

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132107
  gflops (total): 38.5152
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428901
  gflops (eval):  118.632
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428901,118.632,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.7514
  maximum absolute entry in einsum_ir solution: 44.7514
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154343
  time (eval):    0.0430828
  gflops (eval):  118.101
  gflops (total): 114.016
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154343,0.0430828,118.101,114.016

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133274
  gflops (total): 38.1777
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429733
  gflops (eval):  118.402
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429733,118.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5486
  maximum absolute entry in einsum_ir solution: 36.5486
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154088
  time (eval):    0.0457378
  gflops (eval):  111.245
  gflops (total): 107.62
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154088,0.0457378,111.245,107.62

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131769
  gflops (total): 38.6139
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433127
  gflops (eval):  117.474
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433127,117.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2376
  maximum absolute entry in einsum_ir solution: 44.2376
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153208
  time (eval):    0.0452048
  gflops (eval):  112.557
  gflops (total): 108.867
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153208,0.0452048,112.557,108.867

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131626
  gflops (total): 38.6559
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429314
  gflops (eval):  118.517
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429314,118.517,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7242
  maximum absolute entry in einsum_ir solution: 35.7242
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157432
  time (eval):    0.0428804
  gflops (eval):  118.658
  gflops (total): 114.456
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00157432,0.0428804,118.658,114.456

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132306
  gflops (total): 38.4571
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431021
  gflops (eval):  118.048
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431021,118.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8381
  maximum absolute entry in einsum_ir solution: 36.8381
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015406
  time (eval):    0.0433938
  gflops (eval):  117.254
  gflops (total): 113.234
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015406,0.0433938,117.254,113.234

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130332
  gflops (total): 39.0396
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.0396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431221
  gflops (eval):  117.993
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431221,117.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0919
  maximum absolute entry in einsum_ir solution: 38.0919
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154726
  time (eval):    0.0442229
  gflops (eval):  115.056
  gflops (total): 111.167
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154726,0.0442229,115.056,111.167

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132466
  gflops (total): 38.4107
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0424094
  gflops (eval):  119.976
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0424094,119.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4504
  maximum absolute entry in einsum_ir solution: 39.4504
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00172262
  time (eval):    0.113529
  gflops (eval):  44.8179
  gflops (total): 44.148
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00172262,0.113529,44.8179,44.148

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133602
  gflops (total): 38.0842
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.0842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434044
  gflops (eval):  117.226
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434044,117.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8426
  maximum absolute entry in einsum_ir solution: 38.8426
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00152394
  time (eval):    0.0459393
  gflops (eval):  110.757
  gflops (total): 107.201
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00152394,0.0459393,110.757,107.201

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132399
  gflops (total): 38.4302
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431911
  gflops (eval):  117.805
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431911,117.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3655
  maximum absolute entry in einsum_ir solution: 38.3655
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153647
  time (eval):    0.0443666
  gflops (eval):  114.684
  gflops (total): 110.845
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153647,0.0443666,114.684,110.845

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132274
  gflops (total): 38.4666
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429654
  gflops (eval):  118.424
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429654,118.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7231
  maximum absolute entry in einsum_ir solution: 38.7231
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153807
  time (eval):    0.0436402
  gflops (eval):  116.592
  gflops (total): 112.623
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153807,0.0436402,116.592,112.623

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131623
  gflops (total): 38.6567
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426383
  gflops (eval):  119.332
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426383,119.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7619
  maximum absolute entry in einsum_ir solution: 37.7619
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015285
  time (eval):    0.0449291
  gflops (eval):  113.248
  gflops (total): 109.522
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015285,0.0449291,113.248,109.522

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131132
  gflops (total): 38.8013
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.8013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427507
  gflops (eval):  119.018
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427507,119.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2121
  maximum absolute entry in einsum_ir solution: 41.2121
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154475
  time (eval):    0.0444702
  gflops (eval):  114.416
  gflops (total): 110.575
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154475,0.0444702,114.416,110.575

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131787
  gflops (total): 38.6086
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427294
  gflops (eval):  119.078
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427294,119.078,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6814
  maximum absolute entry in einsum_ir solution: 37.6814
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156123
  time (eval):    0.0438587
  gflops (eval):  116.012
  gflops (total): 112.024
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156123,0.0438587,116.012,112.024

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.155087
  gflops (total): 32.8081
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,32.8081

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428744
  gflops (eval):  118.675
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428744,118.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.652
  maximum absolute entry in einsum_ir solution: 37.652
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155965
  time (eval):    0.0456166
  gflops (eval):  111.541
  gflops (total): 107.853
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155965,0.0456166,111.541,107.853

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132447
  gflops (total): 38.4163
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431169
  gflops (eval):  118.007
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431169,118.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3354
  maximum absolute entry in einsum_ir solution: 36.3354
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153887
  time (eval):    0.0431931
  gflops (eval):  117.799
  gflops (total): 113.747
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153887,0.0431931,117.799,113.747

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.142548
  gflops (total): 35.6942
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,35.6942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430562
  gflops (eval):  118.174
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430562,118.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9119
  maximum absolute entry in einsum_ir solution: 39.9119
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154392
  time (eval):    0.045511
  gflops (eval):  111.8
  gflops (total): 108.132
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154392,0.045511,111.8,108.132

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132018
  gflops (total): 38.541
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428957
  gflops (eval):  118.616
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428957,118.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4931
  maximum absolute entry in einsum_ir solution: 42.4931
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154167
  time (eval):    0.0438626
  gflops (eval):  116.001
  gflops (total): 112.063
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154167,0.0438626,116.001,112.063

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133446
  gflops (total): 38.1288
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431613
  gflops (eval):  117.886
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431613,117.886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2357
  maximum absolute entry in einsum_ir solution: 36.2357
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015436
  time (eval):    0.0429358
  gflops (eval):  118.505
  gflops (total): 114.393
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015436,0.0429358,118.505,114.393

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13139
  gflops (total): 38.7252
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431371
  gflops (eval):  117.952
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431371,117.952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8019
  maximum absolute entry in einsum_ir solution: 38.8019
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015416
  time (eval):    0.0441871
  gflops (eval):  115.149
  gflops (total): 111.267
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015416,0.0441871,115.149,111.267

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133381
  gflops (total): 38.1474
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.042706
  gflops (eval):  119.143
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.042706,119.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.231
  maximum absolute entry in einsum_ir solution: 42.231
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00165352
  time (eval):    0.0445368
  gflops (eval):  114.245
  gflops (total): 110.155
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00165352,0.0445368,114.245,110.155

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132068
  gflops (total): 38.5266
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429211
  gflops (eval):  118.546
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429211,118.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3476
  maximum absolute entry in einsum_ir solution: 37.3476
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153273
  time (eval):    0.0439245
  gflops (eval):  115.838
  gflops (total): 111.932
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153273,0.0439245,115.838,111.932

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13202
  gflops (total): 38.5406
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428525
  gflops (eval):  118.736
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428525,118.736,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3465
  maximum absolute entry in einsum_ir solution: 38.3465
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153521
  time (eval):    0.0451663
  gflops (eval):  112.653
  gflops (total): 108.95
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153521,0.0451663,112.653,108.95

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132372
  gflops (total): 38.4381
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428479
  gflops (eval):  118.748
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428479,118.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2474
  maximum absolute entry in einsum_ir solution: 38.2474
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153421
  time (eval):    0.0458241
  gflops (eval):  111.036
  gflops (total): 107.439
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153421,0.0458241,111.036,107.439

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13366
  gflops (total): 38.0677
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.0677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426811
  gflops (eval):  119.212
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426811,119.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.424
  maximum absolute entry in einsum_ir solution: 41.424
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015311
  time (eval):    0.0425713
  gflops (eval):  119.52
  gflops (total): 115.37
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015311,0.0425713,119.52,115.37

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131582
  gflops (total): 38.6689
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430139
  gflops (eval):  118.29
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430139,118.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8885
  maximum absolute entry in einsum_ir solution: 39.8885
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154379
  time (eval):    0.0436838
  gflops (eval):  116.476
  gflops (total): 112.5
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154379,0.0436838,116.476,112.5

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132054
  gflops (total): 38.5305
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427558
  gflops (eval):  119.004
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427558,119.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5631
  maximum absolute entry in einsum_ir solution: 42.5631
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161119
  time (eval):    0.0441193
  gflops (eval):  115.326
  gflops (total): 111.263
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161119,0.0441193,115.326,111.263

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132428
  gflops (total): 38.4217
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431544
  gflops (eval):  117.905
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431544,117.905,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9862
  maximum absolute entry in einsum_ir solution: 38.9862
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156742
  time (eval):    0.0435741
  gflops (eval):  116.769
  gflops (total): 112.715
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156742,0.0435741,116.769,112.715

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.134068
  gflops (total): 37.9518
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.9518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427272
  gflops (eval):  119.084
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427272,119.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8914
  maximum absolute entry in einsum_ir solution: 42.8914
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155185
  time (eval):    0.0438895
  gflops (eval):  115.93
  gflops (total): 111.971
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155185,0.0438895,115.93,111.971

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131517
  gflops (total): 38.6879
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430347
  gflops (eval):  118.233
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430347,118.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4469
  maximum absolute entry in einsum_ir solution: 39.4469
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155257
  time (eval):    0.0432942
  gflops (eval):  117.524
  gflops (total): 113.456
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155257,0.0432942,117.524,113.456

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133992
  gflops (total): 37.9732
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.9732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428248
  gflops (eval):  118.812
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428248,118.812,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.303
  maximum absolute entry in einsum_ir solution: 38.303
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153268
  time (eval):    0.0445451
  gflops (eval):  114.224
  gflops (total): 110.425
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153268,0.0445451,114.224,110.425

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132029
  gflops (total): 38.538
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430002
  gflops (eval):  118.328
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430002,118.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8321
  maximum absolute entry in einsum_ir solution: 37.8321
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155292
  time (eval):    0.0436809
  gflops (eval):  116.484
  gflops (total): 112.485
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155292,0.0436809,116.484,112.485

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132833
  gflops (total): 38.3046
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.3046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426813
  gflops (eval):  119.212
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426813,119.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.093
  maximum absolute entry in einsum_ir solution: 38.093
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153092
  time (eval):    0.0438886
  gflops (eval):  115.933
  gflops (total): 112.025
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153092,0.0438886,115.933,112.025

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131682
  gflops (total): 38.6395
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430621
  gflops (eval):  118.158
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430621,118.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2891
  maximum absolute entry in einsum_ir solution: 44.2891
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00179134
  time (eval):    0.0428923
  gflops (eval):  118.625
  gflops (total): 113.87
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00179134,0.0428923,118.625,113.87

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131381
  gflops (total): 38.7281
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426324
  gflops (eval):  119.349
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426324,119.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9885
  maximum absolute entry in einsum_ir solution: 37.9885
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153932
  time (eval):    0.0451491
  gflops (eval):  112.696
  gflops (total): 108.98
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153932,0.0451491,112.696,108.98

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131281
  gflops (total): 38.7573
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427009
  gflops (eval):  119.157
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427009,119.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.016
  maximum absolute entry in einsum_ir solution: 42.016
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154221
  time (eval):    0.04456
  gflops (eval):  114.186
  gflops (total): 110.366
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154221,0.04456,114.186,110.366

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130865
  gflops (total): 38.8806
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.8806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427932
  gflops (eval):  118.9
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427932,118.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2955
  maximum absolute entry in einsum_ir solution: 40.2955
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00151444
  time (eval):    0.0449187
  gflops (eval):  113.274
  gflops (total): 109.579
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00151444,0.0449187,113.274,109.579

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131561
  gflops (total): 38.675
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427135
  gflops (eval):  119.122
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427135,119.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6935
  maximum absolute entry in einsum_ir solution: 38.6935
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153318
  time (eval):    0.0434226
  gflops (eval):  117.177
  gflops (total): 113.18
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153318,0.0434226,117.177,113.18

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13173
  gflops (total): 38.6254
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.6254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426109
  gflops (eval):  119.409
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426109,119.409,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1855
  maximum absolute entry in einsum_ir solution: 40.1855
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015368
  time (eval):    0.044977
  gflops (eval):  113.127
  gflops (total): 109.389
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015368,0.044977,113.127,109.389

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133859
  gflops (total): 38.0109
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.0109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434704
  gflops (eval):  117.048
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434704,117.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4786
  maximum absolute entry in einsum_ir solution: 37.4786
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015371
  time (eval):    0.0461922
  gflops (eval):  110.151
  gflops (total): 106.604
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015371,0.0461922,110.151,106.604

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132324
  gflops (total): 38.4519
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4519

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428711
  gflops (eval):  118.684
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428711,118.684,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5228
  maximum absolute entry in einsum_ir solution: 39.5228
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153889
  time (eval):    0.0446396
  gflops (eval):  113.982
  gflops (total): 110.184
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153889,0.0446396,113.982,110.184

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132873
  gflops (total): 38.2932
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.2932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428871
  gflops (eval):  118.64
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428871,118.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5274
  maximum absolute entry in einsum_ir solution: 42.5274
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154303
  time (eval):    0.0445851
  gflops (eval):  114.121
  gflops (total): 110.304
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154303,0.0445851,114.121,110.304

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130638
  gflops (total): 38.9483
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.9483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428352
  gflops (eval):  118.784
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428352,118.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7909
  maximum absolute entry in einsum_ir solution: 34.7909
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154053
  time (eval):    0.0463772
  gflops (eval):  109.712
  gflops (total): 106.184
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154053,0.0463772,109.712,106.184

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132298
  gflops (total): 38.4596
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429494
  gflops (eval):  118.468
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429494,118.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8099
  maximum absolute entry in einsum_ir solution: 40.8099
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153989
  time (eval):    0.0439097
  gflops (eval):  115.877
  gflops (total): 111.951
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153989,0.0439097,115.877,111.951

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133709
  gflops (total): 38.0536
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.0536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0426265
  gflops (eval):  119.365
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0426265,119.365,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7536
  maximum absolute entry in einsum_ir solution: 36.7536
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154859
  time (eval):    0.0436489
  gflops (eval):  116.569
  gflops (total): 112.575
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154859,0.0436489,116.569,112.575

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.135788
  gflops (total): 37.471
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429839
  gflops (eval):  118.373
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429839,118.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6131
  maximum absolute entry in einsum_ir solution: 42.6131
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155573
  time (eval):    0.0428621
  gflops (eval):  118.709
  gflops (total): 114.551
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155573,0.0428621,118.709,114.551

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132983
  gflops (total): 38.2614
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.2614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430168
  gflops (eval):  118.282
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430168,118.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1485
  maximum absolute entry in einsum_ir solution: 34.1485
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.001549
  time (eval):    0.0444749
  gflops (eval):  114.404
  gflops (total): 110.554
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.001549,0.0444749,114.404,110.554

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131219
  gflops (total): 38.7758
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7758

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431349
  gflops (eval):  117.958
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431349,117.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5196
  maximum absolute entry in einsum_ir solution: 38.5196
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015456
  time (eval):    0.0438198
  gflops (eval):  116.115
  gflops (total): 112.159
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015456,0.0438198,116.115,112.159

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132207
  gflops (total): 38.4859
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427617
  gflops (eval):  118.988
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427617,118.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3071
  maximum absolute entry in einsum_ir solution: 38.3071
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156428
  time (eval):    0.0429925
  gflops (eval):  118.349
  gflops (total): 114.194
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156428,0.0429925,118.349,114.194

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.134499
  gflops (total): 37.83
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430535
  gflops (eval):  118.181
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0430535,118.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8092
  maximum absolute entry in einsum_ir solution: 38.8092
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153414
  time (eval):    0.0444165
  gflops (eval):  114.555
  gflops (total): 110.73
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153414,0.0444165,114.555,110.73

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.135448
  gflops (total): 37.5651
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,37.5651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431305
  gflops (eval):  117.97
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431305,117.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7343
  maximum absolute entry in einsum_ir solution: 38.7343
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153914
  time (eval):    0.0436235
  gflops (eval):  116.637
  gflops (total): 112.662
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153914,0.0436235,116.637,112.662

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132304
  gflops (total): 38.4579
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429302
  gflops (eval):  118.521
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429302,118.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.95
  maximum absolute entry in einsum_ir solution: 40.95
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154716
  time (eval):    0.0438847
  gflops (eval):  115.943
  gflops (total): 111.995
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154716,0.0438847,115.943,111.995

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132841
  gflops (total): 38.3022
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.3022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0428176
  gflops (eval):  118.832
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0428176,118.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9323
  maximum absolute entry in einsum_ir solution: 39.9323
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00155522
  time (eval):    0.044171
  gflops (eval):  115.191
  gflops (total): 111.274
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00155522,0.044171,115.191,111.274

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131711
  gflops (total): 38.631
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043573
  gflops (eval):  116.772
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043573,116.772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2332
  maximum absolute entry in einsum_ir solution: 43.2332
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139969
  time (eval):    0.0460983
  gflops (eval):  110.375
  gflops (total): 107.123
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139969,0.0460983,110.375,107.123

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132096
  gflops (total): 38.5182
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.5182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0427099
  gflops (eval):  119.132
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0427099,119.132,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7798
  maximum absolute entry in einsum_ir solution: 38.7798
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153581
  time (eval):    0.0433131
  gflops (eval):  117.473
  gflops (total): 113.45
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153581,0.0433131,117.473,113.45

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13306
  gflops (total): 38.2392
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.2392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433723
  gflops (eval):  117.313
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433723,117.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2874
  maximum absolute entry in einsum_ir solution: 39.2874
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00159237
  time (eval):    0.104614
  gflops (eval):  48.6371
  gflops (total): 47.9079
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00159237,0.104614,48.6371,47.9079

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128424
  gflops (total): 39.6197
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429624
  gflops (eval):  118.432
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429624,118.432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0802
  maximum absolute entry in einsum_ir solution: 39.0802
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00154431
  time (eval):    0.0465825
  gflops (eval):  109.228
  gflops (total): 105.723
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00154431,0.0465825,109.228,105.723

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.132232
  gflops (total): 38.4787
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.4787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429386
  gflops (eval):  118.497
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429386,118.497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7612
  maximum absolute entry in einsum_ir solution: 38.7612
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00153199
  time (eval):    0.0447207
  gflops (eval):  113.775
  gflops (total): 110.007
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00153199,0.0447207,113.775,110.007

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131369
  gflops (total): 38.7314
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429396
  gflops (eval):  118.495
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0429396,118.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8159
  maximum absolute entry in einsum_ir solution: 38.8159
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138545
  time (eval):    0.023028
  gflops (eval):  154.103
  gflops (total): 145.358
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138545,0.023028,154.103,145.358

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122695
  gflops (total): 28.9227
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348529
  gflops (eval):  101.819
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348529,101.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0395
  maximum absolute entry in einsum_ir solution: 57.0395
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013752
  time (eval):    0.0244738
  gflops (eval):  144.999
  gflops (total): 137.285
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013752,0.0244738,144.999,137.285

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123238
  gflops (total): 28.7952
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346776
  gflops (eval):  102.333
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346776,102.333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8411
  maximum absolute entry in einsum_ir solution: 56.8411
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138098
  time (eval):    0.0243756
  gflops (eval):  145.583
  gflops (total): 137.777
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138098,0.0243756,145.583,137.777

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12244
  gflops (total): 28.9829
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0351592
  gflops (eval):  100.932
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0351592,100.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8566
  maximum absolute entry in einsum_ir solution: 55.8566
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139697
  time (eval):    0.0236828
  gflops (eval):  149.842
  gflops (total): 141.495
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139697,0.0236828,149.842,141.495

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123823
  gflops (total): 28.6592
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0334836
  gflops (eval):  105.983
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0334836,105.983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8381
  maximum absolute entry in einsum_ir solution: 54.8381
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138133
  time (eval):    0.0227015
  gflops (eval):  156.319
  gflops (total): 147.353
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138133,0.0227015,156.319,147.353

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123004
  gflops (total): 28.8501
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340935
  gflops (eval):  104.086
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340935,104.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9297
  maximum absolute entry in einsum_ir solution: 61.9297
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143775
  time (eval):    0.023876
  gflops (eval):  148.63
  gflops (total): 140.188
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143775,0.023876,148.63,140.188

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123585
  gflops (total): 28.7145
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346839
  gflops (eval):  102.315
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346839,102.315,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0287
  maximum absolute entry in einsum_ir solution: 57.0287
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00136665
  time (eval):    0.0246469
  gflops (eval):  143.981
  gflops (total): 136.417
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00136665,0.0246469,143.981,136.417

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123087
  gflops (total): 28.8306
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0330092
  gflops (eval):  107.506
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0330092,107.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.372
  maximum absolute entry in einsum_ir solution: 60.372
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138845
  time (eval):    0.0226976
  gflops (eval):  156.346
  gflops (total): 147.333
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138845,0.0226976,156.346,147.333

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123622
  gflops (total): 28.7059
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034486
  gflops (eval):  102.902
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034486,102.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7555
  maximum absolute entry in einsum_ir solution: 58.7555
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142972
  time (eval):    0.0244638
  gflops (eval):  145.058
  gflops (total): 137.049
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142972,0.0244638,145.058,137.049

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123254
  gflops (total): 28.7917
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0329396
  gflops (eval):  107.733
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0329396,107.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6034
  maximum absolute entry in einsum_ir solution: 60.6034
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138068
  time (eval):    0.0235233
  gflops (eval):  150.858
  gflops (total): 142.494
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138068,0.0235233,150.858,142.494

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123617
  gflops (total): 28.707
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345243
  gflops (eval):  102.788
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345243,102.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8249
  maximum absolute entry in einsum_ir solution: 55.8249
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138822
  time (eval):    0.0233833
  gflops (eval):  151.761
  gflops (total): 143.256
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138822,0.0233833,151.761,143.256

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123468
  gflops (total): 28.7416
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345258
  gflops (eval):  102.783
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345258,102.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1495
  maximum absolute entry in einsum_ir solution: 59.1495
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138939
  time (eval):    0.0232589
  gflops (eval):  152.573
  gflops (total): 143.972
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138939,0.0232589,152.573,143.972

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123567
  gflops (total): 28.7186
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347273
  gflops (eval):  102.187
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347273,102.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.498
  maximum absolute entry in einsum_ir solution: 57.498
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137981
  time (eval):    0.0242946
  gflops (eval):  146.068
  gflops (total): 138.218
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137981,0.0242946,146.068,138.218

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123681
  gflops (total): 28.6922
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344568
  gflops (eval):  102.989
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344568,102.989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4267
  maximum absolute entry in einsum_ir solution: 56.4267
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138391
  time (eval):    0.0242159
  gflops (eval):  146.543
  gflops (total): 138.621
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138391,0.0242159,146.543,138.621

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12322
  gflops (total): 28.7995
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344018
  gflops (eval):  103.154
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344018,103.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.1582
  maximum absolute entry in einsum_ir solution: 64.1582
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141634
  time (eval):    0.0238035
  gflops (eval):  149.082
  gflops (total): 140.71
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141634,0.0238035,149.082,140.71

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12353
  gflops (total): 28.7272
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346096
  gflops (eval):  102.534
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346096,102.534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8025
  maximum absolute entry in einsum_ir solution: 55.8025
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138562
  time (eval):    0.0229977
  gflops (eval):  154.306
  gflops (total): 145.537
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138562,0.0229977,154.306,145.537

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124404
  gflops (total): 28.5254
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.5254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340821
  gflops (eval):  104.121
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340821,104.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2661
  maximum absolute entry in einsum_ir solution: 55.2661
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137814
  time (eval):    0.0244484
  gflops (eval):  145.149
  gflops (total): 137.404
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137814,0.0244484,145.149,137.404

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123106
  gflops (total): 28.8262
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8262

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344966
  gflops (eval):  102.87
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344966,102.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.1091
  maximum absolute entry in einsum_ir solution: 63.1091
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138354
  time (eval):    0.0233225
  gflops (eval):  152.157
  gflops (total): 143.636
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138354,0.0233225,152.157,143.636

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123818
  gflops (total): 28.6605
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034512
  gflops (eval):  102.824
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034512,102.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3068
  maximum absolute entry in einsum_ir solution: 55.3068
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00140046
  time (eval):    0.0230122
  gflops (eval):  154.208
  gflops (total): 145.362
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00140046,0.0230122,154.208,145.362

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123397
  gflops (total): 28.7583
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344456
  gflops (eval):  103.023
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344456,103.023,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2458
  maximum absolute entry in einsum_ir solution: 60.2458
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139536
  time (eval):    0.0231713
  gflops (eval):  153.15
  gflops (total): 144.451
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139536,0.0231713,153.15,144.451

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123419
  gflops (total): 28.753
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034476
  gflops (eval):  102.932
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034476,102.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.749
  maximum absolute entry in einsum_ir solution: 60.749
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00149363
  time (eval):    0.0229094
  gflops (eval):  154.901
  gflops (total): 145.42
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00149363,0.0229094,154.901,145.42

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123225
  gflops (total): 28.7983
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347238
  gflops (eval):  102.197
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347238,102.197,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7916
  maximum absolute entry in einsum_ir solution: 55.7916
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138063
  time (eval):    0.0232893
  gflops (eval):  152.374
  gflops (total): 143.846
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138063,0.0232893,152.374,143.846

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124601
  gflops (total): 28.4804
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.4804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0330776
  gflops (eval):  107.283
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0330776,107.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5416
  maximum absolute entry in einsum_ir solution: 53.5416
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139234
  time (eval):    0.0244617
  gflops (eval):  145.071
  gflops (total): 137.258
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139234,0.0244617,145.071,137.258

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123128
  gflops (total): 28.821
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343403
  gflops (eval):  103.339
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343403,103.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0004
  maximum absolute entry in einsum_ir solution: 58.0004
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139071
  time (eval):    0.0231334
  gflops (eval):  153.401
  gflops (total): 144.702
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139071,0.0231334,153.401,144.702

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124308
  gflops (total): 28.5474
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.5474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346728
  gflops (eval):  102.347
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346728,102.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0616
  maximum absolute entry in einsum_ir solution: 56.0616
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00136729
  time (eval):    0.0233868
  gflops (eval):  151.739
  gflops (total): 143.357
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00136729,0.0233868,151.739,143.357

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123151
  gflops (total): 28.8156
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346613
  gflops (eval):  102.381
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346613,102.381,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.793
  maximum absolute entry in einsum_ir solution: 59.793
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00140263
  time (eval):    0.0241572
  gflops (eval):  146.899
  gflops (total): 138.838
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00140263,0.0241572,146.899,138.838

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123564
  gflops (total): 28.7194
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7194

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340105
  gflops (eval):  104.341
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340105,104.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2802
  maximum absolute entry in einsum_ir solution: 58.2802
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137571
  time (eval):    0.0247042
  gflops (eval):  143.647
  gflops (total): 136.069
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137571,0.0247042,143.647,136.069

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123541
  gflops (total): 28.7247
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0351033
  gflops (eval):  101.092
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0351033,101.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.9578
  maximum absolute entry in einsum_ir solution: 52.9578
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142721
  time (eval):    0.0226113
  gflops (eval):  156.943
  gflops (total): 147.625
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142721,0.0226113,156.943,147.625

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124954
  gflops (total): 28.3999
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.3999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347298
  gflops (eval):  102.18
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347298,102.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1524
  maximum absolute entry in einsum_ir solution: 61.1524
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138139
  time (eval):    0.022794
  gflops (eval):  155.685
  gflops (total): 146.789
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138139,0.022794,155.685,146.789

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12354
  gflops (total): 28.7249
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348163
  gflops (eval):  101.926
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348163,101.926,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4394
  maximum absolute entry in einsum_ir solution: 56.4394
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138614
  time (eval):    0.0235312
  gflops (eval):  150.807
  gflops (total): 142.418
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138614,0.0235312,150.807,142.418

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127666
  gflops (total): 27.7965
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.7965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344413
  gflops (eval):  103.036
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344413,103.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8557
  maximum absolute entry in einsum_ir solution: 56.8557
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138628
  time (eval):    0.0252507
  gflops (eval):  140.538
  gflops (total): 133.223
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138628,0.0252507,140.538,133.223

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123048
  gflops (total): 28.8398
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0334337
  gflops (eval):  106.141
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0334337,106.141,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3138
  maximum absolute entry in einsum_ir solution: 58.3138
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139332
  time (eval):    0.023169
  gflops (eval):  153.165
  gflops (total): 144.476
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139332,0.023169,153.165,144.476

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123613
  gflops (total): 28.708
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0337621
  gflops (eval):  105.108
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0337621,105.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9512
  maximum absolute entry in einsum_ir solution: 54.9512
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142361
  time (eval):    0.0235187
  gflops (eval):  150.888
  gflops (total): 142.276
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142361,0.0235187,150.888,142.276

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123323
  gflops (total): 28.7755
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348469
  gflops (eval):  101.836
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348469,101.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6605
  maximum absolute entry in einsum_ir solution: 54.6605
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00167578
  time (eval):    0.0229642
  gflops (eval):  154.531
  gflops (total): 144.021
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00167578,0.0229642,154.531,144.021

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123159
  gflops (total): 28.8138
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341548
  gflops (eval):  103.9
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341548,103.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8776
  maximum absolute entry in einsum_ir solution: 57.8776
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138579
  time (eval):    0.0242145
  gflops (eval):  146.552
  gflops (total): 138.619
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138579,0.0242145,146.552,138.619

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122757
  gflops (total): 28.9082
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034669
  gflops (eval):  102.359
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034669,102.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3971
  maximum absolute entry in einsum_ir solution: 55.3971
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138925
  time (eval):    0.0239018
  gflops (eval):  148.469
  gflops (total): 140.313
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138925,0.0239018,148.469,140.313

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123641
  gflops (total): 28.7014
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342761
  gflops (eval):  103.532
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342761,103.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2758
  maximum absolute entry in einsum_ir solution: 55.2758
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.001595
  time (eval):    0.0232952
  gflops (eval):  152.335
  gflops (total): 142.573
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.001595,0.0232952,152.335,142.573

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124123
  gflops (total): 28.59
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338264
  gflops (eval):  104.909
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338264,104.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3816
  maximum absolute entry in einsum_ir solution: 59.3816
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139859
  time (eval):    0.0236241
  gflops (eval):  150.214
  gflops (total): 141.818
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139859,0.0236241,150.214,141.818

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122538
  gflops (total): 28.9599
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0332533
  gflops (eval):  106.717
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0332533,106.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0747
  maximum absolute entry in einsum_ir solution: 58.0747
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138843
  time (eval):    0.0241655
  gflops (eval):  146.849
  gflops (total): 138.87
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138843,0.0241655,146.849,138.87

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123072
  gflops (total): 28.8342
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343899
  gflops (eval):  103.189
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343899,103.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1421
  maximum absolute entry in einsum_ir solution: 57.1421
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138648
  time (eval):    0.0229413
  gflops (eval):  154.685
  gflops (total): 145.869
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138648,0.0229413,154.685,145.869

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123323
  gflops (total): 28.7754
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0351921
  gflops (eval):  100.837
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0351921,100.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7687
  maximum absolute entry in einsum_ir solution: 52.7687
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00140876
  time (eval):    0.0227395
  gflops (eval):  156.058
  gflops (total): 146.953
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00140876,0.0227395,156.058,146.953

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123156
  gflops (total): 28.8146
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343101
  gflops (eval):  103.429
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343101,103.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.8062
  maximum absolute entry in einsum_ir solution: 63.8062
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137587
  time (eval):    0.0248182
  gflops (eval):  142.987
  gflops (total): 135.476
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137587,0.0248182,142.987,135.476

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123449
  gflops (total): 28.7461
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344372
  gflops (eval):  103.048
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344372,103.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0268
  maximum absolute entry in einsum_ir solution: 56.0268
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00135399
  time (eval):    0.022966
  gflops (eval):  154.518
  gflops (total): 145.916
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00135399,0.022966,154.518,145.916

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124246
  gflops (total): 28.5617
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.5617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0353589
  gflops (eval):  100.362
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0353589,100.362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6356
  maximum absolute entry in einsum_ir solution: 58.6356
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138064
  time (eval):    0.027553
  gflops (eval):  128.794
  gflops (total): 122.649
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138064,0.027553,128.794,122.649

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122609
  gflops (total): 28.9431
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0330684
  gflops (eval):  107.313
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0330684,107.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6457
  maximum absolute entry in einsum_ir solution: 55.6457
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138125
  time (eval):    0.024238
  gflops (eval):  146.41
  gflops (total): 138.516
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138125,0.024238,146.41,138.516

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126455
  gflops (total): 28.0629
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349376
  gflops (eval):  101.572
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349376,101.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.8921
  maximum absolute entry in einsum_ir solution: 63.8921
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138274
  time (eval):    0.0226184
  gflops (eval):  156.894
  gflops (total): 147.855
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138274,0.0226184,156.894,147.855

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122841
  gflops (total): 28.8883
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346927
  gflops (eval):  102.289
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346927,102.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3369
  maximum absolute entry in einsum_ir solution: 56.3369
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138968
  time (eval):    0.0226413
  gflops (eval):  156.734
  gflops (total): 147.671
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138968,0.0226413,156.734,147.671

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123266
  gflops (total): 28.7888
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345246
  gflops (eval):  102.787
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345246,102.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3782
  maximum absolute entry in einsum_ir solution: 59.3782
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137578
  time (eval):    0.023529
  gflops (eval):  150.821
  gflops (total): 142.49
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137578,0.023529,150.821,142.49

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123159
  gflops (total): 28.8139
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343192
  gflops (eval):  103.402
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343192,103.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1624
  maximum absolute entry in einsum_ir solution: 56.1624
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137729
  time (eval):    0.0237007
  gflops (eval):  149.729
  gflops (total): 141.505
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137729,0.0237007,149.729,141.505

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123264
  gflops (total): 28.7892
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344521
  gflops (eval):  103.003
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344521,103.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5485
  maximum absolute entry in einsum_ir solution: 59.5485
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137532
  time (eval):    0.0228299
  gflops (eval):  155.44
  gflops (total): 146.608
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137532,0.0228299,155.44,146.608

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123089
  gflops (total): 28.8302
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338026
  gflops (eval):  104.982
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338026,104.982,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1307
  maximum absolute entry in einsum_ir solution: 54.1307
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139129
  time (eval):    0.0229931
  gflops (eval):  154.336
  gflops (total): 145.531
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139129,0.0229931,154.336,145.531

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123424
  gflops (total): 28.752
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033891
  gflops (eval):  104.708
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033891,104.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1124
  maximum absolute entry in einsum_ir solution: 57.1124
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139012
  time (eval):    0.0234422
  gflops (eval):  151.38
  gflops (total): 142.905
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139012,0.0234422,151.38,142.905

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122643
  gflops (total): 28.9349
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9349

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344018
  gflops (eval):  103.154
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344018,103.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1631
  maximum absolute entry in einsum_ir solution: 57.1631
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139059
  time (eval):    0.0223235
  gflops (eval):  158.966
  gflops (total): 149.644
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139059,0.0223235,158.966,149.644

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123944
  gflops (total): 28.6312
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6312

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349531
  gflops (eval):  101.527
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349531,101.527,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8198
  maximum absolute entry in einsum_ir solution: 57.8198
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143573
  time (eval):    0.0223462
  gflops (eval):  158.804
  gflops (total): 149.217
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143573,0.0223462,158.804,149.217

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124179
  gflops (total): 28.5771
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.5771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345882
  gflops (eval):  102.598
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345882,102.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8597
  maximum absolute entry in einsum_ir solution: 56.8597
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137984
  time (eval):    0.0234621
  gflops (eval):  151.252
  gflops (total): 142.85
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137984,0.0234621,151.252,142.85

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123282
  gflops (total): 28.7851
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034526
  gflops (eval):  102.783
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034526,102.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9054
  maximum absolute entry in einsum_ir solution: 54.9054
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137817
  time (eval):    0.0234998
  gflops (eval):  151.009
  gflops (total): 142.644
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137817,0.0234998,151.009,142.644

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123462
  gflops (total): 28.743
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342488
  gflops (eval):  103.615
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342488,103.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3375
  maximum absolute entry in einsum_ir solution: 59.3375
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137316
  time (eval):    0.0231904
  gflops (eval):  153.023
  gflops (total): 144.469
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137316,0.0231904,153.023,144.469

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123722
  gflops (total): 28.6828
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343086
  gflops (eval):  103.434
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343086,103.434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5708
  maximum absolute entry in einsum_ir solution: 57.5708
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137928
  time (eval):    0.0228188
  gflops (eval):  155.515
  gflops (total): 146.651
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137928,0.0228188,155.515,146.651

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124231
  gflops (total): 28.5653
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.5653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034972
  gflops (eval):  101.472
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034972,101.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9993
  maximum absolute entry in einsum_ir solution: 55.9993
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139079
  time (eval):    0.0236878
  gflops (eval):  149.81
  gflops (total): 141.502
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139079,0.0236878,149.81,141.502

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.1238
  gflops (total): 28.6645
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341777
  gflops (eval):  103.83
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341777,103.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2324
  maximum absolute entry in einsum_ir solution: 56.2324
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137679
  time (eval):    0.0241319
  gflops (eval):  147.053
  gflops (total): 139.116
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137679,0.0241319,147.053,139.116

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122876
  gflops (total): 28.8801
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341527
  gflops (eval):  103.906
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341527,103.906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0409
  maximum absolute entry in einsum_ir solution: 60.0409
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143702
  time (eval):    0.0236542
  gflops (eval):  150.023
  gflops (total): 141.431
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143702,0.0236542,150.023,141.431

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123143
  gflops (total): 28.8174
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340302
  gflops (eval):  104.28
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340302,104.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1342
  maximum absolute entry in einsum_ir solution: 57.1342
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139428
  time (eval):    0.0248567
  gflops (eval):  142.765
  gflops (total): 135.183
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139428,0.0248567,142.765,135.183

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123219
  gflops (total): 28.7997
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7997

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342565
  gflops (eval):  103.591
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342565,103.591,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4766
  maximum absolute entry in einsum_ir solution: 56.4766
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.001424
  time (eval):    0.023275
  gflops (eval):  152.467
  gflops (total): 143.677
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.001424,0.023275,152.467,143.677

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124115
  gflops (total): 28.592
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345877
  gflops (eval):  102.599
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345877,102.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9183
  maximum absolute entry in einsum_ir solution: 56.9183
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137585
  time (eval):    0.0242316
  gflops (eval):  146.448
  gflops (total): 138.58
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137585,0.0242316,146.448,138.58

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123188
  gflops (total): 28.807
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0330876
  gflops (eval):  107.251
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0330876,107.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5527
  maximum absolute entry in einsum_ir solution: 56.5527
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139405
  time (eval):    0.0250637
  gflops (eval):  141.586
  gflops (total): 134.126
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139405,0.0250637,141.586,134.126

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12392
  gflops (total): 28.6367
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339913
  gflops (eval):  104.4
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339913,104.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5122
  maximum absolute entry in einsum_ir solution: 58.5122
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137106
  time (eval):    0.0233087
  gflops (eval):  152.247
  gflops (total): 143.789
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137106,0.0233087,152.247,143.789

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123011
  gflops (total): 28.8485
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348807
  gflops (eval):  101.738
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348807,101.738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4567
  maximum absolute entry in einsum_ir solution: 58.4567
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137462
  time (eval):    0.0228893
  gflops (eval):  155.036
  gflops (total): 146.253
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137462,0.0228893,155.036,146.253

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123576
  gflops (total): 28.7166
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346561
  gflops (eval):  102.397
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346561,102.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7508
  maximum absolute entry in einsum_ir solution: 54.7508
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00149554
  time (eval):    0.0238011
  gflops (eval):  149.097
  gflops (total): 140.282
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00149554,0.0238011,149.097,140.282

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123546
  gflops (total): 28.7236
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347118
  gflops (eval):  102.233
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347118,102.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1511
  maximum absolute entry in einsum_ir solution: 56.1511
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013847
  time (eval):    0.0226757
  gflops (eval):  156.497
  gflops (total): 147.49
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013847,0.0226757,156.497,147.49

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12303
  gflops (total): 28.8439
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344361
  gflops (eval):  103.051
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344361,103.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4992
  maximum absolute entry in einsum_ir solution: 53.4992
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013738
  time (eval):    0.0227594
  gflops (eval):  155.921
  gflops (total): 147.045
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013738,0.0227594,155.921,147.045

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123025
  gflops (total): 28.8452
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349734
  gflops (eval):  101.468
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349734,101.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0325
  maximum absolute entry in einsum_ir solution: 55.0325
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139919
  time (eval):    0.0234094
  gflops (eval):  151.592
  gflops (total): 143.042
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139919,0.0234094,151.592,143.042

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124226
  gflops (total): 28.5663
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.5663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034523
  gflops (eval):  102.792
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034523,102.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2025
  maximum absolute entry in einsum_ir solution: 62.2025
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138713
  time (eval):    0.0234094
  gflops (eval):  151.592
  gflops (total): 143.112
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138713,0.0234094,151.592,143.112

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122948
  gflops (total): 28.8632
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348728
  gflops (eval):  101.761
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348728,101.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.29
  maximum absolute entry in einsum_ir solution: 57.29
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143401
  time (eval):    0.0235394
  gflops (eval):  150.755
  gflops (total): 142.098
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143401,0.0235394,150.755,142.098

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123445
  gflops (total): 28.747
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345268
  gflops (eval):  102.78
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345268,102.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2461
  maximum absolute entry in einsum_ir solution: 54.2461
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139047
  time (eval):    0.023366
  gflops (eval):  151.874
  gflops (total): 143.343
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139047,0.023366,151.874,143.343

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123123
  gflops (total): 28.8223
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0351208
  gflops (eval):  101.042
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0351208,101.042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.803
  maximum absolute entry in einsum_ir solution: 61.803
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139024
  time (eval):    0.0245269
  gflops (eval):  144.685
  gflops (total): 136.924
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139024,0.0245269,144.685,136.924

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122521
  gflops (total): 28.9639
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0329636
  gflops (eval):  107.654
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0329636,107.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1963
  maximum absolute entry in einsum_ir solution: 57.1963
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00146696
  time (eval):    0.0229514
  gflops (eval):  154.617
  gflops (total): 145.328
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00146696,0.0229514,154.617,145.328

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122706
  gflops (total): 28.9202
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0351175
  gflops (eval):  101.051
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0351175,101.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5828
  maximum absolute entry in einsum_ir solution: 57.5828
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137161
  time (eval):    0.0229627
  gflops (eval):  154.541
  gflops (total): 145.83
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137161,0.0229627,154.541,145.83

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122305
  gflops (total): 29.015
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,29.015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343658
  gflops (eval):  103.262
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343658,103.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2825
  maximum absolute entry in einsum_ir solution: 59.2825
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00147986
  time (eval):    0.0241392
  gflops (eval):  147.009
  gflops (total): 138.517
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00147986,0.0241392,147.009,138.517

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124375
  gflops (total): 28.5322
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.5322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347413
  gflops (eval):  102.146
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347413,102.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6478
  maximum absolute entry in einsum_ir solution: 55.6478
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137798
  time (eval):    0.0225588
  gflops (eval):  157.308
  gflops (total): 148.252
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137798,0.0225588,157.308,148.252

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123168
  gflops (total): 28.8116
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349501
  gflops (eval):  101.535
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349501,101.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1659
  maximum absolute entry in einsum_ir solution: 54.1659
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139111
  time (eval):    0.0232171
  gflops (eval):  152.847
  gflops (total): 144.207
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139111,0.0232171,152.847,144.207

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123636
  gflops (total): 28.7026
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338862
  gflops (eval):  104.723
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338862,104.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4189
  maximum absolute entry in einsum_ir solution: 56.4189
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143953
  time (eval):    0.0226434
  gflops (eval):  156.72
  gflops (total): 147.352
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143953,0.0226434,156.72,147.352

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123281
  gflops (total): 28.7853
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349755
  gflops (eval):  101.462
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349755,101.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0209
  maximum absolute entry in einsum_ir solution: 60.0209
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138461
  time (eval):    0.0241771
  gflops (eval):  146.778
  gflops (total): 138.828
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138461,0.0241771,146.778,138.828

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122728
  gflops (total): 28.9149
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9149

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342435
  gflops (eval):  103.631
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342435,103.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9978
  maximum absolute entry in einsum_ir solution: 61.9978
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013812
  time (eval):    0.0225562
  gflops (eval):  157.326
  gflops (total): 148.248
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013812,0.0225562,157.326,148.248

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123561
  gflops (total): 28.7201
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341981
  gflops (eval):  103.768
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341981,103.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.8769
  maximum absolute entry in einsum_ir solution: 53.8769
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00140384
  time (eval):    0.0230341
  gflops (eval):  154.062
  gflops (total): 145.211
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00140384,0.0230341,154.062,145.211

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122595
  gflops (total): 28.9462
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034494
  gflops (eval):  102.878
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034494,102.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3092
  maximum absolute entry in einsum_ir solution: 61.3092
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013792
  time (eval):    0.0256208
  gflops (eval):  138.508
  gflops (total): 131.433
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013792,0.0256208,138.508,131.433

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123733
  gflops (total): 28.68
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345548
  gflops (eval):  102.697
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345548,102.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.432
  maximum absolute entry in einsum_ir solution: 53.432
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139153
  time (eval):    0.0232358
  gflops (eval):  152.725
  gflops (total): 144.095
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139153,0.0232358,152.725,144.095

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122597
  gflops (total): 28.9458
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.9458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341534
  gflops (eval):  103.904
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341534,103.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0813
  maximum absolute entry in einsum_ir solution: 56.0813
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138263
  time (eval):    0.0233451
  gflops (eval):  152.009
  gflops (total): 143.51
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138263,0.0233451,152.009,143.51

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123685
  gflops (total): 28.6912
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336846
  gflops (eval):  105.35
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336846,105.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8194
  maximum absolute entry in einsum_ir solution: 55.8194
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137495
  time (eval):    0.023779
  gflops (eval):  149.236
  gflops (total): 141.078
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137495,0.023779,149.236,141.078

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122291
  gflops (total): 29.0183
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,29.0183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344751
  gflops (eval):  102.934
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344751,102.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9342
  maximum absolute entry in einsum_ir solution: 61.9342
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137407
  time (eval):    0.0239988
  gflops (eval):  147.869
  gflops (total): 139.861
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137407,0.0239988,147.869,139.861

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124608
  gflops (total): 28.4786
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.4786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343123
  gflops (eval):  103.423
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343123,103.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3535
  maximum absolute entry in einsum_ir solution: 60.3535
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138684
  time (eval):    0.0234466
  gflops (eval):  151.352
  gflops (total): 142.899
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138684,0.0234466,151.352,142.899

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122876
  gflops (total): 28.88
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346225
  gflops (eval):  102.496
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346225,102.496,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1644
  maximum absolute entry in einsum_ir solution: 60.1644
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139396
  time (eval):    0.0236062
  gflops (eval):  150.328
  gflops (total): 141.946
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139396,0.0236062,150.328,141.946

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12322
  gflops (total): 28.7994
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346223
  gflops (eval):  102.497
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346223,102.497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4601
  maximum absolute entry in einsum_ir solution: 57.4601
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013867
  time (eval):    0.0249989
  gflops (eval):  141.953
  gflops (total): 134.493
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013867,0.0249989,141.953,134.493

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124063
  gflops (total): 28.6038
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347892
  gflops (eval):  102.005
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347892,102.005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6369
  maximum absolute entry in einsum_ir solution: 57.6369
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139108
  time (eval):    0.0242649
  gflops (eval):  146.247
  gflops (total): 138.317
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139108,0.0242649,146.247,138.317

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123423
  gflops (total): 28.7522
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345701
  gflops (eval):  102.651
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345701,102.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9787
  maximum absolute entry in einsum_ir solution: 54.9787
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138586
  time (eval):    0.0279885
  gflops (eval):  126.791
  gflops (total): 120.809
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138586,0.0279885,126.791,120.809

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123235
  gflops (total): 28.7959
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7959

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344333
  gflops (eval):  103.059
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344333,103.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6543
  maximum absolute entry in einsum_ir solution: 54.6543
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138656
  time (eval):    0.0235995
  gflops (eval):  150.371
  gflops (total): 142.026
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138656,0.0235995,150.371,142.026

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123837
  gflops (total): 28.656
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344803
  gflops (eval):  102.919
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344803,102.919,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8844
  maximum absolute entry in einsum_ir solution: 62.8844
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138573
  time (eval):    0.0229023
  gflops (eval):  154.949
  gflops (total): 146.108
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138573,0.0229023,154.949,146.108

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123704
  gflops (total): 28.6869
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346427
  gflops (eval):  102.437
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346427,102.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2015
  maximum absolute entry in einsum_ir solution: 61.2015
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00133404
  time (eval):    0.0245468
  gflops (eval):  144.568
  gflops (total): 137.116
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00133404,0.0245468,144.568,137.116

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123535
  gflops (total): 28.7261
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.7261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342671
  gflops (eval):  103.559
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342671,103.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2185
  maximum absolute entry in einsum_ir solution: 60.2185
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138397
  time (eval):    0.0231871
  gflops (eval):  153.045
  gflops (total): 144.425
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138397,0.0231871,153.045,144.425

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.122948
  gflops (total): 28.8632
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.8632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033116
  gflops (eval):  107.159
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033116,107.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.701
  maximum absolute entry in einsum_ir solution: 64.701
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00144817
  time (eval):    0.0237394
  gflops (eval):  149.485
  gflops (total): 140.89
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00144817,0.0237394,149.485,140.89

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.124701
  gflops (total): 28.4576
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.4576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336478
  gflops (eval):  105.465
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336478,105.465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.094
  maximum absolute entry in einsum_ir solution: 59.094
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00136217
  time (eval):    0.0260837
  gflops (eval):  136.05
  gflops (total): 129.297
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00136217,0.0260837,136.05,129.297

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.123841
  gflops (total): 28.6551
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.6551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340277
  gflops (eval):  104.288
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340277,104.288,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7365
  maximum absolute entry in einsum_ir solution: 53.7365
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154051
  time (eval):    0.045283
  gflops (eval):  150.344
  gflops (total): 145.398
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154051,0.045283,150.344,145.398

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.215184
  gflops (total): 31.6383
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.6383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471855
  gflops (eval):  144.283
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471855,144.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0753
  maximum absolute entry in einsum_ir solution: 42.0753
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153615
  time (eval):    0.0456102
  gflops (eval):  149.266
  gflops (total): 144.402
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153615,0.0456102,149.266,144.402

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214298
  gflops (total): 31.7691
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473781
  gflops (eval):  143.696
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473781,143.696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4522
  maximum absolute entry in einsum_ir solution: 44.4522
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153515
  time (eval):    0.0454531
  gflops (eval):  149.782
  gflops (total): 144.888
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153515,0.0454531,149.782,144.888

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214088
  gflops (total): 31.8002
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0485636
  gflops (eval):  140.188
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0485636,140.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8108
  maximum absolute entry in einsum_ir solution: 42.8108
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153219
  time (eval):    0.0454103
  gflops (eval):  149.923
  gflops (total): 145.029
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153219,0.0454103,149.923,145.029

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213496
  gflops (total): 31.8884
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0470528
  gflops (eval):  144.689
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0470528,144.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0679
  maximum absolute entry in einsum_ir solution: 43.0678
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154095
  time (eval):    0.0455891
  gflops (eval):  149.335
  gflops (total): 144.452
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154095,0.0455891,149.335,144.452

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214087
  gflops (total): 31.8004
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475845
  gflops (eval):  143.073
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475845,143.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.626
  maximum absolute entry in einsum_ir solution: 46.626
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00183041
  time (eval):    0.0453128
  gflops (eval):  150.245
  gflops (total): 144.412
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00183041,0.0453128,150.245,144.412

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214722
  gflops (total): 31.7063
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047883
  gflops (eval):  142.181
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047883,142.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7315
  maximum absolute entry in einsum_ir solution: 41.7315
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153883
  time (eval):    0.045312
  gflops (eval):  150.248
  gflops (total): 145.313
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153883,0.045312,150.248,145.313

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214817
  gflops (total): 31.6923
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.6923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474152
  gflops (eval):  143.584
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474152,143.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.7872
  maximum absolute entry in einsum_ir solution: 45.7872
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00164685
  time (eval):    0.0455056
  gflops (eval):  149.609
  gflops (total): 144.384
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00164685,0.0455056,149.609,144.384

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.215088
  gflops (total): 31.6524
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.6524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0468084
  gflops (eval):  145.445
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0468084,145.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2083
  maximum absolute entry in einsum_ir solution: 44.2083
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152172
  time (eval):    0.0454386
  gflops (eval):  149.829
  gflops (total): 144.974
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152172,0.0454386,149.829,144.974

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213756
  gflops (total): 31.8497
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473338
  gflops (eval):  143.83
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473338,143.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.8214
  maximum absolute entry in einsum_ir solution: 44.8214
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157956
  time (eval):    0.0454854
  gflops (eval):  149.675
  gflops (total): 144.652
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157956,0.0454854,149.675,144.652

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213479
  gflops (total): 31.8909
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476046
  gflops (eval):  143.012
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476046,143.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7496
  maximum absolute entry in einsum_ir solution: 41.7496
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154079
  time (eval):    0.0457338
  gflops (eval):  148.862
  gflops (total): 144.011
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154079,0.0457338,148.862,144.011

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21455
  gflops (total): 31.7318
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7318

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471935
  gflops (eval):  144.258
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471935,144.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.2902
  maximum absolute entry in einsum_ir solution: 45.2902
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015699
  time (eval):    0.0453874
  gflops (eval):  149.998
  gflops (total): 144.984
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015699,0.0453874,149.998,144.984

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214162
  gflops (total): 31.7892
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475123
  gflops (eval):  143.29
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475123,143.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.764
  maximum absolute entry in einsum_ir solution: 43.764
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015352
  time (eval):    0.0454747
  gflops (eval):  149.71
  gflops (total): 144.821
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015352,0.0454747,149.71,144.821

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217642
  gflops (total): 31.2809
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473081
  gflops (eval):  143.909
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473081,143.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.6563
  maximum absolute entry in einsum_ir solution: 45.6563
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00160496
  time (eval):    0.0455909
  gflops (eval):  149.329
  gflops (total): 144.251
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00160496,0.0455909,149.329,144.251

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213678
  gflops (total): 31.8613
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482816
  gflops (eval):  141.007
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482816,141.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3274
  maximum absolute entry in einsum_ir solution: 39.3274
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00167042
  time (eval):    0.0453792
  gflops (eval):  150.026
  gflops (total): 144.699
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00167042,0.0453792,150.026,144.699

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21395
  gflops (total): 31.8207
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471608
  gflops (eval):  144.358
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471608,144.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3962
  maximum absolute entry in einsum_ir solution: 44.3962
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00184626
  time (eval):    0.0453876
  gflops (eval):  149.998
  gflops (total): 144.135
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00184626,0.0453876,149.998,144.135

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21448
  gflops (total): 31.7421
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472051
  gflops (eval):  144.223
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472051,144.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.5823
  maximum absolute entry in einsum_ir solution: 45.5823
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154017
  time (eval):    0.0454897
  gflops (eval):  149.661
  gflops (total): 144.76
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154017,0.0454897,149.661,144.76

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213566
  gflops (total): 31.878
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473655
  gflops (eval):  143.734
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473655,143.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.41
  maximum absolute entry in einsum_ir solution: 42.41
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156654
  time (eval):    0.0456139
  gflops (eval):  149.254
  gflops (total): 144.298
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156654,0.0456139,149.254,144.298

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.215164
  gflops (total): 31.6412
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.6412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047523
  gflops (eval):  143.258
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047523,143.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1164
  maximum absolute entry in einsum_ir solution: 41.1164
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156089
  time (eval):    0.0453686
  gflops (eval):  150.061
  gflops (total): 145.07
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156089,0.0453686,150.061,145.07

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213892
  gflops (total): 31.8293
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471538
  gflops (eval):  144.38
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471538,144.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0777
  maximum absolute entry in einsum_ir solution: 42.0777
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00156716
  time (eval):    0.0455602
  gflops (eval):  149.43
  gflops (total): 144.46
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00156716,0.0455602,149.43,144.46

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.215018
  gflops (total): 31.6627
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.6627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473364
  gflops (eval):  143.823
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473364,143.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0001
  maximum absolute entry in einsum_ir solution: 45.0001
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155869
  time (eval):    0.0455673
  gflops (eval):  149.406
  gflops (total): 144.465
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155869,0.0455673,149.406,144.465

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214331
  gflops (total): 31.7642
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0470907
  gflops (eval):  144.573
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0470907,144.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.2307
  maximum absolute entry in einsum_ir solution: 46.2307
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154556
  time (eval):    0.0455657
  gflops (eval):  149.412
  gflops (total): 144.51
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154556,0.0455657,149.412,144.51

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214642
  gflops (total): 31.7181
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475196
  gflops (eval):  143.268
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475196,143.268,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0505
  maximum absolute entry in einsum_ir solution: 46.0505
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154741
  time (eval):    0.0453857
  gflops (eval):  150.004
  gflops (total): 145.059
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154741,0.0453857,150.004,145.059

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214134
  gflops (total): 31.7933
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474471
  gflops (eval):  143.487
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474471,143.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.2816
  maximum absolute entry in einsum_ir solution: 47.2816
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154795
  time (eval):    0.0455656
  gflops (eval):  149.412
  gflops (total): 144.503
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154795,0.0455656,149.412,144.503

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214361
  gflops (total): 31.7597
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7597

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474632
  gflops (eval):  143.438
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474632,143.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0926
  maximum absolute entry in einsum_ir solution: 42.0926
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015551
  time (eval):    0.0454604
  gflops (eval):  149.758
  gflops (total): 144.804
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015551,0.0454604,149.758,144.804

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214465
  gflops (total): 31.7443
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0468821
  gflops (eval):  145.216
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0468821,145.216,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.5929
  maximum absolute entry in einsum_ir solution: 46.5929
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015491
  time (eval):    0.0456168
  gflops (eval):  149.244
  gflops (total): 144.342
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015491,0.0456168,149.244,144.342

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214545
  gflops (total): 31.7324
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0469313
  gflops (eval):  145.064
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0469313,145.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0177
  maximum absolute entry in einsum_ir solution: 43.0177
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00172509
  time (eval):    0.0456045
  gflops (eval):  149.285
  gflops (total): 143.843
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00172509,0.0456045,149.285,143.843

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214149
  gflops (total): 31.7912
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047927
  gflops (eval):  142.05
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047927,142.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0757
  maximum absolute entry in einsum_ir solution: 41.0757
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015604
  time (eval):    0.0455687
  gflops (eval):  149.402
  gflops (total): 144.455
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015604,0.0455687,149.402,144.455

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213824
  gflops (total): 31.8394
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473908
  gflops (eval):  143.657
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473908,143.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.5652
  maximum absolute entry in einsum_ir solution: 50.5652
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154772
  time (eval):    0.0453054
  gflops (eval):  150.27
  gflops (total): 145.306
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154772,0.0453054,150.27,145.306

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213406
  gflops (total): 31.9018
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.9018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0468729
  gflops (eval):  145.245
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0468729,145.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.9937
  maximum absolute entry in einsum_ir solution: 48.9937
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015516
  time (eval):    0.0454506
  gflops (eval):  149.79
  gflops (total): 144.845
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015516,0.0454506,149.79,144.845

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216246
  gflops (total): 31.4829
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475923
  gflops (eval):  143.049
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475923,143.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4611
  maximum absolute entry in einsum_ir solution: 41.4611
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00162352
  time (eval):    0.0453708
  gflops (eval):  150.053
  gflops (total): 144.869
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00162352,0.0453708,150.053,144.869

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214717
  gflops (total): 31.707
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476003
  gflops (eval):  143.025
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476003,143.025,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.5589
  maximum absolute entry in einsum_ir solution: 46.5589
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154571
  time (eval):    0.0454394
  gflops (eval):  149.827
  gflops (total): 144.898
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154571,0.0454394,149.827,144.898

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214111
  gflops (total): 31.7968
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476091
  gflops (eval):  142.999
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476091,142.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.3018
  maximum absolute entry in einsum_ir solution: 50.3018
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015474
  time (eval):    0.0455563
  gflops (eval):  149.442
  gflops (total): 144.533
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015474,0.0455563,149.442,144.533

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214118
  gflops (total): 31.7958
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0470528
  gflops (eval):  144.689
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0470528,144.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.58
  maximum absolute entry in einsum_ir solution: 43.58
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155796
  time (eval):    0.0456665
  gflops (eval):  149.082
  gflops (total): 144.163
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155796,0.0456665,149.082,144.163

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214189
  gflops (total): 31.7852
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0469824
  gflops (eval):  144.906
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0469824,144.906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7069
  maximum absolute entry in einsum_ir solution: 43.7069
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152914
  time (eval):    0.0454902
  gflops (eval):  149.66
  gflops (total): 144.793
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152914,0.0454902,149.66,144.793

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214386
  gflops (total): 31.756
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473981
  gflops (eval):  143.635
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473981,143.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.4597
  maximum absolute entry in einsum_ir solution: 43.4597
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153828
  time (eval):    0.0452899
  gflops (eval):  150.321
  gflops (total): 145.383
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153828,0.0452899,150.321,145.383

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213846
  gflops (total): 31.8361
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474534
  gflops (eval):  143.468
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474534,143.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.3899
  maximum absolute entry in einsum_ir solution: 49.3899
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154452
  time (eval):    0.0455435
  gflops (eval):  149.485
  gflops (total): 144.581
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154452,0.0455435,149.485,144.581

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213791
  gflops (total): 31.8444
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474831
  gflops (eval):  143.378
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474831,143.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8277
  maximum absolute entry in einsum_ir solution: 42.8277
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155533
  time (eval):    0.0453437
  gflops (eval):  150.143
  gflops (total): 145.164
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155533,0.0453437,150.143,145.164

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213922
  gflops (total): 31.8249
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473852
  gflops (eval):  143.674
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473852,143.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.2635
  maximum absolute entry in einsum_ir solution: 52.2635
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152525
  time (eval):    0.0456111
  gflops (eval):  149.263
  gflops (total): 144.433
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152525,0.0456111,149.263,144.433

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214459
  gflops (total): 31.7452
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0469499
  gflops (eval):  145.007
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0469499,145.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.6986
  maximum absolute entry in einsum_ir solution: 44.6986
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154255
  time (eval):    0.0453255
  gflops (eval):  150.203
  gflops (total): 145.26
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154255,0.0453255,150.203,145.26

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217754
  gflops (total): 31.2648
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473588
  gflops (eval):  143.755
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473588,143.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.6475
  maximum absolute entry in einsum_ir solution: 45.6475
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153413
  time (eval):    0.0455344
  gflops (eval):  149.514
  gflops (total): 144.641
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153413,0.0455344,149.514,144.641

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213958
  gflops (total): 31.8195
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471697
  gflops (eval):  144.331
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471697,144.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.0244
  maximum absolute entry in einsum_ir solution: 49.0244
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159626
  time (eval):    0.0453903
  gflops (eval):  149.989
  gflops (total): 144.893
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159626,0.0453903,149.989,144.893

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214244
  gflops (total): 31.777
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477044
  gflops (eval):  142.713
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477044,142.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.4477
  maximum absolute entry in einsum_ir solution: 47.4477
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00169162
  time (eval):    0.0456716
  gflops (eval):  149.065
  gflops (total): 143.741
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00169162,0.0456716,149.065,143.741

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213969
  gflops (total): 31.8179
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0484623
  gflops (eval):  140.481
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0484623,140.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9812
  maximum absolute entry in einsum_ir solution: 42.9812
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155141
  time (eval):    0.0454235
  gflops (eval):  149.879
  gflops (total): 144.929
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155141,0.0454235,149.879,144.929

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21468
  gflops (total): 31.7125
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472088
  gflops (eval):  144.211
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472088,144.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3723
  maximum absolute entry in einsum_ir solution: 44.3723
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00172085
  time (eval):    0.0455774
  gflops (eval):  149.373
  gflops (total): 143.938
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00172085,0.0455774,149.373,143.938

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214416
  gflops (total): 31.7515
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475444
  gflops (eval):  143.193
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475444,143.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2394
  maximum absolute entry in einsum_ir solution: 42.2394
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155272
  time (eval):    0.04545
  gflops (eval):  149.792
  gflops (total): 144.844
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155272,0.04545,149.792,144.844

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214428
  gflops (total): 31.7497
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0470292
  gflops (eval):  144.762
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0470292,144.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9609
  maximum absolute entry in einsum_ir solution: 43.9609
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154548
  time (eval):    0.0454018
  gflops (eval):  149.951
  gflops (total): 145.015
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154548,0.0454018,149.951,145.015

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217578
  gflops (total): 31.2902
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473131
  gflops (eval):  143.893
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473131,143.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.931
  maximum absolute entry in einsum_ir solution: 41.931
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153045
  time (eval):    0.0454506
  gflops (eval):  149.79
  gflops (total): 144.911
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153045,0.0454506,149.79,144.911

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.221624
  gflops (total): 30.7189
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,30.7189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0469533
  gflops (eval):  144.996
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0469533,144.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8114
  maximum absolute entry in einsum_ir solution: 40.8114
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00160968
  time (eval):    0.0453485
  gflops (eval):  150.127
  gflops (total): 144.981
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00160968,0.0453485,150.127,144.981

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214776
  gflops (total): 31.6983
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.6983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472416
  gflops (eval):  144.111
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472416,144.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.9728
  maximum absolute entry in einsum_ir solution: 46.9728
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154483
  time (eval):    0.0456832
  gflops (eval):  149.027
  gflops (total): 144.153
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154483,0.0456832,149.027,144.153

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216796
  gflops (total): 31.4029
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0490365
  gflops (eval):  138.836
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0490365,138.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1258
  maximum absolute entry in einsum_ir solution: 52.1258
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153667
  time (eval):    0.0454375
  gflops (eval):  149.833
  gflops (total): 144.932
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153667,0.0454375,149.833,144.932

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214245
  gflops (total): 31.7769
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0488348
  gflops (eval):  139.41
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0488348,139.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.382
  maximum absolute entry in einsum_ir solution: 46.382
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00151587
  time (eval):    0.0454392
  gflops (eval):  149.828
  gflops (total): 144.991
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00151587,0.0454392,149.828,144.991

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213969
  gflops (total): 31.8178
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475768
  gflops (eval):  143.096
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475768,143.096,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.8048
  maximum absolute entry in einsum_ir solution: 46.8048
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155364
  time (eval):    0.0453829
  gflops (eval):  150.013
  gflops (total): 145.048
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155364,0.0453829,150.013,145.048

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214519
  gflops (total): 31.7363
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479355
  gflops (eval):  142.025
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479355,142.025,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.9828
  maximum absolute entry in einsum_ir solution: 44.9828
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152204
  time (eval):    0.0455493
  gflops (eval):  149.465
  gflops (total): 144.632
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152204,0.0455493,149.465,144.632

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214449
  gflops (total): 31.7467
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047114
  gflops (eval):  144.501
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047114,144.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6853
  maximum absolute entry in einsum_ir solution: 43.6853
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015487
  time (eval):    0.0454983
  gflops (eval):  149.633
  gflops (total): 144.707
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015487,0.0454983,149.633,144.707

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214118
  gflops (total): 31.7957
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476523
  gflops (eval):  142.869
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476523,142.869,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0289
  maximum absolute entry in einsum_ir solution: 46.0289
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00181848
  time (eval):    0.0453161
  gflops (eval):  150.235
  gflops (total): 144.439
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00181848,0.0453161,150.235,144.439

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214277
  gflops (total): 31.7722
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474302
  gflops (eval):  143.538
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474302,143.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7642
  maximum absolute entry in einsum_ir solution: 42.7642
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153932
  time (eval):    0.0454924
  gflops (eval):  149.652
  gflops (total): 144.754
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153932,0.0454924,149.652,144.754

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213456
  gflops (total): 31.8944
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0469907
  gflops (eval):  144.881
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0469907,144.881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.7783
  maximum absolute entry in einsum_ir solution: 48.7783
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154695
  time (eval):    0.0456552
  gflops (eval):  149.119
  gflops (total): 144.231
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154695,0.0456552,149.119,144.231

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213514
  gflops (total): 31.8857
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477525
  gflops (eval):  142.569
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477525,142.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.9122
  maximum absolute entry in einsum_ir solution: 46.9122
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159434
  time (eval):    0.0454845
  gflops (eval):  149.678
  gflops (total): 144.609
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159434,0.0454845,149.678,144.609

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21372
  gflops (total): 31.8549
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472552
  gflops (eval):  144.07
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472552,144.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0493
  maximum absolute entry in einsum_ir solution: 41.0493
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153408
  time (eval):    0.0455657
  gflops (eval):  149.412
  gflops (total): 144.545
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153408,0.0455657,149.412,144.545

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214245
  gflops (total): 31.777
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472098
  gflops (eval):  144.208
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472098,144.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4306
  maximum absolute entry in einsum_ir solution: 51.4306
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152608
  time (eval):    0.0453663
  gflops (eval):  150.068
  gflops (total): 145.184
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152608,0.0453663,150.068,145.184

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214272
  gflops (total): 31.7729
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472938
  gflops (eval):  143.952
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472938,143.952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.167
  maximum absolute entry in einsum_ir solution: 46.167
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158323
  time (eval):    0.0454338
  gflops (eval):  149.845
  gflops (total): 144.8
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158323,0.0454338,149.845,144.8

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21414
  gflops (total): 31.7926
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0469026
  gflops (eval):  145.153
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0469026,145.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0119
  maximum absolute entry in einsum_ir solution: 46.0119
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153643
  time (eval):    0.0454513
  gflops (eval):  149.788
  gflops (total): 144.89
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153643,0.0454513,149.788,144.89

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.215285
  gflops (total): 31.6234
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.6234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479732
  gflops (eval):  141.914
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479732,141.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.5603
  maximum absolute entry in einsum_ir solution: 44.5603
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155716
  time (eval):    0.0452654
  gflops (eval):  150.403
  gflops (total): 145.401
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155716,0.0452654,150.403,145.401

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.215131
  gflops (total): 31.6461
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.6461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476733
  gflops (eval):  142.806
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476733,142.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.6648
  maximum absolute entry in einsum_ir solution: 49.6648
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154047
  time (eval):    0.0453593
  gflops (eval):  150.091
  gflops (total): 145.162
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154047,0.0453593,150.091,145.162

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213456
  gflops (total): 31.8943
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474159
  gflops (eval):  143.582
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474159,143.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.0863
  maximum absolute entry in einsum_ir solution: 48.0863
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154785
  time (eval):    0.0456629
  gflops (eval):  149.093
  gflops (total): 144.205
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154785,0.0456629,149.093,144.205

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213866
  gflops (total): 31.8332
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471068
  gflops (eval):  144.524
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471068,144.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.4434
  maximum absolute entry in einsum_ir solution: 43.4434
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153273
  time (eval):    0.0455438
  gflops (eval):  149.484
  gflops (total): 144.617
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153273,0.0455438,149.484,144.617

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214466
  gflops (total): 31.7442
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474779
  gflops (eval):  143.394
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474779,143.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6466
  maximum absolute entry in einsum_ir solution: 41.6466
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155035
  time (eval):    0.0455579
  gflops (eval):  149.437
  gflops (total): 144.519
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155035,0.0455579,149.437,144.519

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213966
  gflops (total): 31.8184
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0490379
  gflops (eval):  138.832
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0490379,138.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2479
  maximum absolute entry in einsum_ir solution: 44.2479
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159664
  time (eval):    0.0454305
  gflops (eval):  149.856
  gflops (total): 144.768
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159664,0.0454305,149.856,144.768

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.2137
  gflops (total): 31.858
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.858

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478252
  gflops (eval):  142.353
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478252,142.353,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4143
  maximum absolute entry in einsum_ir solution: 42.4143
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154486
  time (eval):    0.0454024
  gflops (eval):  149.949
  gflops (total): 145.015
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154486,0.0454024,149.949,145.015

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216884
  gflops (total): 31.3903
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3903

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481702
  gflops (eval):  141.333
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481702,141.333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1983
  maximum absolute entry in einsum_ir solution: 45.1983
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0017783
  time (eval):    0.0455289
  gflops (eval):  149.532
  gflops (total): 143.911
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0017783,0.0455289,149.532,143.911

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21446
  gflops (total): 31.745
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047254
  gflops (eval):  144.073
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047254,144.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.9445
  maximum absolute entry in einsum_ir solution: 46.9445
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153383
  time (eval):    0.0454712
  gflops (eval):  149.722
  gflops (total): 144.837
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153383,0.0454712,149.722,144.837

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213437
  gflops (total): 31.8972
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0469312
  gflops (eval):  145.064
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0469312,145.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4983
  maximum absolute entry in einsum_ir solution: 42.4983
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155239
  time (eval):    0.0453938
  gflops (eval):  149.977
  gflops (total): 145.018
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155239,0.0453938,149.977,145.018

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213271
  gflops (total): 31.922
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047163
  gflops (eval):  144.351
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047163,144.351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4012
  maximum absolute entry in einsum_ir solution: 44.4012
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159259
  time (eval):    0.0456835
  gflops (eval):  149.026
  gflops (total): 144.006
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159259,0.0456835,149.026,144.006

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214062
  gflops (total): 31.8041
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8041

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472684
  gflops (eval):  144.03
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472684,144.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4807
  maximum absolute entry in einsum_ir solution: 46.4807
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153256
  time (eval):    0.0456253
  gflops (eval):  149.217
  gflops (total): 144.367
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153256,0.0456253,149.217,144.367

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214507
  gflops (total): 31.7381
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0466869
  gflops (eval):  145.823
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0466869,145.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.441
  maximum absolute entry in einsum_ir solution: 41.441
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00172337
  time (eval):    0.0454494
  gflops (eval):  149.794
  gflops (total): 144.322
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00172337,0.0454494,149.794,144.322

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21381
  gflops (total): 31.8416
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0473286
  gflops (eval):  143.846
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0473286,143.846,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9793
  maximum absolute entry in einsum_ir solution: 42.9793
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157662
  time (eval):    0.0455026
  gflops (eval):  149.619
  gflops (total): 144.608
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157662,0.0455026,149.619,144.608

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214248
  gflops (total): 31.7765
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471377
  gflops (eval):  144.429
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471377,144.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.8156
  maximum absolute entry in einsum_ir solution: 50.8156
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153918
  time (eval):    0.0455338
  gflops (eval):  149.516
  gflops (total): 144.627
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153918,0.0455338,149.516,144.627

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214208
  gflops (total): 31.7824
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472965
  gflops (eval):  143.944
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472965,143.944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.8191
  maximum absolute entry in einsum_ir solution: 45.8191
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0016447
  time (eval):    0.0456276
  gflops (eval):  149.209
  gflops (total): 144.018
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0016447,0.0456276,149.209,144.018

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216973
  gflops (total): 31.3773
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472824
  gflops (eval):  143.987
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472824,143.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4065
  maximum absolute entry in einsum_ir solution: 41.4065
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154129
  time (eval):    0.0453271
  gflops (eval):  150.198
  gflops (total): 145.259
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154129,0.0453271,150.198,145.259

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214149
  gflops (total): 31.7912
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475034
  gflops (eval):  143.317
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475034,143.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.8852
  maximum absolute entry in einsum_ir solution: 48.8852
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.001537
  time (eval):    0.0452174
  gflops (eval):  150.563
  gflops (total): 145.613
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.001537,0.0452174,150.563,145.613

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21395
  gflops (total): 31.8208
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471169
  gflops (eval):  144.493
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471169,144.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.2167
  maximum absolute entry in einsum_ir solution: 47.2167
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00159074
  time (eval):    0.0456102
  gflops (eval):  149.266
  gflops (total): 144.235
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00159074,0.0456102,149.266,144.235

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214609
  gflops (total): 31.723
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472414
  gflops (eval):  144.112
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472414,144.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1236
  maximum absolute entry in einsum_ir solution: 45.1236
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00157732
  time (eval):    0.0456103
  gflops (eval):  149.265
  gflops (total): 144.276
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00157732,0.0456103,149.265,144.276

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214285
  gflops (total): 31.771
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472458
  gflops (eval):  144.098
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472458,144.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1655
  maximum absolute entry in einsum_ir solution: 41.1655
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00158116
  time (eval):    0.0454621
  gflops (eval):  149.752
  gflops (total): 144.719
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00158116,0.0454621,149.752,144.719

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214064
  gflops (total): 31.8038
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471349
  gflops (eval):  144.438
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471349,144.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3106
  maximum absolute entry in einsum_ir solution: 42.3106
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154089
  time (eval):    0.0453013
  gflops (eval):  150.284
  gflops (total): 145.34
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154089,0.0453013,150.284,145.34

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214495
  gflops (total): 31.7398
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048101
  gflops (eval):  141.536
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048101,141.536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8398
  maximum absolute entry in einsum_ir solution: 41.8398
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153484
  time (eval):    0.0453609
  gflops (eval):  150.086
  gflops (total): 145.174
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153484,0.0453609,150.086,145.174

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214216
  gflops (total): 31.7812
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471723
  gflops (eval):  144.323
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471723,144.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.9935
  maximum absolute entry in einsum_ir solution: 50.9935
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153569
  time (eval):    0.0455636
  gflops (eval):  149.418
  gflops (total): 144.546
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153569,0.0455636,149.418,144.546

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214136
  gflops (total): 31.7931
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475943
  gflops (eval):  143.043
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475943,143.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9884
  maximum absolute entry in einsum_ir solution: 42.9884
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155259
  time (eval):    0.0454392
  gflops (eval):  149.828
  gflops (total): 144.877
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155259,0.0454392,149.828,144.877

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214354
  gflops (total): 31.7607
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047421
  gflops (eval):  143.566
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047421,143.566,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0288
  maximum absolute entry in einsum_ir solution: 46.0288
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153001
  time (eval):    0.04567
  gflops (eval):  149.07
  gflops (total): 144.238
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153001,0.04567,149.07,144.238

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214464
  gflops (total): 31.7444
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0490402
  gflops (eval):  138.826
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0490402,138.826,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9116
  maximum absolute entry in einsum_ir solution: 43.9116
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152444
  time (eval):    0.0454835
  gflops (eval):  149.681
  gflops (total): 144.827
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152444,0.0454835,149.681,144.827

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216269
  gflops (total): 31.4796
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4796

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472063
  gflops (eval):  144.219
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472063,144.219,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2016
  maximum absolute entry in einsum_ir solution: 42.2016
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152485
  time (eval):    0.0453398
  gflops (eval):  150.156
  gflops (total): 145.27
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152485,0.0453398,150.156,145.27

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214375
  gflops (total): 31.7576
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478835
  gflops (eval):  142.179
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478835,142.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0958
  maximum absolute entry in einsum_ir solution: 44.0958
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015589
  time (eval):    0.0453951
  gflops (eval):  149.973
  gflops (total): 144.994
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015589,0.0453951,149.973,144.994

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214213
  gflops (total): 31.7816
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0470478
  gflops (eval):  144.705
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0470478,144.705,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7443
  maximum absolute entry in einsum_ir solution: 43.7443
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152705
  time (eval):    0.0456343
  gflops (eval):  149.187
  gflops (total): 144.356
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152705,0.0456343,149.187,144.356

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214108
  gflops (total): 31.7972
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0471309
  gflops (eval):  144.45
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0471309,144.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.4469
  maximum absolute entry in einsum_ir solution: 45.4469
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00153903
  time (eval):    0.0455746
  gflops (eval):  149.382
  gflops (total): 144.503
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00153903,0.0455746,149.382,144.503

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214099
  gflops (total): 31.7985
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0470053
  gflops (eval):  144.836
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0470053,144.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6512
  maximum absolute entry in einsum_ir solution: 42.6512
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152837
  time (eval):    0.0453824
  gflops (eval):  150.015
  gflops (total): 145.127
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152837,0.0453824,150.015,145.127

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.213949
  gflops (total): 31.8209
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.8209

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474717
  gflops (eval):  143.413
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474717,143.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4335
  maximum absolute entry in einsum_ir solution: 46.4335
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00155326
  time (eval):    0.0454119
  gflops (eval):  149.917
  gflops (total): 144.959
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00155326,0.0454119,149.917,144.959

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214507
  gflops (total): 31.7381
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.04711
  gflops (eval):  144.514
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.04711,144.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.9843
  maximum absolute entry in einsum_ir solution: 45.9843
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154627
  time (eval):    0.0454922
  gflops (eval):  149.653
  gflops (total): 144.734
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154627,0.0454922,149.653,144.734

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214186
  gflops (total): 31.7857
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0472494
  gflops (eval):  144.087
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0472494,144.087,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9566
  maximum absolute entry in einsum_ir solution: 43.9566
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00154096
  time (eval):    0.0454559
  gflops (eval):  149.773
  gflops (total): 144.862
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00154096,0.0454559,149.773,144.862

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214482
  gflops (total): 31.7419
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474584
  gflops (eval):  143.453
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474584,143.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5699
  maximum absolute entry in einsum_ir solution: 39.5699
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0015702
  time (eval):    0.0455788
  gflops (eval):  149.369
  gflops (total): 144.394
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0015702,0.0455788,149.369,144.394

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.212506
  gflops (total): 32.037
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,32.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0466341
  gflops (eval):  145.988
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0466341,145.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.017
  maximum absolute entry in einsum_ir solution: 43.017
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152893
  time (eval):    0.0452422
  gflops (eval):  150.48
  gflops (total): 145.561
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152893,0.0452422,150.48,145.561

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.214153
  gflops (total): 31.7905
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.7905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477064
  gflops (eval):  142.707
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477064,142.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8314
  maximum absolute entry in einsum_ir solution: 41.8314
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0015041
  time (eval):    0.0209918
  gflops (eval):  147.809
  gflops (total): 137.926
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0015041,0.0209918,147.809,137.926

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112502
  gflops (total): 27.5797
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.5797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0270709
  gflops (eval):  114.616
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0270709,114.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3502
  maximum absolute entry in einsum_ir solution: 52.3502
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138184
  time (eval):    0.0208594
  gflops (eval):  148.747
  gflops (total): 139.505
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138184,0.0208594,148.747,139.505

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110124
  gflops (total): 28.1753
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273048
  gflops (eval):  113.634
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273048,113.634,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0705
  maximum absolute entry in einsum_ir solution: 56.0705
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139064
  time (eval):    0.0206899
  gflops (eval):  149.966
  gflops (total): 140.521
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139064,0.0206899,149.966,140.521

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108429
  gflops (total): 28.6155
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275337
  gflops (eval):  112.69
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275337,112.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5098
  maximum absolute entry in einsum_ir solution: 54.5099
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138335
  time (eval):    0.0209214
  gflops (eval):  148.306
  gflops (total): 139.108
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138335,0.0209214,148.306,139.108

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110213
  gflops (total): 28.1525
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.02767
  gflops (eval):  112.135
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.02767,112.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3716
  maximum absolute entry in einsum_ir solution: 58.3716
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139551
  time (eval):    0.0208818
  gflops (eval):  148.587
  gflops (total): 139.279
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139551,0.0208818,148.587,139.279

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110246
  gflops (total): 28.1442
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277742
  gflops (eval):  111.714
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277742,111.714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6732
  maximum absolute entry in einsum_ir solution: 58.6732
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138763
  time (eval):    0.0208165
  gflops (eval):  149.054
  gflops (total): 139.739
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138763,0.0208165,149.054,139.739

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.114577
  gflops (total): 27.0802
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.0802

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273323
  gflops (eval):  113.52
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273323,113.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5007
  maximum absolute entry in einsum_ir solution: 52.5007
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138174
  time (eval):    0.0211753
  gflops (eval):  146.528
  gflops (total): 137.552
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138174,0.0211753,146.528,137.552

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108992
  gflops (total): 28.4678
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273341
  gflops (eval):  113.513
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273341,113.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8095
  maximum absolute entry in einsum_ir solution: 52.8095
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00148675
  time (eval):    0.0207476
  gflops (eval):  149.548
  gflops (total): 139.548
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00148675,0.0207476,149.548,139.548

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110495
  gflops (total): 28.0808
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0269684
  gflops (eval):  115.052
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0269684,115.052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.2918
  maximum absolute entry in einsum_ir solution: 51.2918
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138139
  time (eval):    0.0206773
  gflops (eval):  150.057
  gflops (total): 140.66
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138139,0.0206773,150.057,140.66

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108193
  gflops (total): 28.678
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275541
  gflops (eval):  112.607
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275541,112.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.3653
  maximum absolute entry in einsum_ir solution: 48.3653
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00165537
  time (eval):    0.0209851
  gflops (eval):  147.856
  gflops (total): 137.045
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00165537,0.0209851,147.856,137.045

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112242
  gflops (total): 27.6437
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.6437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275614
  gflops (eval):  112.577
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275614,112.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9977
  maximum absolute entry in einsum_ir solution: 56.9977
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00136575
  time (eval):    0.0206571
  gflops (eval):  150.204
  gflops (total): 140.889
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00136575,0.0206571,150.204,140.889

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10784
  gflops (total): 28.772
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027565
  gflops (eval):  112.562
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027565,112.562,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5109
  maximum absolute entry in einsum_ir solution: 52.5109
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137597
  time (eval):    0.0211319
  gflops (eval):  146.829
  gflops (total): 137.852
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137597,0.0211319,146.829,137.852

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.1151
  gflops (total): 26.9571
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,26.9571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275029
  gflops (eval):  112.816
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275029,112.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1186
  maximum absolute entry in einsum_ir solution: 52.1186
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137744
  time (eval):    0.0207594
  gflops (eval):  149.463
  gflops (total): 140.163
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137744,0.0207594,149.463,140.163

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109538
  gflops (total): 28.3259
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275993
  gflops (eval):  112.422
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275993,112.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.5797
  maximum absolute entry in einsum_ir solution: 50.5797
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138865
  time (eval):    0.02068
  gflops (eval):  150.037
  gflops (total): 140.596
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138865,0.02068,150.037,140.596

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109877
  gflops (total): 28.2385
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275989
  gflops (eval):  112.424
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275989,112.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.8102
  maximum absolute entry in einsum_ir solution: 48.8102
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138258
  time (eval):    0.0210628
  gflops (eval):  147.311
  gflops (total): 138.237
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138258,0.0210628,147.311,138.237

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110355
  gflops (total): 28.1162
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273542
  gflops (eval):  113.429
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273542,113.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.0642
  maximum absolute entry in einsum_ir solution: 51.0642
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138065
  time (eval):    0.0208653
  gflops (eval):  148.705
  gflops (total): 139.476
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138065,0.0208653,148.705,139.476

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11277
  gflops (total): 27.5142
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.5142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276491
  gflops (eval):  112.22
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276491,112.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1502
  maximum absolute entry in einsum_ir solution: 53.1502
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00141938
  time (eval):    0.0209014
  gflops (eval):  148.448
  gflops (total): 139.008
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00141938,0.0209014,148.448,139.008

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109302
  gflops (total): 28.3871
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276083
  gflops (eval):  112.385
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276083,112.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.8894
  maximum absolute entry in einsum_ir solution: 51.8894
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138703
  time (eval):    0.0209256
  gflops (eval):  148.276
  gflops (total): 139.059
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138703,0.0209256,148.276,139.059

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108902
  gflops (total): 28.4915
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275618
  gflops (eval):  112.575
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275618,112.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5681
  maximum absolute entry in einsum_ir solution: 56.5681
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137494
  time (eval):    0.0208832
  gflops (eval):  148.578
  gflops (total): 139.399
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137494,0.0208832,148.578,139.399

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108655
  gflops (total): 28.5562
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277543
  gflops (eval):  111.794
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277543,111.794,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3813
  maximum absolute entry in einsum_ir solution: 55.3813
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138767
  time (eval):    0.0207473
  gflops (eval):  149.55
  gflops (total): 140.175
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138767,0.0207473,149.55,140.175

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109359
  gflops (total): 28.3723
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275798
  gflops (eval):  112.501
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275798,112.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7643
  maximum absolute entry in einsum_ir solution: 53.7643
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013815
  time (eval):    0.0210438
  gflops (eval):  147.443
  gflops (total): 138.36
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013815,0.0210438,147.443,138.36

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.113892
  gflops (total): 27.243
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.243

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274905
  gflops (eval):  112.867
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274905,112.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.5597
  maximum absolute entry in einsum_ir solution: 49.5597
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138541
  time (eval):    0.0206491
  gflops (eval):  150.262
  gflops (total): 140.814
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138541,0.0206491,150.262,140.814

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112429
  gflops (total): 27.5976
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.5976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274571
  gflops (eval):  113.004
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274571,113.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2087
  maximum absolute entry in einsum_ir solution: 54.2087
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137909
  time (eval):    0.0210681
  gflops (eval):  147.273
  gflops (total): 138.225
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137909,0.0210681,147.273,138.225

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10956
  gflops (total): 28.3202
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274137
  gflops (eval):  113.183
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274137,113.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0544
  maximum absolute entry in einsum_ir solution: 56.0544
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138286
  time (eval):    0.0205913
  gflops (eval):  150.683
  gflops (total): 141.201
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138286,0.0205913,150.683,141.201

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112331
  gflops (total): 27.6218
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.6218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277022
  gflops (eval):  112.004
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277022,112.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.6379
  maximum absolute entry in einsum_ir solution: 52.638
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142707
  time (eval):    0.0208123
  gflops (eval):  149.084
  gflops (total): 139.517
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142707,0.0208123,149.084,139.517

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108577
  gflops (total): 28.5766
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277604
  gflops (eval):  111.769
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277604,111.769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4188
  maximum absolute entry in einsum_ir solution: 53.4188
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138333
  time (eval):    0.0209234
  gflops (eval):  148.292
  gflops (total): 139.096
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138333,0.0209234,148.292,139.096

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110701
  gflops (total): 28.0283
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276374
  gflops (eval):  112.267
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276374,112.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8928
  maximum absolute entry in einsum_ir solution: 56.8928
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137492
  time (eval):    0.0209863
  gflops (eval):  147.847
  gflops (total): 138.757
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137492,0.0209863,147.847,138.757

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108879
  gflops (total): 28.4973
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274058
  gflops (eval):  113.216
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274058,113.216,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2075
  maximum absolute entry in einsum_ir solution: 53.2075
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00135586
  time (eval):    0.020654
  gflops (eval):  150.226
  gflops (total): 140.972
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00135586,0.020654,150.226,140.972

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110507
  gflops (total): 28.0776
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274569
  gflops (eval):  113.005
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274569,113.005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.0879
  maximum absolute entry in einsum_ir solution: 52.0879
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139901
  time (eval):    0.0210961
  gflops (eval):  147.078
  gflops (total): 137.931
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139901,0.0210961,147.078,137.931

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11143
  gflops (total): 27.8451
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.8451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273788
  gflops (eval):  113.327
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273788,113.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0594
  maximum absolute entry in einsum_ir solution: 54.0594
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00167408
  time (eval):    0.0208968
  gflops (eval):  148.48
  gflops (total): 137.467
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00167408,0.0208968,148.48,137.467

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111512
  gflops (total): 27.8245
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.8245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276753
  gflops (eval):  112.113
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276753,112.113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.8538
  maximum absolute entry in einsum_ir solution: 49.8538
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137958
  time (eval):    0.0210067
  gflops (eval):  147.704
  gflops (total): 138.601
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137958,0.0210067,147.704,138.601

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110972
  gflops (total): 27.9599
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277749
  gflops (eval):  111.711
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277749,111.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7728
  maximum absolute entry in einsum_ir solution: 53.7728
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013707
  time (eval):    0.0210859
  gflops (eval):  147.149
  gflops (total): 138.167
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013707,0.0210859,147.149,138.167

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.126838
  gflops (total): 24.4624
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,24.4624

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273396
  gflops (eval):  113.49
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273396,113.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1764
  maximum absolute entry in einsum_ir solution: 53.1764
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143489
  time (eval):    0.0206991
  gflops (eval):  149.899
  gflops (total): 140.181
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143489,0.0206991,149.899,140.181

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110363
  gflops (total): 28.1142
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274203
  gflops (eval):  113.156
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274203,113.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.2997
  maximum absolute entry in einsum_ir solution: 52.2997
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137183
  time (eval):    0.0208375
  gflops (eval):  148.903
  gflops (total): 139.706
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137183,0.0208375,148.903,139.706

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108722
  gflops (total): 28.5386
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276572
  gflops (eval):  112.187
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276572,112.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9942
  maximum absolute entry in einsum_ir solution: 55.9942
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137434
  time (eval):    0.0211327
  gflops (eval):  146.823
  gflops (total): 137.858
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137434,0.0211327,146.823,137.858

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109726
  gflops (total): 28.2773
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274067
  gflops (eval):  113.212
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274067,113.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.9891
  maximum absolute entry in einsum_ir solution: 52.9891
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00140829
  time (eval):    0.0208975
  gflops (eval):  148.476
  gflops (total): 139.102
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00140829,0.0208975,148.476,139.102

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111725
  gflops (total): 27.7714
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.7714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276299
  gflops (eval):  112.298
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276299,112.298,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1454
  maximum absolute entry in einsum_ir solution: 55.1454
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137705
  time (eval):    0.0208664
  gflops (eval):  148.697
  gflops (total): 139.491
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137705,0.0208664,148.697,139.491

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108835
  gflops (total): 28.509
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277521
  gflops (eval):  111.803
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277521,111.803,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.8154
  maximum absolute entry in einsum_ir solution: 51.8154
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138788
  time (eval):    0.0209191
  gflops (eval):  148.322
  gflops (total): 139.094
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138788,0.0209191,148.322,139.094

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111069
  gflops (total): 27.9355
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272069
  gflops (eval):  114.043
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272069,114.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3007
  maximum absolute entry in einsum_ir solution: 52.3007
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013804
  time (eval):    0.0208203
  gflops (eval):  149.026
  gflops (total): 139.76
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013804,0.0208203,149.026,139.76

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109986
  gflops (total): 28.2106
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027593
  gflops (eval):  112.448
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027593,112.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4387
  maximum absolute entry in einsum_ir solution: 55.4387
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138707
  time (eval):    0.0207787
  gflops (eval):  149.324
  gflops (total): 139.98
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138707,0.0207787,149.324,139.98

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108391
  gflops (total): 28.6258
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0270767
  gflops (eval):  114.592
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0270767,114.592,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4907
  maximum absolute entry in einsum_ir solution: 52.4907
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138854
  time (eval):    0.0208389
  gflops (eval):  148.893
  gflops (total): 139.592
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138854,0.0208389,148.893,139.592

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109341
  gflops (total): 28.3771
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277369
  gflops (eval):  111.864
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277369,111.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1665
  maximum absolute entry in einsum_ir solution: 54.1665
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138617
  time (eval):    0.0207909
  gflops (eval):  149.237
  gflops (total): 139.909
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138617,0.0207909,149.237,139.909

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109528
  gflops (total): 28.3286
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276773
  gflops (eval):  112.105
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276773,112.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3413
  maximum absolute entry in einsum_ir solution: 52.3413
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138045
  time (eval):    0.0206016
  gflops (eval):  150.608
  gflops (total): 141.15
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138045,0.0206016,150.608,141.15

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110122
  gflops (total): 28.1758
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1758

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274262
  gflops (eval):  113.132
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274262,113.132,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.188
  maximum absolute entry in einsum_ir solution: 53.188
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00148669
  time (eval):    0.020895
  gflops (eval):  148.493
  gflops (total): 138.63
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00148669,0.020895,148.493,138.63

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.113689
  gflops (total): 27.2918
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.2918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.02789
  gflops (eval):  111.25
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.02789,111.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.384
  maximum absolute entry in einsum_ir solution: 58.3841
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137661
  time (eval):    0.0206813
  gflops (eval):  150.028
  gflops (total): 140.665
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137661,0.0206813,150.028,140.665

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110165
  gflops (total): 28.1648
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275491
  gflops (eval):  112.627
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275491,112.627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1942
  maximum absolute entry in einsum_ir solution: 53.1942
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139212
  time (eval):    0.0210782
  gflops (eval):  147.203
  gflops (total): 138.083
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139212,0.0210782,147.203,138.083

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108812
  gflops (total): 28.515
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273602
  gflops (eval):  113.404
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273602,113.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2157
  maximum absolute entry in einsum_ir solution: 53.2157
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0014034
  time (eval):    0.0209803
  gflops (eval):  147.889
  gflops (total): 138.617
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0014034,0.0209803,147.889,138.617

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110559
  gflops (total): 28.0643
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027441
  gflops (eval):  113.071
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027441,113.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4061
  maximum absolute entry in einsum_ir solution: 51.4061
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00162363
  time (eval):    0.0209474
  gflops (eval):  148.122
  gflops (total): 137.467
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00162363,0.0209474,148.122,137.467

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109855
  gflops (total): 28.2443
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274396
  gflops (eval):  113.076
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274396,113.076,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5074
  maximum absolute entry in einsum_ir solution: 56.5074
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138209
  time (eval):    0.0208844
  gflops (eval):  148.569
  gflops (total): 139.347
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138209,0.0208844,148.569,139.347

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110111
  gflops (total): 28.1785
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278245
  gflops (eval):  111.512
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278245,111.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.358
  maximum absolute entry in einsum_ir solution: 55.358
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138521
  time (eval):    0.0208577
  gflops (eval):  148.759
  gflops (total): 139.495
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138521,0.0208577,148.759,139.495

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109681
  gflops (total): 28.289
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277083
  gflops (eval):  111.98
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277083,111.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1332
  maximum absolute entry in einsum_ir solution: 53.1332
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137506
  time (eval):    0.0206061
  gflops (eval):  150.575
  gflops (total): 141.156
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137506,0.0206061,150.575,141.156

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110658
  gflops (total): 28.0391
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0279177
  gflops (eval):  111.14
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0279177,111.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.6826
  maximum absolute entry in einsum_ir solution: 51.6826
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137324
  time (eval):    0.0208568
  gflops (eval):  148.766
  gflops (total): 139.576
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137324,0.0208568,148.766,139.576

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11172
  gflops (total): 27.7727
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.7727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274596
  gflops (eval):  112.994
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274596,112.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.9152
  maximum absolute entry in einsum_ir solution: 51.9152
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138748
  time (eval):    0.0209257
  gflops (eval):  148.275
  gflops (total): 139.055
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138748,0.0209257,148.275,139.055

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108832
  gflops (total): 28.5098
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0269984
  gflops (eval):  114.924
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0269984,114.924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9099
  maximum absolute entry in einsum_ir solution: 53.9099
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138459
  time (eval):    0.0207519
  gflops (eval):  149.517
  gflops (total): 140.165
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138459,0.0207519,149.517,140.165

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110142
  gflops (total): 28.1706
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273067
  gflops (eval):  113.627
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273067,113.627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6506
  maximum absolute entry in einsum_ir solution: 54.6506
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00166833
  time (eval):    0.0208468
  gflops (eval):  148.836
  gflops (total): 137.808
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00166833,0.0208468,148.836,137.808

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108664
  gflops (total): 28.5538
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275198
  gflops (eval):  112.747
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275198,112.747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.133
  maximum absolute entry in einsum_ir solution: 54.133
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137535
  time (eval):    0.0209489
  gflops (eval):  148.111
  gflops (total): 138.986
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137535,0.0209489,148.111,138.986

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.114554
  gflops (total): 27.0856
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.0856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276157
  gflops (eval):  112.355
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276157,112.355,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3837
  maximum absolute entry in einsum_ir solution: 53.3837
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00136425
  time (eval):    0.0206709
  gflops (eval):  150.104
  gflops (total): 140.81
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00136425,0.0206709,150.104,140.81

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110571
  gflops (total): 28.0614
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278141
  gflops (eval):  111.554
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278141,111.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.9396
  maximum absolute entry in einsum_ir solution: 50.9396
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139335
  time (eval):    0.0208308
  gflops (eval):  148.951
  gflops (total): 139.613
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139335,0.0208308,148.951,139.613

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109265
  gflops (total): 28.3968
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276519
  gflops (eval):  112.208
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276519,112.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4367
  maximum absolute entry in einsum_ir solution: 51.4367
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138695
  time (eval):    0.0207351
  gflops (eval):  149.639
  gflops (total): 140.257
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138695,0.0207351,149.639,140.257

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109172
  gflops (total): 28.4208
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275335
  gflops (eval):  112.691
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275335,112.691,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.8342
  maximum absolute entry in einsum_ir solution: 49.8342
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.001392
  time (eval):    0.0205661
  gflops (eval):  150.868
  gflops (total): 141.304
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.001392,0.0205661,150.868,141.304

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10888
  gflops (total): 28.4971
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273749
  gflops (eval):  113.343
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273749,113.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.2073
  maximum absolute entry in einsum_ir solution: 51.2073
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137093
  time (eval):    0.0206982
  gflops (eval):  149.905
  gflops (total): 140.593
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137093,0.0206982,149.905,140.593

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109401
  gflops (total): 28.3615
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277542
  gflops (eval):  111.794
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277542,111.794,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3346
  maximum absolute entry in einsum_ir solution: 55.3346
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138349
  time (eval):    0.0209377
  gflops (eval):  148.191
  gflops (total): 139.006
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138349,0.0209377,148.191,139.006

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110867
  gflops (total): 27.9863
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274898
  gflops (eval):  112.87
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274898,112.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3293
  maximum absolute entry in einsum_ir solution: 52.3293
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137115
  time (eval):    0.0207427
  gflops (eval):  149.584
  gflops (total): 140.309
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137115,0.0207427,149.584,140.309

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111206
  gflops (total): 27.901
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271933
  gflops (eval):  114.1
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271933,114.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7036
  maximum absolute entry in einsum_ir solution: 51.7036
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00141047
  time (eval):    0.0209571
  gflops (eval):  148.054
  gflops (total): 138.718
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00141047,0.0209571,148.054,138.718

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109718
  gflops (total): 28.2795
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273954
  gflops (eval):  113.259
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273954,113.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5511
  maximum absolute entry in einsum_ir solution: 53.5511
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00140233
  time (eval):    0.0206662
  gflops (eval):  150.138
  gflops (total): 140.597
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00140233,0.0206662,150.138,140.597

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110582
  gflops (total): 28.0585
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275076
  gflops (eval):  112.797
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275076,112.797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4722
  maximum absolute entry in einsum_ir solution: 60.4722
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137924
  time (eval):    0.0210593
  gflops (eval):  147.335
  gflops (total): 138.278
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137924,0.0210593,147.335,138.278

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111547
  gflops (total): 27.8158
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.8158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272987
  gflops (eval):  113.66
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272987,113.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.7555
  maximum absolute entry in einsum_ir solution: 47.7555
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138401
  time (eval):    0.0207862
  gflops (eval):  149.271
  gflops (total): 139.952
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138401,0.0207862,149.271,139.952

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109336
  gflops (total): 28.3782
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275583
  gflops (eval):  112.589
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275583,112.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1978
  maximum absolute entry in einsum_ir solution: 56.1978
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137888
  time (eval):    0.0207229
  gflops (eval):  149.727
  gflops (total): 140.386
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137888,0.0207229,149.727,140.386

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109392
  gflops (total): 28.3639
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275418
  gflops (eval):  112.657
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275418,112.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.3301
  maximum absolute entry in einsum_ir solution: 51.3301
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013683
  time (eval):    0.0208595
  gflops (eval):  148.746
  gflops (total): 139.59
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013683,0.0208595,148.746,139.59

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109473
  gflops (total): 28.3428
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273593
  gflops (eval):  113.408
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273593,113.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7336
  maximum absolute entry in einsum_ir solution: 51.7336
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137665
  time (eval):    0.0210796
  gflops (eval):  147.193
  gflops (total): 138.17
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137665,0.0210796,147.193,138.17

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11366
  gflops (total): 27.2987
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.2987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277602
  gflops (eval):  111.77
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277602,111.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4526
  maximum absolute entry in einsum_ir solution: 54.4526
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137799
  time (eval):    0.0207863
  gflops (eval):  149.27
  gflops (total): 139.99
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137799,0.0207863,149.27,139.99

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111734
  gflops (total): 27.7693
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.7693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273257
  gflops (eval):  113.548
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273257,113.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3167
  maximum absolute entry in einsum_ir solution: 53.3167
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00147551
  time (eval):    0.020883
  gflops (eval):  148.579
  gflops (total): 138.773
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00147551,0.020883,148.579,138.773

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111134
  gflops (total): 27.9192
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278959
  gflops (eval):  111.227
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278959,111.227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.8004
  maximum absolute entry in einsum_ir solution: 53.8004
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00150663
  time (eval):    0.0207582
  gflops (eval):  149.472
  gflops (total): 139.357
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00150663,0.0207582,149.472,139.357

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11138
  gflops (total): 27.8574
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.8574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027527
  gflops (eval):  112.717
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027527,112.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7344
  maximum absolute entry in einsum_ir solution: 54.7344
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137397
  time (eval):    0.0212582
  gflops (eval):  145.956
  gflops (total): 137.096
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137397,0.0212582,145.956,137.096

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111494
  gflops (total): 27.8291
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.8291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274383
  gflops (eval):  113.082
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274383,113.082,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.361
  maximum absolute entry in einsum_ir solution: 57.361
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144404
  time (eval):    0.0205307
  gflops (eval):  151.129
  gflops (total): 141.197
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144404,0.0205307,151.129,141.197

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110003
  gflops (total): 28.2063
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274033
  gflops (eval):  113.226
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274033,113.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4272
  maximum absolute entry in einsum_ir solution: 54.4272
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137166
  time (eval):    0.0208996
  gflops (eval):  148.461
  gflops (total): 139.317
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137166,0.0208996,148.461,139.317

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110308
  gflops (total): 28.1283
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275077
  gflops (eval):  112.796
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275077,112.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6832
  maximum absolute entry in einsum_ir solution: 55.6832
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138221
  time (eval):    0.0206784
  gflops (eval):  150.049
  gflops (total): 140.647
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138221,0.0206784,150.049,140.647

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109111
  gflops (total): 28.4369
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273012
  gflops (eval):  113.65
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273012,113.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1468
  maximum absolute entry in einsum_ir solution: 52.1468
  maximum element-wise difference:              2.00272e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144634
  time (eval):    0.0209849
  gflops (eval):  147.857
  gflops (total): 138.323
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144634,0.0209849,147.857,138.323

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110781
  gflops (total): 28.0081
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0081

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277936
  gflops (eval):  111.636
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277936,111.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5987
  maximum absolute entry in einsum_ir solution: 57.5987
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142042
  time (eval):    0.0207732
  gflops (eval):  149.364
  gflops (total): 139.804
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142042,0.0207732,149.364,139.804

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110267
  gflops (total): 28.1387
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276702
  gflops (eval):  112.134
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276702,112.134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.9684
  maximum absolute entry in einsum_ir solution: 51.9684
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013973
  time (eval):    0.0209296
  gflops (eval):  148.248
  gflops (total): 138.97
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013973,0.0209296,148.248,138.97

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110109
  gflops (total): 28.1792
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272785
  gflops (eval):  113.744
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272785,113.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5315
  maximum absolute entry in einsum_ir solution: 52.5315
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137448
  time (eval):    0.0204942
  gflops (eval):  151.398
  gflops (total): 141.882
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137448,0.0204942,151.398,141.882

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108402
  gflops (total): 28.6227
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275856
  gflops (eval):  112.478
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275856,112.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3015
  maximum absolute entry in einsum_ir solution: 58.3015
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137661
  time (eval):    0.0208094
  gflops (eval):  149.104
  gflops (total): 139.852
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137661,0.0208094,149.104,139.852

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111215
  gflops (total): 27.899
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274394
  gflops (eval):  113.077
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274394,113.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8015
  maximum absolute entry in einsum_ir solution: 54.8015
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144365
  time (eval):    0.0206362
  gflops (eval):  150.356
  gflops (total): 140.525
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144365,0.0206362,150.356,140.525

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110051
  gflops (total): 28.194
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.194

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273339
  gflops (eval):  113.514
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273339,113.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.2394
  maximum absolute entry in einsum_ir solution: 52.2394
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139235
  time (eval):    0.0208449
  gflops (eval):  148.85
  gflops (total): 139.53
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139235,0.0208449,148.85,139.53

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110655
  gflops (total): 28.04
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272953
  gflops (eval):  113.674
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272953,113.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2501
  maximum absolute entry in einsum_ir solution: 53.2501
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137888
  time (eval):    0.0208097
  gflops (eval):  149.102
  gflops (total): 139.836
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137888,0.0208097,149.102,139.836

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109642
  gflops (total): 28.2991
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273534
  gflops (eval):  113.433
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273534,113.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4482
  maximum absolute entry in einsum_ir solution: 56.4482
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142349
  time (eval):    0.0209727
  gflops (eval):  147.943
  gflops (total): 138.54
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142349,0.0209727,147.943,138.54

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110094
  gflops (total): 28.1828
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273558
  gflops (eval):  113.423
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273558,113.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4116
  maximum absolute entry in einsum_ir solution: 51.4116
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137999
  time (eval):    0.0208498
  gflops (eval):  148.815
  gflops (total): 139.577
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137999,0.0208498,148.815,139.577

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109273
  gflops (total): 28.3946
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276044
  gflops (eval):  112.401
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276044,112.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7361
  maximum absolute entry in einsum_ir solution: 51.7361
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00146519
  time (eval):    0.0207854
  gflops (eval):  149.276
  gflops (total): 139.447
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00146519,0.0207854,149.276,139.447

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.113865
  gflops (total): 27.2496
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.2496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274888
  gflops (eval):  112.874
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274888,112.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.2944
  maximum absolute entry in einsum_ir solution: 50.2944
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139514
  time (eval):    0.0209254
  gflops (eval):  148.277
  gflops (total): 139.009
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139514,0.0209254,148.277,139.009

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109273
  gflops (total): 28.3947
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276896
  gflops (eval):  112.055
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276896,112.055,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0533
  maximum absolute entry in einsum_ir solution: 59.0533
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139447
  time (eval):    0.020879
  gflops (eval):  148.607
  gflops (total): 139.303
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139447,0.020879,148.607,139.303

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109158
  gflops (total): 28.4246
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276431
  gflops (eval):  112.244
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276431,112.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1618
  maximum absolute entry in einsum_ir solution: 58.1618
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00136884
  time (eval):    0.0209651
  gflops (eval):  147.997
  gflops (total): 138.926
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00136884,0.0209651,147.997,138.926

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108949
  gflops (total): 28.4792
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273968
  gflops (eval):  113.253
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273968,113.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.3224
  maximum absolute entry in einsum_ir solution: 51.3224
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00136936
  time (eval):    0.0206611
  gflops (eval):  150.174
  gflops (total): 140.84
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00136936,0.0206611,150.174,140.84

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110405
  gflops (total): 28.1034
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273552
  gflops (eval):  113.425
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273552,113.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1967
  maximum absolute entry in einsum_ir solution: 51.1968
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143991
  time (eval):    0.0209673
  gflops (eval):  147.982
  gflops (total): 138.472
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143991,0.0209673,147.982,138.472

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.107947
  gflops (total): 28.7434
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.7434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276692
  gflops (eval):  112.138
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276692,112.138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1186
  maximum absolute entry in einsum_ir solution: 52.1186
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137883
  time (eval):    0.0207681
  gflops (eval):  149.401
  gflops (total): 140.099
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137883,0.0207681,149.401,140.099

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110858
  gflops (total): 27.9887
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277183
  gflops (eval):  111.939
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277183,111.939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8158
  maximum absolute entry in einsum_ir solution: 57.8158
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00145146
  time (eval):    0.0206832
  gflops (eval):  150.014
  gflops (total): 140.177
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00145146,0.0206832,150.014,140.177

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110539
  gflops (total): 28.0695
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275435
  gflops (eval):  112.65
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275435,112.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.6691
  maximum absolute entry in einsum_ir solution: 51.6691
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137925
  time (eval):    0.0207936
  gflops (eval):  149.217
  gflops (total): 139.935
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137925,0.0207936,149.217,139.935

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112464
  gflops (total): 27.589
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274117
  gflops (eval):  113.191
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274117,113.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1781
  maximum absolute entry in einsum_ir solution: 58.1781
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137617
  time (eval):    0.0208478
  gflops (eval):  148.83
  gflops (total): 139.614
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137617,0.0208478,148.83,139.614

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110703
  gflops (total): 28.0278
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273611
  gflops (eval):  113.401
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273611,113.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9925
  maximum absolute entry in einsum_ir solution: 53.9925
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138642
  time (eval):    0.0206818
  gflops (eval):  150.024
  gflops (total): 140.599
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138642,0.0206818,150.024,140.599

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111607
  gflops (total): 27.8009
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.8009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.02706
  gflops (eval):  114.662
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.02706,114.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6525
  maximum absolute entry in einsum_ir solution: 56.6525
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138322
  time (eval):    0.0208254
  gflops (eval):  148.99
  gflops (total): 139.71
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138322,0.0208254,148.99,139.71

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110165
  gflops (total): 28.1648
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027261
  gflops (eval):  113.817
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027261,113.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.3607
  maximum absolute entry in einsum_ir solution: 51.3607
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00136828
  time (eval):    0.0207125
  gflops (eval):  149.802
  gflops (total): 140.519
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00136828,0.0207125,149.802,140.519

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.113067
  gflops (total): 27.4418
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.4418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274361
  gflops (eval):  113.091
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274361,113.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.8705
  maximum absolute entry in einsum_ir solution: 51.8705
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136572
  time (eval):    0.0171215
  gflops (eval):  158.536
  gflops (total): 146.824
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136572,0.0171215,158.536,146.824

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104056
  gflops (total): 26.0856
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258506
  gflops (eval):  105.002
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258506,105.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.841
  maximum absolute entry in einsum_ir solution: 103.841
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137436
  time (eval):    0.0169821
  gflops (eval):  159.837
  gflops (total): 147.87
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137436,0.0169821,159.837,147.87

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.103836
  gflops (total): 26.1409
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.1409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256988
  gflops (eval):  105.623
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256988,105.623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.275
  maximum absolute entry in einsum_ir solution: 106.275
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00165773
  time (eval):    0.0170737
  gflops (eval):  158.979
  gflops (total): 144.91
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00165773,0.0170737,158.979,144.91

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.101821
  gflops (total): 26.6583
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.6583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257229
  gflops (eval):  105.523
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257229,105.523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.798
  maximum absolute entry in einsum_ir solution: 112.798
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00140022
  time (eval):    0.0170756
  gflops (eval):  158.962
  gflops (total): 146.915
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00140022,0.0170756,158.962,146.915

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.106122
  gflops (total): 25.5777
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.5777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259218
  gflops (eval):  104.714
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259218,104.714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.698
  maximum absolute entry in einsum_ir solution: 102.698
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013786
  time (eval):    0.0171307
  gflops (eval):  158.451
  gflops (total): 146.649
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013786,0.0171307,158.451,146.649

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104495
  gflops (total): 25.976
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259577
  gflops (eval):  104.569
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259577,104.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5773
  maximum absolute entry in einsum_ir solution: 99.5773
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137971
  time (eval):    0.0171026
  gflops (eval):  158.711
  gflops (total): 146.863
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137971,0.0171026,158.711,146.863

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.103849
  gflops (total): 26.1378
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.1378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257971
  gflops (eval):  105.22
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257971,105.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.857
  maximum absolute entry in einsum_ir solution: 110.857
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143313
  time (eval):    0.0172008
  gflops (eval):  157.805
  gflops (total): 145.668
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143313,0.0172008,157.805,145.668

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104377
  gflops (total): 26.0053
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259995
  gflops (eval):  104.401
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259995,104.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.891
  maximum absolute entry in einsum_ir solution: 104.891
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143848
  time (eval):    0.0169313
  gflops (eval):  160.317
  gflops (total): 147.763
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143848,0.0169313,160.317,147.763

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104558
  gflops (total): 25.9605
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256984
  gflops (eval):  105.624
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256984,105.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.335
  maximum absolute entry in einsum_ir solution: 101.335
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137416
  time (eval):    0.01702
  gflops (eval):  159.481
  gflops (total): 147.567
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137416,0.01702,159.481,147.567

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104405
  gflops (total): 25.9986
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257169
  gflops (eval):  105.548
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257169,105.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.619
  maximum absolute entry in einsum_ir solution: 112.619
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137234
  time (eval):    0.0169558
  gflops (eval):  160.085
  gflops (total): 148.099
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137234,0.0169558,160.085,148.099

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104219
  gflops (total): 26.0448
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256956
  gflops (eval):  105.636
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256956,105.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.934
  maximum absolute entry in einsum_ir solution: 115.934
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.001374
  time (eval):    0.0173554
  gflops (eval):  156.399
  gflops (total): 144.926
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.001374,0.0173554,156.399,144.926

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104649
  gflops (total): 25.9378
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025739
  gflops (eval):  105.457
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025739,105.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.611
  maximum absolute entry in einsum_ir solution: 100.611
  maximum element-wise difference:              9.53674e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00149242
  time (eval):    0.0167298
  gflops (eval):  162.248
  gflops (total): 148.96
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00149242,0.0167298,162.248,148.96

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104527
  gflops (total): 25.9681
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257678
  gflops (eval):  105.34
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257678,105.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.565
  maximum absolute entry in einsum_ir solution: 106.565
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143692
  time (eval):    0.0168727
  gflops (eval):  160.874
  gflops (total): 148.249
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143692,0.0168727,160.874,148.249

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104182
  gflops (total): 26.054
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259323
  gflops (eval):  104.672
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259323,104.672,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.965
  maximum absolute entry in einsum_ir solution: 107.965
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137665
  time (eval):    0.0170205
  gflops (eval):  159.477
  gflops (total): 147.543
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137665,0.0170205,159.477,147.543

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104307
  gflops (total): 26.0228
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256748
  gflops (eval):  105.721
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256748,105.721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.802
  maximum absolute entry in einsum_ir solution: 109.802
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00135815
  time (eval):    0.017041
  gflops (eval):  159.285
  gflops (total): 147.527
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00135815,0.017041,159.285,147.527

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.106497
  gflops (total): 25.4877
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.4877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256634
  gflops (eval):  105.768
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256634,105.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.974
  maximum absolute entry in einsum_ir solution: 105.974
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137099
  time (eval):    0.0170383
  gflops (eval):  159.31
  gflops (total): 147.446
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137099,0.0170383,159.31,147.446

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104587
  gflops (total): 25.9532
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259237
  gflops (eval):  104.706
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259237,104.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.411
  maximum absolute entry in einsum_ir solution: 101.411
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137685
  time (eval):    0.016963
  gflops (eval):  160.017
  gflops (total): 148.004
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137685,0.016963,160.017,148.004

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104436
  gflops (total): 25.9908
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257621
  gflops (eval):  105.363
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257621,105.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.551
  maximum absolute entry in einsum_ir solution: 104.551
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138004
  time (eval):    0.0171037
  gflops (eval):  158.7
  gflops (total): 146.851
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138004,0.0171037,158.7,146.851

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104514
  gflops (total): 25.9714
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259507
  gflops (eval):  104.597
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259507,104.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.567
  maximum absolute entry in einsum_ir solution: 106.567
  maximum element-wise difference:              8.01086e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137078
  time (eval):    0.0174088
  gflops (eval):  155.919
  gflops (total): 144.538
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137078,0.0174088,155.919,144.538

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104678
  gflops (total): 25.9306
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257461
  gflops (eval):  105.429
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257461,105.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.017
  maximum absolute entry in einsum_ir solution: 105.017
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137805
  time (eval):    0.0170893
  gflops (eval):  158.835
  gflops (total): 146.982
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137805,0.0170893,158.835,146.982

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104237
  gflops (total): 26.0404
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259226
  gflops (eval):  104.711
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259226,104.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.1487
  maximum absolute entry in einsum_ir solution: 99.1487
  maximum element-wise difference:              6.86646e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136537
  time (eval):    0.0170233
  gflops (eval):  159.45
  gflops (total): 147.611
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136537,0.0170233,159.45,147.611

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104176
  gflops (total): 26.0556
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257388
  gflops (eval):  105.458
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257388,105.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.61
  maximum absolute entry in einsum_ir solution: 103.61
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013744
  time (eval):    0.0163177
  gflops (eval):  166.345
  gflops (total): 153.423
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013744,0.0163177,166.345,153.423

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104623
  gflops (total): 25.9444
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257633
  gflops (eval):  105.358
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257633,105.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.866
  maximum absolute entry in einsum_ir solution: 104.866
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137171
  time (eval):    0.0172259
  gflops (eval):  157.574
  gflops (total): 145.952
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137171,0.0172259,157.574,145.952

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104147
  gflops (total): 26.0629
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258168
  gflops (eval):  105.14
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258168,105.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.153
  maximum absolute entry in einsum_ir solution: 107.153
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137827
  time (eval):    0.0170054
  gflops (eval):  159.618
  gflops (total): 147.651
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137827,0.0170054,159.618,147.651

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104219
  gflops (total): 26.0449
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257002
  gflops (eval):  105.617
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257002,105.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.535
  maximum absolute entry in einsum_ir solution: 108.535
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137409
  time (eval):    0.0171305
  gflops (eval):  158.453
  gflops (total): 146.686
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137409,0.0171305,158.453,146.686

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.106184
  gflops (total): 25.5629
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.5629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259687
  gflops (eval):  104.525
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259687,104.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.13
  maximum absolute entry in einsum_ir solution: 111.13
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00135332
  time (eval):    0.0173098
  gflops (eval):  156.811
  gflops (total): 145.44
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00135332,0.0173098,156.811,145.44

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104236
  gflops (total): 26.0406
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257916
  gflops (eval):  105.243
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257916,105.243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.649
  maximum absolute entry in einsum_ir solution: 104.649
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00176917
  time (eval):    0.0170274
  gflops (eval):  159.412
  gflops (total): 144.408
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00176917,0.0170274,159.412,144.408

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104511
  gflops (total): 25.972
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259953
  gflops (eval):  104.418
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259953,104.418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.237
  maximum absolute entry in einsum_ir solution: 104.237
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.001364
  time (eval):    0.0171382
  gflops (eval):  158.381
  gflops (total): 146.705
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.001364,0.0171382,158.381,146.705

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104439
  gflops (total): 25.99
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256873
  gflops (eval):  105.67
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256873,105.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.583
  maximum absolute entry in einsum_ir solution: 100.583
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139807
  time (eval):    0.0169646
  gflops (eval):  160.002
  gflops (total): 147.82
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139807,0.0169646,160.002,147.82

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104573
  gflops (total): 25.9566
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257467
  gflops (eval):  105.426
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257467,105.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.514
  maximum absolute entry in einsum_ir solution: 104.514
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138561
  time (eval):    0.0181835
  gflops (eval):  149.276
  gflops (total): 138.707
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138561,0.0181835,149.276,138.707

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10619
  gflops (total): 25.5614
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.5614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257812
  gflops (eval):  105.285
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257812,105.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.329
  maximum absolute entry in einsum_ir solution: 105.329
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137529
  time (eval):    0.0172692
  gflops (eval):  157.18
  gflops (total): 145.586
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137529,0.0172692,157.18,145.586

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10478
  gflops (total): 25.9054
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257203
  gflops (eval):  105.534
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257203,105.534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.371
  maximum absolute entry in einsum_ir solution: 107.371
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137407
  time (eval):    0.0171526
  gflops (eval):  158.249
  gflops (total): 146.512
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137407,0.0171526,158.249,146.512

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104704
  gflops (total): 25.9242
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9242

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258171
  gflops (eval):  105.138
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258171,105.138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.716
  maximum absolute entry in einsum_ir solution: 100.716
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0014072
  time (eval):    0.0172227
  gflops (eval):  157.604
  gflops (total): 145.699
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0014072,0.0172227,157.604,145.699

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.103854
  gflops (total): 26.1364
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.1364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260684
  gflops (eval):  104.125
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260684,104.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.482
  maximum absolute entry in einsum_ir solution: 101.482
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137261
  time (eval):    0.017043
  gflops (eval):  159.266
  gflops (total): 147.395
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137261,0.017043,159.266,147.395

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104131
  gflops (total): 26.067
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025749
  gflops (eval):  105.417
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025749,105.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.644
  maximum absolute entry in einsum_ir solution: 102.644
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137104
  time (eval):    0.0171759
  gflops (eval):  158.033
  gflops (total): 146.351
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137104,0.0171759,158.033,146.351

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.105963
  gflops (total): 25.6163
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.6163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257785
  gflops (eval):  105.296
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257785,105.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.693
  maximum absolute entry in einsum_ir solution: 102.693
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137222
  time (eval):    0.0171238
  gflops (eval):  158.515
  gflops (total): 146.754
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137222,0.0171238,158.515,146.754

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10472
  gflops (total): 25.9203
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256962
  gflops (eval):  105.633
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256962,105.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.798
  maximum absolute entry in einsum_ir solution: 104.798
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137675
  time (eval):    0.0170374
  gflops (eval):  159.319
  gflops (total): 147.407
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137675,0.0170374,159.319,147.407

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.103981
  gflops (total): 26.1045
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.1045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257064
  gflops (eval):  105.591
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257064,105.591,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.397
  maximum absolute entry in einsum_ir solution: 101.397
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142398
  time (eval):    0.0170472
  gflops (eval):  159.227
  gflops (total): 146.952
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142398,0.0170472,159.227,146.952

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104505
  gflops (total): 25.9737
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259509
  gflops (eval):  104.596
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259509,104.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.351
  maximum absolute entry in einsum_ir solution: 101.351
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136396
  time (eval):    0.0168117
  gflops (eval):  161.457
  gflops (total): 149.341
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136396,0.0168117,161.457,149.341

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104196
  gflops (total): 26.0507
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257043
  gflops (eval):  105.6
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257043,105.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.129
  maximum absolute entry in einsum_ir solution: 105.129
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137112
  time (eval):    0.0169741
  gflops (eval):  159.913
  gflops (total): 147.961
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137112,0.0169741,159.913,147.961

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104695
  gflops (total): 25.9264
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256548
  gflops (eval):  105.804
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256548,105.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.325
  maximum absolute entry in einsum_ir solution: 100.325
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137008
  time (eval):    0.0164216
  gflops (eval):  165.292
  gflops (total): 152.564
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137008,0.0164216,165.292,152.564

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104533
  gflops (total): 25.9666
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259561
  gflops (eval):  104.575
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259561,104.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.327
  maximum absolute entry in einsum_ir solution: 101.327
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139257
  time (eval):    0.0167999
  gflops (eval):  161.57
  gflops (total): 149.203
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139257,0.0167999,161.57,149.203

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104448
  gflops (total): 25.9877
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257322
  gflops (eval):  105.485
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257322,105.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      95.0524
  maximum absolute entry in einsum_ir solution: 95.0524
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00163038
  time (eval):    0.0171151
  gflops (eval):  158.595
  gflops (total): 144.801
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00163038,0.0171151,158.595,144.801

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.106176
  gflops (total): 25.5648
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.5648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.02567
  gflops (eval):  105.741
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.02567,105.741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.913
  maximum absolute entry in einsum_ir solution: 103.913
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137413
  time (eval):    0.016894
  gflops (eval):  160.671
  gflops (total): 148.585
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137413,0.016894,160.671,148.585

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104639
  gflops (total): 25.9404
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025961
  gflops (eval):  104.556
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025961,104.556,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.9253
  maximum absolute entry in einsum_ir solution: 97.9253
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138673
  time (eval):    0.0172554
  gflops (eval):  157.305
  gflops (total): 145.604
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138673,0.0172554,157.305,145.604

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104509
  gflops (total): 25.9725
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025759
  gflops (eval):  105.376
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025759,105.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.635
  maximum absolute entry in einsum_ir solution: 103.635
  maximum element-wise difference:              0.000110626
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142693
  time (eval):    0.0172209
  gflops (eval):  157.62
  gflops (total): 145.559
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142693,0.0172209,157.62,145.559

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10577
  gflops (total): 25.6631
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.6631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258172
  gflops (eval):  105.138
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258172,105.138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.46
  maximum absolute entry in einsum_ir solution: 103.46
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013686
  time (eval):    0.017047
  gflops (eval):  159.229
  gflops (total): 147.395
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013686,0.017047,159.229,147.395

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104384
  gflops (total): 26.0036
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257165
  gflops (eval):  105.55
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257165,105.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.119
  maximum absolute entry in einsum_ir solution: 106.119
  maximum element-wise difference:              8.01086e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00140239
  time (eval):    0.0172972
  gflops (eval):  156.925
  gflops (total): 145.156
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00140239,0.0172972,156.925,145.156

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104616
  gflops (total): 25.9459
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257424
  gflops (eval):  105.444
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257424,105.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      94.3119
  maximum absolute entry in einsum_ir solution: 94.3119
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137469
  time (eval):    0.017339
  gflops (eval):  156.547
  gflops (total): 145.047
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137469,0.017339,156.547,145.047

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104571
  gflops (total): 25.9572
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025801
  gflops (eval):  105.204
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025801,105.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.4021
  maximum absolute entry in einsum_ir solution: 97.4021
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137607
  time (eval):    0.0167754
  gflops (eval):  161.807
  gflops (total): 149.54
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137607,0.0167754,161.807,149.54

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104189
  gflops (total): 26.0524
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258031
  gflops (eval):  105.196
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258031,105.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.2
  maximum absolute entry in einsum_ir solution: 109.2
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137608
  time (eval):    0.0172209
  gflops (eval):  157.621
  gflops (total): 145.958
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137608,0.0172209,157.621,145.958

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104506
  gflops (total): 25.9734
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258493
  gflops (eval):  105.008
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258493,105.008,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.113
  maximum absolute entry in einsum_ir solution: 102.113
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136455
  time (eval):    0.0170528
  gflops (eval):  159.175
  gflops (total): 147.381
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136455,0.0170528,159.175,147.381

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104302
  gflops (total): 26.0242
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0242

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260563
  gflops (eval):  104.173
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260563,104.173,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.202
  maximum absolute entry in einsum_ir solution: 104.202
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137997
  time (eval):    0.0169665
  gflops (eval):  159.985
  gflops (total): 147.951
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137997,0.0169665,159.985,147.951

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104186
  gflops (total): 26.0531
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259356
  gflops (eval):  104.658
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259356,104.658,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.444
  maximum absolute entry in einsum_ir solution: 102.444
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00149129
  time (eval):    0.0169578
  gflops (eval):  160.066
  gflops (total): 147.128
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00149129,0.0169578,160.066,147.128

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104234
  gflops (total): 26.0411
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257667
  gflops (eval):  105.344
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257667,105.344,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.044
  maximum absolute entry in einsum_ir solution: 105.044
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00143195
  time (eval):    0.0171853
  gflops (eval):  157.948
  gflops (total): 145.799
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00143195,0.0171853,157.948,145.799

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104184
  gflops (total): 26.0536
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259991
  gflops (eval):  104.402
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259991,104.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.469
  maximum absolute entry in einsum_ir solution: 112.469
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136331
  time (eval):    0.0168735
  gflops (eval):  160.866
  gflops (total): 148.84
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136331,0.0168735,160.866,148.84

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104189
  gflops (total): 26.0525
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258233
  gflops (eval):  105.113
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258233,105.113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5888
  maximum absolute entry in einsum_ir solution: 99.5889
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013811
  time (eval):    0.0170475
  gflops (eval):  159.224
  gflops (total): 147.291
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013811,0.0170475,159.224,147.291

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104504
  gflops (total): 25.9738
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260368
  gflops (eval):  104.251
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260368,104.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.647
  maximum absolute entry in einsum_ir solution: 103.647
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139714
  time (eval):    0.0172209
  gflops (eval):  157.621
  gflops (total): 145.793
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139714,0.0172209,157.621,145.793

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104552
  gflops (total): 25.9619
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257484
  gflops (eval):  105.419
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257484,105.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.776
  maximum absolute entry in einsum_ir solution: 103.776
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137903
  time (eval):    0.0171635
  gflops (eval):  158.148
  gflops (total): 146.386
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137903,0.0171635,158.148,146.386

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104147
  gflops (total): 26.063
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259121
  gflops (eval):  104.753
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259121,104.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.417
  maximum absolute entry in einsum_ir solution: 116.417
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136352
  time (eval):    0.01705
  gflops (eval):  159.201
  gflops (total): 147.412
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136352,0.01705,159.201,147.412

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.105299
  gflops (total): 25.7777
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.7777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257494
  gflops (eval):  105.415
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257494,105.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.454
  maximum absolute entry in einsum_ir solution: 108.454
  maximum element-wise difference:              6.86646e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137132
  time (eval):    0.0171293
  gflops (eval):  158.463
  gflops (total): 146.718
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137132,0.0171293,158.463,146.718

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.1043
  gflops (total): 26.0246
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257276
  gflops (eval):  105.504
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257276,105.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.211
  maximum absolute entry in einsum_ir solution: 103.211
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137143
  time (eval):    0.0170342
  gflops (eval):  159.348
  gflops (total): 147.475
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137143,0.0170342,159.348,147.475

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10415
  gflops (total): 26.062
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258726
  gflops (eval):  104.913
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258726,104.913,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.81
  maximum absolute entry in einsum_ir solution: 103.81
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136891
  time (eval):    0.017077
  gflops (eval):  158.949
  gflops (total): 147.153
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136891,0.017077,158.949,147.153

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104745
  gflops (total): 25.914
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256796
  gflops (eval):  105.701
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256796,105.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.017
  maximum absolute entry in einsum_ir solution: 102.017
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142702
  time (eval):    0.0170181
  gflops (eval):  159.499
  gflops (total): 147.16
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142702,0.0170181,159.499,147.16

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104131
  gflops (total): 26.0668
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259451
  gflops (eval):  104.62
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259451,104.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      94.9585
  maximum absolute entry in einsum_ir solution: 94.9585
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137025
  time (eval):    0.0169911
  gflops (eval):  159.753
  gflops (total): 147.831
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137025,0.0169911,159.753,147.831

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104546
  gflops (total): 25.9634
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259609
  gflops (eval):  104.556
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259609,104.556,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.349
  maximum absolute entry in einsum_ir solution: 105.349
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141315
  time (eval):    0.0169631
  gflops (eval):  160.016
  gflops (total): 147.711
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141315,0.0169631,160.016,147.711

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104121
  gflops (total): 26.0693
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260362
  gflops (eval):  104.254
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260362,104.254,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.407
  maximum absolute entry in einsum_ir solution: 108.407
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137217
  time (eval):    0.0170263
  gflops (eval):  159.422
  gflops (total): 147.532
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137217,0.0170263,159.422,147.532

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.105382
  gflops (total): 25.7574
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.7574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258369
  gflops (eval):  105.058
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258369,105.058,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.734
  maximum absolute entry in einsum_ir solution: 108.734
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138589
  time (eval):    0.0165381
  gflops (eval):  164.129
  gflops (total): 151.438
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138589,0.0165381,164.129,151.438

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.103786
  gflops (total): 26.1536
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.1536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256466
  gflops (eval):  105.837
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256466,105.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.366
  maximum absolute entry in einsum_ir solution: 114.366
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137919
  time (eval):    0.0171029
  gflops (eval):  158.708
  gflops (total): 146.865
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137919,0.0171029,158.708,146.865

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104561
  gflops (total): 25.9596
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257413
  gflops (eval):  105.448
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257413,105.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.096
  maximum absolute entry in einsum_ir solution: 101.096
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00146118
  time (eval):    0.0171638
  gflops (eval):  158.145
  gflops (total): 145.738
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00146118,0.0171638,158.145,145.738

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104183
  gflops (total): 26.0539
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025896
  gflops (eval):  104.818
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025896,104.818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.938
  maximum absolute entry in einsum_ir solution: 106.938
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136836
  time (eval):    0.0170731
  gflops (eval):  158.986
  gflops (total): 147.189
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136836,0.0170731,158.986,147.189

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10476
  gflops (total): 25.9103
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259501
  gflops (eval):  104.6
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259501,104.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.451
  maximum absolute entry in einsum_ir solution: 101.451
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137754
  time (eval):    0.0171932
  gflops (eval):  157.874
  gflops (total): 146.164
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137754,0.0171932,157.874,146.164

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104407
  gflops (total): 25.998
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256608
  gflops (eval):  105.779
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256608,105.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.629
  maximum absolute entry in einsum_ir solution: 103.629
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00149045
  time (eval):    0.0169262
  gflops (eval):  160.365
  gflops (total): 147.387
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00149045,0.0169262,160.365,147.387

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104128
  gflops (total): 26.0677
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257476
  gflops (eval):  105.422
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257476,105.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.184
  maximum absolute entry in einsum_ir solution: 101.184
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.001385
  time (eval):    0.0172234
  gflops (eval):  157.598
  gflops (total): 145.868
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.001385,0.0172234,157.598,145.868

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104592
  gflops (total): 25.952
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256998
  gflops (eval):  105.618
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256998,105.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.764
  maximum absolute entry in einsum_ir solution: 110.764
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00166529
  time (eval):    0.0168238
  gflops (eval):  161.341
  gflops (total): 146.809
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00166529,0.0168238,161.341,146.809

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104553
  gflops (total): 25.9617
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257153
  gflops (eval):  105.555
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257153,105.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.236
  maximum absolute entry in einsum_ir solution: 102.236
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138083
  time (eval):    0.0170878
  gflops (eval):  158.848
  gflops (total): 146.972
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138083,0.0170878,158.848,146.972

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.106057
  gflops (total): 25.5934
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.5934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259694
  gflops (eval):  104.522
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259694,104.522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.108
  maximum absolute entry in einsum_ir solution: 105.108
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136884
  time (eval):    0.0171547
  gflops (eval):  158.229
  gflops (total): 146.536
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136884,0.0171547,158.229,146.536

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10409
  gflops (total): 26.0771
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260122
  gflops (eval):  104.35
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260122,104.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.753
  maximum absolute entry in einsum_ir solution: 103.753
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139589
  time (eval):    0.0171716
  gflops (eval):  158.073
  gflops (total): 146.189
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139589,0.0171716,158.073,146.189

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104169
  gflops (total): 26.0574
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257737
  gflops (eval):  105.316
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257737,105.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.555
  maximum absolute entry in einsum_ir solution: 103.555
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136941
  time (eval):    0.0172701
  gflops (eval):  157.171
  gflops (total): 145.624
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136941,0.0172701,157.171,145.624

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104421
  gflops (total): 25.9944
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025977
  gflops (eval):  104.491
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025977,104.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.689
  maximum absolute entry in einsum_ir solution: 110.689
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00146847
  time (eval):    0.0171026
  gflops (eval):  158.711
  gflops (total): 146.161
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00146847,0.0171026,158.711,146.161

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104223
  gflops (total): 26.044
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257207
  gflops (eval):  105.532
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257207,105.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.2988
  maximum absolute entry in einsum_ir solution: 98.2988
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137372
  time (eval):    0.0171666
  gflops (eval):  158.119
  gflops (total): 146.404
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137372,0.0171666,158.119,146.404

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.106589
  gflops (total): 25.4659
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.4659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258231
  gflops (eval):  105.114
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258231,105.114,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.093
  maximum absolute entry in einsum_ir solution: 103.093
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137776
  time (eval):    0.0166268
  gflops (eval):  163.253
  gflops (total): 150.76
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137776,0.0166268,163.253,150.76

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.102215
  gflops (total): 26.5555
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.5555

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258426
  gflops (eval):  105.035
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258426,105.035,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.419
  maximum absolute entry in einsum_ir solution: 103.419
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136186
  time (eval):    0.0172054
  gflops (eval):  157.763
  gflops (total): 146.191
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136186,0.0172054,157.763,146.191

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10472
  gflops (total): 25.9202
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257607
  gflops (eval):  105.368
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257607,105.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.814
  maximum absolute entry in einsum_ir solution: 102.814
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00168784
  time (eval):    0.0172359
  gflops (eval):  157.484
  gflops (total): 143.438
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00168784,0.0172359,157.484,143.438

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104906
  gflops (total): 25.8744
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.8744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257136
  gflops (eval):  105.562
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257136,105.562,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.5
  maximum absolute entry in einsum_ir solution: 103.5
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00144666
  time (eval):    0.0168464
  gflops (eval):  161.124
  gflops (total): 148.382
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00144666,0.0168464,161.124,148.382

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104893
  gflops (total): 25.8774
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.8774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257059
  gflops (eval):  105.593
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257059,105.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.341
  maximum absolute entry in einsum_ir solution: 101.341
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00161219
  time (eval):    0.0171488
  gflops (eval):  158.283
  gflops (total): 144.681
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00161219,0.0171488,158.283,144.681

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.105066
  gflops (total): 25.8348
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.8348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257333
  gflops (eval):  105.481
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257333,105.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.22
  maximum absolute entry in einsum_ir solution: 106.22
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136379
  time (eval):    0.0168187
  gflops (eval):  161.39
  gflops (total): 149.285
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136379,0.0168187,161.39,149.285

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104441
  gflops (total): 25.9895
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257094
  gflops (eval):  105.579
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257094,105.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.188
  maximum absolute entry in einsum_ir solution: 103.188
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142709
  time (eval):    0.0170755
  gflops (eval):  158.963
  gflops (total): 146.702
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142709,0.0170755,158.963,146.702

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104241
  gflops (total): 26.0393
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259633
  gflops (eval):  104.547
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259633,104.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.62
  maximum absolute entry in einsum_ir solution: 105.62
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142907
  time (eval):    0.0172547
  gflops (eval):  157.312
  gflops (total): 145.279
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142907,0.0172547,157.312,145.279

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.106414
  gflops (total): 25.5076
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.5076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259339
  gflops (eval):  104.665
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259339,104.665,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.949
  maximum absolute entry in einsum_ir solution: 100.949
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138408
  time (eval):    0.0169374
  gflops (eval):  160.259
  gflops (total): 148.152
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138408,0.0169374,160.259,148.152

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104495
  gflops (total): 25.9762
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259351
  gflops (eval):  104.66
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259351,104.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.2463
  maximum absolute entry in einsum_ir solution: 97.2463
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00147258
  time (eval):    0.0172435
  gflops (eval):  157.414
  gflops (total): 145.029
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00147258,0.0172435,157.414,145.029

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104143
  gflops (total): 26.0639
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.0639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025997
  gflops (eval):  104.411
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025997,104.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.2865
  maximum absolute entry in einsum_ir solution: 99.2865
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137627
  time (eval):    0.0171646
  gflops (eval):  158.138
  gflops (total): 146.399
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137627,0.0171646,158.138,146.399

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104786
  gflops (total): 25.9039
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257442
  gflops (eval):  105.436
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257442,105.436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.17
  maximum absolute entry in einsum_ir solution: 107.17
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139165
  time (eval):    0.0172497
  gflops (eval):  157.358
  gflops (total): 145.61
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139165,0.0172497,157.358,145.61

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104659
  gflops (total): 25.9355
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260052
  gflops (eval):  104.378
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260052,104.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.949
  maximum absolute entry in einsum_ir solution: 112.949
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137555
  time (eval):    0.0171063
  gflops (eval):  158.676
  gflops (total): 146.867
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137555,0.0171063,158.676,146.867

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104401
  gflops (total): 25.9994
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257415
  gflops (eval):  105.447
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257415,105.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5639
  maximum absolute entry in einsum_ir solution: 99.5639
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013769
  time (eval):    0.0173003
  gflops (eval):  156.897
  gflops (total): 145.33
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013769,0.0173003,156.897,145.33

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104847
  gflops (total): 25.8889
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.8889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257301
  gflops (eval):  105.494
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257301,105.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.437
  maximum absolute entry in einsum_ir solution: 102.437
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142132
  time (eval):    0.0170478
  gflops (eval):  159.222
  gflops (total): 146.968
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142132,0.0170478,159.222,146.968

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.103819
  gflops (total): 26.1453
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.1453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256862
  gflops (eval):  105.674
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256862,105.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3009
  maximum absolute entry in einsum_ir solution: 98.3009
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136852
  time (eval):    0.0170659
  gflops (eval):  159.053
  gflops (total): 147.245
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136852,0.0170659,159.053,147.245

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104582
  gflops (total): 25.9545
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025763
  gflops (eval):  105.359
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025763,105.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.413
  maximum absolute entry in einsum_ir solution: 100.413
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0014386
  time (eval):    0.017203
  gflops (eval):  157.785
  gflops (total): 145.608
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0014386,0.017203,157.785,145.608

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104617
  gflops (total): 25.9457
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025693
  gflops (eval):  105.646
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025693,105.646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.456
  maximum absolute entry in einsum_ir solution: 104.456
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141166
  time (eval):    0.0171936
  gflops (eval):  157.871
  gflops (total): 145.893
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141166,0.0171936,157.871,145.893

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.104645
  gflops (total): 25.9389
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.9389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259618
  gflops (eval):  104.553
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259618,104.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.965
  maximum absolute entry in einsum_ir solution: 103.965
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139169
  time (eval):    0.0168195
  gflops (eval):  161.382
  gflops (total): 149.05
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139169,0.0168195,161.382,149.05

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10483
  gflops (total): 25.893
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,25.893

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257837
  gflops (eval):  105.275
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257837,105.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.651
  maximum absolute entry in einsum_ir solution: 100.651
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137469
  time (eval):    0.0195908
  gflops (eval):  158.498
  gflops (total): 148.105
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137469,0.0195908,158.498,148.105

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723345
  gflops (total): 42.9268
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280869
  gflops (eval):  110.553
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280869,110.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8427
  maximum absolute entry in einsum_ir solution: 56.8427
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013797
  time (eval):    0.0194258
  gflops (eval):  159.843
  gflops (total): 149.244
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013797,0.0194258,159.843,149.244

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724541
  gflops (total): 42.856
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0276144
  gflops (eval):  112.445
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0276144,112.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8109
  maximum absolute entry in einsum_ir solution: 55.8109
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137363
  time (eval):    0.0196164
  gflops (eval):  158.291
  gflops (total): 147.932
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137363,0.0196164,158.291,147.932

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0721916
  gflops (total): 43.0118
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.0118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284132
  gflops (eval):  109.283
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284132,109.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9644
  maximum absolute entry in einsum_ir solution: 53.9644
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136955
  time (eval):    0.0196571
  gflops (eval):  157.962
  gflops (total): 147.674
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136955,0.0196571,157.962,147.674

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0719447
  gflops (total): 43.1594
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283803
  gflops (eval):  109.41
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283803,109.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5887
  maximum absolute entry in einsum_ir solution: 56.5887
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136421
  time (eval):    0.0196927
  gflops (eval):  157.677
  gflops (total): 147.462
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136421,0.0196927,157.677,147.462

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727502
  gflops (total): 42.6815
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279759
  gflops (eval):  110.992
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279759,110.992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0934
  maximum absolute entry in einsum_ir solution: 56.0934
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137119
  time (eval):    0.0197039
  gflops (eval):  157.588
  gflops (total): 147.335
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137119,0.0197039,157.588,147.335

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0725209
  gflops (total): 42.8165
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278731
  gflops (eval):  111.401
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278731,111.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7371
  maximum absolute entry in einsum_ir solution: 57.7371
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137292
  time (eval):    0.0196576
  gflops (eval):  157.959
  gflops (total): 147.647
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137292,0.0196576,157.959,147.647

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0725227
  gflops (total): 42.8155
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279835
  gflops (eval):  110.962
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279835,110.962,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3966
  maximum absolute entry in einsum_ir solution: 56.3966
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138003
  time (eval):    0.0197913
  gflops (eval):  156.892
  gflops (total): 146.665
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138003,0.0197913,156.892,146.665

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0719187
  gflops (total): 43.175
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283231
  gflops (eval):  109.631
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283231,109.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.6214
  maximum absolute entry in einsum_ir solution: 52.6214
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137974
  time (eval):    0.0198064
  gflops (eval):  156.772
  gflops (total): 146.563
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137974,0.0198064,156.772,146.563

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0729316
  gflops (total): 42.5754
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.5754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028533
  gflops (eval):  108.824
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028533,108.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7104
  maximum absolute entry in einsum_ir solution: 55.7104
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139442
  time (eval):    0.0196806
  gflops (eval):  157.774
  gflops (total): 147.335
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139442,0.0196806,157.774,147.335

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724784
  gflops (total): 42.8416
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281207
  gflops (eval):  110.42
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281207,110.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1062
  maximum absolute entry in einsum_ir solution: 57.1062
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137057
  time (eval):    0.0197902
  gflops (eval):  156.9
  gflops (total): 146.738
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137057,0.0197902,156.9,146.738

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723714
  gflops (total): 42.905
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281319
  gflops (eval):  110.376
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281319,110.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4151
  maximum absolute entry in einsum_ir solution: 55.4151
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00140049
  time (eval):    0.0198488
  gflops (eval):  156.437
  gflops (total): 146.127
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00140049,0.0198488,156.437,146.127

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0725525
  gflops (total): 42.7979
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285075
  gflops (eval):  108.922
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285075,108.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0638
  maximum absolute entry in einsum_ir solution: 58.0638
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138245
  time (eval):    0.0198762
  gflops (eval):  156.222
  gflops (total): 146.063
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138245,0.0198762,156.222,146.063

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0730195
  gflops (total): 42.5241
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.5241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277636
  gflops (eval):  111.84
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277636,111.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9162
  maximum absolute entry in einsum_ir solution: 55.9162
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00146693
  time (eval):    0.0195714
  gflops (eval):  158.655
  gflops (total): 147.592
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00146693,0.0195714,158.655,147.592

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0720266
  gflops (total): 43.1103
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027628
  gflops (eval):  112.389
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027628,112.389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.395
  maximum absolute entry in einsum_ir solution: 55.395
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142011
  time (eval):    0.0196556
  gflops (eval):  157.975
  gflops (total): 147.331
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142011,0.0196556,157.975,147.331

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0729206
  gflops (total): 42.5818
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.5818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280195
  gflops (eval):  110.819
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280195,110.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9027
  maximum absolute entry in einsum_ir solution: 59.9027
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00153426
  time (eval):    0.0199044
  gflops (eval):  156.001
  gflops (total): 144.836
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00153426,0.0199044,156.001,144.836

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724196
  gflops (total): 42.8764
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278917
  gflops (eval):  111.327
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278917,111.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0094
  maximum absolute entry in einsum_ir solution: 57.0094
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138357
  time (eval):    0.0197547
  gflops (eval):  157.183
  gflops (total): 146.894
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138357,0.0197547,157.183,146.894

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0721929
  gflops (total): 43.011
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281322
  gflops (eval):  110.375
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281322,110.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0409
  maximum absolute entry in einsum_ir solution: 61.0409
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138013
  time (eval):    0.0198245
  gflops (eval):  156.629
  gflops (total): 146.434
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138013,0.0198245,156.629,146.434

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0719409
  gflops (total): 43.1617
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277122
  gflops (eval):  112.048
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277122,112.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.7815
  maximum absolute entry in einsum_ir solution: 64.7815
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139395
  time (eval):    0.019682
  gflops (eval):  157.763
  gflops (total): 147.329
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139395,0.019682,157.763,147.329

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726374
  gflops (total): 42.7479
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282115
  gflops (eval):  110.065
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282115,110.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.264
  maximum absolute entry in einsum_ir solution: 57.264
  maximum element-wise difference:              3.8147e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137324
  time (eval):    0.0197276
  gflops (eval):  157.398
  gflops (total): 147.155
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137324,0.0197276,157.398,147.155

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.071993
  gflops (total): 43.1305
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285125
  gflops (eval):  108.903
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285125,108.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3753
  maximum absolute entry in einsum_ir solution: 59.3753
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139351
  time (eval):    0.01979
  gflops (eval):  156.902
  gflops (total): 146.581
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139351,0.01979,156.902,146.581

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0731483
  gflops (total): 42.4493
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.4493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278136
  gflops (eval):  111.639
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278136,111.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5334
  maximum absolute entry in einsum_ir solution: 57.5334
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137227
  time (eval):    0.0197329
  gflops (eval):  157.356
  gflops (total): 147.125
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137227,0.0197329,157.356,147.125

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723603
  gflops (total): 42.9115
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280852
  gflops (eval):  110.56
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280852,110.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7152
  maximum absolute entry in einsum_ir solution: 54.7152
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137626
  time (eval):    0.0197756
  gflops (eval):  157.017
  gflops (total): 146.8
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137626,0.0197756,157.017,146.8

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0722121
  gflops (total): 42.9996
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283251
  gflops (eval):  109.623
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283251,109.623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6364
  maximum absolute entry in einsum_ir solution: 54.6364
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137277
  time (eval):    0.0196631
  gflops (eval):  157.915
  gflops (total): 147.61
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137277,0.0196631,157.915,147.61

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0721938
  gflops (total): 43.0105
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.0105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282307
  gflops (eval):  109.99
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282307,109.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4173
  maximum absolute entry in einsum_ir solution: 56.4173
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013853
  time (eval):    0.0195657
  gflops (eval):  158.701
  gflops (total): 148.207
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013853,0.0195657,158.701,148.207

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726575
  gflops (total): 42.736
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027629
  gflops (eval):  112.385
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027629,112.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9561
  maximum absolute entry in einsum_ir solution: 53.9561
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136412
  time (eval):    0.0198598
  gflops (eval):  156.35
  gflops (total): 146.301
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136412,0.0198598,156.35,146.301

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723302
  gflops (total): 42.9294
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0286609
  gflops (eval):  108.339
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0286609,108.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2522
  maximum absolute entry in einsum_ir solution: 53.2522
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013864
  time (eval):    0.0197639
  gflops (eval):  157.11
  gflops (total): 146.811
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013864,0.0197639,157.11,146.811

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0720181
  gflops (total): 43.1154
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0286933
  gflops (eval):  108.217
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0286933,108.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0768
  maximum absolute entry in einsum_ir solution: 56.0768
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138098
  time (eval):    0.0198573
  gflops (eval):  156.37
  gflops (total): 146.202
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138098,0.0198573,156.37,146.202

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724987
  gflops (total): 42.8296
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0276456
  gflops (eval):  112.318
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0276456,112.318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8237
  maximum absolute entry in einsum_ir solution: 61.8237
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137156
  time (eval):    0.0198595
  gflops (eval):  156.353
  gflops (total): 146.252
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137156,0.0198595,156.353,146.252

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0720147
  gflops (total): 43.1175
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277921
  gflops (eval):  111.726
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277921,111.726,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2416
  maximum absolute entry in einsum_ir solution: 57.2416
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137881
  time (eval):    0.0198297
  gflops (eval):  156.588
  gflops (total): 146.408
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137881,0.0198297,156.588,146.408

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726038
  gflops (total): 42.7676
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7676

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284189
  gflops (eval):  109.261
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284189,109.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.8684
  maximum absolute entry in einsum_ir solution: 51.8684
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013772
  time (eval):    0.0197245
  gflops (eval):  157.423
  gflops (total): 147.149
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013772,0.0197245,157.423,147.149

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0722573
  gflops (total): 42.9727
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280776
  gflops (eval):  110.59
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280776,110.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1318
  maximum absolute entry in einsum_ir solution: 56.1318
  maximum element-wise difference:              3.8147e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00193146
  time (eval):    0.0197333
  gflops (eval):  157.353
  gflops (total): 143.325
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00193146,0.0197333,157.353,143.325

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0722786
  gflops (total): 42.9601
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9601

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282116
  gflops (eval):  110.064
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282116,110.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9371
  maximum absolute entry in einsum_ir solution: 59.9371
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139651
  time (eval):    0.0196786
  gflops (eval):  157.791
  gflops (total): 147.335
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139651,0.0196786,157.791,147.335

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726086
  gflops (total): 42.7648
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279876
  gflops (eval):  110.945
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279876,110.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0157
  maximum absolute entry in einsum_ir solution: 56.0157
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013759
  time (eval):    0.0197325
  gflops (eval):  157.359
  gflops (total): 147.102
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013759,0.0197325,157.359,147.102

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727139
  gflops (total): 42.7029
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279505
  gflops (eval):  111.092
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279505,111.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8211
  maximum absolute entry in einsum_ir solution: 57.8211
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00146309
  time (eval):    0.0197163
  gflops (eval):  157.489
  gflops (total): 146.609
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00146309,0.0197163,157.489,146.609

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0722462
  gflops (total): 42.9793
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279972
  gflops (eval):  110.907
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279972,110.907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2898
  maximum absolute entry in einsum_ir solution: 62.2898
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00131182
  time (eval):    0.0196766
  gflops (eval):  157.807
  gflops (total): 147.943
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00131182,0.0196766,157.807,147.943

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727039
  gflops (total): 42.7087
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283573
  gflops (eval):  109.499
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283573,109.499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.328
  maximum absolute entry in einsum_ir solution: 53.328
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143995
  time (eval):    0.0197729
  gflops (eval):  157.037
  gflops (total): 146.378
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143995,0.0197729,157.037,146.378

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0722593
  gflops (total): 42.9715
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280592
  gflops (eval):  110.662
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280592,110.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1153
  maximum absolute entry in einsum_ir solution: 54.1153
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0016699
  time (eval):    0.0197925
  gflops (eval):  156.882
  gflops (total): 144.676
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0016699,0.0197925,156.882,144.676

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723988
  gflops (total): 42.8887
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277108
  gflops (eval):  112.053
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277108,112.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2887
  maximum absolute entry in einsum_ir solution: 54.2887
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137188
  time (eval):    0.0195867
  gflops (eval):  158.531
  gflops (total): 148.154
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137188,0.0195867,158.531,148.154

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0722172
  gflops (total): 42.9966
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0276598
  gflops (eval):  112.26
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0276598,112.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0185
  maximum absolute entry in einsum_ir solution: 56.0185
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00175313
  time (eval):    0.0197418
  gflops (eval):  157.285
  gflops (total): 144.457
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00175313,0.0197418,157.285,144.457

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0718878
  gflops (total): 43.1936
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1936

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0274793
  gflops (eval):  112.997
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0274793,112.997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2184
  maximum absolute entry in einsum_ir solution: 54.2184
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136029
  time (eval):    0.0198118
  gflops (eval):  156.729
  gflops (total): 146.66
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136029,0.0198118,156.729,146.66

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724512
  gflops (total): 42.8577
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281219
  gflops (eval):  110.416
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281219,110.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1441
  maximum absolute entry in einsum_ir solution: 53.1441
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137122
  time (eval):    0.0197505
  gflops (eval):  157.216
  gflops (total): 147.01
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137122,0.0197505,157.216,147.01

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724415
  gflops (total): 42.8634
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028291
  gflops (eval):  109.756
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028291,109.756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2129
  maximum absolute entry in einsum_ir solution: 57.2129
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138229
  time (eval):    0.0196778
  gflops (eval):  157.797
  gflops (total): 147.44
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138229,0.0196778,157.797,147.44

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0720135
  gflops (total): 43.1182
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282946
  gflops (eval):  109.742
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282946,109.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5035
  maximum absolute entry in einsum_ir solution: 58.5035
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138249
  time (eval):    0.019704
  gflops (eval):  157.587
  gflops (total): 147.255
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138249,0.019704,157.587,147.255

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0720181
  gflops (total): 43.1154
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284462
  gflops (eval):  109.157
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284462,109.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9287
  maximum absolute entry in einsum_ir solution: 57.9287
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137689
  time (eval):    0.0198947
  gflops (eval):  156.076
  gflops (total): 145.974
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137689,0.0198947,156.076,145.974

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724388
  gflops (total): 42.865
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277331
  gflops (eval):  111.963
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277331,111.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7249
  maximum absolute entry in einsum_ir solution: 56.7249
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139478
  time (eval):    0.0198203
  gflops (eval):  156.662
  gflops (total): 146.362
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139478,0.0198203,156.662,146.362

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723749
  gflops (total): 42.9029
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285186
  gflops (eval):  108.879
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285186,108.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4633
  maximum absolute entry in einsum_ir solution: 55.4633
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142859
  time (eval):    0.0199282
  gflops (eval):  155.814
  gflops (total): 145.391
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142859,0.0199282,155.814,145.391

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072416
  gflops (total): 42.8785
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282751
  gflops (eval):  109.817
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282751,109.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7014
  maximum absolute entry in einsum_ir solution: 58.7014
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138006
  time (eval):    0.0197569
  gflops (eval):  157.165
  gflops (total): 146.903
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138006,0.0197569,157.165,146.903

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0718832
  gflops (total): 43.1963
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284455
  gflops (eval):  109.159
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284455,109.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0156
  maximum absolute entry in einsum_ir solution: 56.0156
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137989
  time (eval):    0.0196716
  gflops (eval):  157.847
  gflops (total): 147.5
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137989,0.0196716,157.847,147.5

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0725843
  gflops (total): 42.7791
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282535
  gflops (eval):  109.901
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282535,109.901,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.172
  maximum absolute entry in einsum_ir solution: 53.172
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137715
  time (eval):    0.0197432
  gflops (eval):  157.274
  gflops (total): 147.019
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137715,0.0197432,157.274,147.019

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072549
  gflops (total): 42.7999
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0287536
  gflops (eval):  107.99
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0287536,107.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2943
  maximum absolute entry in einsum_ir solution: 57.2943
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137153
  time (eval):    0.0199324
  gflops (eval):  155.781
  gflops (total): 145.752
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137153,0.0199324,155.781,145.752

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0721442
  gflops (total): 43.0401
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.0401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278523
  gflops (eval):  111.484
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278523,111.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1585
  maximum absolute entry in einsum_ir solution: 58.1585
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137388
  time (eval):    0.0197105
  gflops (eval):  157.535
  gflops (total): 147.27
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137388,0.0197105,157.535,147.27

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072502
  gflops (total): 42.8277
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0275488
  gflops (eval):  112.712
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0275488,112.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0051
  maximum absolute entry in einsum_ir solution: 61.0051
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00147353
  time (eval):    0.0197858
  gflops (eval):  156.935
  gflops (total): 146.058
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00147353,0.0197858,156.935,146.058

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0719838
  gflops (total): 43.136
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285195
  gflops (eval):  108.876
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285195,108.876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5429
  maximum absolute entry in einsum_ir solution: 58.5429
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137982
  time (eval):    0.0197557
  gflops (eval):  157.174
  gflops (total): 146.913
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137982,0.0197557,157.174,146.913

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723244
  gflops (total): 42.9328
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282569
  gflops (eval):  109.888
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282569,109.888,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4951
  maximum absolute entry in einsum_ir solution: 59.4951
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137516
  time (eval):    0.0198572
  gflops (eval):  156.371
  gflops (total): 146.243
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137516,0.0198572,156.371,146.243

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0719769
  gflops (total): 43.1401
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282527
  gflops (eval):  109.904
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282527,109.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6537
  maximum absolute entry in einsum_ir solution: 56.6537
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138178
  time (eval):    0.019741
  gflops (eval):  157.291
  gflops (total): 147.002
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138178,0.019741,157.291,147.002

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0718678
  gflops (total): 43.2056
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.2056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279865
  gflops (eval):  110.95
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279865,110.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0109
  maximum absolute entry in einsum_ir solution: 58.0109
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139003
  time (eval):    0.0197097
  gflops (eval):  157.541
  gflops (total): 147.163
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139003,0.0197097,157.541,147.163

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724759
  gflops (total): 42.8431
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282513
  gflops (eval):  109.91
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282513,109.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7623
  maximum absolute entry in einsum_ir solution: 54.7623
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138422
  time (eval):    0.019699
  gflops (eval):  157.627
  gflops (total): 147.278
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138422,0.019699,157.627,147.278

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0722267
  gflops (total): 42.9909
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284085
  gflops (eval):  109.302
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284085,109.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6351
  maximum absolute entry in einsum_ir solution: 55.6351
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00181587
  time (eval):    0.019833
  gflops (eval):  156.562
  gflops (total): 143.43
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00181587,0.019833,156.562,143.43

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0725796
  gflops (total): 42.7819
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283968
  gflops (eval):  109.346
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283968,109.346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5371
  maximum absolute entry in einsum_ir solution: 55.5371
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139406
  time (eval):    0.0198822
  gflops (eval):  156.174
  gflops (total): 145.942
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139406,0.0198822,156.174,145.942

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0728174
  gflops (total): 42.6421
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281154
  gflops (eval):  110.441
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281154,110.441,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7326
  maximum absolute entry in einsum_ir solution: 55.7326
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013715
  time (eval):    0.0197375
  gflops (eval):  157.319
  gflops (total): 147.098
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013715,0.0197375,157.319,147.098

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0728033
  gflops (total): 42.6504
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280469
  gflops (eval):  110.711
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280469,110.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9936
  maximum absolute entry in einsum_ir solution: 56.9936
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137974
  time (eval):    0.0196724
  gflops (eval):  157.84
  gflops (total): 147.495
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137974,0.0196724,157.84,147.495

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723576
  gflops (total): 42.9131
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277502
  gflops (eval):  111.894
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277502,111.894,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7745
  maximum absolute entry in einsum_ir solution: 55.7745
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00144342
  time (eval):    0.0197997
  gflops (eval):  156.825
  gflops (total): 146.169
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00144342,0.0197997,156.825,146.169

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072592
  gflops (total): 42.7745
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280642
  gflops (eval):  110.643
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280642,110.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2137
  maximum absolute entry in einsum_ir solution: 56.2137
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138598
  time (eval):    0.0198216
  gflops (eval):  156.652
  gflops (total): 146.415
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138598,0.0198216,156.652,146.415

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723357
  gflops (total): 42.9261
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0276104
  gflops (eval):  112.461
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0276104,112.461,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4613
  maximum absolute entry in einsum_ir solution: 56.4613
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00140952
  time (eval):    0.0196606
  gflops (eval):  157.935
  gflops (total): 147.37
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00140952,0.0196606,157.935,147.37

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0725566
  gflops (total): 42.7955
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284487
  gflops (eval):  109.147
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284487,109.147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6798
  maximum absolute entry in einsum_ir solution: 56.6798
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138237
  time (eval):    0.0194837
  gflops (eval):  159.369
  gflops (total): 148.811
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138237,0.0194837,159.369,148.811

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.07217
  gflops (total): 43.0247
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.0247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0274901
  gflops (eval):  112.953
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0274901,112.953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.293
  maximum absolute entry in einsum_ir solution: 58.293
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00134517
  time (eval):    0.0198529
  gflops (eval):  156.405
  gflops (total): 146.48
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00134517,0.0198529,156.405,146.48

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727568
  gflops (total): 42.6777
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283808
  gflops (eval):  109.408
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283808,109.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9279
  maximum absolute entry in einsum_ir solution: 54.9279
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141998
  time (eval):    0.0198573
  gflops (eval):  156.37
  gflops (total): 145.934
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141998,0.0198573,156.37,145.934

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0725573
  gflops (total): 42.795
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280804
  gflops (eval):  110.579
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280804,110.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1548
  maximum absolute entry in einsum_ir solution: 57.1548
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138237
  time (eval):    0.0199223
  gflops (eval):  155.86
  gflops (total): 145.747
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138237,0.0199223,155.86,145.747

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726468
  gflops (total): 42.7423
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283691
  gflops (eval):  109.453
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283691,109.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3954
  maximum absolute entry in einsum_ir solution: 58.3954
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137589
  time (eval):    0.0196987
  gflops (eval):  157.629
  gflops (total): 147.338
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137589,0.0196987,157.629,147.338

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0714744
  gflops (total): 43.4434
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.4434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284265
  gflops (eval):  109.232
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284265,109.232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9676
  maximum absolute entry in einsum_ir solution: 59.9676
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136606
  time (eval):    0.019842
  gflops (eval):  156.491
  gflops (total): 146.411
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136606,0.019842,156.491,146.411

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0718038
  gflops (total): 43.2441
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.2441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027703
  gflops (eval):  112.085
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027703,112.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4588
  maximum absolute entry in einsum_ir solution: 57.4588
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138194
  time (eval):    0.0197801
  gflops (eval):  156.981
  gflops (total): 146.729
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138194,0.0197801,156.981,146.729

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723419
  gflops (total): 42.9225
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282908
  gflops (eval):  109.756
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282908,109.756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4872
  maximum absolute entry in einsum_ir solution: 60.4872
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139297
  time (eval):    0.019853
  gflops (eval):  156.404
  gflops (total): 146.149
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139297,0.019853,156.404,146.149

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726187
  gflops (total): 42.7588
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7588

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277754
  gflops (eval):  111.793
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277754,111.793,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8757
  maximum absolute entry in einsum_ir solution: 60.8757
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013781
  time (eval):    0.0198483
  gflops (eval):  156.441
  gflops (total): 146.284
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013781,0.0198483,156.441,146.284

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0717094
  gflops (total): 43.301
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279747
  gflops (eval):  110.996
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279747,110.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9724
  maximum absolute entry in einsum_ir solution: 56.9724
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138521
  time (eval):    0.019712
  gflops (eval):  157.523
  gflops (total): 147.18
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138521,0.019712,157.523,147.18

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072081
  gflops (total): 43.0778
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.0778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284779
  gflops (eval):  109.035
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284779,109.035,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.091
  maximum absolute entry in einsum_ir solution: 56.091
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.001726
  time (eval):    0.019769
  gflops (eval):  157.069
  gflops (total): 144.457
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.001726,0.019769,157.069,144.457

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072228
  gflops (total): 42.9902
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282252
  gflops (eval):  110.011
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282252,110.011,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6732
  maximum absolute entry in einsum_ir solution: 57.6732
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137601
  time (eval):    0.0197061
  gflops (eval):  157.57
  gflops (total): 147.286
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137601,0.0197061,157.57,147.286

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0721251
  gflops (total): 43.0515
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.0515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283479
  gflops (eval):  109.535
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283479,109.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8721
  maximum absolute entry in einsum_ir solution: 57.8721
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143245
  time (eval):    0.0198222
  gflops (eval):  156.647
  gflops (total): 146.09
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143245,0.0198222,156.647,146.09

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726927
  gflops (total): 42.7153
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280123
  gflops (eval):  110.848
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280123,110.848,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3483
  maximum absolute entry in einsum_ir solution: 62.3483
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0016414
  time (eval):    0.0197302
  gflops (eval):  157.378
  gflops (total): 145.291
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0016414,0.0197302,157.378,145.291

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723822
  gflops (total): 42.8986
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281978
  gflops (eval):  110.118
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281978,110.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5447
  maximum absolute entry in einsum_ir solution: 53.5447
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136963
  time (eval):    0.0197102
  gflops (eval):  157.537
  gflops (total): 147.301
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136963,0.0197102,157.537,147.301

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727742
  gflops (total): 42.6675
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0274293
  gflops (eval):  113.203
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0274293,113.203,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.046
  maximum absolute entry in einsum_ir solution: 64.046
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00135794
  time (eval):    0.0197043
  gflops (eval):  157.584
  gflops (total): 147.425
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00135794,0.0197043,157.584,147.425

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726915
  gflops (total): 42.716
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028275
  gflops (eval):  109.818
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028275,109.818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0636
  maximum absolute entry in einsum_ir solution: 53.0636
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138132
  time (eval):    0.0197695
  gflops (eval):  157.065
  gflops (total): 146.807
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138132,0.0197695,157.065,146.807

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072213
  gflops (total): 42.9991
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280365
  gflops (eval):  110.752
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280365,110.752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6131
  maximum absolute entry in einsum_ir solution: 59.6131
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00166976
  time (eval):    0.0196559
  gflops (eval):  157.972
  gflops (total): 145.603
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00166976,0.0196559,157.972,145.603

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726012
  gflops (total): 42.7691
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283085
  gflops (eval):  109.688
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283085,109.688,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.789
  maximum absolute entry in einsum_ir solution: 54.789
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138281
  time (eval):    0.0198009
  gflops (eval):  156.816
  gflops (total): 146.579
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138281,0.0198009,156.816,146.579

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724758
  gflops (total): 42.8432
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283657
  gflops (eval):  109.466
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283657,109.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5153
  maximum absolute entry in einsum_ir solution: 53.5153
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138339
  time (eval):    0.0198534
  gflops (eval):  156.401
  gflops (total): 146.213
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138339,0.0198534,156.401,146.213

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0725978
  gflops (total): 42.7712
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7712

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284425
  gflops (eval):  109.171
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284425,109.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0111
  maximum absolute entry in einsum_ir solution: 59.0111
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137501
  time (eval):    0.0197108
  gflops (eval):  157.533
  gflops (total): 147.26
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137501,0.0197108,157.533,147.26

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072196
  gflops (total): 43.0092
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.0092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282513
  gflops (eval):  109.91
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282513,109.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3243
  maximum absolute entry in einsum_ir solution: 54.3243
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137958
  time (eval):    0.0199033
  gflops (eval):  156.009
  gflops (total): 145.896
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137958,0.0199033,156.009,145.896

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0723613
  gflops (total): 42.911
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281695
  gflops (eval):  110.229
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281695,110.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4533
  maximum absolute entry in einsum_ir solution: 55.4533
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.001387
  time (eval):    0.0197745
  gflops (eval):  157.025
  gflops (total): 146.733
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.001387,0.0197745,157.025,146.733

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727406
  gflops (total): 42.6872
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279072
  gflops (eval):  111.265
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279072,111.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4424
  maximum absolute entry in einsum_ir solution: 55.4424
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0014587
  time (eval):    0.0197642
  gflops (eval):  157.107
  gflops (total): 146.309
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0014587,0.0197642,157.107,146.309

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727578
  gflops (total): 42.6771
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281864
  gflops (eval):  110.163
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281864,110.163,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4707
  maximum absolute entry in einsum_ir solution: 60.4707
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138465
  time (eval):    0.0196875
  gflops (eval):  157.719
  gflops (total): 147.355
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138465,0.0196875,157.719,147.355

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0732065
  gflops (total): 42.4155
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.4155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281528
  gflops (eval):  110.294
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281528,110.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9753
  maximum absolute entry in einsum_ir solution: 55.9753
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138372
  time (eval):    0.0197361
  gflops (eval):  157.33
  gflops (total): 147.022
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138372,0.0197361,157.33,147.022

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072861
  gflops (total): 42.6166
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027905
  gflops (eval):  111.274
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027905,111.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5838
  maximum absolute entry in einsum_ir solution: 55.5838
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138176
  time (eval):    0.0197875
  gflops (eval):  156.922
  gflops (total): 146.68
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138176,0.0197875,156.922,146.68

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072736
  gflops (total): 42.6899
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283768
  gflops (eval):  109.424
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283768,109.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1609
  maximum absolute entry in einsum_ir solution: 53.1609
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138659
  time (eval):    0.0197154
  gflops (eval):  157.496
  gflops (total): 147.147
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138659,0.0197154,157.496,147.147

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724652
  gflops (total): 42.8494
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8494

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280397
  gflops (eval):  110.739
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280397,110.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2171
  maximum absolute entry in einsum_ir solution: 59.2171
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137741
  time (eval):    0.0198053
  gflops (eval):  156.781
  gflops (total): 146.586
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137741,0.0198053,156.781,146.586

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0724032
  gflops (total): 42.8861
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.8861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280573
  gflops (eval):  110.67
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280573,110.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7221
  maximum absolute entry in einsum_ir solution: 52.7221
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00144233
  time (eval):    0.0198174
  gflops (eval):  156.685
  gflops (total): 146.055
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00144233,0.0198174,156.685,146.055

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727627
  gflops (total): 42.6742
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.6742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0276017
  gflops (eval):  112.497
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0276017,112.497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.426
  maximum absolute entry in einsum_ir solution: 60.426
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00172713
  time (eval):    0.0198382
  gflops (eval):  156.521
  gflops (total): 143.985
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00172713,0.0198382,156.521,143.985

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0719981
  gflops (total): 43.1274
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,43.1274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283284
  gflops (eval):  109.611
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283284,109.611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7153
  maximum absolute entry in einsum_ir solution: 57.7153
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138651
  time (eval):    0.0197213
  gflops (eval):  157.448
  gflops (total): 147.106
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138651,0.0197213,157.448,147.106

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0726072
  gflops (total): 42.7656
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281131
  gflops (eval):  110.45
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281131,110.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2405
  maximum absolute entry in einsum_ir solution: 57.2405
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013648
  time (eval):    0.0198973
  gflops (eval):  156.056
  gflops (total): 146.039
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013648,0.0198973,156.056,146.039

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.072318
  gflops (total): 42.9366
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.9366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282646
  gflops (eval):  109.858
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282646,109.858,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2699
  maximum absolute entry in einsum_ir solution: 61.2699
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137883
  time (eval):    0.019902
  gflops (eval):  156.019
  gflops (total): 145.911
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137883,0.019902,156.019,145.911

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0727072
  gflops (total): 42.7068
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.7068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284492
  gflops (eval):  109.145
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284492,109.145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3832
  maximum absolute entry in einsum_ir solution: 56.3832
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137658
  time (eval):    0.0196069
  gflops (eval):  158.367
  gflops (total): 147.978
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137658,0.0196069,158.367,147.978

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0729056
  gflops (total): 42.5906
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,42.5906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282214
  gflops (eval):  110.026
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282214,110.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2648
  maximum absolute entry in einsum_ir solution: 56.2648
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142095
  time (eval):    0.0109741
  gflops (eval):  394.703
  gflops (total): 349.455
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142095,0.0109741,394.703,349.455

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552381
  gflops (total): 78.4154
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0547724
  gflops (eval):  79.0821
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547724,79.0821,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1324
  maximum absolute entry in einsum_ir solution: 36.1324
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142401
  time (eval):    0.010874
  gflops (eval):  398.336
  gflops (total): 352.212
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142401,0.010874,398.336,352.212

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538255
  gflops (total): 80.4734
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.4734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0533353
  gflops (eval):  81.2129
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0533353,81.2129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7617
  maximum absolute entry in einsum_ir solution: 32.7617
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142045
  time (eval):    0.0109801
  gflops (eval):  394.487
  gflops (total): 349.3
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142045,0.0109801,394.487,349.3

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540373
  gflops (total): 80.1579
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053592
  gflops (eval):  80.824
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053592,80.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.53
  maximum absolute entry in einsum_ir solution: 32.53
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142547
  time (eval):    0.0110359
  gflops (eval):  392.493
  gflops (total): 347.595
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142547,0.0110359,392.493,347.595

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538771
  gflops (total): 80.3962
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0536937
  gflops (eval):  80.6709
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0536937,80.6709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9126
  maximum absolute entry in einsum_ir solution: 36.9126
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140389
  time (eval):    0.0109285
  gflops (eval):  396.35
  gflops (total): 351.231
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140389,0.0109285,396.35,351.231

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541508
  gflops (total): 79.9899
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0533646
  gflops (eval):  81.1684
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0533646,81.1684,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.5274
  maximum absolute entry in einsum_ir solution: 32.5274
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142396
  time (eval):    0.0110098
  gflops (eval):  393.425
  gflops (total): 348.368
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142396,0.0110098,393.425,348.368

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0536008
  gflops (total): 80.8107
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.8107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0534912
  gflops (eval):  80.9763
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0534912,80.9763,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4731
  maximum absolute entry in einsum_ir solution: 33.4731
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014191
  time (eval):    0.0109726
  gflops (eval):  394.759
  gflops (total): 349.551
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014191,0.0109726,394.759,349.551

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539254
  gflops (total): 80.3243
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3243

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530338
  gflops (eval):  81.6747
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530338,81.6747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6838
  maximum absolute entry in einsum_ir solution: 33.6838
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142341
  time (eval):    0.0108833
  gflops (eval):  397.998
  gflops (total): 351.965
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142341,0.0108833,397.998,351.965

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540461
  gflops (total): 80.1448
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0533742
  gflops (eval):  81.1538
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0533742,81.1538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9251
  maximum absolute entry in einsum_ir solution: 34.9251
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141919
  time (eval):    0.0110484
  gflops (eval):  392.049
  gflops (total): 347.422
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141919,0.0110484,392.049,347.422

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0537866
  gflops (total): 80.5315
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.5315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532452
  gflops (eval):  81.3505
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532452,81.3505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3875
  maximum absolute entry in einsum_ir solution: 32.3875
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141802
  time (eval):    0.0111756
  gflops (eval):  387.586
  gflops (total): 343.945
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141802,0.0111756,387.586,343.945

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0545548
  gflops (total): 79.3976
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.3976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053418
  gflops (eval):  81.0873
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053418,81.0873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7012
  maximum absolute entry in einsum_ir solution: 35.7012
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141605
  time (eval):    0.0110728
  gflops (eval):  391.186
  gflops (total): 346.831
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141605,0.0110728,391.186,346.831

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538768
  gflops (total): 80.3968
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530967
  gflops (eval):  81.5779
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530967,81.5779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3137
  maximum absolute entry in einsum_ir solution: 35.3137
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141554
  time (eval):    0.0110217
  gflops (eval):  392.999
  gflops (total): 348.27
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141554,0.0110217,392.999,348.27

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539918
  gflops (total): 80.2255
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532592
  gflops (eval):  81.329
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532592,81.329,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9541
  maximum absolute entry in einsum_ir solution: 33.9541
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141536
  time (eval):    0.0108892
  gflops (eval):  397.783
  gflops (total): 352.027
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141536,0.0108892,397.783,352.027

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539139
  gflops (total): 80.3415
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531755
  gflops (eval):  81.4571
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531755,81.4571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3067
  maximum absolute entry in einsum_ir solution: 35.3067
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143069
  time (eval):    0.0108831
  gflops (eval):  398.005
  gflops (total): 351.762
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143069,0.0108831,398.005,351.762

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540627
  gflops (total): 80.1203
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0538623
  gflops (eval):  80.4185
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0538623,80.4185,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.881
  maximum absolute entry in einsum_ir solution: 32.881
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143187
  time (eval):    0.0109983
  gflops (eval):  393.837
  gflops (total): 348.469
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143187,0.0109983,393.837,348.469

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.054168
  gflops (total): 79.9646
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053355
  gflops (eval):  81.183
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053355,81.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.217
  maximum absolute entry in einsum_ir solution: 35.217
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141789
  time (eval):    0.0109036
  gflops (eval):  397.256
  gflops (total): 351.542
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141789,0.0109036,397.256,351.542

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540333
  gflops (total): 80.1639
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531341
  gflops (eval):  81.5206
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531341,81.5206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9984
  maximum absolute entry in einsum_ir solution: 34.9984
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00138524
  time (eval):    0.0110099
  gflops (eval):  393.419
  gflops (total): 349.452
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00138524,0.0110099,393.419,349.452

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540064
  gflops (total): 80.2038
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532686
  gflops (eval):  81.3147
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532686,81.3147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.87
  maximum absolute entry in einsum_ir solution: 37.87
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141817
  time (eval):    0.010892
  gflops (eval):  397.681
  gflops (total): 351.867
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141817,0.010892,397.681,351.867

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.053742
  gflops (total): 80.5984
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.5984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0529197
  gflops (eval):  81.8508
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0529197,81.8508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2398
  maximum absolute entry in einsum_ir solution: 37.2398
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142885
  time (eval):    0.0109915
  gflops (eval):  394.079
  gflops (total): 348.744
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142885,0.0109915,394.079,348.744

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0550701
  gflops (total): 78.6546
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.6546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0544329
  gflops (eval):  79.5755
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544329,79.5755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8761
  maximum absolute entry in einsum_ir solution: 35.8761
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140955
  time (eval):    0.0109724
  gflops (eval):  394.765
  gflops (total): 349.826
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140955,0.0109724,394.765,349.826

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541648
  gflops (total): 79.9692
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532068
  gflops (eval):  81.4092
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532068,81.4092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0213
  maximum absolute entry in einsum_ir solution: 37.0213
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142721
  time (eval):    0.0110039
  gflops (eval):  393.634
  gflops (total): 348.441
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142721,0.0110039,393.634,348.441

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540507
  gflops (total): 80.138
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0533798
  gflops (eval):  81.1453
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0533798,81.1453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6377
  maximum absolute entry in einsum_ir solution: 37.6377
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143545
  time (eval):    0.0111089
  gflops (eval):  389.914
  gflops (total): 345.296
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143545,0.0111089,389.914,345.296

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538265
  gflops (total): 80.4719
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.4719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531894
  gflops (eval):  81.4358
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531894,81.4358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9636
  maximum absolute entry in einsum_ir solution: 34.9636
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142087
  time (eval):    0.0109897
  gflops (eval):  394.145
  gflops (total): 349.019
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142087,0.0109897,394.145,349.019

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538093
  gflops (total): 80.4977
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.4977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532516
  gflops (eval):  81.3406
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532516,81.3406,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9398
  maximum absolute entry in einsum_ir solution: 32.9398
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140465
  time (eval):    0.0110098
  gflops (eval):  393.424
  gflops (total): 348.91
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140465,0.0110098,393.424,348.91

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0542575
  gflops (total): 79.8326
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.8326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531357
  gflops (eval):  81.5181
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531357,81.5181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5462
  maximum absolute entry in einsum_ir solution: 35.5462
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143115
  time (eval):    0.0111632
  gflops (eval):  388.018
  gflops (total): 343.926
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143115,0.0111632,388.018,343.926

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539688
  gflops (total): 80.2596
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531597
  gflops (eval):  81.4813
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531597,81.4813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3154
  maximum absolute entry in einsum_ir solution: 37.3154
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141512
  time (eval):    0.0109469
  gflops (eval):  395.685
  gflops (total): 350.389
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141512,0.0109469,395.685,350.389

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538641
  gflops (total): 80.4156
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.4156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530726
  gflops (eval):  81.6149
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530726,81.6149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9337
  maximum absolute entry in einsum_ir solution: 36.9337
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141274
  time (eval):    0.0109976
  gflops (eval):  393.861
  gflops (total): 349.025
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141274,0.0109976,393.861,349.025

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540806
  gflops (total): 80.0937
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0534458
  gflops (eval):  81.0451
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0534458,81.0451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9009
  maximum absolute entry in einsum_ir solution: 32.9009
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141438
  time (eval):    0.0109322
  gflops (eval):  396.218
  gflops (total): 350.828
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141438,0.0109322,396.218,350.828

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540403
  gflops (total): 80.1535
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0534192
  gflops (eval):  81.0855
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0534192,81.0855,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3153
  maximum absolute entry in einsum_ir solution: 33.3153
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140362
  time (eval):    0.0109461
  gflops (eval):  395.715
  gflops (total): 350.739
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140362,0.0109461,395.715,350.739

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551821
  gflops (total): 78.4951
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0543042
  gflops (eval):  79.764
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543042,79.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3619
  maximum absolute entry in einsum_ir solution: 34.3619
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144431
  time (eval):    0.0110075
  gflops (eval):  393.506
  gflops (total): 347.862
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144431,0.0110075,393.506,347.862

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0537187
  gflops (total): 80.6333
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.6333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0529558
  gflops (eval):  81.795
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0529558,81.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7817
  maximum absolute entry in einsum_ir solution: 35.7817
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146529
  time (eval):    0.0110238
  gflops (eval):  392.923
  gflops (total): 346.824
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146529,0.0110238,392.923,346.824

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539947
  gflops (total): 80.2211
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531943
  gflops (eval):  81.4282
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531943,81.4282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1045
  maximum absolute entry in einsum_ir solution: 34.1045
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150309
  time (eval):    0.0111254
  gflops (eval):  389.336
  gflops (total): 342.995
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150309,0.0111254,389.336,342.995

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538859
  gflops (total): 80.3831
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532916
  gflops (eval):  81.2796
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532916,81.2796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7058
  maximum absolute entry in einsum_ir solution: 32.7058
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141735
  time (eval):    0.0109507
  gflops (eval):  395.547
  gflops (total): 350.218
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141735,0.0109507,395.547,350.218

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541933
  gflops (total): 79.9272
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531263
  gflops (eval):  81.5326
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531263,81.5326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4508
  maximum absolute entry in einsum_ir solution: 34.4508
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00169293
  time (eval):    0.0108877
  gflops (eval):  397.835
  gflops (total): 344.3
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00169293,0.0108877,397.835,344.3

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541581
  gflops (total): 79.9791
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530998
  gflops (eval):  81.5732
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530998,81.5732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8084
  maximum absolute entry in einsum_ir solution: 34.8084
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141066
  time (eval):    0.0110179
  gflops (eval):  393.134
  gflops (total): 348.513
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141066,0.0110179,393.134,348.513

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0536823
  gflops (total): 80.6881
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.6881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531957
  gflops (eval):  81.4261
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531957,81.4261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1324
  maximum absolute entry in einsum_ir solution: 39.1324
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141801
  time (eval):    0.0110226
  gflops (eval):  392.966
  gflops (total): 348.175
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141801,0.0110226,392.966,348.175

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539991
  gflops (total): 80.2147
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530305
  gflops (eval):  81.6797
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530305,81.6797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8311
  maximum absolute entry in einsum_ir solution: 33.8311
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142562
  time (eval):    0.011013
  gflops (eval):  393.31
  gflops (total): 348.232
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142562,0.011013,393.31,348.232

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.054042
  gflops (total): 80.1511
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0535527
  gflops (eval):  80.8833
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0535527,80.8833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5779
  maximum absolute entry in einsum_ir solution: 33.5779
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014268
  time (eval):    0.0110625
  gflops (eval):  391.548
  gflops (total): 346.817
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014268,0.0110625,391.548,346.817

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540086
  gflops (total): 80.2005
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532353
  gflops (eval):  81.3656
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532353,81.3656,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1963
  maximum absolute entry in einsum_ir solution: 34.1963
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146811
  time (eval):    0.011003
  gflops (eval):  393.668
  gflops (total): 347.325
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146811,0.011003,393.668,347.325

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540948
  gflops (total): 80.0728
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532006
  gflops (eval):  81.4186
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532006,81.4186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4792
  maximum absolute entry in einsum_ir solution: 33.4792
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142039
  time (eval):    0.0110488
  gflops (eval):  392.035
  gflops (total): 347.377
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142039,0.0110488,392.035,347.377

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0536046
  gflops (total): 80.805
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0529605
  gflops (eval):  81.7877
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0529605,81.7877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6838
  maximum absolute entry in einsum_ir solution: 38.6838
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142623
  time (eval):    0.0108821
  gflops (eval):  398.04
  gflops (total): 351.917
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142623,0.0108821,398.04,351.917

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539183
  gflops (total): 80.3349
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3349

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531053
  gflops (eval):  81.5648
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531053,81.5648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5558
  maximum absolute entry in einsum_ir solution: 34.5558
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140448
  time (eval):    0.0109485
  gflops (eval):  395.626
  gflops (total): 350.645
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140448,0.0109485,395.626,350.645

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538499
  gflops (total): 80.4369
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.4369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532003
  gflops (eval):  81.4191
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532003,81.4191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4771
  maximum absolute entry in einsum_ir solution: 34.4771
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143792
  time (eval):    0.0109518
  gflops (eval):  395.508
  gflops (total): 349.606
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143792,0.0109518,395.508,349.606

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538647
  gflops (total): 80.4148
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.4148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532488
  gflops (eval):  81.3449
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532488,81.3449,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2513
  maximum absolute entry in einsum_ir solution: 35.2513
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152505
  time (eval):    0.0109954
  gflops (eval):  393.94
  gflops (total): 345.957
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152505,0.0109954,393.94,345.957

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538855
  gflops (total): 80.3837
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531402
  gflops (eval):  81.5111
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531402,81.5111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0378
  maximum absolute entry in einsum_ir solution: 36.0378
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142108
  time (eval):    0.0109085
  gflops (eval):  397.079
  gflops (total): 351.313
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142108,0.0109085,397.079,351.313

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538975
  gflops (total): 80.3658
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530905
  gflops (eval):  81.5874
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530905,81.5874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2568
  maximum absolute entry in einsum_ir solution: 35.2568
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142789
  time (eval):    0.0109749
  gflops (eval):  394.675
  gflops (total): 349.238
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142789,0.0109749,394.675,349.238

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539121
  gflops (total): 80.3441
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531075
  gflops (eval):  81.5613
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531075,81.5613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7701
  maximum absolute entry in einsum_ir solution: 32.7701
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143323
  time (eval):    0.0109291
  gflops (eval):  396.331
  gflops (total): 350.382
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143323,0.0109291,396.331,350.382

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0537922
  gflops (total): 80.5232
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.5232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531311
  gflops (eval):  81.5251
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531311,81.5251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2221
  maximum absolute entry in einsum_ir solution: 34.2221
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140489
  time (eval):    0.0110205
  gflops (eval):  393.042
  gflops (total): 348.602
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140489,0.0110205,393.042,348.602

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540335
  gflops (total): 80.1636
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531494
  gflops (eval):  81.4971
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531494,81.4971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5183
  maximum absolute entry in einsum_ir solution: 34.5183
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141154
  time (eval):    0.0111468
  gflops (eval):  388.589
  gflops (total): 344.912
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141154,0.0111468,388.589,344.912

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540147
  gflops (total): 80.1915
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530787
  gflops (eval):  81.6056
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530787,81.6056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6985
  maximum absolute entry in einsum_ir solution: 33.6985
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142369
  time (eval):    0.0109722
  gflops (eval):  394.771
  gflops (total): 349.431
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142369,0.0109722,394.771,349.431

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0537556
  gflops (total): 80.5781
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.5781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530506
  gflops (eval):  81.6488
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530506,81.6488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.5759
  maximum absolute entry in einsum_ir solution: 32.5759
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144224
  time (eval):    0.0108704
  gflops (eval):  398.47
  gflops (total): 351.795
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144224,0.0108704,398.47,351.795

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0537569
  gflops (total): 80.5761
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.5761

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530535
  gflops (eval):  81.6444
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530535,81.6444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6526
  maximum absolute entry in einsum_ir solution: 34.6526
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141091
  time (eval):    0.0112548
  gflops (eval):  384.861
  gflops (total): 341.989
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141091,0.0112548,384.861,341.989

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0542677
  gflops (total): 79.8176
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.8176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053427
  gflops (eval):  81.0736
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053427,81.0736,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9133
  maximum absolute entry in einsum_ir solution: 34.9133
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143871
  time (eval):    0.0110252
  gflops (eval):  392.875
  gflops (total): 347.525
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143871,0.0110252,392.875,347.525

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539129
  gflops (total): 80.343
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.343

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531888
  gflops (eval):  81.4366
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531888,81.4366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7569
  maximum absolute entry in einsum_ir solution: 34.7569
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143548
  time (eval):    0.0109153
  gflops (eval):  396.832
  gflops (total): 350.71
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143548,0.0109153,396.832,350.71

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539574
  gflops (total): 80.2766
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532816
  gflops (eval):  81.2949
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532816,81.2949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3982
  maximum absolute entry in einsum_ir solution: 34.3982
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141079
  time (eval):    0.0109295
  gflops (eval):  396.316
  gflops (total): 351.007
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141079,0.0109295,396.316,351.007

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.053965
  gflops (total): 80.2654
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.052944
  gflops (eval):  81.8132
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.052944,81.8132,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9434
  maximum absolute entry in einsum_ir solution: 33.9434
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142598
  time (eval):    0.010955
  gflops (eval):  395.393
  gflops (total): 349.853
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142598,0.010955,395.393,349.853

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541917
  gflops (total): 79.9296
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531589
  gflops (eval):  81.4824
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531589,81.4824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4194
  maximum absolute entry in einsum_ir solution: 34.4194
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145675
  time (eval):    0.0111578
  gflops (eval):  388.207
  gflops (total): 343.376
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145675,0.0111578,388.207,343.376

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539111
  gflops (total): 80.3456
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532839
  gflops (eval):  81.2914
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532839,81.2914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.1904
  maximum absolute entry in einsum_ir solution: 31.1904
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0016976
  time (eval):    0.0109166
  gflops (eval):  396.781
  gflops (total): 343.383
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0016976,0.0109166,396.781,343.383

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0549662
  gflops (total): 78.8034
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.8034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531543
  gflops (eval):  81.4895
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531543,81.4895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1284
  maximum absolute entry in einsum_ir solution: 33.1284
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146712
  time (eval):    0.0110748
  gflops (eval):  391.113
  gflops (total): 345.362
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146712,0.0110748,391.113,345.362

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539462
  gflops (total): 80.2933
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532501
  gflops (eval):  81.343
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532501,81.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6733
  maximum absolute entry in einsum_ir solution: 33.6733
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140811
  time (eval):    0.0111078
  gflops (eval):  389.952
  gflops (total): 346.08
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140811,0.0111078,389.952,346.08

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.054005
  gflops (total): 80.206
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053225
  gflops (eval):  81.3813
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053225,81.3813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3584
  maximum absolute entry in einsum_ir solution: 33.3584
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142167
  time (eval):    0.0109629
  gflops (eval):  395.107
  gflops (total): 349.751
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142167,0.0109629,395.107,349.751

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.053797
  gflops (total): 80.516
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532792
  gflops (eval):  81.2986
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532792,81.2986,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7891
  maximum absolute entry in einsum_ir solution: 35.7891
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140211
  time (eval):    0.0109534
  gflops (eval):  395.45
  gflops (total): 350.574
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140211,0.0109534,395.45,350.574

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539357
  gflops (total): 80.3089
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532099
  gflops (eval):  81.4043
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532099,81.4043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4486
  maximum absolute entry in einsum_ir solution: 33.4486
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00138633
  time (eval):    0.0110042
  gflops (eval):  393.625
  gflops (total): 349.584
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00138633,0.0110042,393.625,349.584

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541951
  gflops (total): 79.9246
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0535885
  gflops (eval):  80.8292
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0535885,80.8292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4515
  maximum absolute entry in einsum_ir solution: 34.4515
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141731
  time (eval):    0.0109881
  gflops (eval):  394.2
  gflops (total): 349.163
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141731,0.0109881,394.2,349.163

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540413
  gflops (total): 80.152
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053215
  gflops (eval):  81.3967
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053215,81.3967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8354
  maximum absolute entry in einsum_ir solution: 35.8354
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142126
  time (eval):    0.01094
  gflops (eval):  395.935
  gflops (total): 350.411
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142126,0.01094,395.935,350.411

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538907
  gflops (total): 80.376
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.376

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532382
  gflops (eval):  81.3612
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532382,81.3612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0983
  maximum absolute entry in einsum_ir solution: 37.0983
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140446
  time (eval):    0.0108863
  gflops (eval):  397.886
  gflops (total): 352.42
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140446,0.0108863,397.886,352.42

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541
  gflops (total): 80.0651
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0529822
  gflops (eval):  81.7542
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0529822,81.7542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9065
  maximum absolute entry in einsum_ir solution: 32.9065
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141792
  time (eval):    0.0109165
  gflops (eval):  396.786
  gflops (total): 351.173
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141792,0.0109165,396.786,351.173

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541879
  gflops (total): 79.9352
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053881
  gflops (eval):  80.3905
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053881,80.3905,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8182
  maximum absolute entry in einsum_ir solution: 34.8182
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141461
  time (eval):    0.0109569
  gflops (eval):  395.323
  gflops (total): 350.12
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141461,0.0109569,395.323,350.12

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541236
  gflops (total): 80.0302
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053175
  gflops (eval):  81.4578
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053175,81.4578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.079
  maximum absolute entry in einsum_ir solution: 34.079
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141639
  time (eval):    0.0110172
  gflops (eval):  393.159
  gflops (total): 348.372
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141639,0.0110172,393.159,348.372

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539789
  gflops (total): 80.2448
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530279
  gflops (eval):  81.6839
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530279,81.6839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6219
  maximum absolute entry in einsum_ir solution: 34.6219
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141369
  time (eval):    0.0109925
  gflops (eval):  394.042
  gflops (total): 349.141
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141369,0.0109925,394.042,349.141

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541314
  gflops (total): 80.0186
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0529889
  gflops (eval):  81.7439
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0529889,81.7439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6196
  maximum absolute entry in einsum_ir solution: 32.6196
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140796
  time (eval):    0.0110943
  gflops (eval):  390.428
  gflops (total): 346.459
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140796,0.0110943,390.428,346.459

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540757
  gflops (total): 80.1011
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532234
  gflops (eval):  81.3838
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532234,81.3838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0354
  maximum absolute entry in einsum_ir solution: 33.0354
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144137
  time (eval):    0.0108837
  gflops (eval):  397.983
  gflops (total): 351.44
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144137,0.0108837,397.983,351.44

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539238
  gflops (total): 80.3267
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532471
  gflops (eval):  81.3476
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532471,81.3476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1414
  maximum absolute entry in einsum_ir solution: 37.1414
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141563
  time (eval):    0.0109209
  gflops (eval):  396.626
  gflops (total): 351.113
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141563,0.0109209,396.626,351.113

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540569
  gflops (total): 80.1288
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532473
  gflops (eval):  81.3472
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532473,81.3472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5265
  maximum absolute entry in einsum_ir solution: 33.5265
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140332
  time (eval):    0.0109497
  gflops (eval):  395.583
  gflops (total): 350.644
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140332,0.0109497,395.583,350.644

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.053909
  gflops (total): 80.3487
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530741
  gflops (eval):  81.6128
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530741,81.6128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1475
  maximum absolute entry in einsum_ir solution: 35.1475
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141954
  time (eval):    0.0108533
  gflops (eval):  399.099
  gflops (total): 352.937
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141954,0.0108533,399.099,352.937

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539268
  gflops (total): 80.3221
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0529724
  gflops (eval):  81.7694
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0529724,81.7694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0356
  maximum absolute entry in einsum_ir solution: 36.0356
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0015689
  time (eval):    0.0108669
  gflops (eval):  398.599
  gflops (total): 348.311
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0015689,0.0108669,398.599,348.311

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0550221
  gflops (total): 78.7232
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.7232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0541971
  gflops (eval):  79.9217
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0541971,79.9217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7213
  maximum absolute entry in einsum_ir solution: 34.7213
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142458
  time (eval):    0.0111234
  gflops (eval):  389.407
  gflops (total): 345.197
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142458,0.0111234,389.407,345.197

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.054071
  gflops (total): 80.1079
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0533638
  gflops (eval):  81.1697
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0533638,81.1697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.106
  maximum absolute entry in einsum_ir solution: 32.106
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140372
  time (eval):    0.0110125
  gflops (eval):  393.326
  gflops (total): 348.858
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140372,0.0110125,393.326,348.858

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540146
  gflops (total): 80.1917
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532634
  gflops (eval):  81.3227
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532634,81.3227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0126
  maximum absolute entry in einsum_ir solution: 39.0126
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141607
  time (eval):    0.0110073
  gflops (eval):  393.515
  gflops (total): 348.66
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141607,0.0110073,393.515,348.66

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541077
  gflops (total): 80.0536
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053271
  gflops (eval):  81.311
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053271,81.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3138
  maximum absolute entry in einsum_ir solution: 32.3138
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144475
  time (eval):    0.0110998
  gflops (eval):  390.234
  gflops (total): 345.291
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144475,0.0110998,390.234,345.291

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0538782
  gflops (total): 80.3946
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530127
  gflops (eval):  81.7073
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530127,81.7073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7488
  maximum absolute entry in einsum_ir solution: 36.7488
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142696
  time (eval):    0.0110273
  gflops (eval):  392.801
  gflops (total): 347.795
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142696,0.0110273,392.801,347.795

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0539168
  gflops (total): 80.3372
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.3372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530602
  gflops (eval):  81.6341
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530602,81.6341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1742
  maximum absolute entry in einsum_ir solution: 38.1742
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145825
  time (eval):    0.0110413
  gflops (eval):  392.302
  gflops (total): 346.535
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145825,0.0110413,392.302,346.535

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0542293
  gflops (total): 79.8742
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.8742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532035
  gflops (eval):  81.4142
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532035,81.4142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9206
  maximum absolute entry in einsum_ir solution: 34.9206
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141316
  time (eval):    0.0109929
  gflops (eval):  394.031
  gflops (total): 349.147
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141316,0.0109929,394.031,349.147

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.054788
  gflops (total): 79.0596
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.0596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0543304
  gflops (eval):  79.7255
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543304,79.7255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.11
  maximum absolute entry in einsum_ir solution: 39.11
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141862
  time (eval):    0.0109289
  gflops (eval):  396.335
  gflops (total): 350.8
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141862,0.0109289,396.335,350.8

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.054009
  gflops (total): 80.2
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532428
  gflops (eval):  81.3542
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532428,81.3542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5455
  maximum absolute entry in einsum_ir solution: 35.5455
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141418
  time (eval):    0.0111531
  gflops (eval):  388.369
  gflops (total): 344.666
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141418,0.0111531,388.369,344.666

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540211
  gflops (total): 80.1821
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530917
  gflops (eval):  81.5856
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530917,81.5856,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.615
  maximum absolute entry in einsum_ir solution: 38.615
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146459
  time (eval):    0.0110956
  gflops (eval):  390.38
  gflops (total): 344.86
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146459,0.0110956,390.38,344.86

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541248
  gflops (total): 80.0284
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532021
  gflops (eval):  81.4163
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532021,81.4163,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9633
  maximum absolute entry in einsum_ir solution: 36.9633
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141664
  time (eval):    0.011095
  gflops (eval):  390.401
  gflops (total): 346.198
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141664,0.011095,390.401,346.198

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541911
  gflops (total): 79.9305
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0538243
  gflops (eval):  80.4752
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0538243,80.4752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1244
  maximum absolute entry in einsum_ir solution: 35.1244
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145343
  time (eval):    0.0110165
  gflops (eval):  393.184
  gflops (total): 347.356
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145343,0.0110165,393.184,347.356

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540337
  gflops (total): 80.1633
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053098
  gflops (eval):  81.576
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053098,81.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.2747
  maximum absolute entry in einsum_ir solution: 32.2747
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141853
  time (eval):    0.0109346
  gflops (eval):  396.13
  gflops (total): 350.642
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141853,0.0109346,396.13,350.642

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540847
  gflops (total): 80.0877
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053246
  gflops (eval):  81.3492
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053246,81.3492,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.526
  maximum absolute entry in einsum_ir solution: 33.526
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140233
  time (eval):    0.0109214
  gflops (eval):  396.609
  gflops (total): 351.479
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140233,0.0109214,396.609,351.479

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0542104
  gflops (total): 79.902
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0535583
  gflops (eval):  80.8748
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0535583,80.8748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1939
  maximum absolute entry in einsum_ir solution: 33.1939
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141922
  time (eval):    0.0108879
  gflops (eval):  397.828
  gflops (total): 351.952
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141922,0.0108879,397.828,351.952

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0541482
  gflops (total): 79.9938
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531034
  gflops (eval):  81.5677
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531034,81.5677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1798
  maximum absolute entry in einsum_ir solution: 34.1798
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141828
  time (eval):    0.010996
  gflops (eval):  393.916
  gflops (total): 348.913
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141828,0.010996,393.916,348.913

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.054088
  gflops (total): 80.0828
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.053261
  gflops (eval):  81.3263
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.053261,81.3263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9047
  maximum absolute entry in einsum_ir solution: 33.9047
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148757
  time (eval):    0.011048
  gflops (eval):  392.062
  gflops (total): 345.537
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148757,0.011048,392.062,345.537

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0543422
  gflops (total): 79.7082
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.7082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0530889
  gflops (eval):  81.59
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0530889,81.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9757
  maximum absolute entry in einsum_ir solution: 35.9757
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001392
  time (eval):    0.0108841
  gflops (eval):  397.968
  gflops (total): 352.842
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001392,0.0108841,397.968,352.842

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540539
  gflops (total): 80.1334
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531722
  gflops (eval):  81.462
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531722,81.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3975
  maximum absolute entry in einsum_ir solution: 36.3975
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142786
  time (eval):    0.0109389
  gflops (eval):  395.973
  gflops (total): 350.254
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142786,0.0109389,395.973,350.254

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0542084
  gflops (total): 79.9049
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.9049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531653
  gflops (eval):  81.4727
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531653,81.4727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8358
  maximum absolute entry in einsum_ir solution: 34.8358
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141801
  time (eval):    0.0109035
  gflops (eval):  397.261
  gflops (total): 351.543
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141801,0.0109035,397.261,351.543

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540862
  gflops (total): 80.0855
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.0855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0533772
  gflops (eval):  81.1493
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0533772,81.1493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1286
  maximum absolute entry in einsum_ir solution: 37.1286
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142413
  time (eval):    0.011075
  gflops (eval):  391.107
  gflops (total): 346.545
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142413,0.011075,391.107,346.545

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0540347
  gflops (total): 80.1618
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.1618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531783
  gflops (eval):  81.4527
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531783,81.4527,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1571
  maximum absolute entry in einsum_ir solution: 34.1571
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142308
  time (eval):    0.0109953
  gflops (eval):  393.942
  gflops (total): 348.799
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142308,0.0109953,393.942,348.799

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0537965
  gflops (total): 80.5167
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,80.5167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531032
  gflops (eval):  81.568
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531032,81.568,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7751
  maximum absolute entry in einsum_ir solution: 35.7751
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153314
  time (eval):    0.0109153
  gflops (eval):  396.829
  gflops (total): 347.956
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153314,0.0109153,396.829,347.956

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0542556
  gflops (total): 79.8354
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.8354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0531498
  gflops (eval):  81.4964
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0531498,81.4964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1839
  maximum absolute entry in einsum_ir solution: 34.1839
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001424
  time (eval):    0.0109495
  gflops (eval):  395.592
  gflops (total): 350.065
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001424,0.0109495,395.592,350.065

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0543837
  gflops (total): 79.6473
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.6473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0532966
  gflops (eval):  81.272
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0532966,81.272,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1225
  maximum absolute entry in einsum_ir solution: 33.1225
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145439
  time (eval):    0.0113563
  gflops (eval):  381.42
  gflops (total): 338.117
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145439,0.0113563,381.42,338.117

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554447
  gflops (total): 78.1233
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545065
  gflops (eval):  79.4679
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545065,79.4679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1931
  maximum absolute entry in einsum_ir solution: 33.1931
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001499
  time (eval):    0.0110432
  gflops (eval):  392.233
  gflops (total): 345.355
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001499,0.0110432,392.233,345.355

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565905
  gflops (total): 76.5414
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.5414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557744
  gflops (eval):  77.6615
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557744,77.6615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7206
  maximum absolute entry in einsum_ir solution: 33.7206
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151045
  time (eval):    0.0110078
  gflops (eval):  393.494
  gflops (total): 346.016
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151045,0.0110078,393.494,346.016

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565221
  gflops (total): 76.6341
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.6341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556865
  gflops (eval):  77.784
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556865,77.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7288
  maximum absolute entry in einsum_ir solution: 35.7288
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143067
  time (eval):    0.0110491
  gflops (eval):  392.024
  gflops (total): 347.083
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143067,0.0110491,392.024,347.083

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556307
  gflops (total): 77.862
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558165
  gflops (eval):  77.6029
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558165,77.6029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4549
  maximum absolute entry in einsum_ir solution: 35.4549
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142554
  time (eval):    0.0112897
  gflops (eval):  383.67
  gflops (total): 340.656
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142554,0.0112897,383.67,340.656

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554032
  gflops (total): 78.1817
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545528
  gflops (eval):  79.4006
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545528,79.4006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1123
  maximum absolute entry in einsum_ir solution: 33.1123
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143302
  time (eval):    0.0110404
  gflops (eval):  392.334
  gflops (total): 347.261
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143302,0.0110404,392.334,347.261

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566279
  gflops (total): 76.4909
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.4909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558058
  gflops (eval):  77.6177
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558058,77.6177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6906
  maximum absolute entry in einsum_ir solution: 36.6906
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143144
  time (eval):    0.0110503
  gflops (eval):  391.983
  gflops (total): 347.029
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143144,0.0110503,391.983,347.029

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560712
  gflops (total): 77.2504
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544223
  gflops (eval):  79.5909
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544223,79.5909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3194
  maximum absolute entry in einsum_ir solution: 34.3194
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014154
  time (eval):    0.0112035
  gflops (eval):  386.622
  gflops (total): 343.256
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014154,0.0112035,386.622,343.256

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553687
  gflops (total): 78.2305
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054969
  gflops (eval):  78.7994
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054969,78.7994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1898
  maximum absolute entry in einsum_ir solution: 36.1898
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014759
  time (eval):    0.0110175
  gflops (eval):  393.149
  gflops (total): 346.704
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014759,0.0110175,393.149,346.704

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553559
  gflops (total): 78.2486
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543432
  gflops (eval):  79.7068
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543432,79.7068,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0729
  maximum absolute entry in einsum_ir solution: 34.0729
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143326
  time (eval):    0.0110163
  gflops (eval):  393.192
  gflops (total): 347.925
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143326,0.0110163,393.192,347.925

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552779
  gflops (total): 78.359
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544746
  gflops (eval):  79.5144
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544746,79.5144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6633
  maximum absolute entry in einsum_ir solution: 33.6633
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00166451
  time (eval):    0.0110385
  gflops (eval):  392.399
  gflops (total): 340.983
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00166451,0.0110385,392.399,340.983

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055607
  gflops (total): 77.8952
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545454
  gflops (eval):  79.4113
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545454,79.4113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5415
  maximum absolute entry in einsum_ir solution: 35.5415
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152051
  time (eval):    0.0110478
  gflops (eval):  392.069
  gflops (total): 344.637
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152051,0.0110478,392.069,344.637

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554859
  gflops (total): 78.0652
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547735
  gflops (eval):  79.0806
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547735,79.0806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5997
  maximum absolute entry in einsum_ir solution: 35.5997
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00172356
  time (eval):    0.0110249
  gflops (eval):  392.886
  gflops (total): 339.768
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00172356,0.0110249,392.886,339.768

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555068
  gflops (total): 78.0358
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543946
  gflops (eval):  79.6314
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543946,79.6314,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4946
  maximum absolute entry in einsum_ir solution: 33.4946
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142773
  time (eval):    0.0110291
  gflops (eval):  392.736
  gflops (total): 347.723
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142773,0.0110291,392.736,347.723

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557121
  gflops (total): 77.7483
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548647
  gflops (eval):  78.9491
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548647,78.9491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3819
  maximum absolute entry in einsum_ir solution: 33.3819
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014089
  time (eval):    0.0110388
  gflops (eval):  392.392
  gflops (total): 347.978
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014089,0.0110388,392.392,347.978

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556531
  gflops (total): 77.8307
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8307

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544147
  gflops (eval):  79.6021
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544147,79.6021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9693
  maximum absolute entry in einsum_ir solution: 32.9693
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149118
  time (eval):    0.0110103
  gflops (eval):  393.405
  gflops (total): 346.48
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149118,0.0110103,393.405,346.48

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553464
  gflops (total): 78.2621
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542589
  gflops (eval):  79.8306
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542589,79.8306,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2716
  maximum absolute entry in einsum_ir solution: 34.2716
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146247
  time (eval):    0.0112127
  gflops (eval):  386.304
  gflops (total): 341.732
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146247,0.0112127,386.304,341.732

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554187
  gflops (total): 78.16
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544017
  gflops (eval):  79.6211
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544017,79.6211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4642
  maximum absolute entry in einsum_ir solution: 36.4642
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142107
  time (eval):    0.0110198
  gflops (eval):  393.066
  gflops (total): 348.167
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142107,0.0110198,393.066,348.167

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553139
  gflops (total): 78.308
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054395
  gflops (eval):  79.6309
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054395,79.6309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6167
  maximum absolute entry in einsum_ir solution: 36.6167
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142546
  time (eval):    0.0110275
  gflops (eval):  392.793
  gflops (total): 347.831
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142546,0.0110275,392.793,347.831

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552515
  gflops (total): 78.3964
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054624
  gflops (eval):  79.297
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054624,79.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2646
  maximum absolute entry in einsum_ir solution: 34.2646
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143505
  time (eval):    0.0110257
  gflops (eval):  392.858
  gflops (total): 347.614
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143505,0.0110257,392.858,347.614

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554202
  gflops (total): 78.1578
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054521
  gflops (eval):  79.4468
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054521,79.4468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.263
  maximum absolute entry in einsum_ir solution: 35.263
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143362
  time (eval):    0.0110259
  gflops (eval):  392.85
  gflops (total): 347.647
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143362,0.0110259,392.85,347.647

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556079
  gflops (total): 77.8939
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557869
  gflops (eval):  77.644
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557869,77.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5192
  maximum absolute entry in einsum_ir solution: 35.5192
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142036
  time (eval):    0.0110368
  gflops (eval):  392.461
  gflops (total): 347.713
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142036,0.0110368,392.461,347.713

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552422
  gflops (total): 78.4097
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543242
  gflops (eval):  79.7347
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543242,79.7347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9511
  maximum absolute entry in einsum_ir solution: 34.9511
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142937
  time (eval):    0.0110285
  gflops (eval):  392.757
  gflops (total): 347.693
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142937,0.0110285,392.757,347.693

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551138
  gflops (total): 78.5923
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545877
  gflops (eval):  79.3498
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545877,79.3498,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.602
  maximum absolute entry in einsum_ir solution: 32.602
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143718
  time (eval):    0.0110635
  gflops (eval):  391.515
  gflops (total): 346.503
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143718,0.0110635,391.515,346.503

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561474
  gflops (total): 77.1455
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556595
  gflops (eval):  77.8217
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556595,77.8217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2268
  maximum absolute entry in einsum_ir solution: 41.2268
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143051
  time (eval):    0.0111552
  gflops (eval):  388.296
  gflops (total): 344.162
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143051,0.0111552,388.296,344.162

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0549713
  gflops (total): 78.7961
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.7961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0541813
  gflops (eval):  79.9449
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0541813,79.9449,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1082
  maximum absolute entry in einsum_ir solution: 34.1082
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143692
  time (eval):    0.0111914
  gflops (eval):  387.039
  gflops (total): 343
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143692,0.0111914,387.039,343

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553789
  gflops (total): 78.216
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054945
  gflops (eval):  78.8337
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054945,78.8337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.213
  maximum absolute entry in einsum_ir solution: 36.213
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014145
  time (eval):    0.0112281
  gflops (eval):  385.775
  gflops (total): 342.613
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014145,0.0112281,385.775,342.613

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551653
  gflops (total): 78.5189
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0541863
  gflops (eval):  79.9376
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0541863,79.9376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.504
  maximum absolute entry in einsum_ir solution: 35.504
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00170889
  time (eval):    0.0110271
  gflops (eval):  392.808
  gflops (total): 340.102
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00170889,0.0110271,392.808,340.102

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558116
  gflops (total): 77.6097
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545963
  gflops (eval):  79.3373
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545963,79.3373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7102
  maximum absolute entry in einsum_ir solution: 34.7102
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141639
  time (eval):    0.0111383
  gflops (eval):  388.885
  gflops (total): 345.012
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141639,0.0111383,388.885,345.012

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554572
  gflops (total): 78.1056
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054484
  gflops (eval):  79.5008
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054484,79.5008,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0294
  maximum absolute entry in einsum_ir solution: 34.0294
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143276
  time (eval):    0.0110512
  gflops (eval):  391.95
  gflops (total): 346.967
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143276,0.0110512,391.95,346.967

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0562701
  gflops (total): 76.9774
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557313
  gflops (eval):  77.7215
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557313,77.7215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5537
  maximum absolute entry in einsum_ir solution: 36.5537
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142533
  time (eval):    0.0111887
  gflops (eval):  387.134
  gflops (total): 343.389
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142533,0.0111887,387.134,343.389

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556772
  gflops (total): 77.797
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546874
  gflops (eval):  79.2051
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546874,79.2051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7759
  maximum absolute entry in einsum_ir solution: 34.7759
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143228
  time (eval):    0.0111798
  gflops (eval):  387.443
  gflops (total): 343.443
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143228,0.0111798,387.443,343.443

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554716
  gflops (total): 78.0853
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547852
  gflops (eval):  79.0637
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547852,79.0637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5043
  maximum absolute entry in einsum_ir solution: 34.5043
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142552
  time (eval):    0.0110271
  gflops (eval):  392.806
  gflops (total): 347.839
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142552,0.0110271,392.806,347.839

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553492
  gflops (total): 78.2581
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556512
  gflops (eval):  77.8334
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556512,77.8334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6014
  maximum absolute entry in einsum_ir solution: 34.6014
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147967
  time (eval):    0.0110413
  gflops (eval):  392.302
  gflops (total): 345.941
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147967,0.0110413,392.302,345.941

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555331
  gflops (total): 77.9989
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546118
  gflops (eval):  79.3147
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546118,79.3147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.2142
  maximum absolute entry in einsum_ir solution: 32.2142
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00138365
  time (eval):    0.0110179
  gflops (eval):  393.134
  gflops (total): 349.272
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00138365,0.0110179,393.134,349.272

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554196
  gflops (total): 78.1587
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547948
  gflops (eval):  79.0498
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547948,79.0498,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6951
  maximum absolute entry in einsum_ir solution: 35.6951
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151251
  time (eval):    0.0110174
  gflops (eval):  393.151
  gflops (total): 345.693
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151251,0.0110174,393.151,345.693

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055382
  gflops (total): 78.2117
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2117

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548044
  gflops (eval):  79.0359
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548044,79.0359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9475
  maximum absolute entry in einsum_ir solution: 37.9475
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142174
  time (eval):    0.0110057
  gflops (eval):  393.572
  gflops (total): 348.546
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142174,0.0110057,393.572,348.546

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551614
  gflops (total): 78.5245
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544147
  gflops (eval):  79.6021
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544147,79.6021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8908
  maximum absolute entry in einsum_ir solution: 35.8908
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143083
  time (eval):    0.0110252
  gflops (eval):  392.875
  gflops (total): 347.745
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143083,0.0110252,392.875,347.745

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553676
  gflops (total): 78.232
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544359
  gflops (eval):  79.571
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544359,79.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3566
  maximum absolute entry in einsum_ir solution: 33.3566
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141602
  time (eval):    0.0112197
  gflops (eval):  386.064
  gflops (total): 342.8
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141602,0.0112197,386.064,342.8

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553568
  gflops (total): 78.2474
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548601
  gflops (eval):  78.9557
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548601,78.9557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9842
  maximum absolute entry in einsum_ir solution: 34.9842
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141577
  time (eval):    0.0110697
  gflops (eval):  391.296
  gflops (total): 346.925
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141577,0.0110697,391.296,346.925

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553126
  gflops (total): 78.3098
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0561801
  gflops (eval):  77.1006
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0561801,77.1006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9557
  maximum absolute entry in einsum_ir solution: 33.9557
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142379
  time (eval):    0.0110593
  gflops (eval):  391.664
  gflops (total): 346.992
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142379,0.0110593,391.664,346.992

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0562443
  gflops (total): 77.0127
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.0127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544702
  gflops (eval):  79.521
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544702,79.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3722
  maximum absolute entry in einsum_ir solution: 33.3722
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142787
  time (eval):    0.0110138
  gflops (eval):  393.28
  gflops (total): 348.145
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142787,0.0110138,393.28,348.145

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561137
  gflops (total): 77.1918
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544304
  gflops (eval):  79.579
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544304,79.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.007
  maximum absolute entry in einsum_ir solution: 35.007
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014136
  time (eval):    0.0110481
  gflops (eval):  392.058
  gflops (total): 347.585
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014136,0.0110481,392.058,347.585

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553218
  gflops (total): 78.2967
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547107
  gflops (eval):  79.1714
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547107,79.1714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8423
  maximum absolute entry in einsum_ir solution: 34.8423
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147861
  time (eval):    0.0112353
  gflops (eval):  385.527
  gflops (total): 340.691
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147861,0.0112353,385.527,340.691

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560885
  gflops (total): 77.2265
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544364
  gflops (eval):  79.5703
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544364,79.5703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2336
  maximum absolute entry in einsum_ir solution: 35.2336
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142239
  time (eval):    0.011178
  gflops (eval):  387.505
  gflops (total): 343.761
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142239,0.011178,387.505,343.761

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556451
  gflops (total): 77.8419
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054249
  gflops (eval):  79.8452
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054249,79.8452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3004
  maximum absolute entry in einsum_ir solution: 36.3004
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142312
  time (eval):    0.011161
  gflops (eval):  388.094
  gflops (total): 344.205
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142312,0.011161,388.094,344.205

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0562211
  gflops (total): 77.0444
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.0444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0555758
  gflops (eval):  77.9389
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555758,77.9389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.087
  maximum absolute entry in einsum_ir solution: 35.087
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141834
  time (eval):    0.0110254
  gflops (eval):  392.868
  gflops (total): 348.089
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141834,0.0110254,392.868,348.089

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055339
  gflops (total): 78.2724
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0550752
  gflops (eval):  78.6474
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0550752,78.6474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5513
  maximum absolute entry in einsum_ir solution: 33.5513
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142572
  time (eval):    0.0112334
  gflops (eval):  385.591
  gflops (total): 342.165
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142572,0.0112334,385.591,342.165

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553182
  gflops (total): 78.302
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054597
  gflops (eval):  79.3363
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054597,79.3363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0301
  maximum absolute entry in einsum_ir solution: 38.0301
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141579
  time (eval):    0.0111743
  gflops (eval):  387.634
  gflops (total): 344.043
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141579,0.0111743,387.634,344.043

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551896
  gflops (total): 78.4843
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547967
  gflops (eval):  79.0471
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547967,79.0471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9561
  maximum absolute entry in einsum_ir solution: 33.9561
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141656
  time (eval):    0.0109895
  gflops (eval):  394.151
  gflops (total): 349.145
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141656,0.0109895,394.151,349.145

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565458
  gflops (total): 76.602
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.602

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.055723
  gflops (eval):  77.7331
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055723,77.7331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0306
  maximum absolute entry in einsum_ir solution: 37.0306
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140074
  time (eval):    0.0110458
  gflops (eval):  392.142
  gflops (total): 348.01
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140074,0.0110458,392.142,348.01

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551715
  gflops (total): 78.5101
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554678
  gflops (eval):  78.0907
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554678,78.0907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1665
  maximum absolute entry in einsum_ir solution: 36.1665
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146396
  time (eval):    0.0110185
  gflops (eval):  393.113
  gflops (total): 347.008
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146396,0.0110185,393.113,347.008

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056254
  gflops (total): 76.9993
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0551948
  gflops (eval):  78.4769
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551948,78.4769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6553
  maximum absolute entry in einsum_ir solution: 32.6553
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014342
  time (eval):    0.0110089
  gflops (eval):  393.455
  gflops (total): 348.105
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014342,0.0110089,393.455,348.105

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554129
  gflops (total): 78.168
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543602
  gflops (eval):  79.6818
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543602,79.6818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.04
  maximum absolute entry in einsum_ir solution: 34.04
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142593
  time (eval):    0.0110636
  gflops (eval):  391.512
  gflops (total): 346.813
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142593,0.0110636,391.512,346.813

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554184
  gflops (total): 78.1603
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558264
  gflops (eval):  77.5891
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558264,77.5891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3633
  maximum absolute entry in einsum_ir solution: 37.3633
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143325
  time (eval):    0.0110273
  gflops (eval):  392.801
  gflops (total): 347.62
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143325,0.0110273,392.801,347.62

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0550709
  gflops (total): 78.6535
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.6535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054675
  gflops (eval):  79.223
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054675,79.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4345
  maximum absolute entry in einsum_ir solution: 33.4345
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143172
  time (eval):    0.0111675
  gflops (eval):  387.867
  gflops (total): 343.792
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143172,0.0111675,387.867,343.792

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551341
  gflops (total): 78.5633
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547973
  gflops (eval):  79.0462
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547973,79.0462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2068
  maximum absolute entry in einsum_ir solution: 33.2068
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142643
  time (eval):    0.0111266
  gflops (eval):  389.294
  gflops (total): 345.058
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142643,0.0111266,389.294,345.058

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555237
  gflops (total): 78.0121
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548133
  gflops (eval):  79.0232
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548133,79.0232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0609
  maximum absolute entry in einsum_ir solution: 34.0609
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143378
  time (eval):    0.0111447
  gflops (eval):  388.661
  gflops (total): 344.359
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143378,0.0111447,388.661,344.359

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554556
  gflops (total): 78.108
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.108

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544332
  gflops (eval):  79.575
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544332,79.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.2705
  maximum absolute entry in einsum_ir solution: 32.2705
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00166314
  time (eval):    0.0110413
  gflops (eval):  392.303
  gflops (total): 340.946
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00166314,0.0110413,392.303,340.946

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553709
  gflops (total): 78.2274
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543894
  gflops (eval):  79.6391
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543894,79.6391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0888
  maximum absolute entry in einsum_ir solution: 38.0888
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001429
  time (eval):    0.0111887
  gflops (eval):  387.134
  gflops (total): 343.289
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001429,0.0111887,387.134,343.289

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556434
  gflops (total): 77.8442
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556289
  gflops (eval):  77.8646
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556289,77.8646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.864
  maximum absolute entry in einsum_ir solution: 32.864
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142284
  time (eval):    0.0111322
  gflops (eval):  389.1
  gflops (total): 345.004
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142284,0.0111322,389.1,345.004

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564671
  gflops (total): 76.7088
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.7088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0551435
  gflops (eval):  78.55
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551435,78.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3761
  maximum absolute entry in einsum_ir solution: 33.3761
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146261
  time (eval):    0.0110193
  gflops (eval):  393.086
  gflops (total): 347.025
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146261,0.0110193,393.086,347.025

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.05512
  gflops (total): 78.5834
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545371
  gflops (eval):  79.4233
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545371,79.4233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8325
  maximum absolute entry in einsum_ir solution: 34.8325
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014629
  time (eval):    0.011013
  gflops (eval):  393.31
  gflops (total): 347.191
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014629,0.011013,393.31,347.191

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555221
  gflops (total): 78.0143
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0549182
  gflops (eval):  78.8722
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549182,78.8722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5849
  maximum absolute entry in einsum_ir solution: 34.5849
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143775
  time (eval):    0.010993
  gflops (eval):  394.026
  gflops (total): 348.452
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143775,0.010993,394.026,348.452

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552123
  gflops (total): 78.4521
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054642
  gflops (eval):  79.2709
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054642,79.2709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6089
  maximum absolute entry in einsum_ir solution: 34.6089
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142567
  time (eval):    0.0110223
  gflops (eval):  392.979
  gflops (total): 347.971
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142567,0.0110223,392.979,347.971

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555966
  gflops (total): 77.9098
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546192
  gflops (eval):  79.304
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546192,79.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6474
  maximum absolute entry in einsum_ir solution: 32.6474
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143205
  time (eval):    0.0110013
  gflops (eval):  393.728
  gflops (total): 348.379
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143205,0.0110013,393.728,348.379

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553299
  gflops (total): 78.2854
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548625
  gflops (eval):  78.9523
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548625,78.9523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5762
  maximum absolute entry in einsum_ir solution: 39.5762
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142391
  time (eval):    0.0111977
  gflops (eval):  386.821
  gflops (total): 343.182
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142391,0.0111977,386.821,343.182

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557008
  gflops (total): 77.764
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548286
  gflops (eval):  79.0012
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548286,79.0012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7181
  maximum absolute entry in einsum_ir solution: 36.7181
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014235
  time (eval):    0.0110154
  gflops (eval):  393.224
  gflops (total): 348.224
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014235,0.0110154,393.224,348.224

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560101
  gflops (total): 77.3347
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552791
  gflops (eval):  78.3573
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552791,78.3573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6763
  maximum absolute entry in einsum_ir solution: 36.6763
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141121
  time (eval):    0.0111923
  gflops (eval):  387.008
  gflops (total): 343.675
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141121,0.0111923,387.008,343.675

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0549999
  gflops (total): 78.755
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054414
  gflops (eval):  79.603
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054414,79.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3742
  maximum absolute entry in einsum_ir solution: 34.3742
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147382
  time (eval):    0.0110386
  gflops (eval):  392.399
  gflops (total): 346.179
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147382,0.0110386,392.399,346.179

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0550034
  gflops (total): 78.75
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547079
  gflops (eval):  79.1755
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547079,79.1755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3356
  maximum absolute entry in einsum_ir solution: 34.3356
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142166
  time (eval):    0.0111462
  gflops (eval):  388.609
  gflops (total): 344.65
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142166,0.0111462,388.609,344.65

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557546
  gflops (total): 77.6891
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0553261
  gflops (eval):  78.2907
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0553261,78.2907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5061
  maximum absolute entry in einsum_ir solution: 34.5061
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140022
  time (eval):    0.0111525
  gflops (eval):  388.39
  gflops (total): 345.067
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140022,0.0111525,388.39,345.067

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552021
  gflops (total): 78.4666
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0541644
  gflops (eval):  79.9698
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0541644,79.9698,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8182
  maximum absolute entry in einsum_ir solution: 34.8182
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143364
  time (eval):    0.0109977
  gflops (eval):  393.857
  gflops (total): 348.435
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143364,0.0109977,393.857,348.435

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553465
  gflops (total): 78.2618
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545038
  gflops (eval):  79.472
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545038,79.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.334
  maximum absolute entry in einsum_ir solution: 34.334
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140829
  time (eval):    0.0110456
  gflops (eval):  392.148
  gflops (total): 347.804
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140829,0.0110456,392.148,347.804

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553048
  gflops (total): 78.3209
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3209

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546133
  gflops (eval):  79.3125
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546133,79.3125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7955
  maximum absolute entry in einsum_ir solution: 35.7955
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141502
  time (eval):    0.0110512
  gflops (eval):  391.952
  gflops (total): 347.462
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141502,0.0110512,391.952,347.462

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555294
  gflops (total): 78.004
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543129
  gflops (eval):  79.7512
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543129,79.7512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2724
  maximum absolute entry in einsum_ir solution: 35.2724
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154703
  time (eval):    0.0110435
  gflops (eval):  392.224
  gflops (total): 344.031
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154703,0.0110435,392.224,344.031

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056002
  gflops (total): 77.3459
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0549024
  gflops (eval):  78.8949
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549024,78.8949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9273
  maximum absolute entry in einsum_ir solution: 37.9273
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142914
  time (eval):    0.011194
  gflops (eval):  386.951
  gflops (total): 343.142
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142914,0.011194,386.951,343.142

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055726
  gflops (total): 77.7288
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054529
  gflops (eval):  79.4352
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054529,79.4352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7533
  maximum absolute entry in einsum_ir solution: 38.7533
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142302
  time (eval):    0.0110214
  gflops (eval):  393.01
  gflops (total): 348.069
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142302,0.0110214,393.01,348.069

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555149
  gflops (total): 78.0245
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544723
  gflops (eval):  79.5178
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544723,79.5178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5596
  maximum absolute entry in einsum_ir solution: 33.5596
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143194
  time (eval):    0.0111777
  gflops (eval):  387.516
  gflops (total): 343.51
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143194,0.0111777,387.516,343.51

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554196
  gflops (total): 78.1587
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545185
  gflops (eval):  79.4504
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545185,79.4504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8368
  maximum absolute entry in einsum_ir solution: 32.8368
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00155944
  time (eval):    0.0110369
  gflops (eval):  392.459
  gflops (total): 343.872
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00155944,0.0110369,392.459,343.872

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552373
  gflops (total): 78.4166
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545155
  gflops (eval):  79.4548
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545155,79.4548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9765
  maximum absolute entry in einsum_ir solution: 33.9765
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141128
  time (eval):    0.0110844
  gflops (eval):  390.777
  gflops (total): 346.642
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141128,0.0110844,390.777,346.642

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558681
  gflops (total): 77.5312
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5312

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0549406
  gflops (eval):  78.84
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549406,78.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0583
  maximum absolute entry in einsum_ir solution: 34.0583
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00170805
  time (eval):    0.011045
  gflops (eval):  392.171
  gflops (total): 339.646
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00170805,0.011045,392.171,339.646

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554674
  gflops (total): 78.0912
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545444
  gflops (eval):  79.4127
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545444,79.4127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6596
  maximum absolute entry in einsum_ir solution: 34.6596
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142015
  time (eval):    0.0110308
  gflops (eval):  392.675
  gflops (total): 347.887
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142015,0.0110308,392.675,347.887

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552365
  gflops (total): 78.4177
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.05451
  gflops (eval):  79.4628
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.05451,79.4628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1411
  maximum absolute entry in einsum_ir solution: 33.1411
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142114
  time (eval):    0.0110309
  gflops (eval):  392.67
  gflops (total): 347.855
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142114,0.0110309,392.67,347.855

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552901
  gflops (total): 78.3417
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546929
  gflops (eval):  79.1971
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546929,79.1971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8437
  maximum absolute entry in einsum_ir solution: 34.8437
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146208
  time (eval):    0.0110814
  gflops (eval):  390.882
  gflops (total): 345.32
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146208,0.0110814,390.882,345.32

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055314
  gflops (total): 78.3079
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.056203
  gflops (eval):  77.0692
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.056203,77.0692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5585
  maximum absolute entry in einsum_ir solution: 33.5585
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144938
  time (eval):    0.0110267
  gflops (eval):  392.822
  gflops (total): 347.187
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144938,0.0110267,392.822,347.187

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552563
  gflops (total): 78.3897
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544495
  gflops (eval):  79.5511
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544495,79.5511,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6688
  maximum absolute entry in einsum_ir solution: 36.6688
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142542
  time (eval):    0.0109972
  gflops (eval):  393.875
  gflops (total): 348.68
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142542,0.0109972,393.875,348.68

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.05611
  gflops (total): 77.1969
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542622
  gflops (eval):  79.8257
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542622,79.8257,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.887
  maximum absolute entry in einsum_ir solution: 36.887
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150221
  time (eval):    0.01118
  gflops (eval):  387.434
  gflops (total): 341.542
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150221,0.01118,387.434,341.542

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0572235
  gflops (total): 75.6947
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,75.6947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546322
  gflops (eval):  79.285
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546322,79.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4602
  maximum absolute entry in einsum_ir solution: 35.4602
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142276
  time (eval):    0.0110126
  gflops (eval):  393.325
  gflops (total): 348.324
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142276,0.0110126,393.325,348.324

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553695
  gflops (total): 78.2294
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542248
  gflops (eval):  79.8809
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542248,79.8809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6705
  maximum absolute entry in einsum_ir solution: 35.6705
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142259
  time (eval):    0.0109954
  gflops (eval):  393.94
  gflops (total): 348.81
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142259,0.0109954,393.94,348.81

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557924
  gflops (total): 77.6363
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544216
  gflops (eval):  79.5919
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544216,79.5919,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6166
  maximum absolute entry in einsum_ir solution: 34.6166
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142038
  time (eval):    0.0110984
  gflops (eval):  390.283
  gflops (total): 346.001
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142038,0.0110984,390.283,346.001

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055384
  gflops (total): 78.2089
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0539987
  gflops (eval):  80.2152
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0539987,80.2152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9083
  maximum absolute entry in einsum_ir solution: 35.9083
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143149
  time (eval):    0.0110186
  gflops (eval):  393.108
  gflops (total): 347.909
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143149,0.0110186,393.108,347.909

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558315
  gflops (total): 77.582
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.582

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546985
  gflops (eval):  79.189
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546985,79.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9234
  maximum absolute entry in einsum_ir solution: 35.9234
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143635
  time (eval):    0.0110308
  gflops (eval):  392.675
  gflops (total): 347.435
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143635,0.0110308,392.675,347.435

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0549538
  gflops (total): 78.8212
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.8212

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546093
  gflops (eval):  79.3183
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546093,79.3183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6856
  maximum absolute entry in einsum_ir solution: 36.6856
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143714
  time (eval):    0.0110441
  gflops (eval):  392.2
  gflops (total): 347.041
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143714,0.0110441,392.2,347.041

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552182
  gflops (total): 78.4437
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543961
  gflops (eval):  79.6292
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543961,79.6292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9487
  maximum absolute entry in einsum_ir solution: 34.9487
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142729
  time (eval):    0.0111857
  gflops (eval):  387.237
  gflops (total): 343.417
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142729,0.0111857,387.237,343.417

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553818
  gflops (total): 78.212
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.212

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054175
  gflops (eval):  79.9542
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054175,79.9542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1327
  maximum absolute entry in einsum_ir solution: 36.1327
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142837
  time (eval):    0.0110345
  gflops (eval):  392.543
  gflops (total): 347.554
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142837,0.0110345,392.543,347.554

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552248
  gflops (total): 78.4344
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545101
  gflops (eval):  79.4627
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545101,79.4627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3319
  maximum absolute entry in einsum_ir solution: 33.3319
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149753
  time (eval):    0.0110266
  gflops (eval):  392.823
  gflops (total): 345.853
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149753,0.0110266,392.823,345.853

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555109
  gflops (total): 78.0301
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547518
  gflops (eval):  79.1119
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547518,79.1119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0901
  maximum absolute entry in einsum_ir solution: 35.0901
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143097
  time (eval):    0.0110289
  gflops (eval):  392.742
  gflops (total): 347.637
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143097,0.0110289,392.742,347.637

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557352
  gflops (total): 77.7161
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545595
  gflops (eval):  79.3908
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545595,79.3908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2229
  maximum absolute entry in einsum_ir solution: 39.2229
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00194554
  time (eval):    0.0110119
  gflops (eval):  393.348
  gflops (total): 334.288
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00194554,0.0110119,393.348,334.288

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552415
  gflops (total): 78.4106
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545008
  gflops (eval):  79.4762
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545008,79.4762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5186
  maximum absolute entry in einsum_ir solution: 34.5186
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142034
  time (eval):    0.0110177
  gflops (eval):  393.141
  gflops (total): 348.247
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142034,0.0110177,393.141,348.247

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555282
  gflops (total): 78.0058
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558214
  gflops (eval):  77.596
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558214,77.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7959
  maximum absolute entry in einsum_ir solution: 35.7959
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142826
  time (eval):    0.010914
  gflops (eval):  396.877
  gflops (total): 350.95
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142826,0.010914,396.877,350.95

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553331
  gflops (total): 78.2809
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546322
  gflops (eval):  79.2851
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546322,79.2851,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7642
  maximum absolute entry in einsum_ir solution: 33.7642
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144375
  time (eval):    0.0109422
  gflops (eval):  395.856
  gflops (total): 349.713
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144375,0.0109422,395.856,349.713

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556559
  gflops (total): 77.8268
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542719
  gflops (eval):  79.8115
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542719,79.8115,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9075
  maximum absolute entry in einsum_ir solution: 35.9075
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141855
  time (eval):    0.0109524
  gflops (eval):  395.487
  gflops (total): 350.137
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141855,0.0109524,395.487,350.137

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555486
  gflops (total): 77.9771
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545384
  gflops (eval):  79.4215
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545384,79.4215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6454
  maximum absolute entry in einsum_ir solution: 34.6454
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141854
  time (eval):    0.0109028
  gflops (eval):  397.286
  gflops (total): 351.547
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141854,0.0109028,397.286,351.547

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564727
  gflops (total): 76.7012
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.7012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543933
  gflops (eval):  79.6334
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543933,79.6334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2175
  maximum absolute entry in einsum_ir solution: 39.2175
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146498
  time (eval):    0.0109239
  gflops (eval):  396.518
  gflops (total): 349.63
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146498,0.0109239,396.518,349.63

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551501
  gflops (total): 78.5406
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054662
  gflops (eval):  79.2419
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054662,79.2419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0425
  maximum absolute entry in einsum_ir solution: 35.0425
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142484
  time (eval):    0.0109654
  gflops (eval):  395.016
  gflops (total): 349.591
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142484,0.0109654,395.016,349.591

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551031
  gflops (total): 78.6076
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.6076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547516
  gflops (eval):  79.1122
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547516,79.1122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5404
  maximum absolute entry in einsum_ir solution: 33.5404
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141694
  time (eval):    0.0109339
  gflops (eval):  396.156
  gflops (total): 350.707
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141694,0.0109339,396.156,350.707

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564213
  gflops (total): 76.771
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557421
  gflops (eval):  77.7064
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557421,77.7064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7469
  maximum absolute entry in einsum_ir solution: 32.7469
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141178
  time (eval):    0.0109523
  gflops (eval):  395.489
  gflops (total): 350.33
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141178,0.0109523,395.489,350.33

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0562451
  gflops (total): 77.0115
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.0115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0549855
  gflops (eval):  78.7756
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549855,78.7756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5667
  maximum absolute entry in einsum_ir solution: 38.5667
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014177
  time (eval):    0.0109406
  gflops (eval):  395.912
  gflops (total): 350.494
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014177,0.0109406,395.912,350.494

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553039
  gflops (total): 78.3221
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543788
  gflops (eval):  79.6545
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543788,79.6545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.052
  maximum absolute entry in einsum_ir solution: 34.052
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142849
  time (eval):    0.0109913
  gflops (eval):  394.085
  gflops (total): 348.759
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142849,0.0109913,394.085,348.759

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553242
  gflops (total): 78.2934
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545814
  gflops (eval):  79.359
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545814,79.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9684
  maximum absolute entry in einsum_ir solution: 33.9684
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142124
  time (eval):    0.0109224
  gflops (eval):  396.573
  gflops (total): 350.912
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142124,0.0109224,396.573,350.912

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564659
  gflops (total): 76.7104
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.7104

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.055471
  gflops (eval):  78.0862
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055471,78.0862,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5669
  maximum absolute entry in einsum_ir solution: 34.5669
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141815
  time (eval):    0.010924
  gflops (eval):  396.514
  gflops (total): 350.953
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141815,0.010924,396.514,350.953

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565016
  gflops (total): 76.6619
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.6619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558336
  gflops (eval):  77.5791
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558336,77.5791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1015
  maximum absolute entry in einsum_ir solution: 37.1015
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142587
  time (eval):    0.0109058
  gflops (eval):  397.177
  gflops (total): 351.252
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142587,0.0109058,397.177,351.252

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566977
  gflops (total): 76.3967
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.3967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054875
  gflops (eval):  78.9343
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054875,78.9343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2978
  maximum absolute entry in einsum_ir solution: 33.2978
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148703
  time (eval):    0.0111982
  gflops (eval):  386.803
  gflops (total): 341.46
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148703,0.0111982,386.803,341.46

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564211
  gflops (total): 76.7713
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.7713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557722
  gflops (eval):  77.6645
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557722,77.6645,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.524
  maximum absolute entry in einsum_ir solution: 37.524
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142974
  time (eval):    0.0109424
  gflops (eval):  395.847
  gflops (total): 350.103
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142974,0.0109424,395.847,350.103

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557873
  gflops (total): 77.6435
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547329
  gflops (eval):  79.1392
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547329,79.1392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6534
  maximum absolute entry in einsum_ir solution: 33.6534
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014219
  time (eval):    0.0109915
  gflops (eval):  394.08
  gflops (total): 348.94
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014219,0.0109915,394.08,348.94

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055444
  gflops (total): 78.1242
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1242

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547163
  gflops (eval):  79.1633
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547163,79.1633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6282
  maximum absolute entry in einsum_ir solution: 33.6282
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142808
  time (eval):    0.0109691
  gflops (eval):  394.882
  gflops (total): 349.394
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142808,0.0109691,394.882,349.394

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564826
  gflops (total): 76.6877
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.6877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543105
  gflops (eval):  79.7548
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543105,79.7548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3377
  maximum absolute entry in einsum_ir solution: 36.3377
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141127
  time (eval):    0.0110228
  gflops (eval):  392.96
  gflops (total): 348.359
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141127,0.0110228,392.96,348.359

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560884
  gflops (total): 77.2266
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0561236
  gflops (eval):  77.1782
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0561236,77.1782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5966
  maximum absolute entry in einsum_ir solution: 36.5966
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142587
  time (eval):    0.0109794
  gflops (eval):  394.515
  gflops (total): 349.169
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142587,0.0109794,394.515,349.169

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056439
  gflops (total): 76.7469
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.7469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554372
  gflops (eval):  78.1338
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554372,78.1338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3615
  maximum absolute entry in einsum_ir solution: 38.3615
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141204
  time (eval):    0.0109425
  gflops (eval):  395.845
  gflops (total): 350.603
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141204,0.0109425,395.845,350.603

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566982
  gflops (total): 76.396
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556958
  gflops (eval):  77.771
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556958,77.771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2332
  maximum absolute entry in einsum_ir solution: 33.2332
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143791
  time (eval):    0.0110237
  gflops (eval):  392.928
  gflops (total): 347.589
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143791,0.0110237,392.928,347.589

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0549874
  gflops (total): 78.7729
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.7729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054465
  gflops (eval):  79.5285
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054465,79.5285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2473
  maximum absolute entry in einsum_ir solution: 42.2473
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141974
  time (eval):    0.0109528
  gflops (eval):  395.471
  gflops (total): 350.091
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141974,0.0109528,395.471,350.091

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551803
  gflops (total): 78.4976
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0549175
  gflops (eval):  78.8733
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549175,78.8733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0276
  maximum absolute entry in einsum_ir solution: 34.0276
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141943
  time (eval):    0.0109502
  gflops (eval):  395.564
  gflops (total): 350.172
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141943,0.0109502,395.564,350.172

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557725
  gflops (total): 77.6641
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545481
  gflops (eval):  79.4074
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545481,79.4074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5453
  maximum absolute entry in einsum_ir solution: 35.5453
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152219
  time (eval):    0.0109818
  gflops (eval):  394.426
  gflops (total): 346.41
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152219,0.0109818,394.426,346.41

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557705
  gflops (total): 77.6669
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054637
  gflops (eval):  79.2782
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054637,79.2782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1686
  maximum absolute entry in einsum_ir solution: 36.1686
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153192
  time (eval):    0.0112355
  gflops (eval):  385.52
  gflops (total): 339.263
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153192,0.0112355,385.52,339.263

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554822
  gflops (total): 78.0704
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0704

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543939
  gflops (eval):  79.6324
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543939,79.6324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8987
  maximum absolute entry in einsum_ir solution: 33.8987
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00138622
  time (eval):    0.0109358
  gflops (eval):  396.085
  gflops (total): 351.526
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00138622,0.0109358,396.085,351.526

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553409
  gflops (total): 78.2698
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548786
  gflops (eval):  78.9291
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548786,78.9291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.82
  maximum absolute entry in einsum_ir solution: 35.82
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140548
  time (eval):    0.0109862
  gflops (eval):  394.271
  gflops (total): 349.552
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140548,0.0109862,394.271,349.552

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056055
  gflops (total): 77.2726
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0553728
  gflops (eval):  78.2246
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0553728,78.2246,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6496
  maximum absolute entry in einsum_ir solution: 36.6496
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154782
  time (eval):    0.0109183
  gflops (eval):  396.722
  gflops (total): 347.465
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154782,0.0109183,396.722,347.465

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558048
  gflops (total): 77.6191
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545738
  gflops (eval):  79.37
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545738,79.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3039
  maximum absolute entry in einsum_ir solution: 34.3039
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143999
  time (eval):    0.0109322
  gflops (eval):  396.215
  gflops (total): 350.1
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143999,0.0109322,396.215,350.1

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551604
  gflops (total): 78.5259
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545139
  gflops (eval):  79.4572
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545139,79.4572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8523
  maximum absolute entry in einsum_ir solution: 33.8523
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014184
  time (eval):    0.0109175
  gflops (eval):  396.751
  gflops (total): 351.132
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014184,0.0109175,396.751,351.132

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567021
  gflops (total): 76.3908
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.3908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0541451
  gflops (eval):  79.9984
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0541451,79.9984,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8625
  maximum absolute entry in einsum_ir solution: 32.8625
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141524
  time (eval):    0.0109373
  gflops (eval):  396.034
  gflops (total): 350.66
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141524,0.0109373,396.034,350.66

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564441
  gflops (total): 76.74
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556506
  gflops (eval):  77.8342
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556506,77.8342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4065
  maximum absolute entry in einsum_ir solution: 37.4065
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141792
  time (eval):    0.0109328
  gflops (eval):  396.195
  gflops (total): 350.71
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141792,0.0109328,396.195,350.71

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553191
  gflops (total): 78.3006
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544051
  gflops (eval):  79.616
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544051,79.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4632
  maximum absolute entry in einsum_ir solution: 34.4632
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142226
  time (eval):    0.0109858
  gflops (eval):  394.283
  gflops (total): 349.089
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142226,0.0109858,394.283,349.089

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563586
  gflops (total): 76.8564
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.8564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552535
  gflops (eval):  78.3935
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552535,78.3935,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7857
  maximum absolute entry in einsum_ir solution: 38.7857
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141444
  time (eval):    0.0108979
  gflops (eval):  397.463
  gflops (total): 351.803
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141444,0.0108979,397.463,351.803

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055422
  gflops (total): 78.1552
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545313
  gflops (eval):  79.4319
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545313,79.4319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2996
  maximum absolute entry in einsum_ir solution: 37.2996
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147814
  time (eval):    0.0109206
  gflops (eval):  396.636
  gflops (total): 349.351
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147814,0.0109206,396.636,349.351

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561561
  gflops (total): 77.1336
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554201
  gflops (eval):  78.158
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554201,78.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7499
  maximum absolute entry in einsum_ir solution: 33.7499
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143105
  time (eval):    0.0109369
  gflops (eval):  396.048
  gflops (total): 350.223
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143105,0.0109369,396.048,350.223

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556042
  gflops (total): 77.8991
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558299
  gflops (eval):  77.5843
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558299,77.5843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2555
  maximum absolute entry in einsum_ir solution: 34.2555
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141393
  time (eval):    0.0109163
  gflops (eval):  396.793
  gflops (total): 351.292
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141393,0.0109163,396.793,351.292

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556312
  gflops (total): 77.8614
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546007
  gflops (eval):  79.3309
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546007,79.3309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3726
  maximum absolute entry in einsum_ir solution: 39.3726
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144853
  time (eval):    0.0109333
  gflops (eval):  396.176
  gflops (total): 349.828
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144853,0.0109333,396.176,349.828

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552705
  gflops (total): 78.3695
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0540096
  gflops (eval):  80.1991
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0540096,80.1991,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9161
  maximum absolute entry in einsum_ir solution: 32.9161
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014333
  time (eval):    0.0109138
  gflops (eval):  396.883
  gflops (total): 350.812
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014333,0.0109138,396.883,350.812

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561973
  gflops (total): 77.077
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0551368
  gflops (eval):  78.5595
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551368,78.5595,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9528
  maximum absolute entry in einsum_ir solution: 38.9528
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142059
  time (eval):    0.010997
  gflops (eval):  393.882
  gflops (total): 348.821
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142059,0.010997,393.882,348.821

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566483
  gflops (total): 76.4634
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.4634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0550472
  gflops (eval):  78.6874
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0550472,78.6874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3173
  maximum absolute entry in einsum_ir solution: 35.3173
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142375
  time (eval):    0.0109803
  gflops (eval):  394.481
  gflops (total): 349.202
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142375,0.0109803,394.481,349.202

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561337
  gflops (total): 77.1644
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0559617
  gflops (eval):  77.4015
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0559617,77.4015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0727
  maximum absolute entry in einsum_ir solution: 35.0727
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142917
  time (eval):    0.0109374
  gflops (eval):  396.03
  gflops (total): 350.262
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142917,0.0109374,396.03,350.262

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564228
  gflops (total): 76.769
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548272
  gflops (eval):  79.0031
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548272,79.0031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1206
  maximum absolute entry in einsum_ir solution: 33.1206
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142687
  time (eval):    0.0109595
  gflops (eval):  395.23
  gflops (total): 349.701
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142687,0.0109595,395.23,349.701

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0548682
  gflops (total): 78.9441
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.9441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552495
  gflops (eval):  78.3993
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552495,78.3993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9447
  maximum absolute entry in einsum_ir solution: 34.9447
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141591
  time (eval):    0.0109651
  gflops (eval):  395.026
  gflops (total): 349.851
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141591,0.0109651,395.026,349.851

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552881
  gflops (total): 78.3445
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543563
  gflops (eval):  79.6876
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543563,79.6876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.2498
  maximum absolute entry in einsum_ir solution: 32.2498
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146196
  time (eval):    0.0109475
  gflops (eval):  395.661
  gflops (total): 349.049
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146196,0.0109475,395.661,349.049

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554896
  gflops (total): 78.06
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054469
  gflops (eval):  79.5227
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054469,79.5227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5151
  maximum absolute entry in einsum_ir solution: 34.5151
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141864
  time (eval):    0.0109156
  gflops (eval):  396.818
  gflops (total): 351.177
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141864,0.0109156,396.818,351.177

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553978
  gflops (total): 78.1894
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544953
  gflops (eval):  79.4843
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544953,79.4843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0656
  maximum absolute entry in einsum_ir solution: 33.0656
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149007
  time (eval):    0.0109613
  gflops (eval):  395.165
  gflops (total): 347.875
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149007,0.0109613,395.165,347.875

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056411
  gflops (total): 76.785
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0549105
  gflops (eval):  78.8832
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549105,78.8832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9447
  maximum absolute entry in einsum_ir solution: 34.9447
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141152
  time (eval):    0.0110476
  gflops (eval):  392.076
  gflops (total): 347.657
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141152,0.0110476,392.076,347.657

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555326
  gflops (total): 77.9996
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547846
  gflops (eval):  79.0646
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547846,79.0646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1026
  maximum absolute entry in einsum_ir solution: 35.1026
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141615
  time (eval):    0.0110025
  gflops (eval):  393.684
  gflops (total): 348.791
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141615,0.0110025,393.684,348.791

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561675
  gflops (total): 77.1179
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542125
  gflops (eval):  79.8989
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542125,79.8989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1727
  maximum absolute entry in einsum_ir solution: 33.1727
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142023
  time (eval):    0.0109104
  gflops (eval):  397.009
  gflops (total): 351.282
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142023,0.0109104,397.009,351.282

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558497
  gflops (total): 77.5567
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544386
  gflops (eval):  79.5671
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544386,79.5671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7727
  maximum absolute entry in einsum_ir solution: 33.7727
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00172847
  time (eval):    0.010957
  gflops (eval):  395.319
  gflops (total): 341.454
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00172847,0.010957,395.319,341.454

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551547
  gflops (total): 78.534
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054297
  gflops (eval):  79.7745
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054297,79.7745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8101
  maximum absolute entry in einsum_ir solution: 35.8101
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140392
  time (eval):    0.0109042
  gflops (eval):  397.235
  gflops (total): 351.925
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140392,0.0109042,397.235,351.925

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552326
  gflops (total): 78.4232
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0549474
  gflops (eval):  78.8303
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549474,78.8303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1895
  maximum absolute entry in einsum_ir solution: 34.1895
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143388
  time (eval):    0.0109385
  gflops (eval):  395.988
  gflops (total): 350.096
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143388,0.0109385,395.988,350.096

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554008
  gflops (total): 78.1851
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544757
  gflops (eval):  79.5129
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544757,79.5129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4724
  maximum absolute entry in einsum_ir solution: 33.4724
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141998
  time (eval):    0.0109127
  gflops (eval):  396.924
  gflops (total): 351.223
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141998,0.0109127,396.924,351.223

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563437
  gflops (total): 76.8768
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.8768

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558859
  gflops (eval):  77.5065
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558859,77.5065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.112
  maximum absolute entry in einsum_ir solution: 34.112
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142306
  time (eval):    0.0109666
  gflops (eval):  394.976
  gflops (total): 349.609
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142306,0.0109666,394.976,349.609

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552217
  gflops (total): 78.4388
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544992
  gflops (eval):  79.4786
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544992,79.4786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4129
  maximum absolute entry in einsum_ir solution: 33.4129
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140812
  time (eval):    0.0110031
  gflops (eval):  393.663
  gflops (total): 349
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140812,0.0110031,393.663,349

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0562332
  gflops (total): 77.0278
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.0278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558135
  gflops (eval):  77.607
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558135,77.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3054
  maximum absolute entry in einsum_ir solution: 34.3054
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142276
  time (eval):    0.0109681
  gflops (eval):  394.918
  gflops (total): 349.573
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142276,0.0109681,394.918,349.573

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0550661
  gflops (total): 78.6603
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.6603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0551316
  gflops (eval):  78.5669
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551316,78.5669,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1862
  maximum absolute entry in einsum_ir solution: 34.1862
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014101
  time (eval):    0.0109473
  gflops (eval):  395.67
  gflops (total): 350.521
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014101,0.0109473,395.67,350.521

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552766
  gflops (total): 78.3608
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547533
  gflops (eval):  79.1098
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547533,79.1098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9393
  maximum absolute entry in einsum_ir solution: 32.9393
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014212
  time (eval):    0.0109142
  gflops (eval):  396.87
  gflops (total): 351.145
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014212,0.0109142,396.87,351.145

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556404
  gflops (total): 77.8485
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556087
  gflops (eval):  77.8928
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556087,77.8928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.495
  maximum absolute entry in einsum_ir solution: 36.495
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00156538
  time (eval):    0.0109188
  gflops (eval):  396.704
  gflops (total): 346.962
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00156538,0.0109188,396.704,346.962

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567962
  gflops (total): 76.2643
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.2643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556906
  gflops (eval):  77.7782
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556906,77.7782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6007
  maximum absolute entry in einsum_ir solution: 33.6007
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014177
  time (eval):    0.0109379
  gflops (eval):  396.01
  gflops (total): 350.572
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014177,0.0109379,396.01,350.572

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553163
  gflops (total): 78.3047
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546492
  gflops (eval):  79.2604
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546492,79.2604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3766
  maximum absolute entry in einsum_ir solution: 35.3766
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144297
  time (eval):    0.0109572
  gflops (eval):  395.313
  gflops (total): 349.312
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144297,0.0109572,395.313,349.312

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553157
  gflops (total): 78.3054
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545189
  gflops (eval):  79.4499
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545189,79.4499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9434
  maximum absolute entry in einsum_ir solution: 35.9434
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142059
  time (eval):    0.0109431
  gflops (eval):  395.822
  gflops (total): 350.342
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142059,0.0109431,395.822,350.342

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055511
  gflops (total): 78.0299
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545701
  gflops (eval):  79.3753
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545701,79.3753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4059
  maximum absolute entry in einsum_ir solution: 35.4059
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142863
  time (eval):    0.0109531
  gflops (eval):  395.461
  gflops (total): 349.832
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142863,0.0109531,395.461,349.832

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561123
  gflops (total): 77.1938
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556717
  gflops (eval):  77.8047
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556717,77.8047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3196
  maximum absolute entry in einsum_ir solution: 34.3196
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140705
  time (eval):    0.0109469
  gflops (eval):  395.686
  gflops (total): 350.62
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140705,0.0109469,395.686,350.62

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552005
  gflops (total): 78.4688
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4688

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545623
  gflops (eval):  79.3867
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545623,79.3867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6741
  maximum absolute entry in einsum_ir solution: 36.6741
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141842
  time (eval):    0.0109885
  gflops (eval):  394.188
  gflops (total): 349.123
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141842,0.0109885,394.188,349.123

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556038
  gflops (total): 77.8997
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8997

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545065
  gflops (eval):  79.468
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545065,79.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2786
  maximum absolute entry in einsum_ir solution: 36.2786
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140387
  time (eval):    0.0110117
  gflops (eval):  393.356
  gflops (total): 348.878
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140387,0.0110117,393.356,348.878

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056095
  gflops (total): 77.2176
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552894
  gflops (eval):  78.3426
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552894,78.3426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0991
  maximum absolute entry in einsum_ir solution: 35.0991
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141981
  time (eval):    0.0109081
  gflops (eval):  397.093
  gflops (total): 351.36
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141981,0.0109081,397.093,351.36

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565952
  gflops (total): 76.5351
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.5351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.056096
  gflops (eval):  77.2162
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.056096,77.2162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9017
  maximum absolute entry in einsum_ir solution: 36.9017
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141597
  time (eval):    0.010997
  gflops (eval):  393.884
  gflops (total): 348.953
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141597,0.010997,393.884,348.953

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553699
  gflops (total): 78.2288
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544418
  gflops (eval):  79.5624
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544418,79.5624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0986
  maximum absolute entry in einsum_ir solution: 36.0986
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141594
  time (eval):    0.0109477
  gflops (eval):  395.654
  gflops (total): 350.342
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141594,0.0109477,395.654,350.342

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555476
  gflops (total): 77.9786
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054565
  gflops (eval):  79.3828
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054565,79.3828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.955
  maximum absolute entry in einsum_ir solution: 33.955
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142614
  time (eval):    0.0109275
  gflops (eval):  396.388
  gflops (total): 350.628
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142614,0.0109275,396.388,350.628

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553189
  gflops (total): 78.3009
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0549748
  gflops (eval):  78.791
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0549748,78.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5356
  maximum absolute entry in einsum_ir solution: 35.5356
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141549
  time (eval):    0.0109838
  gflops (eval):  394.356
  gflops (total): 349.336
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141549,0.0109838,394.356,349.336

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556288
  gflops (total): 77.8647
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8647

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545712
  gflops (eval):  79.3737
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545712,79.3737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9376
  maximum absolute entry in einsum_ir solution: 34.9376
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154555
  time (eval):    0.0109772
  gflops (eval):  394.594
  gflops (total): 345.893
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154555,0.0109772,394.594,345.893

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563246
  gflops (total): 76.9028
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554188
  gflops (eval):  78.1598
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554188,78.1598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1597
  maximum absolute entry in einsum_ir solution: 35.1597
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141347
  time (eval):    0.0109815
  gflops (eval):  394.439
  gflops (total): 349.458
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141347,0.0109815,394.439,349.458

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567264
  gflops (total): 76.3581
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.3581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558892
  gflops (eval):  77.5019
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558892,77.5019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0508
  maximum absolute entry in einsum_ir solution: 35.0508
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141021
  time (eval):    0.0109164
  gflops (eval):  396.789
  gflops (total): 351.395
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141021,0.0109164,396.789,351.395

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551703
  gflops (total): 78.5117
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5117

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542133
  gflops (eval):  79.8978
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542133,79.8978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4583
  maximum absolute entry in einsum_ir solution: 32.4583
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142221
  time (eval):    0.0109343
  gflops (eval):  396.142
  gflops (total): 350.547
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142221,0.0109343,396.142,350.547

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565008
  gflops (total): 76.663
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554883
  gflops (eval):  78.0619
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554883,78.0619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6581
  maximum absolute entry in einsum_ir solution: 37.6581
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142373
  time (eval):    0.0109315
  gflops (eval):  396.243
  gflops (total): 350.583
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142373,0.0109315,396.243,350.583

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555269
  gflops (total): 78.0076
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547229
  gflops (eval):  79.1537
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547229,79.1537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.352
  maximum absolute entry in einsum_ir solution: 34.352
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142235
  time (eval):    0.0109546
  gflops (eval):  395.406
  gflops (total): 349.966
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142235,0.0109546,395.406,349.966

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552366
  gflops (total): 78.4176
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054424
  gflops (eval):  79.5885
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054424,79.5885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.1443
  maximum absolute entry in einsum_ir solution: 32.1443
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141756
  time (eval):    0.0109459
  gflops (eval):  395.723
  gflops (total): 350.35
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141756,0.0109459,395.723,350.35

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557314
  gflops (total): 77.7213
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0555914
  gflops (eval):  77.9171
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555914,77.9171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1625
  maximum absolute entry in einsum_ir solution: 34.1625
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142405
  time (eval):    0.0110122
  gflops (eval):  393.338
  gflops (total): 348.298
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142405,0.0110122,393.338,348.298

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056455
  gflops (total): 76.7251
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.7251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.055624
  gflops (eval):  77.8714
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055624,77.8714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.465
  maximum absolute entry in einsum_ir solution: 33.465
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141856
  time (eval):    0.010917
  gflops (eval):  396.77
  gflops (total): 351.142
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141856,0.010917,396.77,351.142

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555995
  gflops (total): 77.9058
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546551
  gflops (eval):  79.2518
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546551,79.2518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8837
  maximum absolute entry in einsum_ir solution: 34.8837
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143582
  time (eval):    0.0109448
  gflops (eval):  395.76
  gflops (total): 349.863
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143582,0.0109448,395.76,349.863

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561213
  gflops (total): 77.1814
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552252
  gflops (eval):  78.4338
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552252,78.4338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0103
  maximum absolute entry in einsum_ir solution: 34.0103
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147319
  time (eval):    0.0110193
  gflops (eval):  393.086
  gflops (total): 346.731
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147319,0.0110193,393.086,346.731

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554349
  gflops (total): 78.1371
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1371

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543606
  gflops (eval):  79.6813
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543606,79.6813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9862
  maximum absolute entry in einsum_ir solution: 32.9862
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142349
  time (eval):    0.0109532
  gflops (eval):  395.456
  gflops (total): 349.973
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142349,0.0109532,395.456,349.973

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563046
  gflops (total): 76.9301
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557861
  gflops (eval):  77.6452
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557861,77.6452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5242
  maximum absolute entry in einsum_ir solution: 37.5242
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144223
  time (eval):    0.0109432
  gflops (eval):  395.817
  gflops (total): 349.726
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144223,0.0109432,395.817,349.726

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565295
  gflops (total): 76.624
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.624

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554666
  gflops (eval):  78.0924
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554666,78.0924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0903
  maximum absolute entry in einsum_ir solution: 34.0903
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141959
  time (eval):    0.0109382
  gflops (eval):  396.001
  gflops (total): 350.511
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141959,0.0109382,396.001,350.511

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563059
  gflops (total): 76.9284
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556391
  gflops (eval):  77.8503
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556391,77.8503,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5614
  maximum absolute entry in einsum_ir solution: 33.5614
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142694
  time (eval):    0.0108873
  gflops (eval):  397.85
  gflops (total): 351.748
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142694,0.0108873,397.85,351.748

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566886
  gflops (total): 76.409
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558662
  gflops (eval):  77.5338
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558662,77.5338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7116
  maximum absolute entry in einsum_ir solution: 36.7116
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144069
  time (eval):    0.0109339
  gflops (eval):  396.154
  gflops (total): 350.033
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144069,0.0109339,396.154,350.033

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561703
  gflops (total): 77.1141
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546194
  gflops (eval):  79.3037
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546194,79.3037,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.463
  maximum absolute entry in einsum_ir solution: 33.463
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014237
  time (eval):    0.0109723
  gflops (eval):  394.77
  gflops (total): 349.43
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014237,0.0109723,394.77,349.43

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567344
  gflops (total): 76.3473
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.3473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554508
  gflops (eval):  78.1146
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554508,78.1146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9815
  maximum absolute entry in einsum_ir solution: 32.9815
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140831
  time (eval):    0.0109008
  gflops (eval):  397.356
  gflops (total): 351.894
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140831,0.0109008,397.356,351.894

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567113
  gflops (total): 76.3784
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.3784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0555261
  gflops (eval):  78.0087
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555261,78.0087,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8325
  maximum absolute entry in einsum_ir solution: 36.8325
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140548
  time (eval):    0.0109271
  gflops (eval):  396.402
  gflops (total): 351.226
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140548,0.0109271,396.402,351.226

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552899
  gflops (total): 78.3419
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054772
  gflops (eval):  79.0828
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054772,79.0828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8932
  maximum absolute entry in einsum_ir solution: 34.8932
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145902
  time (eval):    0.0109308
  gflops (eval):  396.269
  gflops (total): 349.604
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145902,0.0109308,396.269,349.604

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551888
  gflops (total): 78.4855
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.05433
  gflops (eval):  79.7261
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.05433,79.7261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2788
  maximum absolute entry in einsum_ir solution: 34.2788
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141554
  time (eval):    0.0108862
  gflops (eval):  397.891
  gflops (total): 352.106
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141554,0.0108862,397.891,352.106

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554821
  gflops (total): 78.0706
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542532
  gflops (eval):  79.839
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542532,79.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.815
  maximum absolute entry in einsum_ir solution: 32.815
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141355
  time (eval):    0.0109807
  gflops (eval):  394.467
  gflops (total): 349.479
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141355,0.0109807,394.467,349.479

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055229
  gflops (total): 78.4284
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0541138
  gflops (eval):  80.0446
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0541138,80.0446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3127
  maximum absolute entry in einsum_ir solution: 36.3127
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142019
  time (eval):    0.0109691
  gflops (eval):  394.886
  gflops (total): 349.619
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142019,0.0109691,394.886,349.619

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557358
  gflops (total): 77.7152
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546261
  gflops (eval):  79.2939
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546261,79.2939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7979
  maximum absolute entry in einsum_ir solution: 35.7979
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142207
  time (eval):    0.0109124
  gflops (eval):  396.934
  gflops (total): 351.171
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142207,0.0109124,396.934,351.171

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563179
  gflops (total): 76.9119
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558957
  gflops (eval):  77.493
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558957,77.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9944
  maximum absolute entry in einsum_ir solution: 37.9944
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144438
  time (eval):    0.0109549
  gflops (eval):  395.395
  gflops (total): 349.336
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144438,0.0109549,395.395,349.336

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561661
  gflops (total): 77.1199
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557778
  gflops (eval):  77.6568
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557778,77.6568,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4667
  maximum absolute entry in einsum_ir solution: 35.4667
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142258
  time (eval):    0.0109464
  gflops (eval):  395.704
  gflops (total): 350.193
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142258,0.0109464,395.704,350.193

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554259
  gflops (total): 78.1498
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546813
  gflops (eval):  79.2139
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546813,79.2139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7878
  maximum absolute entry in einsum_ir solution: 32.7878
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141506
  time (eval):    0.0109912
  gflops (eval):  394.089
  gflops (total): 349.139
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141506,0.0109912,394.089,349.139

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555806
  gflops (total): 77.9322
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545048
  gflops (eval):  79.4704
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545048,79.4704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6226
  maximum absolute entry in einsum_ir solution: 32.6226
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0016987
  time (eval):    0.0109577
  gflops (eval):  395.296
  gflops (total): 342.241
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0016987,0.0109577,395.296,342.241

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560019
  gflops (total): 77.346
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0559262
  gflops (eval):  77.4506
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0559262,77.4506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6126
  maximum absolute entry in einsum_ir solution: 36.6126
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142726
  time (eval):    0.0117682
  gflops (eval):  368.071
  gflops (total): 328.259
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142726,0.0117682,368.071,328.259

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055029
  gflops (total): 78.7134
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.7134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544589
  gflops (eval):  79.5374
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544589,79.5374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0198
  maximum absolute entry in einsum_ir solution: 34.0198
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142266
  time (eval):    0.0118259
  gflops (eval):  366.274
  gflops (total): 326.943
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142266,0.0118259,366.274,326.943

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552833
  gflops (total): 78.3513
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542219
  gflops (eval):  79.8851
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542219,79.8851,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.072
  maximum absolute entry in einsum_ir solution: 35.072
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142239
  time (eval):    0.011735
  gflops (eval):  369.111
  gflops (total): 329.208
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142239,0.011735,369.111,329.208

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553892
  gflops (total): 78.2015
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547538
  gflops (eval):  79.1091
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547538,79.1091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3036
  maximum absolute entry in einsum_ir solution: 34.3036
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141515
  time (eval):    0.0117242
  gflops (eval):  369.45
  gflops (total): 329.659
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141515,0.0117242,369.45,329.659

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558069
  gflops (total): 77.6162
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546683
  gflops (eval):  79.2328
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546683,79.2328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7564
  maximum absolute entry in einsum_ir solution: 33.7564
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014103
  time (eval):    0.0117479
  gflops (eval):  368.705
  gflops (total): 329.187
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014103,0.0117479,368.705,329.187

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552915
  gflops (total): 78.3396
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544689
  gflops (eval):  79.5228
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544689,79.5228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.208
  maximum absolute entry in einsum_ir solution: 34.208
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014587
  time (eval):    0.0117108
  gflops (eval):  369.875
  gflops (total): 328.906
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014587,0.0117108,369.875,328.906

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565459
  gflops (total): 76.6018
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.6018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0555429
  gflops (eval):  77.9852
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555429,77.9852,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7411
  maximum absolute entry in einsum_ir solution: 33.7411
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014551
  time (eval):    0.0117152
  gflops (eval):  369.734
  gflops (total): 328.885
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014551,0.0117152,369.734,328.885

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552843
  gflops (total): 78.3499
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3499

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548012
  gflops (eval):  79.0406
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548012,79.0406,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6953
  maximum absolute entry in einsum_ir solution: 34.6953
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141399
  time (eval):    0.0118361
  gflops (eval):  365.959
  gflops (total): 326.906
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141399,0.0118361,365.959,326.906

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563336
  gflops (total): 76.8905
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.8905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546257
  gflops (eval):  79.2946
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546257,79.2946,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.73
  maximum absolute entry in einsum_ir solution: 35.73
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0015092
  time (eval):    0.0117525
  gflops (eval):  368.563
  gflops (total): 326.62
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0015092,0.0117525,368.563,326.62

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552221
  gflops (total): 78.4381
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548467
  gflops (eval):  78.9751
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548467,78.9751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5973
  maximum absolute entry in einsum_ir solution: 36.5973
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014315
  time (eval):    0.0117066
  gflops (eval):  370.007
  gflops (total): 329.692
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014315,0.0117066,370.007,329.692

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056301
  gflops (total): 76.9351
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552046
  gflops (eval):  78.4631
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552046,78.4631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9837
  maximum absolute entry in einsum_ir solution: 32.9837
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014487
  time (eval):    0.0117192
  gflops (eval):  369.608
  gflops (total): 328.945
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014487,0.0117192,369.608,328.945

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555197
  gflops (total): 78.0177
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544001
  gflops (eval):  79.6235
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544001,79.6235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.5414
  maximum absolute entry in einsum_ir solution: 32.5414
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142296
  time (eval):    0.0117483
  gflops (eval):  368.693
  gflops (total): 328.861
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142296,0.0117483,368.693,328.861

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556865
  gflops (total): 77.784
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054635
  gflops (eval):  79.281
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054635,79.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8844
  maximum absolute entry in einsum_ir solution: 33.8844
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148254
  time (eval):    0.011748
  gflops (eval):  368.702
  gflops (total): 327.387
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148254,0.011748,368.702,327.387

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567327
  gflops (total): 76.3496
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.3496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546413
  gflops (eval):  79.2719
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546413,79.2719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4012
  maximum absolute entry in einsum_ir solution: 36.4012
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141222
  time (eval):    0.0118761
  gflops (eval):  364.725
  gflops (total): 325.964
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141222,0.0118761,364.725,325.964

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564846
  gflops (total): 76.685
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552825
  gflops (eval):  78.3525
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552825,78.3525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3295
  maximum absolute entry in einsum_ir solution: 34.3295
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140402
  time (eval):    0.0117256
  gflops (eval):  369.408
  gflops (total): 329.905
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140402,0.0117256,369.408,329.905

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0548186
  gflops (total): 79.0155
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.0155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545638
  gflops (eval):  79.3845
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545638,79.3845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9297
  maximum absolute entry in einsum_ir solution: 34.9297
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014103
  time (eval):    0.0117096
  gflops (eval):  369.913
  gflops (total): 330.15
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014103,0.0117096,369.913,330.15

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567951
  gflops (total): 76.2657
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.2657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548178
  gflops (eval):  79.0166
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548178,79.0166,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7249
  maximum absolute entry in einsum_ir solution: 33.7249
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001415
  time (eval):    0.0117737
  gflops (eval):  367.899
  gflops (total): 328.427
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001415,0.0117737,367.899,328.427

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556049
  gflops (total): 77.8981
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545501
  gflops (eval):  79.4044
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545501,79.4044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1803
  maximum absolute entry in einsum_ir solution: 33.1803
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143839
  time (eval):    0.0117671
  gflops (eval):  368.104
  gflops (total): 328.009
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143839,0.0117671,368.104,328.009

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561556
  gflops (total): 77.1342
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544332
  gflops (eval):  79.5749
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544332,79.5749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8722
  maximum absolute entry in einsum_ir solution: 33.8722
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142247
  time (eval):    0.0117622
  gflops (eval):  368.257
  gflops (total): 328.526
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142247,0.0117622,368.257,328.526

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555023
  gflops (total): 78.0422
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054589
  gflops (eval):  79.3479
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054589,79.3479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5868
  maximum absolute entry in einsum_ir solution: 34.5868
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143218
  time (eval):    0.011807
  gflops (eval):  366.861
  gflops (total): 327.175
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143218,0.011807,366.861,327.175

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557401
  gflops (total): 77.7092
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546645
  gflops (eval):  79.2383
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546645,79.2383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6977
  maximum absolute entry in einsum_ir solution: 32.6977
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141896
  time (eval):    0.0117024
  gflops (eval):  370.138
  gflops (total): 330.111
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141896,0.0117024,370.138,330.111

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563094
  gflops (total): 76.9236
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556706
  gflops (eval):  77.8062
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556706,77.8062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4227
  maximum absolute entry in einsum_ir solution: 34.4227
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152123
  time (eval):    0.0116906
  gflops (eval):  370.514
  gflops (total): 327.853
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152123,0.0116906,370.514,327.853

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0560687
  gflops (total): 77.2539
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.2539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.055887
  gflops (eval):  77.5049
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055887,77.5049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8748
  maximum absolute entry in einsum_ir solution: 35.8748
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0017542
  time (eval):    0.0116331
  gflops (eval):  372.344
  gflops (total): 323.554
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0017542,0.0116331,372.344,323.554

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564939
  gflops (total): 76.6723
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.6723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557608
  gflops (eval):  77.6803
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557608,77.6803,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8704
  maximum absolute entry in einsum_ir solution: 34.8704
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146501
  time (eval):    0.0117241
  gflops (eval):  369.456
  gflops (total): 328.418
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146501,0.0117241,369.456,328.418

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558512
  gflops (total): 77.5546
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054596
  gflops (eval):  79.3376
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054596,79.3376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.378
  maximum absolute entry in einsum_ir solution: 35.378
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140815
  time (eval):    0.0116797
  gflops (eval):  370.859
  gflops (total): 330.957
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140815,0.0116797,370.859,330.957

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557373
  gflops (total): 77.7131
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552195
  gflops (eval):  78.4419
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552195,78.4419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4042
  maximum absolute entry in einsum_ir solution: 39.4042
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147963
  time (eval):    0.0117105
  gflops (eval):  369.882
  gflops (total): 328.39
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147963,0.0117105,369.882,328.39

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555598
  gflops (total): 77.9615
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545192
  gflops (eval):  79.4494
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545192,79.4494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4206
  maximum absolute entry in einsum_ir solution: 34.4206
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140883
  time (eval):    0.0117453
  gflops (eval):  368.788
  gflops (total): 329.29
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140883,0.0117453,368.788,329.29

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553262
  gflops (total): 78.2906
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054292
  gflops (eval):  79.7819
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054292,79.7819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6199
  maximum absolute entry in einsum_ir solution: 35.6199
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143247
  time (eval):    0.0117921
  gflops (eval):  367.323
  gflops (total): 327.535
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143247,0.0117921,367.323,327.535

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561487
  gflops (total): 77.1438
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054404
  gflops (eval):  79.6177
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054404,79.6177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8268
  maximum absolute entry in einsum_ir solution: 35.8268
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143296
  time (eval):    0.0117683
  gflops (eval):  368.068
  gflops (total): 328.115
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143296,0.0117683,368.068,328.115

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.05553
  gflops (total): 78.0033
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544285
  gflops (eval):  79.5818
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544285,79.5818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4576
  maximum absolute entry in einsum_ir solution: 34.4576
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143698
  time (eval):    0.0117291
  gflops (eval):  369.296
  gflops (total): 328.99
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143698,0.0117291,369.296,328.99

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559098
  gflops (total): 77.4733
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.4733

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054257
  gflops (eval):  79.8333
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054257,79.8333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6276
  maximum absolute entry in einsum_ir solution: 32.6276
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142436
  time (eval):    0.0117855
  gflops (eval):  367.53
  gflops (total): 327.901
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142436,0.0117855,367.53,327.901

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055535
  gflops (total): 77.9963
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547207
  gflops (eval):  79.1569
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547207,79.1569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.24
  maximum absolute entry in einsum_ir solution: 33.24
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142517
  time (eval):    0.0118037
  gflops (eval):  366.963
  gflops (total): 327.429
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142517,0.0118037,366.963,327.429

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555618
  gflops (total): 77.9586
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543402
  gflops (eval):  79.7112
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543402,79.7112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6308
  maximum absolute entry in einsum_ir solution: 33.6308
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00171624
  time (eval):    0.0117318
  gflops (eval):  369.212
  gflops (total): 322.093
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00171624,0.0117318,369.212,322.093

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553152
  gflops (total): 78.3062
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548491
  gflops (eval):  78.9716
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548491,78.9716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.989
  maximum absolute entry in einsum_ir solution: 33.989
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141491
  time (eval):    0.0117504
  gflops (eval):  368.627
  gflops (total): 329.01
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141491,0.0117504,368.627,329.01

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553196
  gflops (total): 78.3
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545195
  gflops (eval):  79.449
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545195,79.449,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.932
  maximum absolute entry in einsum_ir solution: 34.932
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142403
  time (eval):    0.0118217
  gflops (eval):  366.403
  gflops (total): 327.011
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142403,0.0118217,366.403,327.011

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565682
  gflops (total): 76.5716
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.5716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0551741
  gflops (eval):  78.5064
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0551741,78.5064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4152
  maximum absolute entry in einsum_ir solution: 36.4152
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141533
  time (eval):    0.0117594
  gflops (eval):  368.346
  gflops (total): 328.775
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141533,0.0117594,368.346,328.775

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561605
  gflops (total): 77.1275
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1275

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556973
  gflops (eval):  77.7689
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556973,77.7689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4539
  maximum absolute entry in einsum_ir solution: 34.4539
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141306
  time (eval):    0.0117128
  gflops (eval):  369.811
  gflops (total): 329.999
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141306,0.0117128,369.811,329.999

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055506
  gflops (total): 78.037
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548317
  gflops (eval):  78.9966
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548317,78.9966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6246
  maximum absolute entry in einsum_ir solution: 38.6246
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151058
  time (eval):    0.0116858
  gflops (eval):  370.665
  gflops (total): 328.236
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151058,0.0116858,370.665,328.236

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565792
  gflops (total): 76.5568
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.5568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0555369
  gflops (eval):  77.9935
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555369,77.9935,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1715
  maximum absolute entry in einsum_ir solution: 37.1715
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142345
  time (eval):    0.0117871
  gflops (eval):  367.48
  gflops (total): 327.884
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142345,0.0117871,367.48,327.884

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555618
  gflops (total): 77.9586
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545747
  gflops (eval):  79.3686
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545747,79.3686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2894
  maximum absolute entry in einsum_ir solution: 35.2894
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142539
  time (eval):    0.0116903
  gflops (eval):  370.523
  gflops (total): 330.255
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142539,0.0116903,370.523,330.255

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566011
  gflops (total): 76.5272
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.5272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556168
  gflops (eval):  77.8815
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556168,77.8815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9327
  maximum absolute entry in einsum_ir solution: 33.9327
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014091
  time (eval):    0.0116653
  gflops (eval):  371.315
  gflops (total): 331.297
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014091,0.0116653,371.315,331.297

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055272
  gflops (total): 78.3674
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545533
  gflops (eval):  79.3997
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545533,79.3997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1418
  maximum absolute entry in einsum_ir solution: 36.1418
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141968
  time (eval):    0.0117225
  gflops (eval):  369.505
  gflops (total): 329.589
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141968,0.0117225,369.505,329.589

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561767
  gflops (total): 77.1053
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0555778
  gflops (eval):  77.9362
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555778,77.9362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.691
  maximum absolute entry in einsum_ir solution: 36.691
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014176
  time (eval):    0.011671
  gflops (eval):  371.134
  gflops (total): 330.937
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014176,0.011671,371.134,330.937

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0562548
  gflops (total): 76.9983
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558498
  gflops (eval):  77.5566
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558498,77.5566,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2258
  maximum absolute entry in einsum_ir solution: 34.2258
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151719
  time (eval):    0.0116782
  gflops (eval):  370.906
  gflops (total): 328.26
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151719,0.0116782,370.906,328.26

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556472
  gflops (total): 77.839
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543097
  gflops (eval):  79.756
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543097,79.756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5036
  maximum absolute entry in einsum_ir solution: 33.5036
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141983
  time (eval):    0.0117628
  gflops (eval):  368.237
  gflops (total): 328.577
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141983,0.0117628,368.237,328.577

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552894
  gflops (total): 78.3427
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543272
  gflops (eval):  79.7303
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543272,79.7303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6422
  maximum absolute entry in einsum_ir solution: 37.6422
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144503
  time (eval):    0.0118761
  gflops (eval):  364.725
  gflops (total): 325.161
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144503,0.0118761,364.725,325.161

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055808
  gflops (total): 77.6147
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547103
  gflops (eval):  79.1719
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547103,79.1719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7904
  maximum absolute entry in einsum_ir solution: 34.7904
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142346
  time (eval):    0.0117051
  gflops (eval):  370.055
  gflops (total): 329.932
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142346,0.0117051,370.055,329.932

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555094
  gflops (total): 78.0322
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0542742
  gflops (eval):  79.8081
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0542742,79.8081,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0082
  maximum absolute entry in einsum_ir solution: 38.0082
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014266
  time (eval):    0.0117471
  gflops (eval):  368.732
  gflops (total): 328.801
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014266,0.0117471,368.732,328.801

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553047
  gflops (total): 78.3211
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545172
  gflops (eval):  79.4524
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545172,79.4524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2873
  maximum absolute entry in einsum_ir solution: 35.2873
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00159888
  time (eval):    0.0117369
  gflops (eval):  369.052
  gflops (total): 324.805
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00159888,0.0117369,369.052,324.805

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552598
  gflops (total): 78.3847
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3847

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545366
  gflops (eval):  79.4241
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545366,79.4241,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9158
  maximum absolute entry in einsum_ir solution: 36.9158
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00171383
  time (eval):    0.0117691
  gflops (eval):  368.043
  gflops (total): 321.26
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00171383,0.0117691,368.043,321.26

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554104
  gflops (total): 78.1716
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544197
  gflops (eval):  79.5947
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544197,79.5947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.691
  maximum absolute entry in einsum_ir solution: 35.691
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00159595
  time (eval):    0.0118433
  gflops (eval):  365.736
  gflops (total): 322.304
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00159595,0.0118433,365.736,322.304

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558643
  gflops (total): 77.5364
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547339
  gflops (eval):  79.1378
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547339,79.1378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7945
  maximum absolute entry in einsum_ir solution: 32.7945
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143823
  time (eval):    0.0117435
  gflops (eval):  368.843
  gflops (total): 328.599
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143823,0.0117435,368.843,328.599

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561436
  gflops (total): 77.1508
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0562814
  gflops (eval):  76.9619
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0562814,76.9619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1677
  maximum absolute entry in einsum_ir solution: 34.1677
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142112
  time (eval):    0.0117189
  gflops (eval):  369.62
  gflops (total): 329.644
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142112,0.0117189,369.62,329.644

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0568115
  gflops (total): 76.2438
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.2438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.055469
  gflops (eval):  78.0891
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.055469,78.0891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2085
  maximum absolute entry in einsum_ir solution: 33.2085
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142719
  time (eval):    0.0117895
  gflops (eval):  367.406
  gflops (total): 327.732
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142719,0.0117895,367.406,327.732

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554273
  gflops (total): 78.1478
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545997
  gflops (eval):  79.3323
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545997,79.3323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6733
  maximum absolute entry in einsum_ir solution: 35.6733
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142582
  time (eval):    0.0115543
  gflops (eval):  374.884
  gflops (total): 333.704
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142582,0.0115543,374.884,333.704

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563909
  gflops (total): 76.8125
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.8125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554603
  gflops (eval):  78.1012
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554603,78.1012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8617
  maximum absolute entry in einsum_ir solution: 39.8617
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141584
  time (eval):    0.0116809
  gflops (eval):  370.822
  gflops (total): 330.733
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141584,0.0116809,370.822,330.733

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.055656
  gflops (total): 77.8266
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0550204
  gflops (eval):  78.7257
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0550204,78.7257,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5704
  maximum absolute entry in einsum_ir solution: 33.5704
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141373
  time (eval):    0.0116973
  gflops (eval):  370.302
  gflops (total): 330.373
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141373,0.0116973,370.302,330.373

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564991
  gflops (total): 76.6653
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.6653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558402
  gflops (eval):  77.5699
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558402,77.5699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5223
  maximum absolute entry in einsum_ir solution: 35.5223
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014206
  time (eval):    0.0116901
  gflops (eval):  370.53
  gflops (total): 330.382
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014206,0.0116901,370.53,330.382

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0563075
  gflops (total): 76.9261
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.9261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0550944
  gflops (eval):  78.62
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0550944,78.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3552
  maximum absolute entry in einsum_ir solution: 32.3552
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143755
  time (eval):    0.011721
  gflops (eval):  369.553
  gflops (total): 329.18
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143755,0.011721,369.553,329.18

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555
  gflops (total): 78.0454
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552035
  gflops (eval):  78.4646
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552035,78.4646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7808
  maximum absolute entry in einsum_ir solution: 33.7808
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148642
  time (eval):    0.0117668
  gflops (eval):  368.113
  gflops (total): 326.827
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148642,0.0117668,368.113,326.827

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552925
  gflops (total): 78.3383
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543586
  gflops (eval):  79.6841
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543586,79.6841,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6737
  maximum absolute entry in einsum_ir solution: 34.6737
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141539
  time (eval):    0.0117209
  gflops (eval):  369.554
  gflops (total): 329.736
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141539,0.0117209,369.554,329.736

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0549381
  gflops (total): 78.8436
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.8436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0541616
  gflops (eval):  79.974
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0541616,79.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8852
  maximum absolute entry in einsum_ir solution: 33.8852
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143118
  time (eval):    0.0117089
  gflops (eval):  369.935
  gflops (total): 329.642
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143118,0.0117089,369.935,329.642

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554798
  gflops (total): 78.0738
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.0738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0555339
  gflops (eval):  77.9978
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555339,77.9978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7197
  maximum absolute entry in einsum_ir solution: 33.7197
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142716
  time (eval):    0.0117027
  gflops (eval):  370.13
  gflops (total): 329.898
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142716,0.0117027,370.13,329.898

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556643
  gflops (total): 77.815
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054749
  gflops (eval):  79.116
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054749,79.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.8251
  maximum absolute entry in einsum_ir solution: 31.8251
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014049
  time (eval):    0.0117387
  gflops (eval):  368.994
  gflops (total): 329.553
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014049,0.0117387,368.994,329.553

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558622
  gflops (total): 77.5394
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.5394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0561045
  gflops (eval):  77.2044
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0561045,77.2044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7119
  maximum absolute entry in einsum_ir solution: 36.7119
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142681
  time (eval):    0.0118192
  gflops (eval):  366.482
  gflops (total): 327.006
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142681,0.0118192,366.482,327.006

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564204
  gflops (total): 76.7723
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.7723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545776
  gflops (eval):  79.3645
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545776,79.3645,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4038
  maximum absolute entry in einsum_ir solution: 36.4038
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142089
  time (eval):    0.0117623
  gflops (eval):  368.256
  gflops (total): 328.565
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142089,0.0117623,368.256,328.565

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567645
  gflops (total): 76.3068
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.3068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0557772
  gflops (eval):  77.6576
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0557772,77.6576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7749
  maximum absolute entry in einsum_ir solution: 38.7749
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144481
  time (eval):    0.0117465
  gflops (eval):  368.751
  gflops (total): 328.363
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144481,0.0117465,368.751,328.363

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556354
  gflops (total): 77.8554
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547787
  gflops (eval):  79.0731
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547787,79.0731,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0556
  maximum absolute entry in einsum_ir solution: 36.0556
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141354
  time (eval):    0.0116826
  gflops (eval):  370.767
  gflops (total): 330.748
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141354,0.0116826,370.767,330.748

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0558137
  gflops (total): 77.6068
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.6068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054573
  gflops (eval):  79.3711
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054573,79.3711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4826
  maximum absolute entry in einsum_ir solution: 37.4826
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140127
  time (eval):    0.0118122
  gflops (eval):  366.699
  gflops (total): 327.811
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140127,0.0118122,366.699,327.811

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553745
  gflops (total): 78.2223
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546906
  gflops (eval):  79.2004
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546906,79.2004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1415
  maximum absolute entry in einsum_ir solution: 33.1415
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143316
  time (eval):    0.0118747
  gflops (eval):  364.768
  gflops (total): 325.485
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143316,0.0118747,364.768,325.485

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0559751
  gflops (total): 77.3829
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.3829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546894
  gflops (eval):  79.2022
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546894,79.2022,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4436
  maximum absolute entry in einsum_ir solution: 34.4436
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141777
  time (eval):    0.0117191
  gflops (eval):  369.613
  gflops (total): 329.723
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141777,0.0117191,369.613,329.723

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555396
  gflops (total): 77.9897
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548099
  gflops (eval):  79.028
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548099,79.028,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0506
  maximum absolute entry in einsum_ir solution: 36.0506
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154434
  time (eval):    0.011732
  gflops (eval):  369.204
  gflops (total): 326.258
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154434,0.011732,369.204,326.258

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553412
  gflops (total): 78.2694
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544753
  gflops (eval):  79.5134
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544753,79.5134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3904
  maximum absolute entry in einsum_ir solution: 35.3904
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141956
  time (eval):    0.0118068
  gflops (eval):  366.866
  gflops (total): 327.491
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141956,0.0118068,366.866,327.491

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552206
  gflops (total): 78.4402
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.4402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548428
  gflops (eval):  78.9806
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548428,78.9806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4212
  maximum absolute entry in einsum_ir solution: 32.4212
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141813
  time (eval):    0.0117041
  gflops (eval):  370.084
  gflops (total): 330.089
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141813,0.0117041,370.084,330.089

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553136
  gflops (total): 78.3084
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0540614
  gflops (eval):  80.1222
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0540614,80.1222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.718
  maximum absolute entry in einsum_ir solution: 36.718
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142529
  time (eval):    0.0117242
  gflops (eval):  369.45
  gflops (total): 329.405
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142529,0.0117242,369.45,329.405

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0567983
  gflops (total): 76.2614
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.2614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546373
  gflops (eval):  79.2777
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546373,79.2777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8538
  maximum absolute entry in einsum_ir solution: 32.8538
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014617
  time (eval):    0.0119353
  gflops (eval):  362.918
  gflops (total): 323.321
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014617,0.0119353,362.918,323.321

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0548871
  gflops (total): 78.9169
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.9169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543541
  gflops (eval):  79.6907
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543541,79.6907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9352
  maximum absolute entry in einsum_ir solution: 36.9352
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141853
  time (eval):    0.0116966
  gflops (eval):  370.323
  gflops (total): 330.269
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141853,0.0116966,370.323,330.269

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0557111
  gflops (total): 77.7497
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0543697
  gflops (eval):  79.6679
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0543697,79.6679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.776
  maximum absolute entry in einsum_ir solution: 36.776
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142858
  time (eval):    0.0117832
  gflops (eval):  367.602
  gflops (total): 327.853
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142858,0.0117832,367.602,327.853

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0569418
  gflops (total): 76.0693
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.0693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0559624
  gflops (eval):  77.4006
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0559624,77.4006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3127
  maximum absolute entry in einsum_ir solution: 34.3127
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014282
  time (eval):    0.0116634
  gflops (eval):  371.378
  gflops (total): 330.863
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014282,0.0116634,371.378,330.863

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554401
  gflops (total): 78.1297
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.054417
  gflops (eval):  79.5986
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.054417,79.5986,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5465
  maximum absolute entry in einsum_ir solution: 35.5465
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145889
  time (eval):    0.0117099
  gflops (eval):  369.902
  gflops (total): 328.923
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145889,0.0117099,369.902,328.923

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0554187
  gflops (total): 78.1599
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.1599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0559262
  gflops (eval):  77.4507
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0559262,77.4507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1368
  maximum absolute entry in einsum_ir solution: 34.1368
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142405
  time (eval):    0.0116988
  gflops (eval):  370.254
  gflops (total): 330.075
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142405,0.0116988,370.254,330.075

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0545314
  gflops (total): 79.4316
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,79.4316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0541037
  gflops (eval):  80.0596
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0541037,80.0596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9047
  maximum absolute entry in einsum_ir solution: 34.9047
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141827
  time (eval):    0.011767
  gflops (eval):  368.107
  gflops (total): 328.512
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141827,0.011767,368.107,328.512

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556429
  gflops (total): 77.845
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.845

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0546456
  gflops (eval):  79.2657
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0546456,79.2657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7625
  maximum absolute entry in einsum_ir solution: 37.7625
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142975
  time (eval):    0.0116892
  gflops (eval):  370.559
  gflops (total): 330.174
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142975,0.0116892,370.559,330.174

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556774
  gflops (total): 77.7968
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.7968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0547353
  gflops (eval):  79.1358
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0547353,79.1358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7302
  maximum absolute entry in einsum_ir solution: 35.7302
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144304
  time (eval):    0.0117113
  gflops (eval):  369.858
  gflops (total): 329.285
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144304,0.0117113,369.858,329.285

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551577
  gflops (total): 78.5297
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.5297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545859
  gflops (eval):  79.3524
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545859,79.3524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.243
  maximum absolute entry in einsum_ir solution: 34.243
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142058
  time (eval):    0.0117513
  gflops (eval):  368.6
  gflops (total): 328.846
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142058,0.0117513,368.6,328.846

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553081
  gflops (total): 78.3162
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0545007
  gflops (eval):  79.4765
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0545007,79.4765,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.415
  maximum absolute entry in einsum_ir solution: 34.415
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142747
  time (eval):    0.0117271
  gflops (eval):  369.358
  gflops (total): 329.278
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142747,0.0117271,369.358,329.278

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561846
  gflops (total): 77.0944
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.0944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0550185
  gflops (eval):  78.7285
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0550185,78.7285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3233
  maximum absolute entry in einsum_ir solution: 35.3233
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145963
  time (eval):    0.0117981
  gflops (eval):  367.136
  gflops (total): 326.716
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145963,0.0117981,367.136,326.716

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0566449
  gflops (total): 76.468
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558708
  gflops (eval):  77.5274
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558708,77.5274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0309
  maximum absolute entry in einsum_ir solution: 33.0309
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150027
  time (eval):    0.0117108
  gflops (eval):  369.874
  gflops (total): 327.871
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150027,0.0117108,369.874,327.871

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556228
  gflops (total): 77.873
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.05543
  gflops (eval):  78.1439
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.05543,78.1439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2664
  maximum absolute entry in einsum_ir solution: 36.2664
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141811
  time (eval):    0.0116767
  gflops (eval):  370.955
  gflops (total): 330.782
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141811,0.0116767,370.955,330.782

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0556394
  gflops (total): 77.8498
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.8498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0555451
  gflops (eval):  77.9821
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0555451,77.9821,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5788
  maximum absolute entry in einsum_ir solution: 33.5788
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141894
  time (eval):    0.0116947
  gflops (eval):  370.382
  gflops (total): 330.305
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141894,0.0116947,370.382,330.305

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555767
  gflops (total): 77.9377
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544032
  gflops (eval):  79.6188
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544032,79.6188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6899
  maximum absolute entry in einsum_ir solution: 34.6899
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141366
  time (eval):    0.0117494
  gflops (eval):  368.658
  gflops (total): 329.066
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141366,0.0117494,368.658,329.066

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565611
  gflops (total): 76.5813
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.5813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0552334
  gflops (eval):  78.4221
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0552334,78.4221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8552
  maximum absolute entry in einsum_ir solution: 33.8552
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140772
  time (eval):    0.0117331
  gflops (eval):  369.172
  gflops (total): 329.624
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140772,0.0117331,369.172,329.624

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0552769
  gflops (total): 78.3604
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.3604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544686
  gflops (eval):  79.5233
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544686,79.5233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2446
  maximum absolute entry in einsum_ir solution: 36.2446
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00169063
  time (eval):    0.0117345
  gflops (eval):  369.125
  gflops (total): 322.642
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00169063,0.0117345,369.125,322.642

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564219
  gflops (total): 76.7702
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.7702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556955
  gflops (eval):  77.7714
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556955,77.7714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2487
  maximum absolute entry in einsum_ir solution: 33.2487
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143818
  time (eval):    0.0117239
  gflops (eval):  369.462
  gflops (total): 329.092
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143818,0.0117239,369.462,329.092

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0553781
  gflops (total): 78.2172
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.2172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548473
  gflops (eval):  78.9742
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548473,78.9742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5279
  maximum absolute entry in einsum_ir solution: 33.5279
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139357
  time (eval):    0.0117386
  gflops (eval):  368.998
  gflops (total): 329.84
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139357,0.0117386,368.998,329.84

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0565834
  gflops (total): 76.5511
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.5511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554488
  gflops (eval):  78.1174
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554488,78.1174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7317
  maximum absolute entry in einsum_ir solution: 33.7317
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143111
  time (eval):    0.0117011
  gflops (eval):  370.182
  gflops (total): 329.84
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143111,0.0117011,370.182,329.84

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0564921
  gflops (total): 76.6748
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.6748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0558228
  gflops (eval):  77.5942
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0558228,77.5942,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1101
  maximum absolute entry in einsum_ir solution: 38.1101
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141967
  time (eval):    0.0116568
  gflops (eval):  371.588
  gflops (total): 331.246
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141967,0.0116568,371.588,331.246

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.056506
  gflops (total): 76.656
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,76.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0556863
  gflops (eval):  77.7843
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0556863,77.7843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4542
  maximum absolute entry in einsum_ir solution: 34.4542
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140297
  time (eval):    0.0117387
  gflops (eval):  368.996
  gflops (total): 329.603
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140297,0.0117387,368.996,329.603

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0561266
  gflops (total): 77.1741
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.1741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0554806
  gflops (eval):  78.0727
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0554806,78.0727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.512
  maximum absolute entry in einsum_ir solution: 36.512
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140998
  time (eval):    0.0116846
  gflops (eval):  370.704
  gflops (total): 330.788
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140998,0.0116846,370.704,330.788

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0551051
  gflops (total): 78.6048
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,78.6048

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0548394
  gflops (eval):  78.9856
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0548394,78.9856,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6022
  maximum absolute entry in einsum_ir solution: 33.6022
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141908
  time (eval):    0.0117609
  gflops (eval):  368.299
  gflops (total): 328.644
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141908,0.0117609,368.299,328.644

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0555731
  gflops (total): 77.9428
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,77.9428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0544819
  gflops (eval):  79.5038
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0544819,79.5038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7269
  maximum absolute entry in einsum_ir solution: 35.7269
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138855
  time (eval):    0.0160101
  gflops (eval):  166.009
  gflops (total): 152.76
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138855,0.0160101,166.009,152.76

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110736
  gflops (total): 24.0014
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273488
  gflops (eval):  97.1825
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273488,97.1825,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.657
  maximum absolute entry in einsum_ir solution: 104.657
  maximum element-wise difference:              5.24521e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00175848
  time (eval):    0.0158393
  gflops (eval):  167.8
  gflops (total): 151.032
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00175848,0.0158393,167.8,151.032

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109604
  gflops (total): 24.2492
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.2492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276081
  gflops (eval):  96.2698
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276081,96.2698,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5718
  maximum absolute entry in einsum_ir solution: 99.5718
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137909
  time (eval):    0.0159019
  gflops (eval):  167.138
  gflops (total): 153.8
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137909,0.0159019,167.138,153.8

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109805
  gflops (total): 24.2049
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.2049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272883
  gflops (eval):  97.398
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272883,97.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.051
  maximum absolute entry in einsum_ir solution: 106.051
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00149282
  time (eval):    0.0159331
  gflops (eval):  166.812
  gflops (total): 152.521
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00149282,0.0159331,166.812,152.521

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109886
  gflops (total): 24.1871
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272091
  gflops (eval):  97.6814
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272091,97.6814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.599
  maximum absolute entry in einsum_ir solution: 101.599
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138473
  time (eval):    0.0161001
  gflops (eval):  165.081
  gflops (total): 152.008
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138473,0.0161001,165.081,152.008

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110955
  gflops (total): 23.954
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272571
  gflops (eval):  97.5095
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272571,97.5095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.734
  maximum absolute entry in einsum_ir solution: 102.734
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138329
  time (eval):    0.0160381
  gflops (eval):  165.719
  gflops (total): 152.56
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138329,0.0160381,165.719,152.56

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109863
  gflops (total): 24.1922
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0269032
  gflops (eval):  98.7921
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0269032,98.7921,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.468
  maximum absolute entry in einsum_ir solution: 106.468
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137794
  time (eval):    0.0157902
  gflops (eval):  168.321
  gflops (total): 154.811
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137794,0.0157902,168.321,154.811

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111794
  gflops (total): 23.7743
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272354
  gflops (eval):  97.5871
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272354,97.5871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.975
  maximum absolute entry in einsum_ir solution: 105.975
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138136
  time (eval):    0.0159727
  gflops (eval):  166.398
  gflops (total): 153.153
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138136,0.0159727,166.398,153.153

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109658
  gflops (total): 24.2374
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.2374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272205
  gflops (eval):  97.6404
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272205,97.6404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.26
  maximum absolute entry in einsum_ir solution: 103.26
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137024
  time (eval):    0.0159226
  gflops (eval):  166.922
  gflops (total): 153.695
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137024,0.0159226,166.922,153.695

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111344
  gflops (total): 23.8703
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027225
  gflops (eval):  97.6244
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027225,97.6244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.395
  maximum absolute entry in einsum_ir solution: 104.395
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137283
  time (eval):    0.0157682
  gflops (eval):  168.556
  gflops (total): 155.056
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137283,0.0157682,168.556,155.056

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110857
  gflops (total): 23.9751
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0269926
  gflops (eval):  98.4648
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0269926,98.4648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.114
  maximum absolute entry in einsum_ir solution: 112.114
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138017
  time (eval):    0.0160588
  gflops (eval):  165.506
  gflops (total): 152.407
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138017,0.0160588,165.506,152.407

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111563
  gflops (total): 23.8234
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0264997
  gflops (eval):  100.296
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0264997,100.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.6219
  maximum absolute entry in einsum_ir solution: 99.6219
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145773
  time (eval):    0.0160334
  gflops (eval):  165.768
  gflops (total): 151.953
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145773,0.0160334,165.768,151.953

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110546
  gflops (total): 24.0426
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0269245
  gflops (eval):  98.7139
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0269245,98.7139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.351
  maximum absolute entry in einsum_ir solution: 102.351
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137977
  time (eval):    0.0159556
  gflops (eval):  166.576
  gflops (total): 153.318
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137977,0.0159556,166.576,153.318

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111177
  gflops (total): 23.9063
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270555
  gflops (eval):  98.2358
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270555,98.2358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.63
  maximum absolute entry in einsum_ir solution: 106.63
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140948
  time (eval):    0.0158762
  gflops (eval):  167.409
  gflops (total): 153.758
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140948,0.0158762,167.409,153.758

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111566
  gflops (total): 23.823
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271877
  gflops (eval):  97.7581
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271877,97.7581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.192
  maximum absolute entry in einsum_ir solution: 105.192
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00165667
  time (eval):    0.0160445
  gflops (eval):  165.653
  gflops (total): 150.149
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00165667,0.0160445,165.653,150.149

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109401
  gflops (total): 24.2944
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.2944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272642
  gflops (eval):  97.484
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272642,97.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.887
  maximum absolute entry in einsum_ir solution: 110.887
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00134933
  time (eval):    0.0158581
  gflops (eval):  167.6
  gflops (total): 154.458
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00134933,0.0158581,167.6,154.458

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111384
  gflops (total): 23.8618
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027204
  gflops (eval):  97.6995
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027204,97.6995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.599
  maximum absolute entry in einsum_ir solution: 105.599
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00136072
  time (eval):    0.0158182
  gflops (eval):  168.023
  gflops (total): 154.714
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00136072,0.0158182,168.023,154.714

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111461
  gflops (total): 23.8453
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273979
  gflops (eval):  97.0083
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273979,97.0083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.5453
  maximum absolute entry in einsum_ir solution: 97.5453
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00152645
  time (eval):    0.0157922
  gflops (eval):  168.299
  gflops (total): 153.466
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00152645,0.0157922,168.299,153.466

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111496
  gflops (total): 23.8379
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273912
  gflops (eval):  97.0318
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273912,97.0318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.059
  maximum absolute entry in einsum_ir solution: 108.059
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00151134
  time (eval):    0.0158498
  gflops (eval):  167.688
  gflops (total): 153.09
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00151134,0.0158498,167.688,153.09

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11224
  gflops (total): 23.6797
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270603
  gflops (eval):  98.2184
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270603,98.2184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.726
  maximum absolute entry in einsum_ir solution: 119.726
  maximum element-wise difference:              5.05447e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138231
  time (eval):    0.0159229
  gflops (eval):  166.918
  gflops (total): 153.585
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138231,0.0159229,166.918,153.585

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110906
  gflops (total): 23.9647
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9647

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272332
  gflops (eval):  97.595
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272332,97.595,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.466
  maximum absolute entry in einsum_ir solution: 107.466
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138805
  time (eval):    0.0156619
  gflops (eval):  169.7
  gflops (total): 155.885
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138805,0.0156619,169.7,155.885

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111353
  gflops (total): 23.8685
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274074
  gflops (eval):  96.9747
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274074,96.9747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.788
  maximum absolute entry in einsum_ir solution: 105.788
  maximum element-wise difference:              6.86646e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137041
  time (eval):    0.015979
  gflops (eval):  166.332
  gflops (total): 153.194
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137041,0.015979,166.332,153.194

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109448
  gflops (total): 24.2839
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.2839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271844
  gflops (eval):  97.7699
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271844,97.7699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.592
  maximum absolute entry in einsum_ir solution: 103.592
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138969
  time (eval):    0.0160659
  gflops (eval):  165.433
  gflops (total): 152.262
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138969,0.0160659,165.433,152.262

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110512
  gflops (total): 24.05
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271078
  gflops (eval):  98.0465
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271078,98.0465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.099
  maximum absolute entry in einsum_ir solution: 116.099
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138505
  time (eval):    0.015927
  gflops (eval):  166.875
  gflops (total): 153.524
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138505,0.015927,166.875,153.524

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111022
  gflops (total): 23.9396
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273618
  gflops (eval):  97.136
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273618,97.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.907
  maximum absolute entry in einsum_ir solution: 101.907
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139596
  time (eval):    0.0161803
  gflops (eval):  164.263
  gflops (total): 151.217
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139596,0.0161803,164.263,151.217

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111843
  gflops (total): 23.7639
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027541
  gflops (eval):  96.5042
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027541,96.5042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.8177
  maximum absolute entry in einsum_ir solution: 96.8177
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139231
  time (eval):    0.0157936
  gflops (eval):  168.285
  gflops (total): 154.651
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139231,0.0157936,168.285,154.651

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110682
  gflops (total): 24.013
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275116
  gflops (eval):  96.6074
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275116,96.6074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.441
  maximum absolute entry in einsum_ir solution: 104.441
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140248
  time (eval):    0.0157313
  gflops (eval):  168.951
  gflops (total): 155.122
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140248,0.0157313,168.951,155.122

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110883
  gflops (total): 23.9696
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274695
  gflops (eval):  96.7555
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274695,96.7555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.736
  maximum absolute entry in einsum_ir solution: 101.736
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00146814
  time (eval):    0.0159708
  gflops (eval):  166.418
  gflops (total): 152.408
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00146814,0.0159708,166.418,152.408

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110545
  gflops (total): 24.0429
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272466
  gflops (eval):  97.5469
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272466,97.5469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.809
  maximum absolute entry in einsum_ir solution: 106.809
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138243
  time (eval):    0.0158594
  gflops (eval):  167.586
  gflops (total): 154.149
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138243,0.0158594,167.586,154.149

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111307
  gflops (total): 23.8784
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273547
  gflops (eval):  97.1615
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273547,97.1615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.2468
  maximum absolute entry in einsum_ir solution: 99.2468
  maximum element-wise difference:              5.91278e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00136413
  time (eval):    0.0160603
  gflops (eval):  165.49
  gflops (total): 152.534
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00136413,0.0160603,165.49,152.534

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111329
  gflops (total): 23.8735
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273255
  gflops (eval):  97.2653
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273255,97.2653,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.206
  maximum absolute entry in einsum_ir solution: 101.206
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138832
  time (eval):    0.0158428
  gflops (eval):  167.762
  gflops (total): 154.245
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138832,0.0158428,167.762,154.245

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110487
  gflops (total): 24.0555
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0555

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272461
  gflops (eval):  97.5485
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272461,97.5485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.24
  maximum absolute entry in einsum_ir solution: 103.24
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013831
  time (eval):    0.015976
  gflops (eval):  166.364
  gflops (total): 153.108
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013831,0.015976,166.364,153.108

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110739
  gflops (total): 24.0008
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271371
  gflops (eval):  97.9405
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271371,97.9405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.3105
  maximum absolute entry in einsum_ir solution: 99.3105
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141866
  time (eval):    0.015903
  gflops (eval):  167.127
  gflops (total): 153.439
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141866,0.015903,167.127,153.439

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111054
  gflops (total): 23.9327
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274407
  gflops (eval):  96.8569
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274407,96.8569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.282
  maximum absolute entry in einsum_ir solution: 111.282
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138748
  time (eval):    0.0159688
  gflops (eval):  166.438
  gflops (total): 153.133
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138748,0.0159688,166.438,153.133

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110993
  gflops (total): 23.9459
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273635
  gflops (eval):  97.1303
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273635,97.1303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.301
  maximum absolute entry in einsum_ir solution: 100.301
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138102
  time (eval):    0.0160954
  gflops (eval):  165.13
  gflops (total): 152.081
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138102,0.0160954,165.13,152.081

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109724
  gflops (total): 24.2228
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.2228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275112
  gflops (eval):  96.6085
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275112,96.6085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.157
  maximum absolute entry in einsum_ir solution: 100.157
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138486
  time (eval):    0.0159627
  gflops (eval):  166.502
  gflops (total): 153.21
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138486,0.0159627,166.502,153.21

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111179
  gflops (total): 23.9058
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272716
  gflops (eval):  97.4575
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272716,97.4575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.1162
  maximum absolute entry in einsum_ir solution: 97.1162
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138544
  time (eval):    0.0162252
  gflops (eval):  163.809
  gflops (total): 150.922
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138544,0.0162252,163.809,150.922

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110846
  gflops (total): 23.9776
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271581
  gflops (eval):  97.8647
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271581,97.8647,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.679
  maximum absolute entry in einsum_ir solution: 101.679
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00148244
  time (eval):    0.0158532
  gflops (eval):  167.652
  gflops (total): 153.316
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00148244,0.0158532,167.652,153.316

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.10984
  gflops (total): 24.1973
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272985
  gflops (eval):  97.3616
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272985,97.3616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4869
  maximum absolute entry in einsum_ir solution: 99.4869
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138711
  time (eval):    0.0160362
  gflops (eval):  165.739
  gflops (total): 152.544
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138711,0.0160362,165.739,152.544

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110346
  gflops (total): 24.0863
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0269693
  gflops (eval):  98.5498
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0269693,98.5498,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.868
  maximum absolute entry in einsum_ir solution: 102.868
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138837
  time (eval):    0.0159134
  gflops (eval):  167.018
  gflops (total): 153.616
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138837,0.0159134,167.018,153.616

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111355
  gflops (total): 23.8681
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273692
  gflops (eval):  97.1098
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273692,97.1098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.178
  maximum absolute entry in einsum_ir solution: 103.178
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138201
  time (eval):    0.016327
  gflops (eval):  162.787
  gflops (total): 150.083
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138201,0.016327,162.787,150.083

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111346
  gflops (total): 23.8699
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273899
  gflops (eval):  97.0366
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273899,97.0366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.229
  maximum absolute entry in einsum_ir solution: 101.229
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138219
  time (eval):    0.016145
  gflops (eval):  164.622
  gflops (total): 151.64
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138219,0.016145,164.622,151.64

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.1099
  gflops (total): 24.1839
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273993
  gflops (eval):  97.0031
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273993,97.0031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.6044
  maximum absolute entry in einsum_ir solution: 98.6044
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140245
  time (eval):    0.0157704
  gflops (eval):  168.533
  gflops (total): 154.769
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140245,0.0157704,168.533,154.769

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111291
  gflops (total): 23.8818
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273524
  gflops (eval):  97.1695
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273524,97.1695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.989
  maximum absolute entry in einsum_ir solution: 103.989
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138236
  time (eval):    0.0156228
  gflops (eval):  170.125
  gflops (total): 156.295
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138236,0.0156228,170.125,156.295

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111254
  gflops (total): 23.8897
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273158
  gflops (eval):  97.2997
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273158,97.2997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.201
  maximum absolute entry in einsum_ir solution: 100.201
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138841
  time (eval):    0.0155657
  gflops (eval):  170.749
  gflops (total): 156.766
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138841,0.0155657,170.749,156.766

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109724
  gflops (total): 24.2228
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.2228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271575
  gflops (eval):  97.8669
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271575,97.8669,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.49
  maximum absolute entry in einsum_ir solution: 102.49
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138578
  time (eval):    0.0161159
  gflops (eval):  164.919
  gflops (total): 151.86
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138578,0.0161159,164.919,151.86

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110821
  gflops (total): 23.9829
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276555
  gflops (eval):  96.1047
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276555,96.1047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.746
  maximum absolute entry in einsum_ir solution: 107.746
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139037
  time (eval):    0.0158155
  gflops (eval):  168.052
  gflops (total): 154.472
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139037,0.0158155,168.052,154.472

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110636
  gflops (total): 24.0232
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275751
  gflops (eval):  96.385
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275751,96.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9399
  maximum absolute entry in einsum_ir solution: 99.9399
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138111
  time (eval):    0.0158473
  gflops (eval):  167.715
  gflops (total): 154.27
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138111,0.0158473,167.715,154.27

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110688
  gflops (total): 24.0118
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272665
  gflops (eval):  97.4755
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272665,97.4755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.2018
  maximum absolute entry in einsum_ir solution: 96.2018
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137984
  time (eval):    0.0159882
  gflops (eval):  166.237
  gflops (total): 153.03
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137984,0.0159882,166.237,153.03

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112981
  gflops (total): 23.5245
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272985
  gflops (eval):  97.3613
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272985,97.3613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.315
  maximum absolute entry in einsum_ir solution: 105.315
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139
  time (eval):    0.0159387
  gflops (eval):  166.753
  gflops (total): 153.377
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139,0.0159387,166.753,153.377

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11042
  gflops (total): 24.0701
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272541
  gflops (eval):  97.52
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272541,97.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.789
  maximum absolute entry in einsum_ir solution: 107.789
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138302
  time (eval):    0.016026
  gflops (eval):  165.845
  gflops (total): 152.67
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138302,0.016026,165.845,152.67

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110034
  gflops (total): 24.1545
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270614
  gflops (eval):  98.2145
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270614,98.2145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.5086
  maximum absolute entry in einsum_ir solution: 96.5086
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137673
  time (eval):    0.0160103
  gflops (eval):  166.007
  gflops (total): 152.862
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137673,0.0160103,166.007,152.862

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110851
  gflops (total): 23.9764
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270631
  gflops (eval):  98.2082
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270631,98.2082,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.98
  maximum absolute entry in einsum_ir solution: 109.98
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139826
  time (eval):    0.0159662
  gflops (eval):  166.465
  gflops (total): 153.061
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139826,0.0159662,166.465,153.061

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112233
  gflops (total): 23.6812
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275007
  gflops (eval):  96.6456
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275007,96.6456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.252
  maximum absolute entry in einsum_ir solution: 107.252
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139867
  time (eval):    0.0160339
  gflops (eval):  165.763
  gflops (total): 152.463
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139867,0.0160339,165.763,152.463

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110841
  gflops (total): 23.9787
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272023
  gflops (eval):  97.7057
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272023,97.7057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.996
  maximum absolute entry in einsum_ir solution: 102.996
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137329
  time (eval):    0.0158978
  gflops (eval):  167.182
  gflops (total): 153.889
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137329,0.0158978,167.182,153.889

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11033
  gflops (total): 24.0898
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274298
  gflops (eval):  96.8953
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274298,96.8953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.5821
  maximum absolute entry in einsum_ir solution: 97.5821
  maximum element-wise difference:              5.43594e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138546
  time (eval):    0.0159322
  gflops (eval):  166.82
  gflops (total): 153.474
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138546,0.0159322,166.82,153.474

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109877
  gflops (total): 24.1891
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271192
  gflops (eval):  98.0052
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271192,98.0052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.275
  maximum absolute entry in einsum_ir solution: 103.275
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137635
  time (eval):    0.0162764
  gflops (eval):  163.293
  gflops (total): 150.561
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137635,0.0162764,163.293,150.561

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11018
  gflops (total): 24.1226
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273404
  gflops (eval):  97.2121
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273404,97.2121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.858
  maximum absolute entry in einsum_ir solution: 106.858
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138402
  time (eval):    0.0159822
  gflops (eval):  166.299
  gflops (total): 153.046
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138402,0.0159822,166.299,153.046

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111571
  gflops (total): 23.8218
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273896
  gflops (eval):  97.0377
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273896,97.0377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.613
  maximum absolute entry in einsum_ir solution: 102.613
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139578
  time (eval):    0.015667
  gflops (eval):  169.644
  gflops (total): 155.767
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139578,0.015667,169.644,155.767

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110719
  gflops (total): 24.0052
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275244
  gflops (eval):  96.5622
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275244,96.5622,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.14
  maximum absolute entry in einsum_ir solution: 111.14
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137964
  time (eval):    0.016125
  gflops (eval):  164.826
  gflops (total): 151.836
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137964,0.016125,164.826,151.836

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112148
  gflops (total): 23.6993
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.02741
  gflops (eval):  96.9655
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.02741,96.9655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.158
  maximum absolute entry in einsum_ir solution: 101.158
  maximum element-wise difference:              4.86374e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138154
  time (eval):    0.0159972
  gflops (eval):  166.143
  gflops (total): 152.935
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138154,0.0159972,166.143,152.935

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110655
  gflops (total): 24.0189
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273146
  gflops (eval):  97.3042
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273146,97.3042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.814
  maximum absolute entry in einsum_ir solution: 103.814
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138533
  time (eval):    0.015869
  gflops (eval):  167.485
  gflops (total): 154.038
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138533,0.015869,167.485,154.038

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111184
  gflops (total): 23.9048
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9048

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272538
  gflops (eval):  97.5212
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272538,97.5212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.555
  maximum absolute entry in einsum_ir solution: 101.555
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138445
  time (eval):    0.0159132
  gflops (eval):  167.02
  gflops (total): 153.652
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138445,0.0159132,167.02,153.652

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111701
  gflops (total): 23.794
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272871
  gflops (eval):  97.4022
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272871,97.4022,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.555
  maximum absolute entry in einsum_ir solution: 106.555
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00152981
  time (eval):    0.0159822
  gflops (eval):  166.299
  gflops (total): 151.772
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00152981,0.0159822,166.299,151.772

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110019
  gflops (total): 24.1579
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272546
  gflops (eval):  97.5183
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272546,97.5183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.939
  maximum absolute entry in einsum_ir solution: 107.939
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137677
  time (eval):    0.0161599
  gflops (eval):  164.47
  gflops (total): 151.558
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137677,0.0161599,164.47,151.558

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111336
  gflops (total): 23.8721
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027649
  gflops (eval):  96.1271
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027649,96.1271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.9061
  maximum absolute entry in einsum_ir solution: 98.9061
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145729
  time (eval):    0.0159615
  gflops (eval):  166.515
  gflops (total): 152.584
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145729,0.0159615,166.515,152.584

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111857
  gflops (total): 23.7608
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.026987
  gflops (eval):  98.4853
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.026987,98.4853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.406
  maximum absolute entry in einsum_ir solution: 104.406
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00168672
  time (eval):    0.0160359
  gflops (eval):  165.742
  gflops (total): 149.968
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00168672,0.0160359,165.742,149.968

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110847
  gflops (total): 23.9773
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271069
  gflops (eval):  98.0495
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271069,98.0495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.8022
  maximum absolute entry in einsum_ir solution: 99.8022
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140759
  time (eval):    0.0159395
  gflops (eval):  166.745
  gflops (total): 153.215
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140759,0.0159395,166.745,153.215

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110304
  gflops (total): 24.0954
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027508
  gflops (eval):  96.6198
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027508,96.6198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.131
  maximum absolute entry in einsum_ir solution: 103.131
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138453
  time (eval):    0.0161485
  gflops (eval):  164.587
  gflops (total): 151.59
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138453,0.0161485,164.587,151.59

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109923
  gflops (total): 24.1789
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274912
  gflops (eval):  96.6788
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274912,96.6788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.314
  maximum absolute entry in einsum_ir solution: 102.314
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144295
  time (eval):    0.0162405
  gflops (eval):  163.654
  gflops (total): 150.3
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144295,0.0162405,163.654,150.3

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111888
  gflops (total): 23.7543
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027412
  gflops (eval):  96.9583
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027412,96.9583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.144
  maximum absolute entry in einsum_ir solution: 103.144
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137084
  time (eval):    0.0157781
  gflops (eval):  168.45
  gflops (total): 154.985
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137084,0.0157781,168.45,154.985

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110645
  gflops (total): 24.0211
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027586
  gflops (eval):  96.3468
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027586,96.3468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.854
  maximum absolute entry in einsum_ir solution: 101.854
  maximum element-wise difference:              4.72069e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00169538
  time (eval):    0.0159253
  gflops (eval):  166.893
  gflops (total): 150.835
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00169538,0.0159253,166.893,150.835

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110911
  gflops (total): 23.9635
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027199
  gflops (eval):  97.7175
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027199,97.7175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.597
  maximum absolute entry in einsum_ir solution: 104.597
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138741
  time (eval):    0.0160203
  gflops (eval):  165.903
  gflops (total): 152.681
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138741,0.0160203,165.903,152.681

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110006
  gflops (total): 24.1606
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271539
  gflops (eval):  97.8798
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271539,97.8798,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.776
  maximum absolute entry in einsum_ir solution: 104.776
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140945
  time (eval):    0.0158077
  gflops (eval):  168.135
  gflops (total): 154.371
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140945,0.0158077,168.135,154.371

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111852
  gflops (total): 23.7619
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271379
  gflops (eval):  97.9375
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271379,97.9375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.975
  maximum absolute entry in einsum_ir solution: 98.975
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137632
  time (eval):    0.0160657
  gflops (eval):  165.435
  gflops (total): 152.38
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137632,0.0160657,165.435,152.38

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110403
  gflops (total): 24.0738
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270703
  gflops (eval):  98.182
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270703,98.182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.563
  maximum absolute entry in einsum_ir solution: 105.563
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138833
  time (eval):    0.0190613
  gflops (eval):  139.436
  gflops (total): 129.969
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138833,0.0190613,139.436,129.969

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111237
  gflops (total): 23.8934
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275541
  gflops (eval):  96.4582
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275541,96.4582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.238
  maximum absolute entry in einsum_ir solution: 102.238
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013863
  time (eval):    0.0159732
  gflops (eval):  166.392
  gflops (total): 153.105
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013863,0.0159732,166.392,153.105

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111683
  gflops (total): 23.7979
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273131
  gflops (eval):  97.3094
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273131,97.3094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.172
  maximum absolute entry in einsum_ir solution: 107.172
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138843
  time (eval):    0.0159558
  gflops (eval):  166.574
  gflops (total): 153.239
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138843,0.0159558,166.574,153.239

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11165
  gflops (total): 23.8049
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272567
  gflops (eval):  97.5109
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272567,97.5109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.151
  maximum absolute entry in einsum_ir solution: 112.151
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145216
  time (eval):    0.0159656
  gflops (eval):  166.472
  gflops (total): 152.593
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145216,0.0159656,166.472,152.593

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.109847
  gflops (total): 24.1957
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027477
  gflops (eval):  96.7288
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027477,96.7288,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.568
  maximum absolute entry in einsum_ir solution: 101.568
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143106
  time (eval):    0.0159021
  gflops (eval):  167.137
  gflops (total): 153.338
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143106,0.0159021,167.137,153.338

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110307
  gflops (total): 24.0947
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270565
  gflops (eval):  98.2321
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270565,98.2321,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.218
  maximum absolute entry in einsum_ir solution: 100.218
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137755
  time (eval):    0.0162419
  gflops (eval):  163.64
  gflops (total): 150.846
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137755,0.0162419,163.64,150.846

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111002
  gflops (total): 23.9438
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274469
  gflops (eval):  96.8349
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274469,96.8349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.725
  maximum absolute entry in einsum_ir solution: 104.725
  maximum element-wise difference:              5.91278e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138449
  time (eval):    0.0158248
  gflops (eval):  167.953
  gflops (total): 154.441
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138449,0.0158248,167.953,154.441

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111061
  gflops (total): 23.9311
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9311

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271784
  gflops (eval):  97.7915
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271784,97.7915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.569
  maximum absolute entry in einsum_ir solution: 101.569
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139049
  time (eval):    0.0157719
  gflops (eval):  168.517
  gflops (total): 154.863
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139049,0.0157719,168.517,154.863

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11109
  gflops (total): 23.925
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273114
  gflops (eval):  97.3155
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273114,97.3155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.3062
  maximum absolute entry in einsum_ir solution: 99.3062
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138557
  time (eval):    0.0159395
  gflops (eval):  166.744
  gflops (total): 153.409
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138557,0.0159395,166.744,153.409

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110789
  gflops (total): 23.9899
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271405
  gflops (eval):  97.9281
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271405,97.9281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.306
  maximum absolute entry in einsum_ir solution: 100.306
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139514
  time (eval):    0.0158091
  gflops (eval):  168.119
  gflops (total): 154.486
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139514,0.0158091,168.119,154.486

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11092
  gflops (total): 23.9617
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272126
  gflops (eval):  97.6687
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272126,97.6687,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.597
  maximum absolute entry in einsum_ir solution: 104.597
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00136605
  time (eval):    0.0158029
  gflops (eval):  168.186
  gflops (total): 154.804
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00136605,0.0158029,168.186,154.804

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110789
  gflops (total): 23.9898
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275304
  gflops (eval):  96.5412
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275304,96.5412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.811
  maximum absolute entry in einsum_ir solution: 105.811
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138799
  time (eval):    0.015917
  gflops (eval):  166.98
  gflops (total): 153.587
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138799,0.015917,166.98,153.587

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110777
  gflops (total): 23.9926
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027505
  gflops (eval):  96.6305
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027505,96.6305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.437
  maximum absolute entry in einsum_ir solution: 101.437
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138375
  time (eval):    0.015763
  gflops (eval):  168.611
  gflops (total): 155.004
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138375,0.015763,168.611,155.004

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111326
  gflops (total): 23.8743
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273885
  gflops (eval):  97.0413
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273885,97.0413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.789
  maximum absolute entry in einsum_ir solution: 103.789
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138546
  time (eval):    0.0160406
  gflops (eval):  165.694
  gflops (total): 152.52
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138546,0.0160406,165.694,152.52

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110157
  gflops (total): 24.1275
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1275

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275903
  gflops (eval):  96.3317
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275903,96.3317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.358
  maximum absolute entry in einsum_ir solution: 114.358
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137784
  time (eval):    0.0160843
  gflops (eval):  165.243
  gflops (total): 152.205
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137784,0.0160843,165.243,152.205

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111318
  gflops (total): 23.8758
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8758

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273452
  gflops (eval):  97.1953
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273452,97.1953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.396
  maximum absolute entry in einsum_ir solution: 108.396
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137666
  time (eval):    0.0158662
  gflops (eval):  167.515
  gflops (total): 154.141
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137666,0.0158662,167.515,154.141

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110934
  gflops (total): 23.9586
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276146
  gflops (eval):  96.2468
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276146,96.2468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.236
  maximum absolute entry in einsum_ir solution: 106.236
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138846
  time (eval):    0.0159722
  gflops (eval):  166.403
  gflops (total): 153.095
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138846,0.0159722,166.403,153.095

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110994
  gflops (total): 23.9455
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027648
  gflops (eval):  96.1308
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027648,96.1308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.288
  maximum absolute entry in einsum_ir solution: 112.288
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140122
  time (eval):    0.0160936
  gflops (eval):  165.148
  gflops (total): 151.92
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140122,0.0160936,165.148,151.92

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.110189
  gflops (total): 24.1206
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.1206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0269773
  gflops (eval):  98.5205
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0269773,98.5205,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.1163
  maximum absolute entry in einsum_ir solution: 97.1163
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013867
  time (eval):    0.0159121
  gflops (eval):  167.031
  gflops (total): 153.642
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013867,0.0159121,167.031,153.642

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111718
  gflops (total): 23.7904
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274842
  gflops (eval):  96.7036
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274842,96.7036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.196
  maximum absolute entry in einsum_ir solution: 100.196
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138046
  time (eval):    0.0160684
  gflops (eval):  165.407
  gflops (total): 152.321
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138046,0.0160684,165.407,152.321

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11052
  gflops (total): 24.0483
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,24.0483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274655
  gflops (eval):  96.7694
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274655,96.7694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.672
  maximum absolute entry in einsum_ir solution: 105.672
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139169
  time (eval):    0.0158301
  gflops (eval):  167.897
  gflops (total): 154.329
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139169,0.0158301,167.897,154.329

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111597
  gflops (total): 23.8163
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271102
  gflops (eval):  98.0377
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271102,98.0377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.819
  maximum absolute entry in einsum_ir solution: 99.819
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00168538
  time (eval):    0.0155676
  gflops (eval):  170.728
  gflops (total): 154.05
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00168538,0.0155676,170.728,154.05

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111307
  gflops (total): 23.8782
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0263112
  gflops (eval):  101.015
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0263112,101.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.505
  maximum absolute entry in einsum_ir solution: 103.505
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138807
  time (eval):    0.0158812
  gflops (eval):  167.357
  gflops (total): 153.905
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138807,0.0158812,167.357,153.905

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111145
  gflops (total): 23.9131
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.9131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272802
  gflops (eval):  97.4266
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272802,97.4266,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.266
  maximum absolute entry in einsum_ir solution: 102.266
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137536
  time (eval):    0.0160968
  gflops (eval):  165.115
  gflops (total): 152.118
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137536,0.0160968,165.115,152.118

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111858
  gflops (total): 23.7607
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274945
  gflops (eval):  96.6673
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274945,96.6673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.286
  maximum absolute entry in einsum_ir solution: 103.286
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138515
  time (eval):    0.0158433
  gflops (eval):  167.757
  gflops (total): 154.269
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138515,0.0158433,167.757,154.269

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111218
  gflops (total): 23.8974
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.8974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271806
  gflops (eval):  97.7837
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271806,97.7837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7079
  maximum absolute entry in einsum_ir solution: 99.7079
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138055
  time (eval):    0.0234698
  gflops (eval):  463.056
  gflops (total): 437.331
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138055,0.0234698,463.056,437.331

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0567083
  gflops (total): 191.644
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0490669
  gflops (eval):  221.49
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0490669,221.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7376
  maximum absolute entry in einsum_ir solution: 58.7376
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138007
  time (eval):    0.0233454
  gflops (eval):  465.523
  gflops (total): 439.539
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138007,0.0233454,465.523,439.539

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565905
  gflops (total): 192.043
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481282
  gflops (eval):  225.81
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481282,225.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.169
  maximum absolute entry in einsum_ir solution: 56.169
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00176454
  time (eval):    0.0234623
  gflops (eval):  463.204
  gflops (total): 430.804
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00176454,0.0234623,463.204,430.804

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565577
  gflops (total): 192.155
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.049721
  gflops (eval):  218.576
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.049721,218.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4769
  maximum absolute entry in einsum_ir solution: 59.4769
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138932
  time (eval):    0.0233276
  gflops (eval):  465.877
  gflops (total): 439.691
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138932,0.0233276,465.877,439.691

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560983
  gflops (total): 193.728
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488726
  gflops (eval):  222.371
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488726,222.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1751
  maximum absolute entry in einsum_ir solution: 57.1751
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137334
  time (eval):    0.0234189
  gflops (eval):  464.062
  gflops (total): 438.355
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137334,0.0234189,464.062,438.355

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0558919
  gflops (total): 194.444
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488745
  gflops (eval):  222.362
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488745,222.362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2128
  maximum absolute entry in einsum_ir solution: 60.2128
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138873
  time (eval):    0.023442
  gflops (eval):  463.604
  gflops (total): 437.675
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138873,0.023442,463.604,437.675

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0554233
  gflops (total): 196.088
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0489899
  gflops (eval):  221.838
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0489899,221.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1547
  maximum absolute entry in einsum_ir solution: 59.1547
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138368
  time (eval):    0.0234266
  gflops (eval):  463.91
  gflops (total): 438.038
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138368,0.0234266,463.91,438.038

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0558996
  gflops (total): 194.417
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0490353
  gflops (eval):  221.632
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0490353,221.632,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2936
  maximum absolute entry in einsum_ir solution: 59.2936
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00182643
  time (eval):    0.0233331
  gflops (eval):  465.768
  gflops (total): 431.956
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00182643,0.0233331,465.768,431.956

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563902
  gflops (total): 192.725
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484366
  gflops (eval):  224.372
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484366,224.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9503
  maximum absolute entry in einsum_ir solution: 61.9503
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136064
  time (eval):    0.0233723
  gflops (eval):  464.987
  gflops (total): 439.406
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136064,0.0233723,464.987,439.406

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0556249
  gflops (total): 195.377
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493048
  gflops (eval):  220.421
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493048,220.421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9848
  maximum absolute entry in einsum_ir solution: 56.9848
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013897
  time (eval):    0.0234333
  gflops (eval):  463.777
  gflops (total): 437.812
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013897,0.0234333,463.777,437.812

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560132
  gflops (total): 194.023
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.023

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494044
  gflops (eval):  219.977
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494044,219.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2386
  maximum absolute entry in einsum_ir solution: 61.2386
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139917
  time (eval):    0.0234617
  gflops (eval):  463.215
  gflops (total): 437.146
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139917,0.0234617,463.215,437.146

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0558675
  gflops (total): 194.529
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493742
  gflops (eval):  220.111
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493742,220.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4501
  maximum absolute entry in einsum_ir solution: 61.4501
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138663
  time (eval):    0.0234351
  gflops (eval):  463.741
  gflops (total): 437.834
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138663,0.0234351,463.741,437.834

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0555689
  gflops (total): 195.574
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0498846
  gflops (eval):  217.859
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0498846,217.859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8854
  maximum absolute entry in einsum_ir solution: 59.8854
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138933
  time (eval):    0.0234628
  gflops (eval):  463.193
  gflops (total): 437.299
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138933,0.0234628,463.193,437.299

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0559373
  gflops (total): 194.286
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474191
  gflops (eval):  229.187
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474191,229.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6352
  maximum absolute entry in einsum_ir solution: 61.6352
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137657
  time (eval):    0.023411
  gflops (eval):  464.219
  gflops (total): 438.439
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137657,0.023411,464.219,438.439

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565795
  gflops (total): 192.08
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0471747
  gflops (eval):  230.374
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0471747,230.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3241
  maximum absolute entry in einsum_ir solution: 60.3241
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138445
  time (eval):    0.0233658
  gflops (eval):  465.117
  gflops (total): 439.1
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138445,0.0233658,465.117,439.1

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0556314
  gflops (total): 195.354
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.049342
  gflops (eval):  220.255
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.049342,220.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4501
  maximum absolute entry in einsum_ir solution: 57.4501
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144176
  time (eval):    0.0234385
  gflops (eval):  463.674
  gflops (total): 436.805
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144176,0.0234385,463.674,436.805

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561615
  gflops (total): 193.51
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480476
  gflops (eval):  226.189
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480476,226.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8484
  maximum absolute entry in einsum_ir solution: 59.8484
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138704
  time (eval):    0.0234759
  gflops (eval):  462.936
  gflops (total): 437.11
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138704,0.0234759,462.936,437.11

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0554015
  gflops (total): 196.165
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474186
  gflops (eval):  229.189
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474186,229.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.643
  maximum absolute entry in einsum_ir solution: 59.643
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013865
  time (eval):    0.0234089
  gflops (eval):  464.261
  gflops (total): 438.301
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013865,0.0234089,464.261,438.301

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0558486
  gflops (total): 194.594
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048668
  gflops (eval):  223.305
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048668,223.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3293
  maximum absolute entry in einsum_ir solution: 59.3293
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142185
  time (eval):    0.0234466
  gflops (eval):  463.514
  gflops (total): 437.012
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142185,0.0234466,463.514,437.012

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0556707
  gflops (total): 195.216
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486065
  gflops (eval):  223.588
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486065,223.588,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3534
  maximum absolute entry in einsum_ir solution: 57.3534
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00170101
  time (eval):    0.0234339
  gflops (eval):  463.765
  gflops (total): 432.38
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00170101,0.0234339,463.765,432.38

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562172
  gflops (total): 193.318
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.318

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481854
  gflops (eval):  225.542
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481854,225.542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0881
  maximum absolute entry in einsum_ir solution: 60.0881
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013803
  time (eval):    0.0234753
  gflops (eval):  462.947
  gflops (total): 437.239
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013803,0.0234753,462.947,437.239

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563309
  gflops (total): 192.928
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.928

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486288
  gflops (eval):  223.485
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486288,223.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0513
  maximum absolute entry in einsum_ir solution: 58.0513
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140782
  time (eval):    0.0234049
  gflops (eval):  464.34
  gflops (total): 437.995
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140782,0.0234049,464.34,437.995

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560071
  gflops (total): 194.044
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480532
  gflops (eval):  226.162
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480532,226.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.957
  maximum absolute entry in einsum_ir solution: 58.957
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139524
  time (eval):    0.0234122
  gflops (eval):  464.195
  gflops (total): 438.088
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139524,0.0234122,464.195,438.088

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056334
  gflops (total): 192.917
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493103
  gflops (eval):  220.397
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493103,220.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1341
  maximum absolute entry in einsum_ir solution: 58.1341
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138336
  time (eval):    0.0233674
  gflops (eval):  465.085
  gflops (total): 439.09
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138336,0.0233674,465.085,439.09

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0558448
  gflops (total): 194.608
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493618
  gflops (eval):  220.167
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493618,220.167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3273
  maximum absolute entry in einsum_ir solution: 56.3273
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150904
  time (eval):    0.0234435
  gflops (eval):  463.575
  gflops (total): 435.539
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150904,0.0234435,463.575,435.539

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0551695
  gflops (total): 196.99
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486636
  gflops (eval):  223.325
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486636,223.325,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0627
  maximum absolute entry in einsum_ir solution: 56.0627
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137271
  time (eval):    0.0233011
  gflops (eval):  466.408
  gflops (total): 440.459
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137271,0.0233011,466.408,440.459

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0554907
  gflops (total): 195.849
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487108
  gflops (eval):  223.109
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487108,223.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9807
  maximum absolute entry in einsum_ir solution: 58.9807
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142788
  time (eval):    0.0233403
  gflops (eval):  465.624
  gflops (total): 438.781
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142788,0.0233403,465.624,438.781

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056526
  gflops (total): 192.262
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.262

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478204
  gflops (eval):  227.263
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478204,227.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6689
  maximum absolute entry in einsum_ir solution: 59.6689
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138397
  time (eval):    0.0234653
  gflops (eval):  463.145
  gflops (total): 437.35
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138397,0.0234653,463.145,437.35

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0559547
  gflops (total): 194.225
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494315
  gflops (eval):  219.856
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494315,219.856,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.521
  maximum absolute entry in einsum_ir solution: 61.521
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138965
  time (eval):    0.0234887
  gflops (eval):  462.683
  gflops (total): 436.838
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138965,0.0234887,462.683,436.838

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0552787
  gflops (total): 196.6
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0500011
  gflops (eval):  217.352
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0500011,217.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2904
  maximum absolute entry in einsum_ir solution: 62.2904
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139607
  time (eval):    0.023422
  gflops (eval):  464
  gflops (total): 437.899
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139607,0.023422,464,437.899

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561036
  gflops (total): 193.71
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492742
  gflops (eval):  220.558
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492742,220.558,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5008
  maximum absolute entry in einsum_ir solution: 58.5008
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150076
  time (eval):    0.0233398
  gflops (eval):  465.635
  gflops (total): 437.503
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150076,0.0233398,465.635,437.503

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560652
  gflops (total): 193.843
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481081
  gflops (eval):  225.904
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481081,225.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0066
  maximum absolute entry in einsum_ir solution: 59.0066
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013965
  time (eval):    0.0234711
  gflops (eval):  463.03
  gflops (total): 437.027
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013965,0.0234711,463.03,437.027

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0570499
  gflops (total): 190.497
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484303
  gflops (eval):  224.401
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484303,224.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2575
  maximum absolute entry in einsum_ir solution: 59.2575
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137302
  time (eval):    0.0232979
  gflops (eval):  466.472
  gflops (total): 440.511
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137302,0.0232979,466.472,440.511

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0557466
  gflops (total): 194.95
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0489211
  gflops (eval):  222.15
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0489211,222.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.8791
  maximum absolute entry in einsum_ir solution: 65.8791
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013822
  time (eval):    0.0234531
  gflops (eval):  463.386
  gflops (total): 437.596
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013822,0.0234531,463.386,437.596

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563669
  gflops (total): 192.805
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482252
  gflops (eval):  225.356
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482252,225.356,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4505
  maximum absolute entry in einsum_ir solution: 58.4505
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139461
  time (eval):    0.0234624
  gflops (eval):  463.203
  gflops (total): 437.214
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139461,0.0234624,463.203,437.214

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0559419
  gflops (total): 194.27
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482509
  gflops (eval):  225.236
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482509,225.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9669
  maximum absolute entry in einsum_ir solution: 57.9669
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013957
  time (eval):    0.0234086
  gflops (eval):  464.265
  gflops (total): 438.142
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013957,0.0234086,464.265,438.142

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561397
  gflops (total): 193.585
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485973
  gflops (eval):  223.63
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485973,223.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8729
  maximum absolute entry in einsum_ir solution: 56.8729
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139374
  time (eval):    0.0234389
  gflops (eval):  463.667
  gflops (total): 437.643
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139374,0.0234389,463.667,437.643

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563235
  gflops (total): 192.954
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0500326
  gflops (eval):  217.215
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0500326,217.215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5423
  maximum absolute entry in einsum_ir solution: 58.5423
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138194
  time (eval):    0.0232991
  gflops (eval):  466.448
  gflops (total): 440.33
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138194,0.0232991,466.448,440.33

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562142
  gflops (total): 193.329
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480013
  gflops (eval):  226.407
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480013,226.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.763
  maximum absolute entry in einsum_ir solution: 64.763
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141857
  time (eval):    0.023483
  gflops (eval):  462.794
  gflops (total): 436.43
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141857,0.023483,462.794,436.43

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565734
  gflops (total): 192.101
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479554
  gflops (eval):  226.623
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479554,226.623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2647
  maximum absolute entry in einsum_ir solution: 56.2647
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138172
  time (eval):    0.0234562
  gflops (eval):  463.325
  gflops (total): 437.55
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138172,0.0234562,463.325,437.55

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0553979
  gflops (total): 196.178
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0490338
  gflops (eval):  221.639
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0490338,221.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.238
  maximum absolute entry in einsum_ir solution: 61.238
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138017
  time (eval):    0.0234795
  gflops (eval):  462.864
  gflops (total): 437.167
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138017,0.0234795,462.864,437.167

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560183
  gflops (total): 194.005
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.047594
  gflops (eval):  228.344
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.047594,228.344,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2894
  maximum absolute entry in einsum_ir solution: 57.2894
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138331
  time (eval):    0.0233817
  gflops (eval):  464.8
  gflops (total): 438.838
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138331,0.0233817,464.8,438.838

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0559214
  gflops (total): 194.341
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485803
  gflops (eval):  223.708
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485803,223.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7563
  maximum absolute entry in einsum_ir solution: 57.7563
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137515
  time (eval):    0.0234304
  gflops (eval):  463.834
  gflops (total): 438.12
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137515,0.0234304,463.834,438.12

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.055516
  gflops (total): 195.76
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488762
  gflops (eval):  222.354
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488762,222.354,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0154
  maximum absolute entry in einsum_ir solution: 57.0154
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139269
  time (eval):    0.0234888
  gflops (eval):  462.681
  gflops (total): 436.784
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139269,0.0234888,462.681,436.784

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560034
  gflops (total): 194.057
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487234
  gflops (eval):  223.051
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487234,223.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5318
  maximum absolute entry in einsum_ir solution: 60.5318
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00152036
  time (eval):    0.0233796
  gflops (eval):  464.842
  gflops (total): 436.459
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00152036,0.0233796,464.842,436.459

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562756
  gflops (total): 193.118
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0500798
  gflops (eval):  217.01
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0500798,217.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2668
  maximum absolute entry in einsum_ir solution: 59.2668
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139047
  time (eval):    0.0234221
  gflops (eval):  463.998
  gflops (total): 437.996
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139047,0.0234221,463.998,437.996

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056019
  gflops (total): 194.002
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485385
  gflops (eval):  223.901
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485385,223.901,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3953
  maximum absolute entry in einsum_ir solution: 57.3953
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136662
  time (eval):    0.0234215
  gflops (eval):  464.011
  gflops (total): 438.429
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136662,0.0234215,464.011,438.429

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560132
  gflops (total): 194.022
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0490472
  gflops (eval):  221.579
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0490472,221.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.1328
  maximum absolute entry in einsum_ir solution: 63.1328
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139002
  time (eval):    0.023405
  gflops (eval):  464.339
  gflops (total): 438.307
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139002,0.023405,464.339,438.307

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0551852
  gflops (total): 196.934
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.049036
  gflops (eval):  221.63
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.049036,221.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9095
  maximum absolute entry in einsum_ir solution: 61.9095
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138805
  time (eval):    0.0234192
  gflops (eval):  464.056
  gflops (total): 438.09
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138805,0.0234192,464.056,438.09

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0565271
  gflops (total): 192.258
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480476
  gflops (eval):  226.188
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480476,226.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2214
  maximum absolute entry in einsum_ir solution: 59.2214
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138001
  time (eval):    0.0234324
  gflops (eval):  463.794
  gflops (total): 437.999
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138001,0.0234324,463.794,437.999

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0554872
  gflops (total): 195.862
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474199
  gflops (eval):  229.183
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474199,229.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.3458
  maximum absolute entry in einsum_ir solution: 63.3458
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142865
  time (eval):    0.0234505
  gflops (eval):  463.437
  gflops (total): 436.825
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142865,0.0234505,463.437,436.825

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0559603
  gflops (total): 194.206
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494757
  gflops (eval):  219.66
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494757,219.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0589
  maximum absolute entry in einsum_ir solution: 63.0589
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138715
  time (eval):    0.0233693
  gflops (eval):  465.046
  gflops (total): 438.989
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138715,0.0233693,465.046,438.989

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0557192
  gflops (total): 195.046
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485767
  gflops (eval):  223.725
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485767,223.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8771
  maximum absolute entry in einsum_ir solution: 62.8771
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139422
  time (eval):    0.0233395
  gflops (eval):  465.642
  gflops (total): 439.394
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139422,0.0233395,465.642,439.394

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056599
  gflops (total): 192.014
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0498745
  gflops (eval):  217.903
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0498745,217.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.659
  maximum absolute entry in einsum_ir solution: 55.659
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136241
  time (eval):    0.023439
  gflops (eval):  463.663
  gflops (total): 438.193
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136241,0.023439,463.663,438.193

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0559451
  gflops (total): 194.259
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0499864
  gflops (eval):  217.415
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0499864,217.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.346
  maximum absolute entry in einsum_ir solution: 58.346
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137835
  time (eval):    0.0234359
  gflops (eval):  463.725
  gflops (total): 437.966
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137835,0.0234359,463.725,437.966

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0564662
  gflops (total): 192.466
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482295
  gflops (eval):  225.336
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482295,225.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8408
  maximum absolute entry in einsum_ir solution: 62.8408
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138185
  time (eval):    0.0233076
  gflops (eval):  466.278
  gflops (total): 440.181
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138185,0.0233076,466.278,440.181

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0571842
  gflops (total): 190.049
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488374
  gflops (eval):  222.531
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488374,222.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0769
  maximum absolute entry in einsum_ir solution: 60.0769
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142856
  time (eval):    0.0234742
  gflops (eval):  462.968
  gflops (total): 436.41
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142856,0.0234742,462.968,436.41

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0556079
  gflops (total): 195.436
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491779
  gflops (eval):  220.99
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491779,220.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2809
  maximum absolute entry in einsum_ir solution: 60.2809
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141476
  time (eval):    0.0233656
  gflops (eval):  465.121
  gflops (total): 438.567
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141476,0.0233656,465.121,438.567

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561809
  gflops (total): 193.443
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476425
  gflops (eval):  228.112
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476425,228.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.438
  maximum absolute entry in einsum_ir solution: 61.438
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138248
  time (eval):    0.0233618
  gflops (eval):  465.196
  gflops (total): 439.205
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138248,0.0233618,465.196,439.205

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.056491
  gflops (total): 192.382
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474881
  gflops (eval):  228.853
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474881,228.853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      72.9056
  maximum absolute entry in einsum_ir solution: 72.9056
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013841
  time (eval):    0.0234339
  gflops (eval):  463.765
  gflops (total): 437.901
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013841,0.0234339,463.765,437.901

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0559119
  gflops (total): 194.374
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482947
  gflops (eval):  225.031
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482947,225.031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2294
  maximum absolute entry in einsum_ir solution: 61.2294
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013722
  time (eval):    0.023488
  gflops (eval):  462.697
  gflops (total): 437.158
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013722,0.023488,462.697,437.158

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561342
  gflops (total): 193.604
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485209
  gflops (eval):  223.982
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485209,223.982,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9686
  maximum absolute entry in einsum_ir solution: 58.9686
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013731
  time (eval):    0.0234131
  gflops (eval):  464.176
  gflops (total): 438.462
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013731,0.0234131,464.176,438.462

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560592
  gflops (total): 193.863
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0489558
  gflops (eval):  221.992
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0489558,221.992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1053
  maximum absolute entry in einsum_ir solution: 59.1053
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138633
  time (eval):    0.0234833
  gflops (eval):  462.79
  gflops (total): 436.992
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138633,0.0234833,462.79,436.992

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0555887
  gflops (total): 195.504
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.049406
  gflops (eval):  219.97
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.049406,219.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.1728
  maximum absolute entry in einsum_ir solution: 64.1728
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138564
  time (eval):    0.0233527
  gflops (eval):  465.377
  gflops (total): 439.31
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138564,0.0233527,465.377,439.31

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566411
  gflops (total): 191.872
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484958
  gflops (eval):  224.098
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484958,224.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3923
  maximum absolute entry in einsum_ir solution: 62.3923
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138747
  time (eval):    0.0235005
  gflops (eval):  462.45
  gflops (total): 436.669
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138747,0.0235005,462.45,436.669

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0558672
  gflops (total): 194.529
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494284
  gflops (eval):  219.87
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494284,219.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7408
  maximum absolute entry in einsum_ir solution: 58.7408
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140381
  time (eval):    0.0234978
  gflops (eval):  462.503
  gflops (total): 436.43
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140381,0.0234978,462.503,436.43

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0553455
  gflops (total): 196.363
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483175
  gflops (eval):  224.925
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483175,224.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4603
  maximum absolute entry in einsum_ir solution: 55.4603
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138604
  time (eval):    0.0233518
  gflops (eval):  465.396
  gflops (total): 439.321
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138604,0.0233518,465.396,439.321

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.055378
  gflops (total): 196.248
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483529
  gflops (eval):  224.761
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483529,224.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3915
  maximum absolute entry in einsum_ir solution: 58.3915
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00167732
  time (eval):    0.0234406
  gflops (eval):  463.632
  gflops (total): 432.672
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00167732,0.0234406,463.632,432.672

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0549515
  gflops (total): 197.771
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,197.771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478668
  gflops (eval):  227.043
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478668,227.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.319
  maximum absolute entry in einsum_ir solution: 62.319
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138171
  time (eval):    0.0234458
  gflops (eval):  463.529
  gflops (total): 437.733
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138171,0.0234458,463.529,437.733

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562146
  gflops (total): 193.328
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481608
  gflops (eval):  225.657
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481608,225.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6391
  maximum absolute entry in einsum_ir solution: 60.6391
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00147354
  time (eval):    0.0234326
  gflops (eval):  463.79
  gflops (total): 436.351
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00147354,0.0234326,463.79,436.351

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561667
  gflops (total): 193.492
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474196
  gflops (eval):  229.184
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474196,229.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2349
  maximum absolute entry in einsum_ir solution: 59.2349
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00163384
  time (eval):    0.0234424
  gflops (eval):  463.597
  gflops (total): 433.391
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00163384,0.0234424,463.597,433.391

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0564231
  gflops (total): 192.613
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491614
  gflops (eval):  221.064
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491614,221.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0144
  maximum absolute entry in einsum_ir solution: 60.0143
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137009
  time (eval):    0.0234235
  gflops (eval):  463.971
  gflops (total): 438.332
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137009,0.0234235,463.971,438.332

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0558969
  gflops (total): 194.426
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493786
  gflops (eval):  220.092
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493786,220.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7369
  maximum absolute entry in einsum_ir solution: 57.7369
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140164
  time (eval):    0.023507
  gflops (eval):  462.323
  gflops (total): 436.307
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140164,0.023507,462.323,436.307

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0564778
  gflops (total): 192.427
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482061
  gflops (eval):  225.445
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482061,225.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.415
  maximum absolute entry in einsum_ir solution: 56.415
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138181
  time (eval):    0.0234852
  gflops (eval):  462.751
  gflops (total): 437.037
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138181,0.0234852,462.751,437.037

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0556524
  gflops (total): 195.28
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485707
  gflops (eval):  223.753
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485707,223.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7806
  maximum absolute entry in einsum_ir solution: 58.7806
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139165
  time (eval):    0.0233399
  gflops (eval):  465.633
  gflops (total): 439.432
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139165,0.0233399,465.633,439.432

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.055727
  gflops (total): 195.019
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048357
  gflops (eval):  224.742
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048357,224.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6623
  maximum absolute entry in einsum_ir solution: 57.6623
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138277
  time (eval):    0.0234213
  gflops (eval):  464.015
  gflops (total): 438.147
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138277,0.0234213,464.015,438.147

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0554233
  gflops (total): 196.088
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048233
  gflops (eval):  225.319
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048233,225.319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8002
  maximum absolute entry in einsum_ir solution: 55.8002
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138392
  time (eval):    0.0233442
  gflops (eval):  465.546
  gflops (total): 439.492
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138392,0.0233442,465.546,439.492

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562437
  gflops (total): 193.227
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483874
  gflops (eval):  224.6
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483874,224.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3534
  maximum absolute entry in einsum_ir solution: 58.3534
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145488
  time (eval):    0.0234755
  gflops (eval):  462.943
  gflops (total): 435.927
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145488,0.0234755,462.943,435.927

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0562582
  gflops (total): 193.177
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487737
  gflops (eval):  222.821
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487737,222.821,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2423
  maximum absolute entry in einsum_ir solution: 59.2423
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00134247
  time (eval):    0.0234837
  gflops (eval):  462.782
  gflops (total): 437.757
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00134247,0.0234837,462.782,437.757

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560816
  gflops (total): 193.786
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494869
  gflops (eval):  219.61
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494869,219.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6505
  maximum absolute entry in einsum_ir solution: 59.6505
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142562
  time (eval):    0.0233248
  gflops (eval):  465.934
  gflops (total): 439.096
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142562,0.0233248,465.934,439.096

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0557665
  gflops (total): 194.881
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491539
  gflops (eval):  221.098
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491539,221.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3668
  maximum absolute entry in einsum_ir solution: 60.3668
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00166373
  time (eval):    0.0234216
  gflops (eval):  464.009
  gflops (total): 433.235
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00166373,0.0234216,464.009,433.235

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0561125
  gflops (total): 193.679
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488645
  gflops (eval):  222.407
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488645,222.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9012
  maximum absolute entry in einsum_ir solution: 57.9012
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137738
  time (eval):    0.0234128
  gflops (eval):  464.183
  gflops (total): 438.392
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137738,0.0234128,464.183,438.392

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0563464
  gflops (total): 192.875
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492186
  gflops (eval):  220.807
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492186,220.807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3635
  maximum absolute entry in einsum_ir solution: 58.3635
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137858
  time (eval):    0.0234936
  gflops (eval):  462.586
  gflops (total): 436.947
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137858,0.0234936,462.586,436.947

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0557173
  gflops (total): 195.053
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494055
  gflops (eval):  219.972
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494055,219.972,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2613
  maximum absolute entry in einsum_ir solution: 62.2613
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013753
  time (eval):    0.0233544
  gflops (eval):  465.343
  gflops (total): 439.464
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013753,0.0233544,465.343,439.464

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0566865
  gflops (total): 191.718
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0496816
  gflops (eval):  218.749
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0496816,218.749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9825
  maximum absolute entry in einsum_ir solution: 58.9825
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137792
  time (eval):    0.0232986
  gflops (eval):  466.459
  gflops (total): 440.412
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137792,0.0232986,466.459,440.412

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0564618
  gflops (total): 192.481
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,192.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.049328
  gflops (eval):  220.317
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.049328,220.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5609
  maximum absolute entry in einsum_ir solution: 58.5609
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137275
  time (eval):    0.023402
  gflops (eval):  464.396
  gflops (total): 438.664
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137275,0.023402,464.396,438.664

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560941
  gflops (total): 193.743
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483672
  gflops (eval):  224.694
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483672,224.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.7157
  maximum absolute entry in einsum_ir solution: 62.7157
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138409
  time (eval):    0.0232529
  gflops (eval):  467.375
  gflops (total): 441.118
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138409,0.0232529,467.375,441.118

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568062
  gflops (total): 191.314
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483743
  gflops (eval):  224.661
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483743,224.661,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.3209
  maximum absolute entry in einsum_ir solution: 65.3209
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013887
  time (eval):    0.0234653
  gflops (eval):  463.144
  gflops (total): 437.266
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013887,0.0234653,463.144,437.266

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560785
  gflops (total): 193.797
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478052
  gflops (eval):  227.335
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478052,227.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0359
  maximum absolute entry in einsum_ir solution: 62.0359
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013914
  time (eval):    0.0234579
  gflops (eval):  463.291
  gflops (total): 437.349
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013914,0.0234579,463.291,437.349

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0568856
  gflops (total): 191.047
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,191.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482294
  gflops (eval):  225.336
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482294,225.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8658
  maximum absolute entry in einsum_ir solution: 58.8658
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00148683
  time (eval):    0.0233799
  gflops (eval):  464.835
  gflops (total): 437.042
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00148683,0.0233799,464.835,437.042

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0555207
  gflops (total): 195.744
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493103
  gflops (eval):  220.397
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493103,220.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0588
  maximum absolute entry in einsum_ir solution: 57.0588
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138391
  time (eval):    0.0234549
  gflops (eval):  463.349
  gflops (total): 437.533
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138391,0.0234549,463.349,437.533

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0557448
  gflops (total): 194.957
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483057
  gflops (eval):  224.98
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483057,224.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1319
  maximum absolute entry in einsum_ir solution: 61.1319
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137935
  time (eval):    0.0234396
  gflops (eval):  463.653
  gflops (total): 437.885
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137935,0.0234396,463.653,437.885

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0557721
  gflops (total): 194.861
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488391
  gflops (eval):  222.523
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488391,222.523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0141
  maximum absolute entry in einsum_ir solution: 60.0141
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139173
  time (eval):    0.0233055
  gflops (eval):  466.319
  gflops (total): 440.041
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139173,0.0233055,466.319,440.041

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0560937
  gflops (total): 193.744
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,193.744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491623
  gflops (eval):  221.06
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491623,221.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.854
  maximum absolute entry in einsum_ir solution: 62.854
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137453
  time (eval):    0.0235259
  gflops (eval):  461.951
  gflops (total): 436.451
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137453,0.0235259,461.951,436.451

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0556531
  gflops (total): 195.278
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478345
  gflops (eval):  227.196
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478345,227.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7171
  maximum absolute entry in einsum_ir solution: 57.7171
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145086
  time (eval):    0.0234928
  gflops (eval):  462.602
  gflops (total): 435.694
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145086,0.0234928,462.602,435.694

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0570599
  gflops (total): 190.463
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,190.463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474347
  gflops (eval):  229.111
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474347,229.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9129
  maximum absolute entry in einsum_ir solution: 58.9129
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00154559
  time (eval):    0.0234081
  gflops (eval):  464.275
  gflops (total): 435.519
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00154559,0.0234081,464.275,435.519

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0559793
  gflops (total): 194.14
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048262
  gflops (eval):  225.184
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048262,225.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7227
  maximum absolute entry in einsum_ir solution: 54.7227
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013633
  time (eval):    0.0234083
  gflops (eval):  464.272
  gflops (total): 438.721
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013633,0.0234083,464.272,438.721

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0572878
  gflops (total): 189.706
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,189.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485904
  gflops (eval):  223.662
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485904,223.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2893
  maximum absolute entry in einsum_ir solution: 55.2893
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138955
  time (eval):    0.0234495
  gflops (eval):  463.457
  gflops (total): 437.53
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138955,0.0234495,463.457,437.53

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0556466
  gflops (total): 195.301
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,195.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487399
  gflops (eval):  222.976
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487399,222.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9963
  maximum absolute entry in einsum_ir solution: 58.9963
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137671
  time (eval):    0.0234181
  gflops (eval):  464.078
  gflops (total): 438.31
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137671,0.0234181,464.078,438.31

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0558073
  gflops (total): 194.738
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,194.738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494506
  gflops (eval):  219.771
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494506,219.771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2849
  maximum absolute entry in einsum_ir solution: 61.2849
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00135808
  time (eval):    0.0233934
  gflops (eval):  464.567
  gflops (total): 439.077
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00135808,0.0233934,464.567,439.077

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0553457
  gflops (total): 196.362
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,196.362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0473273
  gflops (eval):  229.631
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0473273,229.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8901
  maximum absolute entry in einsum_ir solution: 56.8901
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0016507
  time (eval):    0.0245425
  gflops (eval):  442.816
  gflops (total): 414.91
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0016507,0.0245425,442.816,414.91

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922647
  gflops (total): 117.79
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554791
  gflops (eval):  195.89
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554791,195.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9527
  maximum absolute entry in einsum_ir solution: 54.9527
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137901
  time (eval):    0.0245387
  gflops (eval):  442.885
  gflops (total): 419.32
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137901,0.0245387,442.885,419.32

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929798
  gflops (total): 116.884
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555225
  gflops (eval):  195.737
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555225,195.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3535
  maximum absolute entry in einsum_ir solution: 61.3535
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138882
  time (eval):    0.0245183
  gflops (eval):  443.254
  gflops (total): 419.492
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138882,0.0245183,443.254,419.492

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0932553
  gflops (total): 116.538
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0542927
  gflops (eval):  200.171
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0542927,200.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.89
  maximum absolute entry in einsum_ir solution: 56.89
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137466
  time (eval):    0.0244481
  gflops (eval):  444.525
  gflops (total): 420.861
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137466,0.0244481,444.525,420.861

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0921668
  gflops (total): 117.915
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0546884
  gflops (eval):  198.723
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0546884,198.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0211
  maximum absolute entry in einsum_ir solution: 57.0211
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138281
  time (eval):    0.0246017
  gflops (eval):  441.751
  gflops (total): 418.243
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138281,0.0246017,441.751,418.243

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922688
  gflops (total): 117.784
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556766
  gflops (eval):  195.195
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556766,195.195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4571
  maximum absolute entry in einsum_ir solution: 56.4571
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138015
  time (eval):    0.024603
  gflops (eval):  441.728
  gflops (total): 418.264
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138015,0.024603,441.728,418.264

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.092415
  gflops (total): 117.598
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556389
  gflops (eval):  195.328
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556389,195.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0284
  maximum absolute entry in einsum_ir solution: 58.0284
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138775
  time (eval):    0.0245491
  gflops (eval):  442.697
  gflops (total): 419.011
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138775,0.0245491,442.697,419.011

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0927333
  gflops (total): 117.194
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.194

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552719
  gflops (eval):  196.625
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552719,196.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2285
  maximum absolute entry in einsum_ir solution: 62.2285
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013875
  time (eval):    0.0245718
  gflops (eval):  442.289
  gflops (total): 418.649
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013875,0.0245718,442.289,418.649

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924581
  gflops (total): 117.543
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553777
  gflops (eval):  196.249
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553777,196.249,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6429
  maximum absolute entry in einsum_ir solution: 63.6429
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143541
  time (eval):    0.024537
  gflops (eval):  442.916
  gflops (total): 418.438
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143541,0.024537,442.916,418.438

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922605
  gflops (total): 117.795
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0545676
  gflops (eval):  199.163
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0545676,199.163,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1419
  maximum absolute entry in einsum_ir solution: 61.1419
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136476
  time (eval):    0.0244879
  gflops (eval):  443.803
  gflops (total): 420.375
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136476,0.0244879,443.803,420.375

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0928924
  gflops (total): 116.994
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553356
  gflops (eval):  196.398
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553356,196.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.9582
  maximum absolute entry in einsum_ir solution: 63.9582
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139499
  time (eval):    0.0245443
  gflops (eval):  442.784
  gflops (total): 418.971
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139499,0.0245443,442.784,418.971

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0926481
  gflops (total): 117.302
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548668
  gflops (eval):  198.076
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548668,198.076,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.9057
  maximum absolute entry in einsum_ir solution: 62.9057
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00177919
  time (eval):    0.0245951
  gflops (eval):  441.869
  gflops (total): 412.061
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00177919,0.0245951,441.869,412.061

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924437
  gflops (total): 117.561
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551532
  gflops (eval):  197.048
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551532,197.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0517
  maximum absolute entry in einsum_ir solution: 58.0517
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013811
  time (eval):    0.0246036
  gflops (eval):  441.717
  gflops (total): 418.239
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013811,0.0246036,441.717,418.239

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0930668
  gflops (total): 116.774
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556719
  gflops (eval):  195.212
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556719,195.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5544
  maximum absolute entry in einsum_ir solution: 55.5544
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144585
  time (eval):    0.0245897
  gflops (eval):  441.966
  gflops (total): 417.422
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144585,0.0245897,441.966,417.422

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.092389
  gflops (total): 117.631
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552068
  gflops (eval):  196.857
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552068,196.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7058
  maximum absolute entry in einsum_ir solution: 58.7058
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013629
  time (eval):    0.0245258
  gflops (eval):  443.119
  gflops (total): 419.791
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013629,0.0245258,443.119,419.791

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925527
  gflops (total): 117.423
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555245
  gflops (eval):  195.73
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555245,195.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5533
  maximum absolute entry in einsum_ir solution: 56.5533
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013644
  time (eval):    0.0245896
  gflops (eval):  441.969
  gflops (total): 418.734
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013644,0.0245896,441.969,418.734

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0923702
  gflops (total): 117.655
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550593
  gflops (eval):  197.384
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550593,197.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5116
  maximum absolute entry in einsum_ir solution: 57.5116
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137272
  time (eval):    0.024603
  gflops (eval):  441.728
  gflops (total): 418.384
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137272,0.024603,441.728,418.384

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0934288
  gflops (total): 116.322
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555961
  gflops (eval):  195.478
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555961,195.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0691
  maximum absolute entry in einsum_ir solution: 56.0691
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00165066
  time (eval):    0.024589
  gflops (eval):  441.979
  gflops (total): 414.175
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00165066,0.024589,441.979,414.175

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924338
  gflops (total): 117.574
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554341
  gflops (eval):  196.049
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554341,196.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0373
  maximum absolute entry in einsum_ir solution: 57.0373
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138004
  time (eval):    0.0244945
  gflops (eval):  443.684
  gflops (total): 420.019
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138004,0.0244945,443.684,420.019

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922606
  gflops (total): 117.795
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556348
  gflops (eval):  195.342
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556348,195.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6941
  maximum absolute entry in einsum_ir solution: 54.6941
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139029
  time (eval):    0.0245627
  gflops (eval):  442.453
  gflops (total): 418.751
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139029,0.0245627,442.453,418.751

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0930015
  gflops (total): 116.856
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0547329
  gflops (eval):  198.561
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0547329,198.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6809
  maximum absolute entry in einsum_ir solution: 57.6809
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00149902
  time (eval):    0.0245567
  gflops (eval):  442.561
  gflops (total): 417.099
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00149902,0.0245567,442.561,417.099

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924978
  gflops (total): 117.493
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554432
  gflops (eval):  196.017
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554432,196.017,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.282
  maximum absolute entry in einsum_ir solution: 60.282
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137977
  time (eval):    0.0245514
  gflops (eval):  442.655
  gflops (total): 419.102
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137977,0.0245514,442.655,419.102

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0931299
  gflops (total): 116.695
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548078
  gflops (eval):  198.29
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548078,198.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.508
  maximum absolute entry in einsum_ir solution: 57.508
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013704
  time (eval):    0.0245877
  gflops (eval):  442.002
  gflops (total): 418.668
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013704,0.0245877,442.002,418.668

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925099
  gflops (total): 117.477
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566092
  gflops (eval):  191.98
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566092,191.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8425
  maximum absolute entry in einsum_ir solution: 59.8425
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142806
  time (eval):    0.0246043
  gflops (eval):  441.705
  gflops (total): 417.474
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142806,0.0246043,441.705,417.474

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0928004
  gflops (total): 117.11
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559451
  gflops (eval):  194.259
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559451,194.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9529
  maximum absolute entry in einsum_ir solution: 55.9529
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137947
  time (eval):    0.0245547
  gflops (eval):  442.596
  gflops (total): 419.054
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137947,0.0245547,442.596,419.054

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924378
  gflops (total): 117.569
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0547279
  gflops (eval):  198.579
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0547279,198.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0676
  maximum absolute entry in einsum_ir solution: 60.0676
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137845
  time (eval):    0.0245124
  gflops (eval):  443.36
  gflops (total): 419.755
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137845,0.0245124,443.36,419.755

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0931007
  gflops (total): 116.732
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555737
  gflops (eval):  195.557
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555737,195.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.4107
  maximum absolute entry in einsum_ir solution: 63.4107
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139497
  time (eval):    0.0253896
  gflops (eval):  428.043
  gflops (total): 405.75
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139497,0.0253896,428.043,405.75

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0995172
  gflops (total): 109.205
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553611
  gflops (eval):  196.308
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553611,196.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6934
  maximum absolute entry in einsum_ir solution: 63.6934
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00135897
  time (eval):    0.0244725
  gflops (eval):  444.084
  gflops (total): 420.721
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00135897,0.0244725,444.084,420.721

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924939
  gflops (total): 117.498
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055652
  gflops (eval):  195.282
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055652,195.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4229
  maximum absolute entry in einsum_ir solution: 62.4229
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138233
  time (eval):    0.0245858
  gflops (eval):  442.036
  gflops (total): 418.505
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138233,0.0245858,442.036,418.505

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0933737
  gflops (total): 116.391
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553266
  gflops (eval):  196.43
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553266,196.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2906
  maximum absolute entry in einsum_ir solution: 59.2906
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137126
  time (eval):    0.0246128
  gflops (eval):  441.552
  gflops (total): 418.25
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137126,0.0246128,441.552,418.25

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925369
  gflops (total): 117.443
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550381
  gflops (eval):  197.46
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550381,197.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.4036
  maximum absolute entry in einsum_ir solution: 63.4036
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138916
  time (eval):    0.0245351
  gflops (eval):  442.95
  gflops (total): 419.214
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138916,0.0245351,442.95,419.214

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922877
  gflops (total): 117.76
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549886
  gflops (eval):  197.638
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549886,197.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.2366
  maximum absolute entry in einsum_ir solution: 63.2366
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138676
  time (eval):    0.0245723
  gflops (eval):  442.279
  gflops (total): 418.652
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138676,0.0245723,442.279,418.652

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0935576
  gflops (total): 116.162
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563565
  gflops (eval):  192.841
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563565,192.841,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.9882
  maximum absolute entry in einsum_ir solution: 65.9882
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138173
  time (eval):    0.0244659
  gflops (eval):  444.203
  gflops (total): 420.457
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138173,0.0244659,444.203,420.457

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924942
  gflops (total): 117.497
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.05528
  gflops (eval):  196.596
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.05528,196.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1565
  maximum absolute entry in einsum_ir solution: 57.1565
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138467
  time (eval):    0.0245658
  gflops (eval):  442.397
  gflops (total): 418.791
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138467,0.0245658,442.397,418.791

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922795
  gflops (total): 117.771
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557326
  gflops (eval):  194.999
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557326,194.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6396
  maximum absolute entry in einsum_ir solution: 63.6396
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137986
  time (eval):    0.0245385
  gflops (eval):  442.888
  gflops (total): 419.309
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137986,0.0245385,442.888,419.309

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.092732
  gflops (total): 117.196
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556156
  gflops (eval):  195.41
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556156,195.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8082
  maximum absolute entry in einsum_ir solution: 59.8082
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137496
  time (eval):    0.0245946
  gflops (eval):  441.878
  gflops (total): 418.483
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137496,0.0245946,441.878,418.483

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922577
  gflops (total): 117.798
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553008
  gflops (eval):  196.522
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553008,196.522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1797
  maximum absolute entry in einsum_ir solution: 59.1797
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138806
  time (eval):    0.0245572
  gflops (eval):  442.551
  gflops (total): 418.874
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138806,0.0245572,442.551,418.874

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0920822
  gflops (total): 118.023
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.023

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559581
  gflops (eval):  194.213
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559581,194.213,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4942
  maximum absolute entry in einsum_ir solution: 61.4942
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137937
  time (eval):    0.0245773
  gflops (eval):  442.188
  gflops (total): 418.69
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137937,0.0245773,442.188,418.69

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929157
  gflops (total): 116.964
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0545584
  gflops (eval):  199.196
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0545584,199.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7949
  maximum absolute entry in einsum_ir solution: 59.7949
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136514
  time (eval):    0.0245967
  gflops (eval):  441.84
  gflops (total): 418.607
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136514,0.0245967,441.84,418.607

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924065
  gflops (total): 117.609
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554807
  gflops (eval):  195.885
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554807,195.885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0809
  maximum absolute entry in einsum_ir solution: 59.0809
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137952
  time (eval):    0.0245936
  gflops (eval):  441.895
  gflops (total): 418.425
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137952,0.0245936,441.895,418.425

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929772
  gflops (total): 116.887
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558026
  gflops (eval):  194.755
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558026,194.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5371
  maximum absolute entry in einsum_ir solution: 59.5371
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138651
  time (eval):    0.0245982
  gflops (eval):  441.814
  gflops (total): 418.239
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138651,0.0245982,441.814,418.239

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0919091
  gflops (total): 118.245
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562727
  gflops (eval):  193.128
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562727,193.128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7759
  maximum absolute entry in einsum_ir solution: 58.7759
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014203
  time (eval):    0.0245842
  gflops (eval):  442.065
  gflops (total): 417.92
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014203,0.0245842,442.065,417.92

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0927851
  gflops (total): 117.129
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563249
  gflops (eval):  192.949
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563249,192.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7135
  maximum absolute entry in einsum_ir solution: 59.7135
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138641
  time (eval):    0.0245556
  gflops (eval):  442.58
  gflops (total): 418.928
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138641,0.0245556,442.58,418.928

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922379
  gflops (total): 117.824
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551628
  gflops (eval):  197.014
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551628,197.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2892
  maximum absolute entry in einsum_ir solution: 56.2892
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138794
  time (eval):    0.0245861
  gflops (eval):  442.03
  gflops (total): 418.41
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138794,0.0245861,442.03,418.41

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925164
  gflops (total): 117.469
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552592
  gflops (eval):  196.67
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552592,196.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8826
  maximum absolute entry in einsum_ir solution: 58.8826
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137937
  time (eval):    0.0246136
  gflops (eval):  441.538
  gflops (total): 418.107
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137937,0.0246136,441.538,418.107

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0930392
  gflops (total): 116.809
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549014
  gflops (eval):  197.952
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549014,197.952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1151
  maximum absolute entry in einsum_ir solution: 59.1151
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137112
  time (eval):    0.024563
  gflops (eval):  442.447
  gflops (total): 419.055
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137112,0.024563,442.447,419.055

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0930545
  gflops (total): 116.79
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550432
  gflops (eval):  197.442
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550432,197.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6231
  maximum absolute entry in einsum_ir solution: 59.6231
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138662
  time (eval):    0.0245732
  gflops (eval):  442.262
  gflops (total): 418.639
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138662,0.0245732,442.262,418.639

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0919654
  gflops (total): 118.173
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549826
  gflops (eval):  197.659
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549826,197.659,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7876
  maximum absolute entry in einsum_ir solution: 58.7876
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144742
  time (eval):    0.0246118
  gflops (eval):  441.569
  gflops (total): 417.042
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144742,0.0246118,441.569,417.042

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0921714
  gflops (total): 117.909
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551961
  gflops (eval):  196.895
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551961,196.895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6722
  maximum absolute entry in einsum_ir solution: 57.6722
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137201
  time (eval):    0.0245699
  gflops (eval):  442.322
  gflops (total): 418.928
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137201,0.0245699,442.322,418.928

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0934726
  gflops (total): 116.267
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551571
  gflops (eval):  197.034
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551571,197.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8058
  maximum absolute entry in einsum_ir solution: 59.8058
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137695
  time (eval):    0.0245429
  gflops (eval):  442.809
  gflops (total): 419.285
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137695,0.0245429,442.809,419.285

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0923715
  gflops (total): 117.653
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551387
  gflops (eval):  197.1
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551387,197.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1814
  maximum absolute entry in einsum_ir solution: 56.1814
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137804
  time (eval):    0.024493
  gflops (eval):  443.711
  gflops (total): 420.077
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137804,0.024493,443.711,420.077

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0919319
  gflops (total): 118.216
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556746
  gflops (eval):  195.202
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556746,195.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8899
  maximum absolute entry in einsum_ir solution: 56.8899
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139069
  time (eval):    0.0245209
  gflops (eval):  443.206
  gflops (total): 419.419
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139069,0.0245209,443.206,419.419

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924433
  gflops (total): 117.562
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550242
  gflops (eval):  197.51
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550242,197.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8117
  maximum absolute entry in einsum_ir solution: 62.8117
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138781
  time (eval):    0.0246211
  gflops (eval):  441.403
  gflops (total): 417.85
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138781,0.0246211,441.403,417.85

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929395
  gflops (total): 116.934
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561024
  gflops (eval):  193.714
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561024,193.714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.1651
  maximum absolute entry in einsum_ir solution: 64.1651
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013694
  time (eval):    0.0244534
  gflops (eval):  444.429
  gflops (total): 420.861
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013694,0.0244534,444.429,420.861

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0940632
  gflops (total): 115.537
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,115.537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548808
  gflops (eval):  198.026
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548808,198.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5529
  maximum absolute entry in einsum_ir solution: 59.5529
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00168765
  time (eval):    0.0245846
  gflops (eval):  442.058
  gflops (total): 413.661
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00168765,0.0245846,442.058,413.661

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922632
  gflops (total): 117.792
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555224
  gflops (eval):  195.738
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555224,195.738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3335
  maximum absolute entry in einsum_ir solution: 61.3335
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00135233
  time (eval):    0.0245859
  gflops (eval):  442.035
  gflops (total): 418.989
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00135233,0.0245859,442.035,418.989

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925116
  gflops (total): 117.475
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055383
  gflops (eval):  196.23
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055383,196.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3616
  maximum absolute entry in einsum_ir solution: 58.3616
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145181
  time (eval):    0.0244945
  gflops (eval):  443.684
  gflops (total): 418.858
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145181,0.0244945,443.684,418.858

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929746
  gflops (total): 116.89
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558857
  gflops (eval):  194.465
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558857,194.465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3167
  maximum absolute entry in einsum_ir solution: 60.3167
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137846
  time (eval):    0.024458
  gflops (eval):  444.346
  gflops (total): 420.638
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137846,0.024458,444.346,420.638

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929135
  gflops (total): 116.967
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552621
  gflops (eval):  196.66
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552621,196.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2866
  maximum absolute entry in einsum_ir solution: 62.2866
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137527
  time (eval):    0.0246167
  gflops (eval):  441.482
  gflops (total): 418.122
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137527,0.0246167,441.482,418.122

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924761
  gflops (total): 117.52
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557642
  gflops (eval):  194.889
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557642,194.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.085
  maximum absolute entry in einsum_ir solution: 60.085
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150246
  time (eval):    0.024469
  gflops (eval):  444.147
  gflops (total): 418.453
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150246,0.024469,444.147,418.453

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0916013
  gflops (total): 118.643
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0543767
  gflops (eval):  199.862
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0543767,199.862,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5607
  maximum absolute entry in einsum_ir solution: 57.5607
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138581
  time (eval):    0.0244777
  gflops (eval):  443.989
  gflops (total): 420.199
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138581,0.0244777,443.989,420.199

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0920417
  gflops (total): 118.075
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0545808
  gflops (eval):  199.114
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0545808,199.114,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5056
  maximum absolute entry in einsum_ir solution: 56.5056
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137716
  time (eval):    0.0245747
  gflops (eval):  442.236
  gflops (total): 418.768
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137716,0.0245747,442.236,418.768

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0927401
  gflops (total): 117.186
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549123
  gflops (eval):  197.912
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549123,197.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5281
  maximum absolute entry in einsum_ir solution: 60.5281
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013788
  time (eval):    0.0245365
  gflops (eval):  442.924
  gflops (total): 419.359
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013788,0.0245365,442.924,419.359

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0932297
  gflops (total): 116.57
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563053
  gflops (eval):  193.016
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563053,193.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8361
  maximum absolute entry in einsum_ir solution: 59.8361
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137528
  time (eval):    0.0244676
  gflops (eval):  444.172
  gflops (total): 420.535
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137528,0.0244676,444.172,420.535

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0937393
  gflops (total): 115.937
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,115.937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553598
  gflops (eval):  196.312
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553598,196.312,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7702
  maximum absolute entry in einsum_ir solution: 57.7702
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138302
  time (eval):    0.0244909
  gflops (eval):  443.749
  gflops (total): 420.03
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138302,0.0244909,443.749,420.03

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0932663
  gflops (total): 116.525
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0547158
  gflops (eval):  198.623
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0547158,198.623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0969
  maximum absolute entry in einsum_ir solution: 58.0969
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140556
  time (eval):    0.0245402
  gflops (eval):  442.857
  gflops (total): 418.866
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140556,0.0245402,442.857,418.866

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0919286
  gflops (total): 118.22
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549547
  gflops (eval):  197.76
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549547,197.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8351
  maximum absolute entry in einsum_ir solution: 57.8351
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138025
  time (eval):    0.0245913
  gflops (eval):  441.938
  gflops (total): 418.451
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138025,0.0245913,441.938,418.451

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925999
  gflops (total): 117.363
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562945
  gflops (eval):  193.053
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562945,193.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3699
  maximum absolute entry in einsum_ir solution: 56.3699
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136622
  time (eval):    0.0245005
  gflops (eval):  443.575
  gflops (total): 420.146
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136622,0.0245005,443.575,420.146

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922256
  gflops (total): 117.84
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0545751
  gflops (eval):  199.135
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0545751,199.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.823
  maximum absolute entry in einsum_ir solution: 61.823
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139626
  time (eval):    0.0246303
  gflops (eval):  441.237
  gflops (total): 417.566
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139626,0.0246303,441.237,417.566

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929092
  gflops (total): 116.973
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550967
  gflops (eval):  197.25
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550967,197.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0045
  maximum absolute entry in einsum_ir solution: 57.0045
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137218
  time (eval):    0.0245214
  gflops (eval):  443.197
  gflops (total): 419.711
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137218,0.0245214,443.197,419.711

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.092282
  gflops (total): 117.767
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550939
  gflops (eval):  197.26
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550939,197.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7589
  maximum absolute entry in einsum_ir solution: 53.7589
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136574
  time (eval):    0.0246229
  gflops (eval):  441.37
  gflops (total): 418.175
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136574,0.0246229,441.37,418.175

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0933082
  gflops (total): 116.472
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055173
  gflops (eval):  196.977
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055173,196.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5965
  maximum absolute entry in einsum_ir solution: 59.5965
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138043
  time (eval):    0.0245039
  gflops (eval):  443.513
  gflops (total): 419.86
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138043,0.0245039,443.513,419.86

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0923225
  gflops (total): 117.716
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560866
  gflops (eval):  193.768
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560866,193.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.572
  maximum absolute entry in einsum_ir solution: 55.572
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138445
  time (eval):    0.024536
  gflops (eval):  442.934
  gflops (total): 419.276
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138445,0.024536,442.934,419.276

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.092377
  gflops (total): 117.646
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0546726
  gflops (eval):  198.78
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0546726,198.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.7852
  maximum absolute entry in einsum_ir solution: 67.7852
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139359
  time (eval):    0.0245674
  gflops (eval):  442.367
  gflops (total): 418.621
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139359,0.0245674,442.367,418.621

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0932727
  gflops (total): 116.517
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551501
  gflops (eval):  197.059
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551501,197.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5913
  maximum absolute entry in einsum_ir solution: 60.5913
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013708
  time (eval):    0.0244432
  gflops (eval):  444.615
  gflops (total): 421.005
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013708,0.0244432,444.615,421.005

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0921033
  gflops (total): 117.996
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555352
  gflops (eval):  195.692
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555352,195.692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0641
  maximum absolute entry in einsum_ir solution: 57.0641
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013786
  time (eval):    0.0245573
  gflops (eval):  442.549
  gflops (total): 419.026
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013786,0.0245573,442.549,419.026

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0926975
  gflops (total): 117.24
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.054926
  gflops (eval):  197.863
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.054926,197.863,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.75
  maximum absolute entry in einsum_ir solution: 59.75
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137744
  time (eval):    0.0245473
  gflops (eval):  442.73
  gflops (total): 419.207
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137744,0.0245473,442.73,419.207

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0928181
  gflops (total): 117.087
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559102
  gflops (eval):  194.38
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559102,194.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6616
  maximum absolute entry in einsum_ir solution: 59.6616
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136711
  time (eval):    0.0245949
  gflops (eval):  441.873
  gflops (total): 418.605
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136711,0.0245949,441.873,418.605

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929987
  gflops (total): 116.86
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552784
  gflops (eval):  196.601
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552784,196.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8747
  maximum absolute entry in einsum_ir solution: 61.8747
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137328
  time (eval):    0.0245213
  gflops (eval):  443.2
  gflops (total): 419.695
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137328,0.0245213,443.2,419.695

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0920921
  gflops (total): 118.01
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0544996
  gflops (eval):  199.411
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0544996,199.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2336
  maximum absolute entry in einsum_ir solution: 60.2336
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137554
  time (eval):    0.0244701
  gflops (eval):  444.126
  gflops (total): 420.489
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137554,0.0244701,444.126,420.489

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925106
  gflops (total): 117.477
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562214
  gflops (eval):  193.304
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562214,193.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.9824
  maximum absolute entry in einsum_ir solution: 62.9824
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140478
  time (eval):    0.0246377
  gflops (eval):  441.105
  gflops (total): 417.311
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140478,0.0246377,441.105,417.311

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0919967
  gflops (total): 118.133
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553271
  gflops (eval):  196.428
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553271,196.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1901
  maximum absolute entry in einsum_ir solution: 59.1901
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138251
  time (eval):    0.0245311
  gflops (eval):  443.022
  gflops (total): 419.386
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138251,0.0245311,443.022,419.386

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929619
  gflops (total): 116.906
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556071
  gflops (eval):  195.439
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556071,195.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0612
  maximum absolute entry in einsum_ir solution: 57.0612
  maximum element-wise difference:              3.24249e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142968
  time (eval):    0.0245571
  gflops (eval):  442.552
  gflops (total): 418.205
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142968,0.0245571,442.552,418.205

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.09197
  gflops (total): 118.167
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549349
  gflops (eval):  197.831
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549349,197.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6069
  maximum absolute entry in einsum_ir solution: 59.6069
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138895
  time (eval):    0.0246073
  gflops (eval):  441.65
  gflops (total): 418.053
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138895,0.0246073,441.65,418.053

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0924007
  gflops (total): 117.616
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055301
  gflops (eval):  196.521
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055301,196.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5686
  maximum absolute entry in einsum_ir solution: 58.5686
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140036
  time (eval):    0.0245103
  gflops (eval):  443.398
  gflops (total): 419.434
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140036,0.0245103,443.398,419.434

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0928002
  gflops (total): 117.11
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561402
  gflops (eval):  193.584
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561402,193.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2637
  maximum absolute entry in einsum_ir solution: 61.2637
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138157
  time (eval):    0.0245917
  gflops (eval):  441.931
  gflops (total): 418.424
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138157,0.0245917,441.931,418.424

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0927643
  gflops (total): 117.155
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551606
  gflops (eval):  197.021
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551606,197.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7523
  maximum absolute entry in einsum_ir solution: 60.7523
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013933
  time (eval):    0.0244502
  gflops (eval):  444.488
  gflops (total): 420.524
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013933,0.0244502,444.488,420.524

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922472
  gflops (total): 117.812
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554388
  gflops (eval):  196.033
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554388,196.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4064
  maximum absolute entry in einsum_ir solution: 60.4064
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137786
  time (eval):    0.0244883
  gflops (eval):  443.797
  gflops (total): 420.156
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137786,0.0244883,443.797,420.156

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0933563
  gflops (total): 116.412
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554498
  gflops (eval):  195.994
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554498,195.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1286
  maximum absolute entry in einsum_ir solution: 62.1286
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143433
  time (eval):    0.0245707
  gflops (eval):  442.309
  gflops (total): 417.913
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143433,0.0245707,442.309,417.913

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.093409
  gflops (total): 116.347
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559476
  gflops (eval):  194.25
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559476,194.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4679
  maximum absolute entry in einsum_ir solution: 58.4679
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137652
  time (eval):    0.0245926
  gflops (eval):  441.915
  gflops (total): 418.491
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137652,0.0245926,441.915,418.491

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0921341
  gflops (total): 117.957
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560918
  gflops (eval):  193.751
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560918,193.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1477
  maximum absolute entry in einsum_ir solution: 59.1477
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137104
  time (eval):    0.0245161
  gflops (eval):  443.294
  gflops (total): 419.816
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137104,0.0245161,443.294,419.816

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0926849
  gflops (total): 117.256
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.256

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549365
  gflops (eval):  197.825
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549365,197.825,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0467
  maximum absolute entry in einsum_ir solution: 62.0467
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138252
  time (eval):    0.0244526
  gflops (eval):  444.443
  gflops (total): 420.66
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138252,0.0244526,444.443,420.66

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925756
  gflops (total): 117.394
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558813
  gflops (eval):  194.481
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558813,194.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0499
  maximum absolute entry in einsum_ir solution: 60.0499
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137232
  time (eval):    0.0245906
  gflops (eval):  441.95
  gflops (total): 418.59
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137232,0.0245906,441.95,418.59

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0925091
  gflops (total): 117.478
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055126
  gflops (eval):  197.145
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055126,197.145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4854
  maximum absolute entry in einsum_ir solution: 60.4854
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137873
  time (eval):    0.0244589
  gflops (eval):  444.331
  gflops (total): 420.62
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137873,0.0244589,444.331,420.62

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.091708
  gflops (total): 118.505
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548637
  gflops (eval):  198.088
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548637,198.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6905
  maximum absolute entry in einsum_ir solution: 57.6905
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00165567
  time (eval):    0.0270873
  gflops (eval):  401.215
  gflops (total): 378.104
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00165567,0.0270873,401.215,378.104

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0929053
  gflops (total): 116.977
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,116.977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549931
  gflops (eval):  197.622
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549931,197.622,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.848
  maximum absolute entry in einsum_ir solution: 58.848
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00165369
  time (eval):    0.0245756
  gflops (eval):  442.221
  gflops (total): 414.34
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00165369,0.0245756,442.221,414.34

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0926277
  gflops (total): 117.328
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553695
  gflops (eval):  196.278
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553695,196.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.657
  maximum absolute entry in einsum_ir solution: 59.657
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138988
  time (eval):    0.0245682
  gflops (eval):  442.353
  gflops (total): 418.668
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138988,0.0245682,442.353,418.668

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0922751
  gflops (total): 117.776
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556099
  gflops (eval):  195.429
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556099,195.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.3966
  maximum absolute entry in einsum_ir solution: 66.3966
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0018995
  time (eval):    0.0244387
  gflops (eval):  444.697
  gflops (total): 412.626
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0018995,0.0244387,444.697,412.626

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0918718
  gflops (total): 118.293
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555408
  gflops (eval):  195.673
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555408,195.673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3911
  maximum absolute entry in einsum_ir solution: 57.3911
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136672
  time (eval):    0.0246536
  gflops (eval):  440.821
  gflops (total): 417.666
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136672,0.0246536,440.821,417.666

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0926875
  gflops (total): 117.252
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0545573
  gflops (eval):  199.2
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0545573,199.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1984
  maximum absolute entry in einsum_ir solution: 61.1984
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140736
  time (eval):    0.024536
  gflops (eval):  442.934
  gflops (total): 418.906
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140736,0.024536,442.934,418.906

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0926204
  gflops (total): 117.337
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,117.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549323
  gflops (eval):  197.84
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549323,197.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0363
  maximum absolute entry in einsum_ir solution: 61.0363
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138929
  time (eval):    0.0118023
  gflops (eval):  920.824
  gflops (total): 823.846
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138929,0.0118023,920.824,823.846

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0981521
  gflops (total): 110.724
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550867
  gflops (eval):  197.286
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550867,197.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5941
  maximum absolute entry in einsum_ir solution: 57.5941
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137464
  time (eval):    0.0118512
  gflops (eval):  917.024
  gflops (total): 821.712
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137464,0.0118512,917.024,821.712

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0992331
  gflops (total): 109.518
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558012
  gflops (eval):  194.76
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558012,194.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4988
  maximum absolute entry in einsum_ir solution: 61.4988
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138308
  time (eval):    0.0118784
  gflops (eval):  914.924
  gflops (total): 819.504
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138308,0.0118784,914.924,819.504

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0989338
  gflops (total): 109.849
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548572
  gflops (eval):  198.111
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548572,198.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0999
  maximum absolute entry in einsum_ir solution: 56.0999
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143371
  time (eval):    0.0118651
  gflops (eval):  915.949
  gflops (total): 817.203
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143371,0.0118651,915.949,817.203

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0978412
  gflops (total): 111.076
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556461
  gflops (eval):  195.303
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556461,195.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2869
  maximum absolute entry in einsum_ir solution: 58.2869
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138518
  time (eval):    0.0118388
  gflops (eval):  917.98
  gflops (total): 821.824
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138518,0.0118388,917.98,821.824

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0987024
  gflops (total): 110.107
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558814
  gflops (eval):  194.48
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558814,194.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.694
  maximum absolute entry in einsum_ir solution: 58.694
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137865
  time (eval):    0.0118256
  gflops (eval):  919.008
  gflops (total): 823.055
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137865,0.0118256,919.008,823.055

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0997336
  gflops (total): 108.968
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055567
  gflops (eval):  195.581
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055567,195.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9094
  maximum absolute entry in einsum_ir solution: 55.9094
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137891
  time (eval):    0.0118129
  gflops (eval):  919.999
  gflops (total): 823.833
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137891,0.0118129,919.999,823.833

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0983197
  gflops (total): 110.536
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558546
  gflops (eval):  194.574
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558546,194.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.601
  maximum absolute entry in einsum_ir solution: 60.601
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013853
  time (eval):    0.0118348
  gflops (eval):  918.296
  gflops (total): 822.07
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013853,0.0118348,918.296,822.07

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.098984
  gflops (total): 109.794
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563732
  gflops (eval):  192.783
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563732,192.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9626
  maximum absolute entry in einsum_ir solution: 55.9626
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00152412
  time (eval):    0.0119491
  gflops (eval):  909.512
  gflops (total): 806.626
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00152412,0.0119491,909.512,806.626

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0981308
  gflops (total): 110.748
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550438
  gflops (eval):  197.439
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550438,197.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.8994
  maximum absolute entry in einsum_ir solution: 65.8994
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142319
  time (eval):    0.0118741
  gflops (eval):  915.256
  gflops (total): 817.297
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142319,0.0118741,915.256,817.297

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0987872
  gflops (total): 110.012
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556966
  gflops (eval):  195.125
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556966,195.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9516
  maximum absolute entry in einsum_ir solution: 59.9516
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136005
  time (eval):    0.0119392
  gflops (eval):  910.261
  gflops (total): 817.173
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136005,0.0119392,910.261,817.173

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0998128
  gflops (total): 108.882
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562653
  gflops (eval):  193.153
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562653,193.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      73.0812
  maximum absolute entry in einsum_ir solution: 73.0812
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138119
  time (eval):    0.0117972
  gflops (eval):  921.222
  gflops (total): 824.671
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138119,0.0117972,921.222,824.671

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0993151
  gflops (total): 109.428
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556595
  gflops (eval):  195.256
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556595,195.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8104
  maximum absolute entry in einsum_ir solution: 61.8104
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137562
  time (eval):    0.011789
  gflops (eval):  921.859
  gflops (total): 825.531
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137562,0.011789,921.859,825.531

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0985147
  gflops (total): 110.317
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555596
  gflops (eval):  195.606
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555596,195.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.446
  maximum absolute entry in einsum_ir solution: 57.446
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138092
  time (eval):    0.0118703
  gflops (eval):  915.55
  gflops (total): 820.14
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138092,0.0118703,915.55,820.14

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0994993
  gflops (total): 109.225
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548598
  gflops (eval):  198.102
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548598,198.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4914
  maximum absolute entry in einsum_ir solution: 58.4914
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013629
  time (eval):    0.0117971
  gflops (eval):  921.23
  gflops (total): 825.824
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013629,0.0117971,921.23,825.824

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0976913
  gflops (total): 111.247
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550972
  gflops (eval):  197.248
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550972,197.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.4346
  maximum absolute entry in einsum_ir solution: 65.4346
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138073
  time (eval):    0.0118255
  gflops (eval):  919.019
  gflops (total): 822.934
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138073,0.0118255,919.019,822.934

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0978511
  gflops (total): 111.065
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554994
  gflops (eval):  195.819
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554994,195.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.3145
  maximum absolute entry in einsum_ir solution: 65.3145
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136953
  time (eval):    0.0118249
  gflops (eval):  919.06
  gflops (total): 823.666
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136953,0.0118249,919.06,823.666

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.100125
  gflops (total): 108.542
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560445
  gflops (eval):  193.914
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560445,193.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9233
  maximum absolute entry in einsum_ir solution: 59.9233
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137844
  time (eval):    0.0118643
  gflops (eval):  916.007
  gflops (total): 820.66
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137844,0.0118643,916.007,820.66

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0978834
  gflops (total): 111.028
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558171
  gflops (eval):  194.704
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558171,194.704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.683
  maximum absolute entry in einsum_ir solution: 57.683
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136931
  time (eval):    0.0118411
  gflops (eval):  917.803
  gflops (total): 822.669
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136931,0.0118411,917.803,822.669

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0977937
  gflops (total): 111.13
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0545661
  gflops (eval):  199.168
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0545661,199.168,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.427
  maximum absolute entry in einsum_ir solution: 58.427
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00154596
  time (eval):    0.0118772
  gflops (eval):  915.016
  gflops (total): 809.633
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00154596,0.0118772,915.016,809.633

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0985226
  gflops (total): 110.308
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055424
  gflops (eval):  196.085
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055424,196.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3444
  maximum absolute entry in einsum_ir solution: 62.3444
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137351
  time (eval):    0.0118051
  gflops (eval):  920.6
  gflops (total): 824.653
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137351,0.0118051,920.6,824.653

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0980623
  gflops (total): 110.826
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553859
  gflops (eval):  196.22
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553859,196.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.502
  maximum absolute entry in einsum_ir solution: 58.502
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140111
  time (eval):    0.0118665
  gflops (eval):  915.842
  gflops (total): 819.125
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140111,0.0118665,915.842,819.125

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0990301
  gflops (total): 109.743
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557951
  gflops (eval):  194.781
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557951,194.781,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.021
  maximum absolute entry in einsum_ir solution: 57.021
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136331
  time (eval):    0.0118931
  gflops (eval):  913.793
  gflops (total): 819.817
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136331,0.0118931,913.793,819.817

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0985304
  gflops (total): 110.299
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552185
  gflops (eval):  196.815
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552185,196.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.0819
  maximum absolute entry in einsum_ir solution: 65.0819
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013629
  time (eval):    0.0118244
  gflops (eval):  919.104
  gflops (total): 824.115
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013629,0.0118244,919.104,824.115

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0983428
  gflops (total): 110.51
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553666
  gflops (eval):  196.288
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553666,196.288,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.8613
  maximum absolute entry in einsum_ir solution: 63.8613
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136966
  time (eval):    0.0118614
  gflops (eval):  916.238
  gflops (total): 821.39
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136966,0.0118614,916.238,821.39

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0979706
  gflops (total): 110.929
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552175
  gflops (eval):  196.819
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552175,196.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8902
  maximum absolute entry in einsum_ir solution: 60.8902
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137852
  time (eval):    0.0123837
  gflops (eval):  877.588
  gflops (total): 789.683
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137852,0.0123837,877.588,789.683

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0995194
  gflops (total): 109.203
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056338
  gflops (eval):  192.904
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056338,192.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6329
  maximum absolute entry in einsum_ir solution: 60.6329
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138603
  time (eval):    0.0118136
  gflops (eval):  919.942
  gflops (total): 823.343
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138603,0.0118136,919.942,823.343

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0978094
  gflops (total): 111.112
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553547
  gflops (eval):  196.331
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553547,196.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2679
  maximum absolute entry in einsum_ir solution: 59.2679
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013733
  time (eval):    0.0118116
  gflops (eval):  920.101
  gflops (total): 824.265
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013733,0.0118116,920.101,824.265

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0985285
  gflops (total): 110.301
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559764
  gflops (eval):  194.15
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559764,194.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0743
  maximum absolute entry in einsum_ir solution: 59.0743
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140826
  time (eval):    0.0118208
  gflops (eval):  919.382
  gflops (total): 821.511
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140826,0.0118208,919.382,821.511

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0993142
  gflops (total): 109.429
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549904
  gflops (eval):  197.631
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549904,197.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0896
  maximum absolute entry in einsum_ir solution: 57.0896
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136702
  time (eval):    0.0118533
  gflops (eval):  916.862
  gflops (total): 822.055
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136702,0.0118533,916.862,822.055

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0990539
  gflops (total): 109.716
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554726
  gflops (eval):  195.913
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554726,195.913,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8722
  maximum absolute entry in einsum_ir solution: 59.8722
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138411
  time (eval):    0.0118498
  gflops (eval):  917.132
  gflops (total): 821.211
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138411,0.0118498,917.132,821.211

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0977938
  gflops (total): 111.13
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559885
  gflops (eval):  194.108
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559885,194.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0275
  maximum absolute entry in einsum_ir solution: 57.0275
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136652
  time (eval):    0.011848
  gflops (eval):  917.271
  gflops (total): 822.415
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136652,0.011848,917.271,822.415

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0980025
  gflops (total): 110.893
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.893

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548448
  gflops (eval):  198.156
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548448,198.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1116
  maximum absolute entry in einsum_ir solution: 62.1116
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139124
  time (eval):    0.0118268
  gflops (eval):  918.912
  gflops (total): 822.194
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139124,0.0118268,918.912,822.194

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0987412
  gflops (total): 110.064
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554236
  gflops (eval):  196.086
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554236,196.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.915
  maximum absolute entry in einsum_ir solution: 59.915
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138405
  time (eval):    0.0118355
  gflops (eval):  918.239
  gflops (total): 822.102
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138405,0.0118355,918.239,822.102

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0982432
  gflops (total): 110.622
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560642
  gflops (eval):  193.846
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560642,193.846,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6885
  maximum absolute entry in einsum_ir solution: 55.6885
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137605
  time (eval):    0.0117843
  gflops (eval):  922.228
  gflops (total): 825.799
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137605,0.0117843,922.228,825.799

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0990408
  gflops (total): 109.731
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560293
  gflops (eval):  193.967
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560293,193.967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8233
  maximum absolute entry in einsum_ir solution: 58.8233
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138335
  time (eval):    0.0118358
  gflops (eval):  918.218
  gflops (total): 822.129
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138335,0.0118358,918.218,822.129

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.098092
  gflops (total): 110.792
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553569
  gflops (eval):  196.323
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553569,196.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9974
  maximum absolute entry in einsum_ir solution: 58.9974
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136264
  time (eval):    0.0118674
  gflops (eval):  915.775
  gflops (total): 821.453
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136264,0.0118674,915.775,821.453

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0987578
  gflops (total): 110.045
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553146
  gflops (eval):  196.473
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553146,196.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5855
  maximum absolute entry in einsum_ir solution: 57.5855
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138537
  time (eval):    0.011858
  gflops (eval):  916.496
  gflops (total): 820.623
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138537,0.011858,916.496,820.623

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0982323
  gflops (total): 110.634
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0544955
  gflops (eval):  199.426
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0544955,199.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1887
  maximum absolute entry in einsum_ir solution: 61.1887
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137299
  time (eval):    0.0118152
  gflops (eval):  919.815
  gflops (total): 824.055
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137299,0.0118152,919.815,824.055

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.098932
  gflops (total): 109.851
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0546628
  gflops (eval):  198.816
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0546628,198.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8123
  maximum absolute entry in einsum_ir solution: 55.8123
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138237
  time (eval):    0.0118052
  gflops (eval):  920.599
  gflops (total): 824.098
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138237,0.0118052,920.599,824.098

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0993972
  gflops (total): 109.337
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559548
  gflops (eval):  194.225
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559548,194.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3836
  maximum absolute entry in einsum_ir solution: 61.3836
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138732
  time (eval):    0.0118388
  gflops (eval):  917.987
  gflops (total): 821.697
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138732,0.0118388,917.987,821.697

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0977107
  gflops (total): 111.224
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.224

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549521
  gflops (eval):  197.769
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549521,197.769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0575
  maximum absolute entry in einsum_ir solution: 58.0575
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139189
  time (eval):    0.0118508
  gflops (eval):  917.057
  gflops (total): 820.668
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139189,0.0118508,917.057,820.668

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0983771
  gflops (total): 110.471
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564834
  gflops (eval):  192.407
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564834,192.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0627
  maximum absolute entry in einsum_ir solution: 61.0627
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013752
  time (eval):    0.011859
  gflops (eval):  916.423
  gflops (total): 821.195
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013752,0.011859,916.423,821.195

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.098219
  gflops (total): 110.649
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0547626
  gflops (eval):  198.453
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0547626,198.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.8582
  maximum absolute entry in einsum_ir solution: 64.8582
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00133827
  time (eval):    0.0118541
  gflops (eval):  916.799
  gflops (total): 823.796
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00133827,0.0118541,916.799,823.796

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0981705
  gflops (total): 110.704
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.704

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552464
  gflops (eval):  196.716
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552464,196.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7958
  maximum absolute entry in einsum_ir solution: 58.7958
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137328
  time (eval):    0.0117747
  gflops (eval):  922.98
  gflops (total): 826.577
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137328,0.0117747,922.98,826.577

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.097778
  gflops (total): 111.148
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551488
  gflops (eval):  197.064
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551488,197.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1285
  maximum absolute entry in einsum_ir solution: 58.1285
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138057
  time (eval):    0.0118393
  gflops (eval):  917.943
  gflops (total): 822.081
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138057,0.0118393,917.943,822.081

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0986512
  gflops (total): 110.164
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554959
  gflops (eval):  195.831
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554959,195.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.6558
  maximum absolute entry in einsum_ir solution: 62.6558
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00165486
  time (eval):    0.0118534
  gflops (eval):  916.855
  gflops (total): 804.534
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00165486,0.0118534,916.855,804.534

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0981513
  gflops (total): 110.725
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548985
  gflops (eval):  197.962
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548985,197.962,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5019
  maximum absolute entry in einsum_ir solution: 61.5019
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013647
  time (eval):    0.0117876
  gflops (eval):  921.972
  gflops (total): 826.307
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013647,0.0117876,921.972,826.307

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0994277
  gflops (total): 109.304
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564968
  gflops (eval):  192.362
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564968,192.362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0367
  maximum absolute entry in einsum_ir solution: 58.0367
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0014045
  time (eval):    0.0118409
  gflops (eval):  917.823
  gflops (total): 820.5
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0014045,0.0118409,917.823,820.5

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0983057
  gflops (total): 110.551
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0545549
  gflops (eval):  199.209
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0545549,199.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1528
  maximum absolute entry in einsum_ir solution: 57.1528
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140993
  time (eval):    0.0118437
  gflops (eval):  917.605
  gflops (total): 819.989
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140993,0.0118437,917.605,819.989

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0982848
  gflops (total): 110.575
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555758
  gflops (eval):  195.55
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555758,195.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0735
  maximum absolute entry in einsum_ir solution: 60.0735
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137911
  time (eval):    0.0118536
  gflops (eval):  916.835
  gflops (total): 821.282
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137911,0.0118536,916.835,821.282

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0991802
  gflops (total): 109.576
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551975
  gflops (eval):  196.89
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551975,196.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.7138
  maximum absolute entry in einsum_ir solution: 63.7138
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001528
  time (eval):    0.0118421
  gflops (eval):  917.727
  gflops (total): 812.845
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.001528,0.0118421,917.727,812.845

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0992068
  gflops (total): 109.547
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0542961
  gflops (eval):  200.158
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0542961,200.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.0642
  maximum absolute entry in einsum_ir solution: 65.0642
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137727
  time (eval):    0.0117804
  gflops (eval):  922.531
  gflops (total): 825.966
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137727,0.0117804,922.531,825.966

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0989174
  gflops (total): 109.868
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559023
  gflops (eval):  194.407
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559023,194.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.556
  maximum absolute entry in einsum_ir solution: 62.556
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138815
  time (eval):    0.0117975
  gflops (eval):  921.193
  gflops (total): 824.213
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138815,0.0117975,921.193,824.213

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0978034
  gflops (total): 111.119
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549792
  gflops (eval):  197.671
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549792,197.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4977
  maximum absolute entry in einsum_ir solution: 59.4977
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137796
  time (eval):    0.011841
  gflops (eval):  917.81
  gflops (total): 822.137
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137796,0.011841,917.81,822.137

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0984853
  gflops (total): 110.35
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552647
  gflops (eval):  196.65
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552647,196.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6478
  maximum absolute entry in einsum_ir solution: 59.6478
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144018
  time (eval):    0.0118514
  gflops (eval):  917.008
  gflops (total): 817.647
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144018,0.0118514,917.008,817.647

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0991807
  gflops (total): 109.576
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0547539
  gflops (eval):  198.485
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0547539,198.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1123
  maximum absolute entry in einsum_ir solution: 55.1123
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142273
  time (eval):    0.0118623
  gflops (eval):  916.165
  gflops (total): 818.051
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142273,0.0118623,916.165,818.051

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.10162
  gflops (total): 106.946
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,106.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055369
  gflops (eval):  196.28
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055369,196.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5628
  maximum absolute entry in einsum_ir solution: 58.5628
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138625
  time (eval):    0.01186
  gflops (eval):  916.345
  gflops (total): 820.447
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138625,0.01186,916.345,820.447

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0989798
  gflops (total): 109.798
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551914
  gflops (eval):  196.912
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551914,196.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6002
  maximum absolute entry in einsum_ir solution: 59.6002
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136747
  time (eval):    0.0118586
  gflops (eval):  916.453
  gflops (total): 821.699
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136747,0.0118586,916.453,821.699

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0988686
  gflops (total): 109.922
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551295
  gflops (eval):  197.133
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551295,197.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.643
  maximum absolute entry in einsum_ir solution: 59.643
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138306
  time (eval):    0.0118393
  gflops (eval):  917.945
  gflops (total): 821.928
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138306,0.0118393,917.945,821.928

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0992919
  gflops (total): 109.453
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554598
  gflops (eval):  195.958
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554598,195.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5557
  maximum absolute entry in einsum_ir solution: 62.5557
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139057
  time (eval):    0.0118316
  gflops (eval):  918.541
  gflops (total): 821.938
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139057,0.0118316,918.541,821.938

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0973983
  gflops (total): 111.581
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557181
  gflops (eval):  195.05
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557181,195.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0931
  maximum absolute entry in einsum_ir solution: 58.0931
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137507
  time (eval):    0.011772
  gflops (eval):  923.19
  gflops (total): 826.632
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137507,0.011772,923.19,826.632

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0984855
  gflops (total): 110.349
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.349

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551485
  gflops (eval):  197.065
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551485,197.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3868
  maximum absolute entry in einsum_ir solution: 59.3868
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138042
  time (eval):    0.0118173
  gflops (eval):  919.652
  gflops (total): 823.461
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138042,0.0118173,919.652,823.461

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0992668
  gflops (total): 109.481
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551374
  gflops (eval):  197.104
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551374,197.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3712
  maximum absolute entry in einsum_ir solution: 59.3712
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137799
  time (eval):    0.0118329
  gflops (eval):  918.445
  gflops (total): 822.644
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137799,0.0118329,918.445,822.644

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0978967
  gflops (total): 111.013
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550814
  gflops (eval):  197.305
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550814,197.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9653
  maximum absolute entry in einsum_ir solution: 61.9653
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137128
  time (eval):    0.011823
  gflops (eval):  919.207
  gflops (total): 823.674
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137128,0.011823,919.207,823.674

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0985695
  gflops (total): 110.255
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554546
  gflops (eval):  195.977
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554546,195.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2219
  maximum absolute entry in einsum_ir solution: 60.2219
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138834
  time (eval):    0.0118416
  gflops (eval):  917.765
  gflops (total): 821.456
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138834,0.0118416,917.765,821.456

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0989803
  gflops (total): 109.798
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557425
  gflops (eval):  194.965
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557425,194.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5562
  maximum absolute entry in einsum_ir solution: 57.5562
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136288
  time (eval):    0.0118914
  gflops (eval):  913.922
  gflops (total): 819.948
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136288,0.0118914,913.922,819.948

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0979947
  gflops (total): 110.902
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549641
  gflops (eval):  197.726
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549641,197.726,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5771
  maximum absolute entry in einsum_ir solution: 58.5771
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138307
  time (eval):    0.0118075
  gflops (eval):  920.42
  gflops (total): 823.911
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138307,0.0118075,920.42,823.911

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0990057
  gflops (total): 109.77
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555785
  gflops (eval):  195.54
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555785,195.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1904
  maximum absolute entry in einsum_ir solution: 55.1904
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00173083
  time (eval):    0.0118386
  gflops (eval):  918
  gflops (total): 800.905
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00173083,0.0118386,918,800.905

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0990873
  gflops (total): 109.679
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549226
  gflops (eval):  197.875
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549226,197.875,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4491
  maximum absolute entry in einsum_ir solution: 61.4491
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136571
  time (eval):    0.0118821
  gflops (eval):  914.636
  gflops (total): 820.347
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136571,0.0118821,914.636,820.347

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0984065
  gflops (total): 110.438
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556181
  gflops (eval):  195.401
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556181,195.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6975
  maximum absolute entry in einsum_ir solution: 56.6975
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138091
  time (eval):    0.0118167
  gflops (eval):  919.697
  gflops (total): 823.467
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138091,0.0118167,919.697,823.467

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0982111
  gflops (total): 110.658
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560446
  gflops (eval):  193.914
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560446,193.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4932
  maximum absolute entry in einsum_ir solution: 61.4932
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137528
  time (eval):    0.0117787
  gflops (eval):  922.664
  gflops (total): 826.198
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137528,0.0117787,922.664,826.198

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0989388
  gflops (total): 109.844
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.844

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559437
  gflops (eval):  194.263
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559437,194.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.722
  maximum absolute entry in einsum_ir solution: 59.722
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136977
  time (eval):    0.0118637
  gflops (eval):  916.056
  gflops (total): 821.237
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136977,0.0118637,916.056,821.237

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0987924
  gflops (total): 110.007
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055814
  gflops (eval):  194.715
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055814,194.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4973
  maximum absolute entry in einsum_ir solution: 57.4973
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138027
  time (eval):    0.011831
  gflops (eval):  918.585
  gflops (total): 822.615
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138027,0.011831,918.585,822.615

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0996741
  gflops (total): 109.034
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557838
  gflops (eval):  194.82
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557838,194.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7485
  maximum absolute entry in einsum_ir solution: 58.7485
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136941
  time (eval):    0.0118436
  gflops (eval):  917.613
  gflops (total): 822.51
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136941,0.0118436,917.613,822.51

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0999077
  gflops (total): 108.779
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,108.779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055667
  gflops (eval):  195.229
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055667,195.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4183
  maximum absolute entry in einsum_ir solution: 61.4183
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140607
  time (eval):    0.0118203
  gflops (eval):  919.418
  gflops (total): 821.677
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140607,0.0118203,919.418,821.677

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0976216
  gflops (total): 111.326
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549203
  gflops (eval):  197.883
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549203,197.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4122
  maximum absolute entry in einsum_ir solution: 62.4122
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138772
  time (eval):    0.0118019
  gflops (eval):  920.854
  gflops (total): 823.968
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138772,0.0118019,920.854,823.968

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0987098
  gflops (total): 110.099
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553731
  gflops (eval):  196.265
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553731,196.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2886
  maximum absolute entry in einsum_ir solution: 60.2886
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136213
  time (eval):    0.0118255
  gflops (eval):  919.012
  gflops (total): 824.089
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136213,0.0118255,919.012,824.089

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.09843
  gflops (total): 110.412
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567903
  gflops (eval):  191.368
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567903,191.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8709
  maximum absolute entry in einsum_ir solution: 62.8709
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138391
  time (eval):    0.0118098
  gflops (eval):  920.236
  gflops (total): 823.711
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138391,0.0118098,920.236,823.711

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0988778
  gflops (total): 109.912
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.054802
  gflops (eval):  198.311
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.054802,198.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2962
  maximum absolute entry in einsum_ir solution: 61.2962
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137839
  time (eval):    0.0117723
  gflops (eval):  923.172
  gflops (total): 826.409
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137839,0.0117723,923.172,826.409

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0986096
  gflops (total): 110.211
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.054804
  gflops (eval):  198.304
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.054804,198.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2706
  maximum absolute entry in einsum_ir solution: 59.2706
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00135722
  time (eval):    0.0118286
  gflops (eval):  918.777
  gflops (total): 824.207
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00135722,0.0118286,918.777,824.207

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0984093
  gflops (total): 110.435
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557575
  gflops (eval):  194.912
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557575,194.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2769
  maximum absolute entry in einsum_ir solution: 61.2769
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143487
  time (eval):    0.0118592
  gflops (eval):  916.407
  gflops (total): 817.496
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143487,0.0118592,916.407,817.496

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0991665
  gflops (total): 109.592
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564502
  gflops (eval):  192.521
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564502,192.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1218
  maximum absolute entry in einsum_ir solution: 61.1218
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138478
  time (eval):    0.0118191
  gflops (eval):  919.514
  gflops (total): 823.078
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138478,0.0118191,919.514,823.078

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0987557
  gflops (total): 110.048
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.048

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0551184
  gflops (eval):  197.172
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0551184,197.172,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      69.8672
  maximum absolute entry in einsum_ir solution: 69.8672
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140842
  time (eval):    0.0118602
  gflops (eval):  916.327
  gflops (total): 819.062
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140842,0.0118602,916.327,819.062

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0985642
  gflops (total): 110.261
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.054788
  gflops (eval):  198.361
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.054788,198.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8449
  maximum absolute entry in einsum_ir solution: 56.8449
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140215
  time (eval):    0.0118096
  gflops (eval):  920.253
  gflops (total): 822.587
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140215,0.0118096,920.253,822.587

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.098914
  gflops (total): 109.871
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556214
  gflops (eval):  195.389
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556214,195.389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9035
  maximum absolute entry in einsum_ir solution: 61.9035
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142519
  time (eval):    0.0118857
  gflops (eval):  914.361
  gflops (total): 816.461
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142519,0.0118857,914.361,816.461

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0982326
  gflops (total): 110.634
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552948
  gflops (eval):  196.543
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552948,196.543,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8199
  maximum absolute entry in einsum_ir solution: 57.8199
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137615
  time (eval):    0.0118545
  gflops (eval):  916.764
  gflops (total): 821.41
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137615,0.0118545,916.764,821.41

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.098155
  gflops (total): 110.721
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550291
  gflops (eval):  197.492
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550291,197.492,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.937
  maximum absolute entry in einsum_ir solution: 58.937
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137675
  time (eval):    0.011886
  gflops (eval):  914.337
  gflops (total): 819.424
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137675,0.011886,914.337,819.424

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0978233
  gflops (total): 111.096
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549576
  gflops (eval):  197.749
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549576,197.749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0818
  maximum absolute entry in einsum_ir solution: 59.0818
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145391
  time (eval):    0.0118275
  gflops (eval):  918.858
  gflops (total): 818.271
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145391,0.0118275,918.858,818.271

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0975744
  gflops (total): 111.38
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055066
  gflops (eval):  197.36
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055066,197.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3103
  maximum absolute entry in einsum_ir solution: 60.3103
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00176162
  time (eval):    0.0117813
  gflops (eval):  922.466
  gflops (total): 802.474
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00176162,0.0117813,922.466,802.474

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0995239
  gflops (total): 109.198
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554029
  gflops (eval):  196.16
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554029,196.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2924
  maximum absolute entry in einsum_ir solution: 60.2924
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137921
  time (eval):    0.0118865
  gflops (eval):  914.302
  gflops (total): 819.243
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137921,0.0118865,914.302,819.243

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0976785
  gflops (total): 111.261
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,111.261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559107
  gflops (eval):  194.378
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559107,194.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7947
  maximum absolute entry in einsum_ir solution: 61.7947
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138499
  time (eval):    0.0118809
  gflops (eval):  914.729
  gflops (total): 819.23
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138499,0.0118809,914.729,819.23

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0982797
  gflops (total): 110.58
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549755
  gflops (eval):  197.685
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549755,197.685,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9958
  maximum absolute entry in einsum_ir solution: 60.9958
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137829
  time (eval):    0.0118388
  gflops (eval):  917.982
  gflops (total): 822.254
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137829,0.0118388,917.982,822.254

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0983471
  gflops (total): 110.505
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549494
  gflops (eval):  197.779
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549494,197.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1038
  maximum absolute entry in einsum_ir solution: 58.1038
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138412
  time (eval):    0.0118498
  gflops (eval):  917.128
  gflops (total): 821.207
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138412,0.0118498,917.128,821.207

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0989319
  gflops (total): 109.852
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561086
  gflops (eval):  193.693
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561086,193.693,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7843
  maximum absolute entry in einsum_ir solution: 58.7843
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137332
  time (eval):    0.0118541
  gflops (eval):  916.802
  gflops (total): 821.616
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137332,0.0118541,916.802,821.616

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0984418
  gflops (total): 110.398
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.054915
  gflops (eval):  197.903
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.054915,197.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4913
  maximum absolute entry in einsum_ir solution: 58.4913
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138311
  time (eval):    0.0118631
  gflops (eval):  916.104
  gflops (total): 820.449
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138311,0.0118631,916.104,820.449

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.09859
  gflops (total): 110.233
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558758
  gflops (eval):  194.5
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558758,194.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0006
  maximum absolute entry in einsum_ir solution: 59.0006
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137712
  time (eval):    0.0118408
  gflops (eval):  917.83
  gflops (total): 822.205
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137712,0.0118408,917.83,822.205

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0988397
  gflops (total): 109.954
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566002
  gflops (eval):  192.01
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566002,192.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8246
  maximum absolute entry in einsum_ir solution: 57.8246
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138683
  time (eval):    0.0118078
  gflops (eval):  920.397
  gflops (total): 823.658
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138683,0.0118078,920.397,823.658

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0989246
  gflops (total): 109.86
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556903
  gflops (eval):  195.148
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556903,195.148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8334
  maximum absolute entry in einsum_ir solution: 59.8334
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00147767
  time (eval):    0.0118267
  gflops (eval):  918.922
  gflops (total): 816.861
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00147767,0.0118267,918.922,816.861

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0993726
  gflops (total): 109.364
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,109.364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553333
  gflops (eval):  196.406
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553333,196.406,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1639
  maximum absolute entry in einsum_ir solution: 58.1639
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137953
  time (eval):    0.0118985
  gflops (eval):  913.38
  gflops (total): 818.483
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137953,0.0118985,913.38,818.483

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0985697
  gflops (total): 110.255
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,110.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559517
  gflops (eval):  194.236
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559517,194.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2426
  maximum absolute entry in einsum_ir solution: 59.2426
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134682
  time (eval):    0.010729
  gflops (eval):  1018.18
  gflops (total): 904.621
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134682,0.010729,1018.18,904.621

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0716017
  gflops (total): 152.567
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173304
  gflops (eval):  630.34
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173304,630.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.24
  maximum absolute entry in einsum_ir solution: 443.24
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140819
  time (eval):    0.0107724
  gflops (eval):  1014.08
  gflops (total): 896.839
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140819,0.0107724,1014.08,896.839

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0725756
  gflops (total): 150.52
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168228
  gflops (eval):  649.357
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168228,649.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      436.055
  maximum absolute entry in einsum_ir solution: 436.055
  maximum element-wise difference:              0.000198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139822
  time (eval):    0.0107993
  gflops (eval):  1011.55
  gflops (total): 895.593
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139822,0.0107993,1011.55,895.593

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718506
  gflops (total): 152.038
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169409
  gflops (eval):  644.833
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169409,644.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.886
  maximum absolute entry in einsum_ir solution: 419.886
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139174
  time (eval):    0.010809
  gflops (eval):  1010.64
  gflops (total): 895.358
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139174,0.010809,1010.64,895.358

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724319
  gflops (total): 150.818
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171817
  gflops (eval):  635.796
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171817,635.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      439.058
  maximum absolute entry in einsum_ir solution: 439.058
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013606
  time (eval):    0.010723
  gflops (eval):  1018.74
  gflops (total): 904.035
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013606,0.010723,1018.74,904.035

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0721075
  gflops (total): 151.497
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017447
  gflops (eval):  626.128
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017447,626.128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.699
  maximum absolute entry in einsum_ir solution: 529.699
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136224
  time (eval):    0.0107578
  gflops (eval):  1015.45
  gflops (total): 901.321
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136224,0.0107578,1015.45,901.321

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0731926
  gflops (total): 149.251
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171111
  gflops (eval):  638.419
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171111,638.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.228
  maximum absolute entry in einsum_ir solution: 462.228
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135056
  time (eval):    0.0107453
  gflops (eval):  1016.64
  gflops (total): 903.125
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135056,0.0107453,1016.64,903.125

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720638
  gflops (total): 151.589
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171419
  gflops (eval):  637.271
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171419,637.271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      412.245
  maximum absolute entry in einsum_ir solution: 412.245
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135716
  time (eval):    0.0109072
  gflops (eval):  1001.55
  gflops (total): 890.717
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135716,0.0109072,1001.55,890.717

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0726389
  gflops (total): 150.388
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170622
  gflops (eval):  640.248
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170622,640.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      408.65
  maximum absolute entry in einsum_ir solution: 408.65
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140542
  time (eval):    0.0107468
  gflops (eval):  1016.49
  gflops (total): 898.935
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140542,0.0107468,1016.49,898.935

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0725553
  gflops (total): 150.562
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0180298
  gflops (eval):  605.889
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0180298,605.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      418.881
  maximum absolute entry in einsum_ir solution: 418.881
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134017
  time (eval):    0.0108928
  gflops (eval):  1002.87
  gflops (total): 892.998
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134017,0.0108928,1002.87,892.998

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720001
  gflops (total): 151.723
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169968
  gflops (eval):  642.711
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169968,642.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      397.202
  maximum absolute entry in einsum_ir solution: 397.202
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013589
  time (eval):    0.0107552
  gflops (eval):  1015.7
  gflops (total): 901.764
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013589,0.0107552,1015.7,901.764

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718938
  gflops (total): 151.947
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168169
  gflops (eval):  649.587
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168169,649.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.235
  maximum absolute entry in einsum_ir solution: 442.235
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00170269
  time (eval):    0.0107879
  gflops (eval):  1012.62
  gflops (total): 874.583
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00170269,0.0107879,1012.62,874.583

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0716656
  gflops (total): 152.431
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170949
  gflops (eval):  639.025
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170949,639.025,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.018
  maximum absolute entry in einsum_ir solution: 437.018
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013558
  time (eval):    0.0108292
  gflops (eval):  1008.75
  gflops (total): 896.512
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013558,0.0108292,1008.75,896.512

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0725873
  gflops (total): 150.495
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017091
  gflops (eval):  639.168
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017091,639.168,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.451
  maximum absolute entry in einsum_ir solution: 422.451
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134607
  time (eval):    0.010834
  gflops (eval):  1008.31
  gflops (total): 896.878
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134607,0.010834,1008.31,896.878

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0719206
  gflops (total): 151.89
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168278
  gflops (eval):  649.167
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168278,649.167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.636
  maximum absolute entry in einsum_ir solution: 420.636
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00452663
  time (eval):    0.0107585
  gflops (eval):  1015.39
  gflops (total): 714.684
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00452663,0.0107585,1015.39,714.684

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0727414
  gflops (total): 150.176
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170792
  gflops (eval):  639.613
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170792,639.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      451.463
  maximum absolute entry in einsum_ir solution: 451.463
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134686
  time (eval):    0.0107823
  gflops (eval):  1013.14
  gflops (total): 900.642
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134686,0.0107823,1013.14,900.642

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0726942
  gflops (total): 150.274
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170226
  gflops (eval):  641.738
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170226,641.738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      413.09
  maximum absolute entry in einsum_ir solution: 413.09
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013528
  time (eval):    0.010825
  gflops (eval):  1009.15
  gflops (total): 897.048
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013528,0.010825,1009.15,897.048

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0714123
  gflops (total): 152.971
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170475
  gflops (eval):  640.8
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170475,640.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      451.182
  maximum absolute entry in einsum_ir solution: 451.182
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136358
  time (eval):    0.0108723
  gflops (eval):  1004.76
  gflops (total): 892.785
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136358,0.0108723,1004.76,892.785

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.072572
  gflops (total): 150.527
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174197
  gflops (eval):  627.109
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174197,627.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.449
  maximum absolute entry in einsum_ir solution: 429.449
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134569
  time (eval):    0.010749
  gflops (eval):  1016.28
  gflops (total): 903.208
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134569,0.010749,1016.28,903.208

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0728292
  gflops (total): 149.995
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170823
  gflops (eval):  639.496
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170823,639.496,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.385
  maximum absolute entry in einsum_ir solution: 433.385
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013482
  time (eval):    0.0108128
  gflops (eval):  1010.29
  gflops (total): 898.284
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013482,0.0108128,1010.29,898.284

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718746
  gflops (total): 151.988
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.988

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172077
  gflops (eval):  634.833
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172077,634.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.211
  maximum absolute entry in einsum_ir solution: 438.21
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00133585
  time (eval):    0.0107675
  gflops (eval):  1014.54
  gflops (total): 902.561
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00133585,0.0107675,1014.54,902.561

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0719255
  gflops (total): 151.88
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172226
  gflops (eval):  634.285
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172226,634.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.621
  maximum absolute entry in einsum_ir solution: 497.621
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135253
  time (eval):    0.0108748
  gflops (eval):  1004.53
  gflops (total): 893.414
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135253,0.0108748,1004.53,893.414

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.07133
  gflops (total): 153.148
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,153.148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171559
  gflops (eval):  636.75
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171559,636.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.969
  maximum absolute entry in einsum_ir solution: 433.969
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136039
  time (eval):    0.0108056
  gflops (eval):  1010.96
  gflops (total): 897.919
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136039,0.0108056,1010.96,897.919

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0725792
  gflops (total): 150.512
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017114
  gflops (eval):  638.31
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017114,638.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      444.356
  maximum absolute entry in einsum_ir solution: 444.356
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134961
  time (eval):    0.0108142
  gflops (eval):  1010.15
  gflops (total): 898.074
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134961,0.0108142,1010.15,898.074

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724751
  gflops (total): 150.728
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169718
  gflops (eval):  643.66
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169718,643.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.748
  maximum absolute entry in einsum_ir solution: 433.748
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137933
  time (eval):    0.0108148
  gflops (eval):  1010.1
  gflops (total): 895.845
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137933,0.0108148,1010.1,895.845

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720986
  gflops (total): 151.515
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168679
  gflops (eval):  647.621
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168679,647.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.771
  maximum absolute entry in einsum_ir solution: 435.771
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135151
  time (eval):    0.0107204
  gflops (eval):  1018.99
  gflops (total): 904.913
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135151,0.0107204,1018.99,904.913

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724972
  gflops (total): 150.682
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.682

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169786
  gflops (eval):  643.4
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169786,643.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.639
  maximum absolute entry in einsum_ir solution: 422.639
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135767
  time (eval):    0.0107736
  gflops (eval):  1013.96
  gflops (total): 900.485
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135767,0.0107736,1013.96,900.485

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0715888
  gflops (total): 152.594
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171629
  gflops (eval):  636.491
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171629,636.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      450.504
  maximum absolute entry in einsum_ir solution: 450.504
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134071
  time (eval):    0.0108514
  gflops (eval):  1006.69
  gflops (total): 895.99
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134071,0.0108514,1006.69,895.99

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0726044
  gflops (total): 150.46
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171974
  gflops (eval):  635.216
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171974,635.216,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.303
  maximum absolute entry in einsum_ir solution: 441.303
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135196
  time (eval):    0.010748
  gflops (eval):  1016.38
  gflops (total): 902.814
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135196,0.010748,1016.38,902.814

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0728338
  gflops (total): 149.986
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171154
  gflops (eval):  638.258
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171154,638.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.714
  maximum absolute entry in einsum_ir solution: 469.714
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136096
  time (eval):    0.0107982
  gflops (eval):  1011.65
  gflops (total): 898.418
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136096,0.0107982,1011.65,898.418

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0722295
  gflops (total): 151.241
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168582
  gflops (eval):  647.996
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168582,647.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.903
  maximum absolute entry in einsum_ir solution: 442.903
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134898
  time (eval):    0.010805
  gflops (eval):  1011.01
  gflops (total): 898.8
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134898,0.010805,1011.01,898.8

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0721681
  gflops (total): 151.369
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.01713
  gflops (eval):  637.713
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.01713,637.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.139
  maximum absolute entry in einsum_ir solution: 422.139
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134344
  time (eval):    0.0107904
  gflops (eval):  1012.38
  gflops (total): 900.295
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134344,0.0107904,1012.38,900.295

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724312
  gflops (total): 150.82
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.016838
  gflops (eval):  648.774
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.016838,648.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.833
  maximum absolute entry in einsum_ir solution: 476.833
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00149236
  time (eval):    0.0108798
  gflops (eval):  1004.06
  gflops (total): 882.951
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00149236,0.0108798,1004.06,882.951

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724443
  gflops (total): 150.792
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169737
  gflops (eval):  643.587
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169737,643.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.154
  maximum absolute entry in einsum_ir solution: 435.154
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135046
  time (eval):    0.0107932
  gflops (eval):  1012.12
  gflops (total): 899.566
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135046,0.0107932,1012.12,899.566

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724956
  gflops (total): 150.686
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168978
  gflops (eval):  646.476
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168978,646.476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      450.152
  maximum absolute entry in einsum_ir solution: 450.152
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136772
  time (eval):    0.0110933
  gflops (eval):  984.738
  gflops (total): 876.654
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136772,0.0110933,984.738,876.654

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0727042
  gflops (total): 150.253
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.253

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0166672
  gflops (eval):  655.422
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0166672,655.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      413.898
  maximum absolute entry in einsum_ir solution: 413.898
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139895
  time (eval):    0.0107371
  gflops (eval):  1017.41
  gflops (total): 900.133
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139895,0.0107371,1017.41,900.133

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0716198
  gflops (total): 152.528
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173523
  gflops (eval):  629.544
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173523,629.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.802
  maximum absolute entry in einsum_ir solution: 428.802
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013545
  time (eval):    0.0109017
  gflops (eval):  1002.05
  gflops (total): 891.307
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013545,0.0109017,1002.05,891.307

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718188
  gflops (total): 152.106
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173364
  gflops (eval):  630.122
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173364,630.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      410.239
  maximum absolute entry in einsum_ir solution: 410.239
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134078
  time (eval):    0.0108297
  gflops (eval):  1008.72
  gflops (total): 897.588
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134078,0.0108297,1008.72,897.588

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724327
  gflops (total): 150.817
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017404
  gflops (eval):  627.675
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017404,627.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      451.071
  maximum absolute entry in einsum_ir solution: 451.071
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137042
  time (eval):    0.0107217
  gflops (eval):  1018.87
  gflops (total): 903.398
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137042,0.0107217,1018.87,903.398

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0717507
  gflops (total): 152.25
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017041
  gflops (eval):  641.043
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017041,641.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.162
  maximum absolute entry in einsum_ir solution: 475.161
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136047
  time (eval):    0.0107736
  gflops (eval):  1013.96
  gflops (total): 900.276
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136047,0.0107736,1013.96,900.276

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0730932
  gflops (total): 149.454
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167841
  gflops (eval):  650.858
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167841,650.858,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.035
  maximum absolute entry in einsum_ir solution: 455.035
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136388
  time (eval):    0.0107937
  gflops (eval):  1012.07
  gflops (total): 898.535
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136388,0.0107937,1012.07,898.535

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0728535
  gflops (total): 149.945
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169738
  gflops (eval):  643.582
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169738,643.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.097
  maximum absolute entry in einsum_ir solution: 430.097
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135947
  time (eval):    0.0108144
  gflops (eval):  1010.13
  gflops (total): 897.332
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135947,0.0108144,1010.13,897.332

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724874
  gflops (total): 150.703
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017068
  gflops (eval):  640.032
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017068,640.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      415.333
  maximum absolute entry in einsum_ir solution: 415.333
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136044
  time (eval):    0.0107757
  gflops (eval):  1013.77
  gflops (total): 900.125
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136044,0.0107757,1013.77,900.125

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0721522
  gflops (total): 151.403
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169612
  gflops (eval):  644.062
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169612,644.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.452
  maximum absolute entry in einsum_ir solution: 437.452
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137275
  time (eval):    0.0107715
  gflops (eval):  1014.16
  gflops (total): 899.523
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137275,0.0107715,1014.16,899.523

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0719118
  gflops (total): 151.909
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0176049
  gflops (eval):  620.512
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0176049,620.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.086
  maximum absolute entry in einsum_ir solution: 468.086
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134428
  time (eval):    0.0108429
  gflops (eval):  1007.48
  gflops (total): 896.352
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134428,0.0108429,1007.48,896.352

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0716716
  gflops (total): 152.418
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171274
  gflops (eval):  637.809
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171274,637.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.652
  maximum absolute entry in einsum_ir solution: 466.652
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135743
  time (eval):    0.0106889
  gflops (eval):  1022
  gflops (total): 906.838
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135743,0.0106889,1022,906.838

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718072
  gflops (total): 152.13
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168989
  gflops (eval):  646.433
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168989,646.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      427.659
  maximum absolute entry in einsum_ir solution: 427.659
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136989
  time (eval):    0.0107934
  gflops (eval):  1012.1
  gflops (total): 898.114
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136989,0.0107934,1012.1,898.114

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0727827
  gflops (total): 150.091
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169866
  gflops (eval):  643.099
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169866,643.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.494
  maximum absolute entry in einsum_ir solution: 473.494
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136072
  time (eval):    0.0107414
  gflops (eval):  1017.01
  gflops (total): 902.658
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136072,0.0107414,1017.01,902.658

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0716305
  gflops (total): 152.506
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169894
  gflops (eval):  642.993
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169894,642.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.228
  maximum absolute entry in einsum_ir solution: 447.228
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137376
  time (eval):    0.0107785
  gflops (eval):  1013.5
  gflops (total): 898.928
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137376,0.0107785,1013.5,898.928

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720179
  gflops (total): 151.685
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171289
  gflops (eval):  637.754
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171289,637.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      411.386
  maximum absolute entry in einsum_ir solution: 411.386
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135258
  time (eval):    0.010584
  gflops (eval):  1032.12
  gflops (total): 915.17
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135258,0.010584,1032.12,915.17

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720628
  gflops (total): 151.591
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.591

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0176724
  gflops (eval):  618.143
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0176724,618.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.196
  maximum absolute entry in einsum_ir solution: 426.196
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013753
  time (eval):    0.0107546
  gflops (eval):  1015.76
  gflops (total): 900.591
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013753,0.0107546,1015.76,900.591

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0721606
  gflops (total): 151.385
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169876
  gflops (eval):  643.061
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169876,643.061,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.624
  maximum absolute entry in einsum_ir solution: 465.624
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136285
  time (eval):    0.0108419
  gflops (eval):  1007.57
  gflops (total): 895.062
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136285,0.0108419,1007.57,895.062

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0723558
  gflops (total): 150.977
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172625
  gflops (eval):  632.819
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172625,632.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.288
  maximum absolute entry in einsum_ir solution: 425.288
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135022
  time (eval):    0.0107918
  gflops (eval):  1012.25
  gflops (total): 899.687
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135022,0.0107918,1012.25,899.687

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720823
  gflops (total): 151.55
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173867
  gflops (eval):  628.297
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173867,628.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.717
  maximum absolute entry in einsum_ir solution: 428.717
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135292
  time (eval):    0.0107441
  gflops (eval):  1016.75
  gflops (total): 903.038
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135292,0.0107441,1016.75,903.038

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0725622
  gflops (total): 150.547
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175027
  gflops (eval):  624.133
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175027,624.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      444.993
  maximum absolute entry in einsum_ir solution: 444.993
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134215
  time (eval):    0.0107331
  gflops (eval):  1017.79
  gflops (total): 904.664
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134215,0.0107331,1017.79,904.664

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.07237
  gflops (total): 150.947
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168869
  gflops (eval):  646.896
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168869,646.896,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.315
  maximum absolute entry in einsum_ir solution: 466.315
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135084
  time (eval):    0.010827
  gflops (eval):  1008.96
  gflops (total): 897.042
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135084,0.010827,1008.96,897.042

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0722302
  gflops (total): 151.239
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0166901
  gflops (eval):  654.523
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0166901,654.523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      452.667
  maximum absolute entry in einsum_ir solution: 452.667
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137021
  time (eval):    0.0107892
  gflops (eval):  1012.5
  gflops (total): 898.403
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137021,0.0107892,1012.5,898.403

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0717399
  gflops (total): 152.273
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171376
  gflops (eval):  637.431
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171376,637.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.249
  maximum absolute entry in einsum_ir solution: 424.249
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134978
  time (eval):    0.0108388
  gflops (eval):  1007.87
  gflops (total): 896.253
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134978,0.0108388,1007.87,896.253

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0715384
  gflops (total): 152.702
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.01696
  gflops (eval):  644.105
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.01696,644.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.312
  maximum absolute entry in einsum_ir solution: 435.312
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135754
  time (eval):    0.010745
  gflops (eval):  1016.67
  gflops (total): 902.626
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135754,0.010745,1016.67,902.626

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0724434
  gflops (total): 150.794
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170557
  gflops (eval):  640.491
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170557,640.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      452.757
  maximum absolute entry in einsum_ir solution: 452.757
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135218
  time (eval):    0.0107617
  gflops (eval):  1015.08
  gflops (total): 901.776
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135218,0.0107617,1015.08,901.776

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718735
  gflops (total): 151.99
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171977
  gflops (eval):  635.204
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171977,635.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.59
  maximum absolute entry in einsum_ir solution: 479.59
  maximum element-wise difference:              0.000183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135465
  time (eval):    0.0107008
  gflops (eval):  1020.86
  gflops (total): 906.147
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135465,0.0107008,1020.86,906.147

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0728574
  gflops (total): 149.937
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171771
  gflops (eval):  635.967
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171771,635.967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.744
  maximum absolute entry in einsum_ir solution: 494.744
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013631
  time (eval):    0.0107993
  gflops (eval):  1011.55
  gflops (total): 898.183
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013631,0.0107993,1011.55,898.183

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0723406
  gflops (total): 151.009
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170963
  gflops (eval):  638.972
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170963,638.972,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.157
  maximum absolute entry in einsum_ir solution: 491.157
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00132365
  time (eval):    0.0107798
  gflops (eval):  1013.38
  gflops (total): 902.556
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00132365,0.0107798,1013.38,902.556

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0721097
  gflops (total): 151.492
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171454
  gflops (eval):  637.141
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171454,637.141,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.743
  maximum absolute entry in einsum_ir solution: 442.743
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137687
  time (eval):    0.0107742
  gflops (eval):  1013.91
  gflops (total): 899.019
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137687,0.0107742,1013.91,899.019

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720435
  gflops (total): 151.631
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168154
  gflops (eval):  649.646
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168154,649.646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.727
  maximum absolute entry in einsum_ir solution: 429.727
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135635
  time (eval):    0.0107793
  gflops (eval):  1013.43
  gflops (total): 900.164
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135635,0.0107793,1013.43,900.164

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0723002
  gflops (total): 151.093
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168214
  gflops (eval):  649.415
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168214,649.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      423.866
  maximum absolute entry in einsum_ir solution: 423.866
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136025
  time (eval):    0.0108097
  gflops (eval):  1010.57
  gflops (total): 897.622
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136025,0.0108097,1010.57,897.622

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0713713
  gflops (total): 153.059
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,153.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170293
  gflops (eval):  641.483
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170293,641.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.882
  maximum absolute entry in einsum_ir solution: 469.882
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013555
  time (eval):    0.010832
  gflops (eval):  1008.49
  gflops (total): 896.328
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013555,0.010832,1008.49,896.328

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0719976
  gflops (total): 151.728
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168648
  gflops (eval):  647.743
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168648,647.743,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      411.902
  maximum absolute entry in einsum_ir solution: 411.902
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137625
  time (eval):    0.0107446
  gflops (eval):  1016.7
  gflops (total): 901.259
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137625,0.0107446,1016.7,901.259

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0727215
  gflops (total): 150.218
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017073
  gflops (eval):  639.843
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017073,639.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      410.124
  maximum absolute entry in einsum_ir solution: 410.124
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136926
  time (eval):    0.0108258
  gflops (eval):  1009.08
  gflops (total): 895.779
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136926,0.0108258,1009.08,895.779

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0725471
  gflops (total): 150.579
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169733
  gflops (eval):  643.6
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169733,643.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      432.032
  maximum absolute entry in einsum_ir solution: 432.032
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013575
  time (eval):    0.0107818
  gflops (eval):  1013.19
  gflops (total): 899.89
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013575,0.0107818,1013.19,899.89

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0716599
  gflops (total): 152.443
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170036
  gflops (eval):  642.454
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170036,642.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.577
  maximum absolute entry in einsum_ir solution: 475.577
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00133108
  time (eval):    0.0108992
  gflops (eval):  1002.28
  gflops (total): 893.193
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00133108,0.0108992,1002.28,893.193

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0715367
  gflops (total): 152.706
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017043
  gflops (eval):  640.968
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017043,640.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.304
  maximum absolute entry in einsum_ir solution: 465.304
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140829
  time (eval):    0.0107968
  gflops (eval):  1011.79
  gflops (total): 895.043
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140829,0.0107968,1011.79,895.043

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0717812
  gflops (total): 152.185
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.01699
  gflops (eval):  642.97
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.01699,642.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.45
  maximum absolute entry in einsum_ir solution: 422.45
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135702
  time (eval):    0.0107948
  gflops (eval):  1011.97
  gflops (total): 898.965
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135702,0.0107948,1011.97,898.965

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0726698
  gflops (total): 150.324
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172378
  gflops (eval):  633.727
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172378,633.727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      415.38
  maximum absolute entry in einsum_ir solution: 415.38
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135373
  time (eval):    0.0108164
  gflops (eval):  1009.96
  gflops (total): 897.614
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135373,0.0108164,1009.96,897.614

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0719631
  gflops (total): 151.801
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170507
  gflops (eval):  640.678
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170507,640.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.197
  maximum absolute entry in einsum_ir solution: 497.197
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134459
  time (eval):    0.0107495
  gflops (eval):  1016.24
  gflops (total): 903.256
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134459,0.0107495,1016.24,903.256

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718455
  gflops (total): 152.049
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173159
  gflops (eval):  630.867
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173159,630.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      448.51
  maximum absolute entry in einsum_ir solution: 448.51
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013572
  time (eval):    0.0108122
  gflops (eval):  1010.34
  gflops (total): 897.663
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013572,0.0108122,1010.34,897.663

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0709302
  gflops (total): 154.011
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,154.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174187
  gflops (eval):  627.145
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174187,627.145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      411.487
  maximum absolute entry in einsum_ir solution: 411.487
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134609
  time (eval):    0.0107817
  gflops (eval):  1013.2
  gflops (total): 900.744
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134609,0.0107817,1013.2,900.744

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0725388
  gflops (total): 150.596
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175719
  gflops (eval):  621.677
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175719,621.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      427.051
  maximum absolute entry in einsum_ir solution: 427.051
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135987
  time (eval):    0.0108027
  gflops (eval):  1011.23
  gflops (total): 898.169
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135987,0.0108027,1011.23,898.169

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720392
  gflops (total): 151.64
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167444
  gflops (eval):  652.4
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167444,652.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.229
  maximum absolute entry in einsum_ir solution: 435.229
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135038
  time (eval):    0.0108194
  gflops (eval):  1009.67
  gflops (total): 897.634
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135038,0.0108194,1009.67,897.634

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0726196
  gflops (total): 150.428
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171589
  gflops (eval):  636.639
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171589,636.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.228
  maximum absolute entry in einsum_ir solution: 421.228
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135246
  time (eval):    0.0108065
  gflops (eval):  1010.88
  gflops (total): 898.434
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135246,0.0108065,1010.88,898.434

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0728766
  gflops (total): 149.898
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,149.898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170754
  gflops (eval):  639.753
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170754,639.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.342
  maximum absolute entry in einsum_ir solution: 422.343
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135192
  time (eval):    0.0108223
  gflops (eval):  1009.4
  gflops (total): 897.311
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135192,0.0108223,1009.4,897.311

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0723056
  gflops (total): 151.082
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017206
  gflops (eval):  634.897
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017206,634.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      414.102
  maximum absolute entry in einsum_ir solution: 414.102
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137541
  time (eval):    0.0108289
  gflops (eval):  1008.79
  gflops (total): 895.1
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137541,0.0108289,1008.79,895.1

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0721245
  gflops (total): 151.461
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174467
  gflops (eval):  626.139
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174467,626.139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.1
  maximum absolute entry in einsum_ir solution: 443.1
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013614
  time (eval):    0.0107823
  gflops (eval):  1013.14
  gflops (total): 899.562
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013614,0.0107823,1013.14,899.562

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0719726
  gflops (total): 151.781
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170772
  gflops (eval):  639.685
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170772,639.685,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      451.758
  maximum absolute entry in einsum_ir solution: 451.758
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134447
  time (eval):    0.0107953
  gflops (eval):  1011.93
  gflops (total): 899.857
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134447,0.0107953,1011.93,899.857

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718722
  gflops (total): 151.993
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169205
  gflops (eval):  645.609
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169205,645.609,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.68
  maximum absolute entry in einsum_ir solution: 465.68
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135099
  time (eval):    0.0107837
  gflops (eval):  1013.01
  gflops (total): 900.23
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135099,0.0107837,1013.01,900.23

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0723495
  gflops (total): 150.99
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170987
  gflops (eval):  638.88
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170987,638.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.214
  maximum absolute entry in einsum_ir solution: 470.214
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135287
  time (eval):    0.0107925
  gflops (eval):  1012.19
  gflops (total): 899.44
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135287,0.0107925,1012.19,899.44

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0720844
  gflops (total): 151.545
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017033
  gflops (eval):  641.346
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017033,641.346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.84
  maximum absolute entry in einsum_ir solution: 476.84
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135626
  time (eval):    0.0107426
  gflops (eval):  1016.89
  gflops (total): 902.902
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135626,0.0107426,1016.89,902.902

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0716736
  gflops (total): 152.414
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170746
  gflops (eval):  639.782
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170746,639.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.115
  maximum absolute entry in einsum_ir solution: 484.115
  maximum element-wise difference:              0.000183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135922
  time (eval):    0.0107222
  gflops (eval):  1018.82
  gflops (total): 904.199
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135922,0.0107222,1018.82,904.199

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0718885
  gflops (total): 151.958
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172251
  gflops (eval):  634.194
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172251,634.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      432.679
  maximum absolute entry in einsum_ir solution: 432.679
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140544
  time (eval):    0.0107982
  gflops (eval):  1011.65
  gflops (total): 895.143
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140544,0.0107982,1011.65,895.143

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0712273
  gflops (total): 153.369
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,153.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173393
  gflops (eval):  630.016
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173393,630.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.456
  maximum absolute entry in einsum_ir solution: 468.456
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00146625
  time (eval):    0.0107874
  gflops (eval):  1012.67
  gflops (total): 891.496
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00146625,0.0107874,1012.67,891.496

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0722598
  gflops (total): 151.177
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169979
  gflops (eval):  642.671
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169979,642.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.864
  maximum absolute entry in einsum_ir solution: 433.864
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140865
  time (eval):    0.0108243
  gflops (eval):  1009.22
  gflops (total): 893.003
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140865,0.0108243,1009.22,893.003

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0725558
  gflops (total): 150.561
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169422
  gflops (eval):  644.782
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169422,644.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.65
  maximum absolute entry in einsum_ir solution: 441.65
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136144
  time (eval):    0.010751
  gflops (eval):  1016.1
  gflops (total): 901.886
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136144,0.010751,1016.1,901.886

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0723544
  gflops (total): 150.98
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172565
  gflops (eval):  633.039
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172565,633.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.106
  maximum absolute entry in einsum_ir solution: 457.106
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0014722
  time (eval):    0.0107649
  gflops (eval):  1014.78
  gflops (total): 892.7
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0014722,0.0107649,1014.78,892.7

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0719083
  gflops (total): 151.916
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169756
  gflops (eval):  643.515
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169756,643.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.582
  maximum absolute entry in einsum_ir solution: 459.581
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135454
  time (eval):    0.0107382
  gflops (eval):  1017.3
  gflops (total): 903.353
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135454,0.0107382,1017.3,903.353

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0714089
  gflops (total): 152.979
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169068
  gflops (eval):  646.135
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169068,646.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.338
  maximum absolute entry in einsum_ir solution: 442.338
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135115
  time (eval):    0.0107429
  gflops (eval):  1016.86
  gflops (total): 903.26
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135115,0.0107429,1016.86,903.26

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0723943
  gflops (total): 150.896
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174501
  gflops (eval):  626.016
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174501,626.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.283
  maximum absolute entry in einsum_ir solution: 443.283
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137346
  time (eval):    0.010759
  gflops (eval):  1015.34
  gflops (total): 900.4
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137346,0.010759,1015.34,900.4

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0721016
  gflops (total): 151.509
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171741
  gflops (eval):  636.078
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171741,636.078,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      418.492
  maximum absolute entry in einsum_ir solution: 418.492
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134386
  time (eval):    0.0107589
  gflops (eval):  1015.35
  gflops (total): 902.611
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134386,0.0107589,1015.35,902.611

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0717806
  gflops (total): 152.187
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.187

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171229
  gflops (eval):  637.978
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171229,637.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      417.571
  maximum absolute entry in einsum_ir solution: 417.571
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00151691
  time (eval):    0.010853
  gflops (eval):  1006.55
  gflops (total): 883.115
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00151691,0.010853,1006.55,883.115

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0717443
  gflops (total): 152.264
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,152.264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017317
  gflops (eval):  630.828
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017317,630.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.895
  maximum absolute entry in einsum_ir solution: 424.895
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00133465
  time (eval):    0.0108459
  gflops (eval):  1007.2
  gflops (total): 896.842
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00133465,0.0108459,1007.2,896.842

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.072441
  gflops (total): 150.799
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,150.799

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173105
  gflops (eval):  631.065
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173105,631.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.253
  maximum absolute entry in einsum_ir solution: 419.253
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134841
  time (eval):    0.0108114
  gflops (eval):  1010.42
  gflops (total): 898.375
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134841,0.0108114,1010.42,898.375

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0722581
  gflops (total): 151.181
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,151.181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172183
  gflops (eval):  634.443
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172183,634.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      427.521
  maximum absolute entry in einsum_ir solution: 427.521
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133599
  time (eval):    0.345639
  gflops (eval):  123.193
  gflops (total): 122.719
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133599,0.345639,123.193,122.719

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.094792
  gflops (total): 449.198
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485733
  gflops (eval):  876.621
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485733,876.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1921.46
  maximum absolute entry in einsum_ir solution: 1921.46
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134584
  time (eval):    0.345685
  gflops (eval):  123.177
  gflops (total): 122.699
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134584,0.345685,123.177,122.699

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0952029
  gflops (total): 447.26
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048245
  gflops (eval):  882.588
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048245,882.588,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1732.96
  maximum absolute entry in einsum_ir solution: 1732.96
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134581
  time (eval):    0.345801
  gflops (eval):  123.136
  gflops (total): 122.658
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134581,0.345801,123.136,122.658

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0951675
  gflops (total): 447.426
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489658
  gflops (eval):  869.596
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489658,869.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1691.71
  maximum absolute entry in einsum_ir solution: 1691.71
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134773
  time (eval):    0.345464
  gflops (eval):  123.256
  gflops (total): 122.777
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134773,0.345464,123.256,122.777

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0945637
  gflops (total): 450.283
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488346
  gflops (eval):  871.932
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488346,871.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1663.61
  maximum absolute entry in einsum_ir solution: 1663.61
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135689
  time (eval):    0.354869
  gflops (eval):  119.989
  gflops (total): 119.532
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135689,0.354869,119.989,119.532

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0944326
  gflops (total): 450.908
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486848
  gflops (eval):  874.615
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486848,874.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1770.7
  maximum absolute entry in einsum_ir solution: 1770.7
  maximum element-wise difference:              0.00476074
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135789
  time (eval):    0.34627
  gflops (eval):  122.969
  gflops (total): 122.489
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135789,0.34627,122.969,122.489

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0949256
  gflops (total): 448.566
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485796
  gflops (eval):  876.508
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485796,876.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1773.75
  maximum absolute entry in einsum_ir solution: 1773.75
  maximum element-wise difference:              0.0045166
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135214
  time (eval):    0.348161
  gflops (eval):  122.301
  gflops (total): 121.828
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135214,0.348161,122.301,121.828

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0942389
  gflops (total): 451.835
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.835

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488106
  gflops (eval):  872.36
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488106,872.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.29
  maximum absolute entry in einsum_ir solution: 1761.29
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133075
  time (eval):    0.346268
  gflops (eval):  122.97
  gflops (total): 122.499
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133075,0.346268,122.97,122.499

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.095177
  gflops (total): 447.381
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487619
  gflops (eval):  873.231
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487619,873.231,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1992.27
  maximum absolute entry in einsum_ir solution: 1992.27
  maximum element-wise difference:              0.00415039
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134875
  time (eval):    0.35504
  gflops (eval):  119.931
  gflops (total): 119.478
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134875,0.35504,119.931,119.478

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0944348
  gflops (total): 450.898
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485087
  gflops (eval):  877.789
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485087,877.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2010.1
  maximum absolute entry in einsum_ir solution: 2010.1
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00163686
  time (eval):    0.345362
  gflops (eval):  123.292
  gflops (total): 122.711
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00163686,0.345362,123.292,122.711

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0949246
  gflops (total): 448.571
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486832
  gflops (eval):  874.643
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486832,874.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1836.16
  maximum absolute entry in einsum_ir solution: 1836.17
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135312
  time (eval):    0.346009
  gflops (eval):  123.062
  gflops (total): 122.582
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135312,0.346009,123.062,122.582

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0945693
  gflops (total): 450.257
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487449
  gflops (eval):  873.536
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487449,873.536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1755.79
  maximum absolute entry in einsum_ir solution: 1755.8
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136818
  time (eval):    0.346377
  gflops (eval):  122.931
  gflops (total): 122.447
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136818,0.346377,122.931,122.447

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0955264
  gflops (total): 445.745
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,445.745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489458
  gflops (eval):  869.951
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489458,869.951,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1907.53
  maximum absolute entry in einsum_ir solution: 1907.53
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133743
  time (eval):    0.346667
  gflops (eval):  122.828
  gflops (total): 122.356
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133743,0.346667,122.828,122.356

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.094115
  gflops (total): 452.43
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,452.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486279
  gflops (eval):  875.638
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486279,875.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1728.88
  maximum absolute entry in einsum_ir solution: 1728.88
  maximum element-wise difference:              0.00360107
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00137041
  time (eval):    0.351733
  gflops (eval):  121.059
  gflops (total): 120.589
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00137041,0.351733,121.059,120.589

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0955659
  gflops (total): 445.561
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,445.561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489167
  gflops (eval):  870.467
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489167,870.467,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1747.97
  maximum absolute entry in einsum_ir solution: 1747.97
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00142408
  time (eval):    0.355287
  gflops (eval):  119.848
  gflops (total): 119.37
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00142408,0.355287,119.848,119.37

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0947863
  gflops (total): 449.226
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0476481
  gflops (eval):  893.644
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0476481,893.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1764.7
  maximum absolute entry in einsum_ir solution: 1764.7
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133719
  time (eval):    0.345849
  gflops (eval):  123.119
  gflops (total): 122.644
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133719,0.345849,123.119,122.644

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0951064
  gflops (total): 447.714
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487812
  gflops (eval):  872.887
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487812,872.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1827.74
  maximum absolute entry in einsum_ir solution: 1827.74
  maximum element-wise difference:              0.00500488
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135743
  time (eval):    0.351275
  gflops (eval):  121.217
  gflops (total): 120.75
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135743,0.351275,121.217,120.75

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0951274
  gflops (total): 447.615
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486946
  gflops (eval):  874.439
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486946,874.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1716.86
  maximum absolute entry in einsum_ir solution: 1716.86
  maximum element-wise difference:              0.00360107
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134035
  time (eval):    0.35348
  gflops (eval):  120.461
  gflops (total): 120.006
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134035,0.35348,120.461,120.006

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0958633
  gflops (total): 444.179
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486521
  gflops (eval):  875.202
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486521,875.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1798.66
  maximum absolute entry in einsum_ir solution: 1798.66
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141123
  time (eval):    0.34577
  gflops (eval):  123.147
  gflops (total): 122.646
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141123,0.34577,123.147,122.646

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0949609
  gflops (total): 448.4
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487867
  gflops (eval):  872.788
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487867,872.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1757.62
  maximum absolute entry in einsum_ir solution: 1757.62
  maximum element-wise difference:              0.00500488
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135187
  time (eval):    0.345319
  gflops (eval):  123.308
  gflops (total): 122.827
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135187,0.345319,123.308,122.827

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0949514
  gflops (total): 448.445
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487428
  gflops (eval):  873.573
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487428,873.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1674.23
  maximum absolute entry in einsum_ir solution: 1674.22
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013375
  time (eval):    0.351834
  gflops (eval):  121.024
  gflops (total): 120.566
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013375,0.351834,121.024,120.566

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950244
  gflops (total): 448.1
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485785
  gflops (eval):  876.529
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485785,876.529,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1654.27
  maximum absolute entry in einsum_ir solution: 1654.27
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134207
  time (eval):    0.350395
  gflops (eval):  121.521
  gflops (total): 121.058
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134207,0.350395,121.521,121.058

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0953289
  gflops (total): 446.668
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488406
  gflops (eval):  871.824
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488406,871.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1772.17
  maximum absolute entry in einsum_ir solution: 1772.17
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134461
  time (eval):    0.354801
  gflops (eval):  120.012
  gflops (total): 119.559
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134461,0.354801,120.012,119.559

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0947144
  gflops (total): 449.567
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0484612
  gflops (eval):  878.65
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0484612,878.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1784.49
  maximum absolute entry in einsum_ir solution: 1784.49
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132435
  time (eval):    0.345158
  gflops (eval):  123.365
  gflops (total): 122.894
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132435,0.345158,123.365,122.894

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0946115
  gflops (total): 450.056
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0484052
  gflops (eval):  879.666
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0484052,879.666,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1880.23
  maximum absolute entry in einsum_ir solution: 1880.23
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134606
  time (eval):    0.3453
  gflops (eval):  123.314
  gflops (total): 122.835
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134606,0.3453,123.314,122.835

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.095056
  gflops (total): 447.951
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487328
  gflops (eval):  873.753
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487328,873.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1846.48
  maximum absolute entry in einsum_ir solution: 1846.48
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00137901
  time (eval):    0.346103
  gflops (eval):  123.028
  gflops (total): 122.54
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00137901,0.346103,123.028,122.54

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0948418
  gflops (total): 448.963
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486769
  gflops (eval):  874.756
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486769,874.756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1667.5
  maximum absolute entry in einsum_ir solution: 1667.5
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134964
  time (eval):    0.353262
  gflops (eval):  120.535
  gflops (total): 120.076
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134964,0.353262,120.535,120.076

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.095767
  gflops (total): 444.625
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.625

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485042
  gflops (eval):  877.871
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485042,877.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1705.54
  maximum absolute entry in einsum_ir solution: 1705.54
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134423
  time (eval):    0.345271
  gflops (eval):  123.325
  gflops (total): 122.847
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134423,0.345271,123.325,122.847

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.095041
  gflops (total): 448.022
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488007
  gflops (eval):  872.537
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488007,872.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1912.8
  maximum absolute entry in einsum_ir solution: 1912.8
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133348
  time (eval):    0.347001
  gflops (eval):  122.71
  gflops (total): 122.24
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133348,0.347001,122.71,122.24

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.094198
  gflops (total): 452.031
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,452.031

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486348
  gflops (eval):  875.513
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486348,875.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1715.99
  maximum absolute entry in einsum_ir solution: 1716
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134422
  time (eval):    0.345633
  gflops (eval):  123.196
  gflops (total): 122.718
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134422,0.345633,123.196,122.718

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0946045
  gflops (total): 450.089
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0483563
  gflops (eval):  880.555
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0483563,880.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1750.79
  maximum absolute entry in einsum_ir solution: 1750.79
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133607
  time (eval):    0.345615
  gflops (eval):  123.202
  gflops (total): 122.727
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133607,0.345615,123.202,122.727

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.095077
  gflops (total): 447.852
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048686
  gflops (eval):  874.592
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048686,874.592,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1568.4
  maximum absolute entry in einsum_ir solution: 1568.4
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133
  time (eval):    0.345598
  gflops (eval):  123.208
  gflops (total): 122.736
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133,0.345598,123.208,122.736

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0946844
  gflops (total): 449.709
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048797
  gflops (eval):  872.604
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048797,872.604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1855.5
  maximum absolute entry in einsum_ir solution: 1855.5
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133916
  time (eval):    0.345169
  gflops (eval):  123.361
  gflops (total): 122.884
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133916,0.345169,123.361,122.884

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0953568
  gflops (total): 446.538
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486537
  gflops (eval):  875.173
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486537,875.173,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1758.11
  maximum absolute entry in einsum_ir solution: 1758.11
  maximum element-wise difference:              0.00372314
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140743
  time (eval):    0.345654
  gflops (eval):  123.188
  gflops (total): 122.688
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140743,0.345654,123.188,122.688

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0943756
  gflops (total): 451.181
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485724
  gflops (eval):  876.638
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485724,876.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2000.86
  maximum absolute entry in einsum_ir solution: 2000.85
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134049
  time (eval):    0.345413
  gflops (eval):  123.274
  gflops (total): 122.798
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134049,0.345413,123.274,122.798

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0949724
  gflops (total): 448.345
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.345

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486749
  gflops (eval):  874.792
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486749,874.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1590.7
  maximum absolute entry in einsum_ir solution: 1590.7
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134988
  time (eval):    0.345786
  gflops (eval):  123.141
  gflops (total): 122.662
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134988,0.345786,123.141,122.662

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0941444
  gflops (total): 452.288
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,452.288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487882
  gflops (eval):  872.761
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487882,872.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1881.46
  maximum absolute entry in einsum_ir solution: 1881.46
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00141054
  time (eval):    0.345164
  gflops (eval):  123.363
  gflops (total): 122.861
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00141054,0.345164,123.363,122.861

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0946964
  gflops (total): 449.652
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487815
  gflops (eval):  872.88
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487815,872.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1887.9
  maximum absolute entry in einsum_ir solution: 1887.9
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134594
  time (eval):    0.345326
  gflops (eval):  123.305
  gflops (total): 122.826
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134594,0.345326,123.305,122.826

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0943998
  gflops (total): 451.065
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0482555
  gflops (eval):  882.395
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0482555,882.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1651.83
  maximum absolute entry in einsum_ir solution: 1651.82
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134492
  time (eval):    0.351885
  gflops (eval):  121.007
  gflops (total): 120.546
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134492,0.351885,121.007,120.546

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0962763
  gflops (total): 442.273
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048757
  gflops (eval):  873.319
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048757,873.319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1898.77
  maximum absolute entry in einsum_ir solution: 1898.77
  maximum element-wise difference:              0.00415039
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134567
  time (eval):    0.354069
  gflops (eval):  120.26
  gflops (total): 119.805
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134567,0.354069,120.26,119.805

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0942082
  gflops (total): 451.982
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485239
  gflops (eval):  877.515
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485239,877.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2075.34
  maximum absolute entry in einsum_ir solution: 2075.35
  maximum element-wise difference:              0.00463867
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135964
  time (eval):    0.354778
  gflops (eval):  120.02
  gflops (total): 119.562
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135964,0.354778,120.02,119.562

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950723
  gflops (total): 447.874
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.874

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0482925
  gflops (eval):  881.719
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0482925,881.719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1749.58
  maximum absolute entry in einsum_ir solution: 1749.58
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133965
  time (eval):    0.345482
  gflops (eval):  123.249
  gflops (total): 122.773
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133965,0.345482,123.249,122.773

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0942317
  gflops (total): 451.869
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048715
  gflops (eval):  874.072
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048715,874.072,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1922.22
  maximum absolute entry in einsum_ir solution: 1922.22
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132576
  time (eval):    0.34591
  gflops (eval):  123.097
  gflops (total): 122.627
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132576,0.34591,123.097,122.627

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0952132
  gflops (total): 447.212
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.212

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485269
  gflops (eval):  877.46
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485269,877.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1956.55
  maximum absolute entry in einsum_ir solution: 1956.55
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134249
  time (eval):    0.352781
  gflops (eval):  120.699
  gflops (total): 120.242
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134249,0.352781,120.699,120.242

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0948512
  gflops (total): 448.918
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486888
  gflops (eval):  874.543
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486888,874.543,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1740.37
  maximum absolute entry in einsum_ir solution: 1740.37
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134397
  time (eval):    0.345363
  gflops (eval):  123.292
  gflops (total): 122.814
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134397,0.345363,123.292,122.814

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950046
  gflops (total): 448.193
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486729
  gflops (eval):  874.829
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486729,874.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1707.72
  maximum absolute entry in einsum_ir solution: 1707.72
  maximum element-wise difference:              0.00500488
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140716
  time (eval):    0.345338
  gflops (eval):  123.301
  gflops (total): 122.8
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140716,0.345338,123.301,122.8

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0954263
  gflops (total): 446.213
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485389
  gflops (eval):  877.244
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485389,877.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1804.79
  maximum absolute entry in einsum_ir solution: 1804.79
  maximum element-wise difference:              0.00463867
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136008
  time (eval):    0.345402
  gflops (eval):  123.278
  gflops (total): 122.794
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136008,0.345402,123.278,122.794

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950445
  gflops (total): 448.005
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486158
  gflops (eval):  875.856
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486158,875.856,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1786.43
  maximum absolute entry in einsum_ir solution: 1786.43
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00138691
  time (eval):    0.34543
  gflops (eval):  123.268
  gflops (total): 122.775
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00138691,0.34543,123.268,122.775

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0941586
  gflops (total): 452.22
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,452.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486781
  gflops (eval):  874.734
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486781,874.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1736.07
  maximum absolute entry in einsum_ir solution: 1736.07
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134419
  time (eval):    0.345302
  gflops (eval):  123.313
  gflops (total): 122.835
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134419,0.345302,123.313,122.835

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950512
  gflops (total): 447.974
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487973
  gflops (eval):  872.597
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487973,872.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1713.98
  maximum absolute entry in einsum_ir solution: 1713.98
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134552
  time (eval):    0.351122
  gflops (eval):  121.27
  gflops (total): 120.807
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134552,0.351122,121.27,120.807

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0951774
  gflops (total): 447.38
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485287
  gflops (eval):  877.427
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485287,877.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1823.5
  maximum absolute entry in einsum_ir solution: 1823.5
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134316
  time (eval):    0.3465
  gflops (eval):  122.887
  gflops (total): 122.413
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134316,0.3465,122.887,122.413

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0951493
  gflops (total): 447.512
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487904
  gflops (eval):  872.722
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487904,872.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2101.88
  maximum absolute entry in einsum_ir solution: 2101.88
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133768
  time (eval):    0.345393
  gflops (eval):  123.281
  gflops (total): 122.806
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133768,0.345393,123.281,122.806

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0945975
  gflops (total): 450.122
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048476
  gflops (eval):  878.381
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048476,878.381,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1867.26
  maximum absolute entry in einsum_ir solution: 1867.26
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00137522
  time (eval):    0.345745
  gflops (eval):  123.156
  gflops (total): 122.668
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00137522,0.345745,123.156,122.668

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0946356
  gflops (total): 449.941
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488416
  gflops (eval):  871.807
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488416,871.807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1652.81
  maximum absolute entry in einsum_ir solution: 1652.81
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133866
  time (eval):    0.346231
  gflops (eval):  122.983
  gflops (total): 122.509
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133866,0.346231,122.983,122.509

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0948849
  gflops (total): 448.759
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487711
  gflops (eval):  873.067
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487711,873.067,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1869.81
  maximum absolute entry in einsum_ir solution: 1869.81
  maximum element-wise difference:              0.00488281
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132791
  time (eval):    0.345375
  gflops (eval):  123.287
  gflops (total): 122.815
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132791,0.345375,123.287,122.815

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950517
  gflops (total): 447.971
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487614
  gflops (eval):  873.241
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487614,873.241,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1931.61
  maximum absolute entry in einsum_ir solution: 1931.61
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00138119
  time (eval):    0.346966
  gflops (eval):  122.722
  gflops (total): 122.236
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00138119,0.346966,122.722,122.236

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0944249
  gflops (total): 450.945
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0484868
  gflops (eval):  878.186
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0484868,878.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1832.63
  maximum absolute entry in einsum_ir solution: 1832.63
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134697
  time (eval):    0.34583
  gflops (eval):  123.125
  gflops (total): 122.647
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134697,0.34583,123.125,122.647

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0945528
  gflops (total): 450.335
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.335

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485451
  gflops (eval):  877.131
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485451,877.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1645.28
  maximum absolute entry in einsum_ir solution: 1645.28
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133901
  time (eval):    0.346023
  gflops (eval):  123.057
  gflops (total): 122.582
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133901,0.346023,123.057,122.582

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0947119
  gflops (total): 449.579
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.047765
  gflops (eval):  891.458
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.047765,891.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1673.16
  maximum absolute entry in einsum_ir solution: 1673.16
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132862
  time (eval):    0.346535
  gflops (eval):  122.875
  gflops (total): 122.406
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132862,0.346535,122.875,122.406

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0949618
  gflops (total): 448.395
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486516
  gflops (eval):  875.211
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486516,875.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1822.18
  maximum absolute entry in einsum_ir solution: 1822.18
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134639
  time (eval):    0.345626
  gflops (eval):  123.198
  gflops (total): 122.72
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134639,0.345626,123.198,122.72

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0944387
  gflops (total): 450.879
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487121
  gflops (eval):  874.125
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487121,874.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1717.69
  maximum absolute entry in einsum_ir solution: 1717.69
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134922
  time (eval):    0.345731
  gflops (eval):  123.16
  gflops (total): 122.682
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134922,0.345731,123.16,122.682

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0957011
  gflops (total): 444.931
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487026
  gflops (eval):  874.294
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487026,874.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1684.12
  maximum absolute entry in einsum_ir solution: 1684.12
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135372
  time (eval):    0.345754
  gflops (eval):  123.152
  gflops (total): 122.672
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135372,0.345754,123.152,122.672

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0951447
  gflops (total): 447.533
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.533

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486433
  gflops (eval):  875.361
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486433,875.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1805.57
  maximum absolute entry in einsum_ir solution: 1805.57
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134976
  time (eval):    0.346219
  gflops (eval):  122.987
  gflops (total): 122.509
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134976,0.346219,122.987,122.509

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0948837
  gflops (total): 448.765
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487647
  gflops (eval):  873.182
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487647,873.182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1895.77
  maximum absolute entry in einsum_ir solution: 1895.77
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00139753
  time (eval):    0.345062
  gflops (eval):  123.399
  gflops (total): 122.901
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00139753,0.345062,123.399,122.901

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0953077
  gflops (total): 446.768
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.768

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486594
  gflops (eval):  875.072
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486594,875.072,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1780.92
  maximum absolute entry in einsum_ir solution: 1780.92
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136075
  time (eval):    0.354317
  gflops (eval):  120.176
  gflops (total): 119.716
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136075,0.354317,120.176,119.716

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0946545
  gflops (total): 449.851
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487306
  gflops (eval):  873.792
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487306,873.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1856.9
  maximum absolute entry in einsum_ir solution: 1856.89
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132525
  time (eval):    0.345851
  gflops (eval):  123.118
  gflops (total): 122.648
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132525,0.345851,123.118,122.648

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0947723
  gflops (total): 449.292
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048877
  gflops (eval):  871.175
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048877,871.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2012.57
  maximum absolute entry in einsum_ir solution: 2012.57
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134752
  time (eval):    0.346221
  gflops (eval):  122.986
  gflops (total): 122.509
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134752,0.346221,122.986,122.509

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0949375
  gflops (total): 448.51
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048958
  gflops (eval):  869.733
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048958,869.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.09
  maximum absolute entry in einsum_ir solution: 1761.09
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134396
  time (eval):    0.345722
  gflops (eval):  123.164
  gflops (total): 122.687
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134396,0.345722,123.164,122.687

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0945887
  gflops (total): 450.164
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486926
  gflops (eval):  874.474
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486926,874.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1700.57
  maximum absolute entry in einsum_ir solution: 1700.57
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132807
  time (eval):    0.346052
  gflops (eval):  123.046
  gflops (total): 122.576
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132807,0.346052,123.046,122.576

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0975677
  gflops (total): 436.419
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,436.419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487655
  gflops (eval):  873.167
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487655,873.167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1914.68
  maximum absolute entry in einsum_ir solution: 1914.68
  maximum element-wise difference:              0.0043335
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132201
  time (eval):    0.345699
  gflops (eval):  123.172
  gflops (total): 122.703
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132201,0.345699,123.172,122.703

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0953561
  gflops (total): 446.541
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487131
  gflops (eval):  874.106
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487131,874.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1803.69
  maximum absolute entry in einsum_ir solution: 1803.69
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132883
  time (eval):    0.345806
  gflops (eval):  123.134
  gflops (total): 122.662
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132883,0.345806,123.134,122.662

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0945081
  gflops (total): 450.548
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485254
  gflops (eval):  877.488
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485254,877.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1799.41
  maximum absolute entry in einsum_ir solution: 1799.41
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136119
  time (eval):    0.345967
  gflops (eval):  123.077
  gflops (total): 122.594
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136119,0.345967,123.077,122.594

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950077
  gflops (total): 448.179
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489118
  gflops (eval):  870.556
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489118,870.556,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1742.9
  maximum absolute entry in einsum_ir solution: 1742.89
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00137963
  time (eval):    0.353232
  gflops (eval):  120.545
  gflops (total): 120.076
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00137963,0.353232,120.545,120.076

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.09451
  gflops (total): 450.539
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487648
  gflops (eval):  873.18
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487648,873.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1881.6
  maximum absolute entry in einsum_ir solution: 1881.6
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135102
  time (eval):    0.346153
  gflops (eval):  123.01
  gflops (total): 122.532
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135102,0.346153,123.01,122.532

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0954433
  gflops (total): 446.133
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0484564
  gflops (eval):  878.737
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0484564,878.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1864.03
  maximum absolute entry in einsum_ir solution: 1864.04
  maximum element-wise difference:              0.00408936
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134517
  time (eval):    0.345998
  gflops (eval):  123.066
  gflops (total): 122.589
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134517,0.345998,123.066,122.589

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0940987
  gflops (total): 452.508
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,452.508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485866
  gflops (eval):  876.383
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485866,876.383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1794.19
  maximum absolute entry in einsum_ir solution: 1794.19
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00148875
  time (eval):    0.345455
  gflops (eval):  123.259
  gflops (total): 122.73
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00148875,0.345455,123.259,122.73

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0952284
  gflops (total): 447.14
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486958
  gflops (eval):  874.417
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486958,874.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1888.04
  maximum absolute entry in einsum_ir solution: 1888.04
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135103
  time (eval):    0.346025
  gflops (eval):  123.056
  gflops (total): 122.577
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135103,0.346025,123.056,122.577

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0942928
  gflops (total): 451.577
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488015
  gflops (eval):  872.522
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488015,872.522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1848.69
  maximum absolute entry in einsum_ir solution: 1848.69
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135142
  time (eval):    0.352248
  gflops (eval):  120.882
  gflops (total): 120.42
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135142,0.352248,120.882,120.42

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0954168
  gflops (total): 446.257
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489528
  gflops (eval):  869.825
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489528,869.825,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1762.82
  maximum absolute entry in einsum_ir solution: 1762.81
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134394
  time (eval):    0.346127
  gflops (eval):  123.02
  gflops (total): 122.544
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134394,0.346127,123.02,122.544

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0946285
  gflops (total): 449.975
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487867
  gflops (eval):  872.787
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487867,872.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1700.66
  maximum absolute entry in einsum_ir solution: 1700.66
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133373
  time (eval):    0.3454
  gflops (eval):  123.279
  gflops (total): 122.804
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133373,0.3454,123.279,122.804

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0947499
  gflops (total): 449.398
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485644
  gflops (eval):  876.782
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485644,876.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1775.15
  maximum absolute entry in einsum_ir solution: 1775.15
  maximum element-wise difference:              0.003479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132639
  time (eval):    0.345899
  gflops (eval):  123.101
  gflops (total): 122.631
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132639,0.345899,123.101,122.631

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0943949
  gflops (total): 451.088
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487486
  gflops (eval):  873.469
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487486,873.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1717.91
  maximum absolute entry in einsum_ir solution: 1717.91
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00131045
  time (eval):    0.345596
  gflops (eval):  123.209
  gflops (total): 122.743
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00131045,0.345596,123.209,122.743

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0953233
  gflops (total): 446.695
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488362
  gflops (eval):  871.903
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488362,871.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1988.46
  maximum absolute entry in einsum_ir solution: 1988.46
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013698
  time (eval):    0.348559
  gflops (eval):  122.161
  gflops (total): 121.683
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013698,0.348559,122.161,121.683

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0942987
  gflops (total): 451.548
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487878
  gflops (eval):  872.769
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487878,872.769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1884.69
  maximum absolute entry in einsum_ir solution: 1884.69
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135335
  time (eval):    0.34607
  gflops (eval):  123.04
  gflops (total): 122.561
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135335,0.34607,123.04,122.561

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0945042
  gflops (total): 450.566
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.04878
  gflops (eval):  872.908
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.04878,872.908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1831.51
  maximum absolute entry in einsum_ir solution: 1831.51
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134395
  time (eval):    0.345412
  gflops (eval):  123.274
  gflops (total): 122.797
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134395,0.345412,123.274,122.797

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0942266
  gflops (total): 451.894
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0490376
  gflops (eval):  868.322
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0490376,868.322,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1739.23
  maximum absolute entry in einsum_ir solution: 1739.23
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134874
  time (eval):    0.345333
  gflops (eval):  123.303
  gflops (total): 122.823
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134874,0.345333,123.303,122.823

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0948701
  gflops (total): 448.829
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485476
  gflops (eval):  877.086
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485476,877.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1627.67
  maximum absolute entry in einsum_ir solution: 1627.67
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00138966
  time (eval):    0.345361
  gflops (eval):  123.293
  gflops (total): 122.798
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00138966,0.345361,123.293,122.798

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0949472
  gflops (total): 448.464
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.464

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487757
  gflops (eval):  872.985
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487757,872.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1770.18
  maximum absolute entry in einsum_ir solution: 1770.18
  maximum element-wise difference:              0.00500488
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00175679
  time (eval):    0.354033
  gflops (eval):  120.273
  gflops (total): 119.679
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00175679,0.354033,120.273,119.679

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0954359
  gflops (total): 446.168
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487082
  gflops (eval):  874.194
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487082,874.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1892.71
  maximum absolute entry in einsum_ir solution: 1892.71
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134718
  time (eval):    0.346375
  gflops (eval):  122.931
  gflops (total): 122.455
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134718,0.346375,122.931,122.455

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0940591
  gflops (total): 452.699
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,452.699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485386
  gflops (eval):  877.249
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485386,877.249,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1871.93
  maximum absolute entry in einsum_ir solution: 1871.93
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134977
  time (eval):    0.345241
  gflops (eval):  123.335
  gflops (total): 122.855
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134977,0.345241,123.335,122.855

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0948028
  gflops (total): 449.147
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,449.147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048776
  gflops (eval):  872.978
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048776,872.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1950.7
  maximum absolute entry in einsum_ir solution: 1950.7
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136951
  time (eval):    0.345754
  gflops (eval):  123.152
  gflops (total): 122.666
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136951,0.345754,123.152,122.666

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0945121
  gflops (total): 450.529
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486181
  gflops (eval):  875.814
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486181,875.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1775.99
  maximum absolute entry in einsum_ir solution: 1775.98
  maximum element-wise difference:              0.00396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134533
  time (eval):    0.351891
  gflops (eval):  121.004
  gflops (total): 120.544
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134533,0.351891,121.004,120.544

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0957879
  gflops (total): 444.528
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0484672
  gflops (eval):  878.541
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0484672,878.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1799.08
  maximum absolute entry in einsum_ir solution: 1799.08
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134343
  time (eval):    0.34623
  gflops (eval):  122.983
  gflops (total): 122.508
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134343,0.34623,122.983,122.508

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0943098
  gflops (total): 451.495
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,451.495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487477
  gflops (eval):  873.486
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487477,873.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1693.55
  maximum absolute entry in einsum_ir solution: 1693.55
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00156986
  time (eval):    0.345688
  gflops (eval):  123.176
  gflops (total): 122.619
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00156986,0.345688,123.176,122.619

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950789
  gflops (total): 447.843
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,447.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485856
  gflops (eval):  876.4
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485856,876.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1849.44
  maximum absolute entry in einsum_ir solution: 1849.44
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.001337
  time (eval):    0.354158
  gflops (eval):  120.23
  gflops (total): 119.778
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.001337,0.354158,120.23,119.778

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0939031
  gflops (total): 453.451
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,453.451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0471555
  gflops (eval):  902.98
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0471555,902.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1719.33
  maximum absolute entry in einsum_ir solution: 1719.33
  maximum element-wise difference:              0.00415039
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00138911
  time (eval):    0.346043
  gflops (eval):  123.05
  gflops (total): 122.558
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00138911,0.346043,123.05,122.558

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0950347
  gflops (total): 448.052
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0484619
  gflops (eval):  878.638
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0484619,878.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1773.65
  maximum absolute entry in einsum_ir solution: 1773.65
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132671
  time (eval):    0.345704
  gflops (eval):  123.17
  gflops (total): 122.699
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132671,0.345704,123.17,122.699

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0944191
  gflops (total): 450.973
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,450.973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487727
  gflops (eval):  873.039
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487727,873.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1758.85
  maximum absolute entry in einsum_ir solution: 1758.85
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00164908
  time (eval):    0.344983
  gflops (eval):  123.428
  gflops (total): 122.84
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00164908,0.344983,123.428,122.84

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0948419
  gflops (total): 448.962
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,448.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485618
  gflops (eval):  876.83
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485618,876.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1770.33
  maximum absolute entry in einsum_ir solution: 1770.33
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013887
  time (eval):    0.346306
  gflops (eval):  122.956
  gflops (total): 122.465
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013887,0.346306,122.956,122.465

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0937995
  gflops (total): 453.951
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,453.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485903
  gflops (eval):  876.315
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485903,876.315,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1839.13
  maximum absolute entry in einsum_ir solution: 1839.13
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133925
  time (eval):    0.345738
  gflops (eval):  123.158
  gflops (total): 122.683
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133925,0.345738,123.158,122.683

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0957248
  gflops (total): 444.821
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486453
  gflops (eval):  875.325
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486453,875.325,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1830.28
  maximum absolute entry in einsum_ir solution: 1830.28
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136369
  time (eval):    0.335782
  gflops (eval):  124.168
  gflops (total): 123.666
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136369,0.335782,124.168,123.666

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111565
  gflops (total): 373.712
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.712

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475309
  gflops (eval):  877.183
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475309,877.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1600.61
  maximum absolute entry in einsum_ir solution: 1600.61
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136168
  time (eval):    0.338241
  gflops (eval):  123.265
  gflops (total): 122.771
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136168,0.338241,123.265,122.771

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111599
  gflops (total): 373.599
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0472997
  gflops (eval):  881.472
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0472997,881.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1712.82
  maximum absolute entry in einsum_ir solution: 1712.82
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133779
  time (eval):    0.33652
  gflops (eval):  123.896
  gflops (total): 123.405
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133779,0.33652,123.896,123.405

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.110907
  gflops (total): 375.931
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473806
  gflops (eval):  879.966
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473806,879.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1820.36
  maximum absolute entry in einsum_ir solution: 1820.36
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143522
  time (eval):    0.337486
  gflops (eval):  123.541
  gflops (total): 123.018
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143522,0.337486,123.541,123.018

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111791
  gflops (total): 372.958
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047119
  gflops (eval):  884.852
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047119,884.852,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1925.38
  maximum absolute entry in einsum_ir solution: 1925.38
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135934
  time (eval):    0.336188
  gflops (eval):  124.018
  gflops (total): 123.519
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135934,0.336188,124.018,123.519

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111539
  gflops (total): 373.799
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.799

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475522
  gflops (eval):  876.792
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475522,876.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1693.71
  maximum absolute entry in einsum_ir solution: 1693.71
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140002
  time (eval):    0.335862
  gflops (eval):  124.138
  gflops (total): 123.623
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140002,0.335862,124.138,123.623

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.110575
  gflops (total): 377.061
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,377.061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475806
  gflops (eval):  876.267
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475806,876.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1677.99
  maximum absolute entry in einsum_ir solution: 1677.99
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134918
  time (eval):    0.335909
  gflops (eval):  124.121
  gflops (total): 123.624
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134918,0.335909,124.121,123.624

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111687
  gflops (total): 373.307
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.307

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474172
  gflops (eval):  879.287
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474172,879.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1812.92
  maximum absolute entry in einsum_ir solution: 1812.92
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134244
  time (eval):    0.33628
  gflops (eval):  123.984
  gflops (total): 123.491
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134244,0.33628,123.984,123.491

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111375
  gflops (total): 374.351
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0470953
  gflops (eval):  885.297
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0470953,885.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1766.82
  maximum absolute entry in einsum_ir solution: 1766.82
  maximum element-wise difference:              0.00421143
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013374
  time (eval):    0.335851
  gflops (eval):  124.142
  gflops (total): 123.65
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013374,0.335851,124.142,123.65

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11121
  gflops (total): 374.906
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0471884
  gflops (eval):  883.55
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0471884,883.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1667.73
  maximum absolute entry in einsum_ir solution: 1667.72
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136631
  time (eval):    0.337486
  gflops (eval):  123.541
  gflops (total): 123.043
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136631,0.337486,123.541,123.043

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112032
  gflops (total): 372.154
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475639
  gflops (eval):  876.575
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475639,876.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1705.12
  maximum absolute entry in einsum_ir solution: 1705.13
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136355
  time (eval):    0.335985
  gflops (eval):  124.093
  gflops (total): 123.591
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136355,0.335985,124.093,123.591

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112176
  gflops (total): 371.677
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475457
  gflops (eval):  876.911
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475457,876.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1690.3
  maximum absolute entry in einsum_ir solution: 1690.31
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134492
  time (eval):    0.335982
  gflops (eval):  124.094
  gflops (total): 123.599
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134492,0.335982,124.094,123.599

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111305
  gflops (total): 374.585
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473884
  gflops (eval):  879.821
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473884,879.821,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1711.14
  maximum absolute entry in einsum_ir solution: 1711.14
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013575
  time (eval):    0.336525
  gflops (eval):  123.894
  gflops (total): 123.396
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013575,0.336525,123.894,123.396

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111331
  gflops (total): 374.499
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.499

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474565
  gflops (eval):  878.559
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474565,878.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1769.2
  maximum absolute entry in einsum_ir solution: 1769.2
  maximum element-wise difference:              0.00323486
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136186
  time (eval):    0.336116
  gflops (eval):  124.044
  gflops (total): 123.544
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136186,0.336116,124.044,123.544

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111474
  gflops (total): 374.018
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474735
  gflops (eval):  878.244
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474735,878.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1754.45
  maximum absolute entry in einsum_ir solution: 1754.45
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143874
  time (eval):    0.335812
  gflops (eval):  124.157
  gflops (total): 123.627
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143874,0.335812,124.157,123.627

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112571
  gflops (total): 370.375
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474118
  gflops (eval):  879.386
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474118,879.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1883.57
  maximum absolute entry in einsum_ir solution: 1883.57
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134781
  time (eval):    0.337078
  gflops (eval):  123.69
  gflops (total): 123.198
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134781,0.337078,123.69,123.198

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111944
  gflops (total): 372.45
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473659
  gflops (eval):  880.24
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473659,880.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1697.33
  maximum absolute entry in einsum_ir solution: 1697.33
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00161952
  time (eval):    0.336426
  gflops (eval):  123.93
  gflops (total): 123.336
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00161952,0.336426,123.93,123.336

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111587
  gflops (total): 373.64
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0472772
  gflops (eval):  881.891
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0472772,881.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1715.53
  maximum absolute entry in einsum_ir solution: 1715.54
  maximum element-wise difference:              0.00323486
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00167654
  time (eval):    0.335842
  gflops (eval):  124.146
  gflops (total): 123.529
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00167654,0.335842,124.146,123.529

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111445
  gflops (total): 374.115
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474541
  gflops (eval):  878.603
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474541,878.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1717.06
  maximum absolute entry in einsum_ir solution: 1717.06
  maximum element-wise difference:              0.003479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00177315
  time (eval):    0.336338
  gflops (eval):  123.962
  gflops (total): 123.312
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00177315,0.336338,123.962,123.312

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111658
  gflops (total): 373.403
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476645
  gflops (eval):  874.725
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476645,874.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1577.89
  maximum absolute entry in einsum_ir solution: 1577.89
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136287
  time (eval):    0.335952
  gflops (eval):  124.105
  gflops (total): 123.603
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136287,0.335952,124.105,123.603

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111137
  gflops (total): 375.154
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474429
  gflops (eval):  878.811
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474429,878.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1601.85
  maximum absolute entry in einsum_ir solution: 1601.85
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135176
  time (eval):    0.336523
  gflops (eval):  123.894
  gflops (total): 123.399
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135176,0.336523,123.894,123.399

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111172
  gflops (total): 375.035
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473043
  gflops (eval):  881.387
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473043,881.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1700.51
  maximum absolute entry in einsum_ir solution: 1700.51
  maximum element-wise difference:              0.00537109
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00147781
  time (eval):    0.336235
  gflops (eval):  124.001
  gflops (total): 123.458
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00147781,0.336235,124.001,123.458

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111069
  gflops (total): 375.384
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473216
  gflops (eval):  881.064
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473216,881.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1832.53
  maximum absolute entry in einsum_ir solution: 1832.53
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140062
  time (eval):    0.336465
  gflops (eval):  123.916
  gflops (total): 123.402
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140062,0.336465,123.916,123.402

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111127
  gflops (total): 375.186
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047519
  gflops (eval):  877.403
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047519,877.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1688.67
  maximum absolute entry in einsum_ir solution: 1688.67
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00153498
  time (eval):    0.337381
  gflops (eval):  123.579
  gflops (total): 123.02
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00153498,0.337381,123.579,123.02

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111196
  gflops (total): 374.953
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0472774
  gflops (eval):  881.887
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0472774,881.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1669.47
  maximum absolute entry in einsum_ir solution: 1669.47
  maximum element-wise difference:              0.00415039
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00143063
  time (eval):    0.33641
  gflops (eval):  123.936
  gflops (total): 123.411
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00143063,0.33641,123.936,123.411

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111808
  gflops (total): 372.9
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475656
  gflops (eval):  876.543
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475656,876.543,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1658.33
  maximum absolute entry in einsum_ir solution: 1658.33
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134428
  time (eval):    0.336121
  gflops (eval):  124.043
  gflops (total): 123.549
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134428,0.336121,124.043,123.549

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111557
  gflops (total): 373.742
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474414
  gflops (eval):  878.838
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474414,878.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1719.63
  maximum absolute entry in einsum_ir solution: 1719.63
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134255
  time (eval):    0.335898
  gflops (eval):  124.125
  gflops (total): 123.631
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134255,0.335898,124.125,123.631

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111244
  gflops (total): 374.791
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0472771
  gflops (eval):  881.893
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0472771,881.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1744.92
  maximum absolute entry in einsum_ir solution: 1744.92
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135438
  time (eval):    0.336296
  gflops (eval):  123.978
  gflops (total): 123.481
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135438,0.336296,123.978,123.481

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112928
  gflops (total): 369.204
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475887
  gflops (eval):  876.118
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475887,876.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1650.29
  maximum absolute entry in einsum_ir solution: 1650.29
  maximum element-wise difference:              0.00421143
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136154
  time (eval):    0.33745
  gflops (eval):  123.554
  gflops (total): 123.057
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136154,0.33745,123.554,123.057

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112858
  gflops (total): 369.432
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475843
  gflops (eval):  876.2
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475843,876.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1615.6
  maximum absolute entry in einsum_ir solution: 1615.6
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00144129
  time (eval):    0.335844
  gflops (eval):  124.145
  gflops (total): 123.615
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00144129,0.335844,124.145,123.615

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11137
  gflops (total): 374.368
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473772
  gflops (eval):  880.03
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473772,880.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1641.17
  maximum absolute entry in einsum_ir solution: 1641.17
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135167
  time (eval):    0.336648
  gflops (eval):  123.848
  gflops (total): 123.353
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135167,0.336648,123.848,123.353

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112393
  gflops (total): 370.96
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474236
  gflops (eval):  879.168
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474236,879.168,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1831.54
  maximum absolute entry in einsum_ir solution: 1831.54
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135411
  time (eval):    0.338072
  gflops (eval):  123.327
  gflops (total): 122.835
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135411,0.338072,123.327,122.835

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111245
  gflops (total): 374.789
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475469
  gflops (eval):  876.888
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475469,876.888,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1852.61
  maximum absolute entry in einsum_ir solution: 1852.6
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0017493
  time (eval):    0.337351
  gflops (eval):  123.59
  gflops (total): 122.953
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0017493,0.337351,123.59,122.953

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111608
  gflops (total): 373.571
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475942
  gflops (eval):  876.017
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475942,876.017,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1752.16
  maximum absolute entry in einsum_ir solution: 1752.16
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136392
  time (eval):    0.336699
  gflops (eval):  123.83
  gflops (total): 123.33
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136392,0.336699,123.83,123.33

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112457
  gflops (total): 370.748
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474856
  gflops (eval):  878.021
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474856,878.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1752.95
  maximum absolute entry in einsum_ir solution: 1752.95
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135408
  time (eval):    0.335735
  gflops (eval):  124.185
  gflops (total): 123.686
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135408,0.335735,124.185,123.686

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111432
  gflops (total): 374.161
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474432
  gflops (eval):  878.806
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474432,878.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1763.44
  maximum absolute entry in einsum_ir solution: 1763.44
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135756
  time (eval):    0.335948
  gflops (eval):  124.106
  gflops (total): 123.607
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135756,0.335948,124.106,123.607

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111523
  gflops (total): 373.854
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.04743
  gflops (eval):  879.05
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.04743,879.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1699.09
  maximum absolute entry in einsum_ir solution: 1699.09
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135535
  time (eval):    0.336333
  gflops (eval):  123.964
  gflops (total): 123.467
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135535,0.336333,123.964,123.467

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111633
  gflops (total): 373.485
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474111
  gflops (eval):  879.4
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474111,879.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.82
  maximum absolute entry in einsum_ir solution: 1807.82
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134953
  time (eval):    0.336227
  gflops (eval):  124.003
  gflops (total): 123.508
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134953,0.336227,124.003,123.508

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111673
  gflops (total): 373.351
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474865
  gflops (eval):  878.005
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474865,878.005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1858.58
  maximum absolute entry in einsum_ir solution: 1858.58
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013991
  time (eval):    0.336025
  gflops (eval):  124.078
  gflops (total): 123.564
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013991,0.336025,124.078,123.564

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111844
  gflops (total): 372.781
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473506
  gflops (eval):  880.524
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473506,880.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1745.46
  maximum absolute entry in einsum_ir solution: 1745.46
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135602
  time (eval):    0.338423
  gflops (eval):  123.199
  gflops (total): 122.707
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135602,0.338423,123.199,122.707

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111862
  gflops (total): 372.72
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0472442
  gflops (eval):  882.508
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0472442,882.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1804.04
  maximum absolute entry in einsum_ir solution: 1804.04
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140397
  time (eval):    0.335907
  gflops (eval):  124.121
  gflops (total): 123.605
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140397,0.335907,124.121,123.605

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111135
  gflops (total): 375.159
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474957
  gflops (eval):  877.834
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474957,877.834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1719.22
  maximum absolute entry in einsum_ir solution: 1719.22
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136383
  time (eval):    0.336821
  gflops (eval):  123.785
  gflops (total): 123.286
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136383,0.336821,123.785,123.286

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111787
  gflops (total): 372.972
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475882
  gflops (eval):  876.127
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475882,876.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1800.07
  maximum absolute entry in einsum_ir solution: 1800.07
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013549
  time (eval):    0.336218
  gflops (eval):  124.007
  gflops (total): 123.509
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013549,0.336218,124.007,123.509

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111081
  gflops (total): 375.34
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474381
  gflops (eval):  878.899
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474381,878.899,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1691.77
  maximum absolute entry in einsum_ir solution: 1691.77
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135805
  time (eval):    0.336199
  gflops (eval):  124.014
  gflops (total): 123.515
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135805,0.336199,124.014,123.515

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111648
  gflops (total): 373.437
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474668
  gflops (eval):  878.368
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474668,878.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1694.47
  maximum absolute entry in einsum_ir solution: 1694.47
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00138437
  time (eval):    0.336444
  gflops (eval):  123.923
  gflops (total): 123.416
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00138437,0.336444,123.923,123.416

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111154
  gflops (total): 375.097
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047339
  gflops (eval):  880.739
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047339,880.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1696.63
  maximum absolute entry in einsum_ir solution: 1696.63
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136595
  time (eval):    0.336695
  gflops (eval):  123.831
  gflops (total): 123.331
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136595,0.336695,123.831,123.331

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111146
  gflops (total): 375.122
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475454
  gflops (eval):  876.916
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475454,876.916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1794.48
  maximum absolute entry in einsum_ir solution: 1794.48
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136599
  time (eval):    0.336472
  gflops (eval):  123.913
  gflops (total): 123.412
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136599,0.336472,123.913,123.412

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111224
  gflops (total): 374.858
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.858

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047359
  gflops (eval):  880.368
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047359,880.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1788.83
  maximum absolute entry in einsum_ir solution: 1788.83
  maximum element-wise difference:              0.0045166
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013562
  time (eval):    0.336903
  gflops (eval):  123.755
  gflops (total): 123.258
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013562,0.336903,123.755,123.258

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.110985
  gflops (total): 375.668
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047498
  gflops (eval):  877.791
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047498,877.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1657.78
  maximum absolute entry in einsum_ir solution: 1657.78
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135803
  time (eval):    0.335895
  gflops (eval):  124.126
  gflops (total): 123.626
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135803,0.335895,124.126,123.626

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111284
  gflops (total): 374.659
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473848
  gflops (eval):  879.889
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473848,879.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1809.17
  maximum absolute entry in einsum_ir solution: 1809.17
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136808
  time (eval):    0.335994
  gflops (eval):  124.09
  gflops (total): 123.586
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136808,0.335994,124.09,123.586

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111609
  gflops (total): 373.566
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475473
  gflops (eval):  876.881
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475473,876.881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1629.25
  maximum absolute entry in einsum_ir solution: 1629.25
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00137158
  time (eval):    0.335678
  gflops (eval):  124.206
  gflops (total): 123.701
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00137158,0.335678,124.206,123.701

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111701
  gflops (total): 373.258
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475889
  gflops (eval):  876.114
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475889,876.114,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1705.04
  maximum absolute entry in einsum_ir solution: 1705.04
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141022
  time (eval):    0.335781
  gflops (eval):  124.168
  gflops (total): 123.649
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141022,0.335781,124.168,123.649

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111142
  gflops (total): 375.136
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474284
  gflops (eval):  879.079
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474284,879.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1729.88
  maximum absolute entry in einsum_ir solution: 1729.87
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136242
  time (eval):    0.335883
  gflops (eval):  124.13
  gflops (total): 123.629
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136242,0.335883,124.13,123.629

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111323
  gflops (total): 374.524
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047454
  gflops (eval):  878.605
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047454,878.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1686.29
  maximum absolute entry in einsum_ir solution: 1686.28
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135697
  time (eval):    0.336294
  gflops (eval):  123.979
  gflops (total): 123.481
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135697,0.336294,123.979,123.481

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111169
  gflops (total): 375.045
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0469292
  gflops (eval):  888.431
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0469292,888.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1713.4
  maximum absolute entry in einsum_ir solution: 1713.4
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00154809
  time (eval):    0.33616
  gflops (eval):  124.028
  gflops (total): 123.46
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00154809,0.33616,124.028,123.46

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111935
  gflops (total): 372.479
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474649
  gflops (eval):  878.403
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474649,878.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1690.28
  maximum absolute entry in einsum_ir solution: 1690.28
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134423
  time (eval):    0.335767
  gflops (eval):  124.174
  gflops (total): 123.678
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134423,0.335767,124.174,123.678

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.110398
  gflops (total): 377.665
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,377.665

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474383
  gflops (eval):  878.895
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474383,878.895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1730.2
  maximum absolute entry in einsum_ir solution: 1730.21
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135675
  time (eval):    0.336351
  gflops (eval):  123.958
  gflops (total): 123.46
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135675,0.336351,123.958,123.46

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112174
  gflops (total): 371.684
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475903
  gflops (eval):  876.089
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475903,876.089,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1705.33
  maximum absolute entry in einsum_ir solution: 1705.33
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135979
  time (eval):    0.33568
  gflops (eval):  124.206
  gflops (total): 123.705
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135979,0.33568,124.206,123.705

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.110937
  gflops (total): 375.83
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473544
  gflops (eval):  880.453
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473544,880.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1776.98
  maximum absolute entry in einsum_ir solution: 1776.98
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134226
  time (eval):    0.336136
  gflops (eval):  124.037
  gflops (total): 123.544
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134226,0.336136,124.037,123.544

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111611
  gflops (total): 373.559
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0470523
  gflops (eval):  886.105
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0470523,886.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1642.13
  maximum absolute entry in einsum_ir solution: 1642.13
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136591
  time (eval):    0.335824
  gflops (eval):  124.152
  gflops (total): 123.649
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136591,0.335824,124.152,123.649

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112165
  gflops (total): 371.716
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047494
  gflops (eval):  877.866
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047494,877.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1677.44
  maximum absolute entry in einsum_ir solution: 1677.44
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00144698
  time (eval):    0.335776
  gflops (eval):  124.17
  gflops (total): 123.637
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00144698,0.335776,124.17,123.637

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111822
  gflops (total): 372.856
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474761
  gflops (eval):  878.196
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474761,878.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1712.1
  maximum absolute entry in einsum_ir solution: 1712.1
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00173444
  time (eval):    0.337458
  gflops (eval):  123.551
  gflops (total): 122.919
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00173444,0.337458,123.551,122.919

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.110833
  gflops (total): 376.182
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,376.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474024
  gflops (eval):  879.561
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474024,879.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1768.04
  maximum absolute entry in einsum_ir solution: 1768.04
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00137324
  time (eval):    0.336592
  gflops (eval):  123.869
  gflops (total): 123.366
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00137324,0.336592,123.869,123.366

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112117
  gflops (total): 371.874
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.874

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475002
  gflops (eval):  877.75
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475002,877.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1720.07
  maximum absolute entry in einsum_ir solution: 1720.07
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136606
  time (eval):    0.335745
  gflops (eval):  124.182
  gflops (total): 123.678
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136606,0.335745,124.182,123.678

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111986
  gflops (total): 372.307
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.307

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475009
  gflops (eval):  877.737
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475009,877.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1865.33
  maximum absolute entry in einsum_ir solution: 1865.33
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013643
  time (eval):    0.337876
  gflops (eval):  123.398
  gflops (total): 122.902
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013643,0.337876,123.398,122.902

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112729
  gflops (total): 369.853
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0472288
  gflops (eval):  882.794
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0472288,882.794,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1660.33
  maximum absolute entry in einsum_ir solution: 1660.33
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135842
  time (eval):    0.335985
  gflops (eval):  124.093
  gflops (total): 123.593
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135842,0.335985,124.093,123.593

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111853
  gflops (total): 372.753
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475857
  gflops (eval):  876.174
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475857,876.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1787.69
  maximum absolute entry in einsum_ir solution: 1787.69
  maximum element-wise difference:              0.00286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135736
  time (eval):    0.336245
  gflops (eval):  123.997
  gflops (total): 123.498
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135736,0.336245,123.997,123.498

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111708
  gflops (total): 373.234
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473137
  gflops (eval):  881.211
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473137,881.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1663.65
  maximum absolute entry in einsum_ir solution: 1663.65
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134515
  time (eval):    0.335908
  gflops (eval):  124.121
  gflops (total): 123.626
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134515,0.335908,124.121,123.626

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111326
  gflops (total): 374.516
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047462
  gflops (eval):  878.457
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047462,878.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1563.23
  maximum absolute entry in einsum_ir solution: 1563.23
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136765
  time (eval):    0.336138
  gflops (eval):  124.036
  gflops (total): 123.534
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136765,0.336138,124.036,123.534

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111089
  gflops (total): 375.314
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474382
  gflops (eval):  878.897
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474382,878.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1705.94
  maximum absolute entry in einsum_ir solution: 1705.94
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135477
  time (eval):    0.336242
  gflops (eval):  123.998
  gflops (total): 123.5
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135477,0.336242,123.998,123.5

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111071
  gflops (total): 375.376
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.376

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474541
  gflops (eval):  878.603
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474541,878.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1730.49
  maximum absolute entry in einsum_ir solution: 1730.49
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00130558
  time (eval):    0.336427
  gflops (eval):  123.93
  gflops (total): 123.451
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00130558,0.336427,123.93,123.451

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111531
  gflops (total): 373.829
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474845
  gflops (eval):  878.041
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474845,878.041,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1831.27
  maximum absolute entry in einsum_ir solution: 1831.27
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140729
  time (eval):    0.335938
  gflops (eval):  124.11
  gflops (total): 123.593
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140729,0.335938,124.11,123.593

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111369
  gflops (total): 374.372
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473738
  gflops (eval):  880.093
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473738,880.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1673.94
  maximum absolute entry in einsum_ir solution: 1673.94
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136356
  time (eval):    0.336676
  gflops (eval):  123.838
  gflops (total): 123.339
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136356,0.336676,123.838,123.339

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111267
  gflops (total): 374.715
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474594
  gflops (eval):  878.505
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474594,878.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1811.45
  maximum absolute entry in einsum_ir solution: 1811.45
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013354
  time (eval):    0.337914
  gflops (eval):  123.385
  gflops (total): 122.899
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013354,0.337914,123.385,122.899

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111252
  gflops (total): 374.764
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474565
  gflops (eval):  878.559
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474565,878.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1808.98
  maximum absolute entry in einsum_ir solution: 1808.98
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135659
  time (eval):    0.336184
  gflops (eval):  124.019
  gflops (total): 123.521
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135659,0.336184,124.019,123.521

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112106
  gflops (total): 371.91
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475764
  gflops (eval):  876.345
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475764,876.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1960.82
  maximum absolute entry in einsum_ir solution: 1960.82
  maximum element-wise difference:              0.00299072
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136079
  time (eval):    0.337488
  gflops (eval):  123.54
  gflops (total): 123.044
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136079,0.337488,123.54,123.044

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111029
  gflops (total): 375.518
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047318
  gflops (eval):  881.13
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047318,881.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1716.63
  maximum absolute entry in einsum_ir solution: 1716.63
  maximum element-wise difference:              0.00286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136648
  time (eval):    0.336531
  gflops (eval):  123.891
  gflops (total): 123.39
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136648,0.336531,123.891,123.39

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111564
  gflops (total): 373.716
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0471981
  gflops (eval):  883.368
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0471981,883.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1753.48
  maximum absolute entry in einsum_ir solution: 1753.49
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136789
  time (eval):    0.336736
  gflops (eval):  123.816
  gflops (total): 123.315
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136789,0.336736,123.816,123.315

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111148
  gflops (total): 375.116
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474365
  gflops (eval):  878.929
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474365,878.929,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1686.62
  maximum absolute entry in einsum_ir solution: 1686.62
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135954
  time (eval):    0.33597
  gflops (eval):  124.098
  gflops (total): 123.598
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135954,0.33597,124.098,123.598

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112617
  gflops (total): 370.222
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.222

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474552
  gflops (eval):  878.583
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474552,878.583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1721.97
  maximum absolute entry in einsum_ir solution: 1721.97
  maximum element-wise difference:              0.00335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136297
  time (eval):    0.336201
  gflops (eval):  124.013
  gflops (total): 123.513
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136297,0.336201,124.013,123.513

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111047
  gflops (total): 375.456
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475396
  gflops (eval):  877.023
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475396,877.023,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1673.12
  maximum absolute entry in einsum_ir solution: 1673.12
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135395
  time (eval):    0.335666
  gflops (eval):  124.211
  gflops (total): 123.712
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135395,0.335666,124.211,123.712

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111521
  gflops (total): 373.859
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047315
  gflops (eval):  881.186
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047315,881.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.23
  maximum absolute entry in einsum_ir solution: 1761.23
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134459
  time (eval):    0.335834
  gflops (eval):  124.149
  gflops (total): 123.654
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134459,0.335834,124.149,123.654

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112294
  gflops (total): 371.287
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.287

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474169
  gflops (eval):  879.292
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474169,879.292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1736.14
  maximum absolute entry in einsum_ir solution: 1736.15
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013558
  time (eval):    0.336956
  gflops (eval):  123.735
  gflops (total): 123.239
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013558,0.336956,123.735,123.239

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111457
  gflops (total): 374.075
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474959
  gflops (eval):  877.83
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474959,877.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1900.94
  maximum absolute entry in einsum_ir solution: 1900.94
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135401
  time (eval):    0.335691
  gflops (eval):  124.201
  gflops (total): 123.702
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135401,0.335691,124.201,123.702

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111776
  gflops (total): 373.008
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475118
  gflops (eval):  877.537
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475118,877.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1683.52
  maximum absolute entry in einsum_ir solution: 1683.52
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134996
  time (eval):    0.335989
  gflops (eval):  124.091
  gflops (total): 123.595
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134996,0.335989,124.091,123.595

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111654
  gflops (total): 373.416
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474475
  gflops (eval):  878.726
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474475,878.726,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1598.02
  maximum absolute entry in einsum_ir solution: 1598.02
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00137856
  time (eval):    0.337997
  gflops (eval):  123.354
  gflops (total): 122.853
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00137856,0.337997,123.354,122.853

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111209
  gflops (total): 374.909
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474764
  gflops (eval):  878.191
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474764,878.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1684.06
  maximum absolute entry in einsum_ir solution: 1684.06
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134897
  time (eval):    0.336825
  gflops (eval):  123.784
  gflops (total): 123.29
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134897,0.336825,123.784,123.29

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111372
  gflops (total): 374.361
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475097
  gflops (eval):  877.575
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475097,877.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1627.22
  maximum absolute entry in einsum_ir solution: 1627.22
  maximum element-wise difference:              0.0045166
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141988
  time (eval):    0.336692
  gflops (eval):  123.832
  gflops (total): 123.312
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141988,0.336692,123.832,123.312

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111611
  gflops (total): 373.56
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474579
  gflops (eval):  878.533
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474579,878.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1897.46
  maximum absolute entry in einsum_ir solution: 1897.46
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136188
  time (eval):    0.336437
  gflops (eval):  123.926
  gflops (total): 123.426
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136188,0.336437,123.926,123.426

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.116785
  gflops (total): 357.01
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,357.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475325
  gflops (eval):  877.154
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475325,877.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1646.53
  maximum absolute entry in einsum_ir solution: 1646.53
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135417
  time (eval):    0.336003
  gflops (eval):  124.086
  gflops (total): 123.588
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135417,0.336003,124.086,123.588

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111159
  gflops (total): 375.08
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047365
  gflops (eval):  880.255
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047365,880.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1676.73
  maximum absolute entry in einsum_ir solution: 1676.72
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0012591
  time (eval):    0.337285
  gflops (eval):  123.615
  gflops (total): 123.155
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0012591,0.337285,123.615,123.155

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111633
  gflops (total): 373.484
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.484

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047292
  gflops (eval):  881.614
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047292,881.614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1924.6
  maximum absolute entry in einsum_ir solution: 1924.6
  maximum element-wise difference:              0.00311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00150936
  time (eval):    0.336048
  gflops (eval):  124.07
  gflops (total): 123.515
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00150936,0.336048,124.07,123.515

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.110934
  gflops (total): 375.839
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,375.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047446
  gflops (eval):  878.754
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047446,878.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1732.01
  maximum absolute entry in einsum_ir solution: 1732.01
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00139512
  time (eval):    0.338632
  gflops (eval):  123.123
  gflops (total): 122.618
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00139512,0.338632,123.123,122.618

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112288
  gflops (total): 371.308
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475475
  gflops (eval):  876.877
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475475,876.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1959.64
  maximum absolute entry in einsum_ir solution: 1959.64
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136947
  time (eval):    0.336428
  gflops (eval):  123.929
  gflops (total): 123.427
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136947,0.336428,123.929,123.427

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11159
  gflops (total): 373.631
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0471232
  gflops (eval):  884.773
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0471232,884.773,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2011.68
  maximum absolute entry in einsum_ir solution: 2011.68
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135717
  time (eval):    0.335949
  gflops (eval):  124.106
  gflops (total): 123.607
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135717,0.335949,124.106,123.607

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.110544
  gflops (total): 377.165
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,377.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047424
  gflops (eval):  879.161
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047424,879.161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1680.05
  maximum absolute entry in einsum_ir solution: 1680.05
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135297
  time (eval):    0.336116
  gflops (eval):  124.044
  gflops (total): 123.547
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135297,0.336116,124.044,123.547

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11124
  gflops (total): 374.806
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474932
  gflops (eval):  877.879
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474932,877.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1968.8
  maximum absolute entry in einsum_ir solution: 1968.81
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135751
  time (eval):    0.336469
  gflops (eval):  123.914
  gflops (total): 123.416
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135751,0.336469,123.914,123.416

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11147
  gflops (total): 374.033
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0477585
  gflops (eval):  873.004
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0477585,873.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1614.15
  maximum absolute entry in einsum_ir solution: 1614.15
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140311
  time (eval):    0.336482
  gflops (eval):  123.91
  gflops (total): 123.395
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140311,0.336482,123.91,123.395

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111608
  gflops (total): 373.569
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473799
  gflops (eval):  879.979
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473799,879.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1659.26
  maximum absolute entry in einsum_ir solution: 1659.26
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135217
  time (eval):    0.335888
  gflops (eval):  124.129
  gflops (total): 123.631
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135217,0.335888,124.129,123.631

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111557
  gflops (total): 373.739
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474975
  gflops (eval):  877.801
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474975,877.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1791.22
  maximum absolute entry in einsum_ir solution: 1791.22
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135152
  time (eval):    0.336025
  gflops (eval):  124.078
  gflops (total): 123.581
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135152,0.336025,124.078,123.581

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111241
  gflops (total): 374.803
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,374.803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473479
  gflops (eval):  880.575
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473479,880.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1825.32
  maximum absolute entry in einsum_ir solution: 1825.32
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0017078
  time (eval):    0.0529186
  gflops (eval):  786.854
  gflops (total): 762.254
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0017078,0.0529186,786.854,762.254

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801896
  gflops (total): 519.259
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829944
  gflops (eval):  501.711
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829944,501.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.224
  maximum absolute entry in einsum_ir solution: 109.224
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140825
  time (eval):    0.0533982
  gflops (eval):  779.787
  gflops (total): 759.75
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140825,0.0533982,779.787,759.75

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080455
  gflops (total): 517.547
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832689
  gflops (eval):  500.057
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832689,500.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.703
  maximum absolute entry in einsum_ir solution: 120.703
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142124
  time (eval):    0.0529949
  gflops (eval):  785.72
  gflops (total): 765.199
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142124,0.0529949,785.72,765.199

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799998
  gflops (total): 520.491
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830804
  gflops (eval):  501.191
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830804,501.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.338
  maximum absolute entry in einsum_ir solution: 116.338
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141255
  time (eval):    0.0532638
  gflops (eval):  781.754
  gflops (total): 761.557
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141255,0.0532638,781.754,761.557

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801183
  gflops (total): 519.721
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828815
  gflops (eval):  502.394
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828815,502.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.395
  maximum absolute entry in einsum_ir solution: 112.395
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145199
  time (eval):    0.0532156
  gflops (eval):  782.462
  gflops (total): 761.679
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145199,0.0532156,782.462,761.679

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799568
  gflops (total): 520.771
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082932
  gflops (eval):  502.088
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082932,502.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.913
  maximum absolute entry in einsum_ir solution: 111.913
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141267
  time (eval):    0.0533915
  gflops (eval):  779.884
  gflops (total): 759.782
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141267,0.0533915,779.884,759.782

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801277
  gflops (total): 519.66
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829685
  gflops (eval):  501.867
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829685,501.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.004
  maximum absolute entry in einsum_ir solution: 120.004
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139881
  time (eval):    0.0528635
  gflops (eval):  787.674
  gflops (total): 767.369
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139881,0.0528635,787.674,767.369

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798404
  gflops (total): 521.53
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830812
  gflops (eval):  501.186
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830812,501.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.184
  maximum absolute entry in einsum_ir solution: 114.184
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142879
  time (eval):    0.0527781
  gflops (eval):  788.949
  gflops (total): 768.154
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142879,0.0527781,788.949,768.154

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0804184
  gflops (total): 517.782
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833839
  gflops (eval):  499.367
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833839,499.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.971
  maximum absolute entry in einsum_ir solution: 111.971
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140888
  time (eval):    0.0533435
  gflops (eval):  780.586
  gflops (total): 760.5
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140888,0.0533435,780.586,760.5

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0804556
  gflops (total): 517.543
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829364
  gflops (eval):  502.062
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829364,502.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.387
  maximum absolute entry in einsum_ir solution: 111.387
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140131
  time (eval):    0.0530489
  gflops (eval):  784.92
  gflops (total): 764.72
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140131,0.0530489,784.92,764.72

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798887
  gflops (total): 521.215
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.215

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0820785
  gflops (eval):  507.309
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0820785,507.309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.773
  maximum absolute entry in einsum_ir solution: 112.773
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141851
  time (eval):    0.0531493
  gflops (eval):  783.438
  gflops (total): 763.072
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141851,0.0531493,783.438,763.072

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800583
  gflops (total): 520.111
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0846427
  gflops (eval):  491.941
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0846427,491.941,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.605
  maximum absolute entry in einsum_ir solution: 114.605
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142205
  time (eval):    0.0529566
  gflops (eval):  786.289
  gflops (total): 765.727
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142205,0.0529566,786.289,765.727

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800412
  gflops (total): 520.222
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.222

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831342
  gflops (eval):  500.867
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831342,500.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.377
  maximum absolute entry in einsum_ir solution: 115.377
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141701
  time (eval):    0.0529015
  gflops (eval):  787.107
  gflops (total): 766.574
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141701,0.0529015,787.107,766.574

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800849
  gflops (total): 519.938
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829781
  gflops (eval):  501.81
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829781,501.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.997
  maximum absolute entry in einsum_ir solution: 111.997
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140987
  time (eval):    0.0527552
  gflops (eval):  789.29
  gflops (total): 768.746
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140987,0.0527552,789.29,768.746

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802776
  gflops (total): 518.69
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832005
  gflops (eval):  500.468
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832005,500.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.032
  maximum absolute entry in einsum_ir solution: 113.032
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141148
  time (eval):    0.052831
  gflops (eval):  788.158
  gflops (total): 767.648
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141148,0.052831,788.158,767.648

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800089
  gflops (total): 520.432
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827993
  gflops (eval):  502.893
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827993,502.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.377
  maximum absolute entry in einsum_ir solution: 115.377
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141628
  time (eval):    0.0533471
  gflops (eval):  780.534
  gflops (total): 760.348
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141628,0.0533471,780.534,760.348

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801091
  gflops (total): 519.781
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829162
  gflops (eval):  502.184
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829162,502.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.644
  maximum absolute entry in einsum_ir solution: 110.644
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141884
  time (eval):    0.0531444
  gflops (eval):  783.511
  gflops (total): 763.137
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141884,0.0531444,783.511,763.137

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798947
  gflops (total): 521.176
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827418
  gflops (eval):  503.242
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827418,503.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.917
  maximum absolute entry in einsum_ir solution: 109.917
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00154121
  time (eval):    0.0529444
  gflops (eval):  786.47
  gflops (total): 764.224
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00154121,0.0529444,786.47,764.224

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798917
  gflops (total): 521.196
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0821251
  gflops (eval):  507.021
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0821251,507.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.847
  maximum absolute entry in einsum_ir solution: 124.847
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139123
  time (eval):    0.0529742
  gflops (eval):  786.028
  gflops (total): 765.914
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139123,0.0529742,786.028,765.914

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0797596
  gflops (total): 522.058
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,522.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082083
  gflops (eval):  507.282
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082083,507.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.623
  maximum absolute entry in einsum_ir solution: 112.623
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014167
  time (eval):    0.053163
  gflops (eval):  783.236
  gflops (total): 762.906
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014167,0.053163,783.236,762.906

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801895
  gflops (total): 519.26
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824739
  gflops (eval):  504.877
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824739,504.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.259
  maximum absolute entry in einsum_ir solution: 118.259
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140871
  time (eval):    0.0527539
  gflops (eval):  789.311
  gflops (total): 768.782
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140871,0.0527539,789.311,768.782

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800557
  gflops (total): 520.128
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831634
  gflops (eval):  500.691
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831634,500.691,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.678
  maximum absolute entry in einsum_ir solution: 109.678
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00150483
  time (eval):    0.0534789
  gflops (eval):  778.61
  gflops (total): 757.301
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00150483,0.0534789,778.61,757.301

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802325
  gflops (total): 518.982
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836713
  gflops (eval):  497.652
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836713,497.652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.484
  maximum absolute entry in einsum_ir solution: 110.484
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141756
  time (eval):    0.0529238
  gflops (eval):  786.776
  gflops (total): 766.252
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141756,0.0529238,786.776,766.252

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079942
  gflops (total): 520.868
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833637
  gflops (eval):  499.489
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833637,499.489,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.006
  maximum absolute entry in einsum_ir solution: 110.006
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00160404
  time (eval):    0.0534232
  gflops (eval):  779.421
  gflops (total): 756.701
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00160404,0.0534232,779.421,756.701

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798807
  gflops (total): 521.267
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827092
  gflops (eval):  503.441
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827092,503.441,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.603
  maximum absolute entry in einsum_ir solution: 109.603
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141315
  time (eval):    0.053104
  gflops (eval):  784.107
  gflops (total): 763.782
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141315,0.053104,784.107,763.782

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801032
  gflops (total): 519.819
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.08275
  gflops (eval):  503.192
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.08275,503.192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.754
  maximum absolute entry in einsum_ir solution: 107.754
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140505
  time (eval):    0.0529797
  gflops (eval):  785.947
  gflops (total): 765.641
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140505,0.0529797,785.947,765.641

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799146
  gflops (total): 521.046
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0838358
  gflops (eval):  496.675
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0838358,496.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.55
  maximum absolute entry in einsum_ir solution: 118.55
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149173
  time (eval):    0.0533096
  gflops (eval):  781.082
  gflops (total): 759.82
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149173,0.0533096,781.082,759.82

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800411
  gflops (total): 520.223
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0819173
  gflops (eval):  508.307
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0819173,508.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.32
  maximum absolute entry in einsum_ir solution: 114.32
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014125
  time (eval):    0.0530707
  gflops (eval):  784.598
  gflops (total): 764.257
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014125,0.0530707,784.598,764.257

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800526
  gflops (total): 520.148
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0843714
  gflops (eval):  493.522
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0843714,493.522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.946
  maximum absolute entry in einsum_ir solution: 120.946
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.001446
  time (eval):    0.0532594
  gflops (eval):  781.819
  gflops (total): 761.154
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.001446,0.0532594,781.819,761.154

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800869
  gflops (total): 519.925
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0819514
  gflops (eval):  508.096
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0819514,508.096,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.807
  maximum absolute entry in einsum_ir solution: 112.807
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142047
  time (eval):    0.0530188
  gflops (eval):  785.367
  gflops (total): 764.874
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142047,0.0530188,785.367,764.874

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800344
  gflops (total): 520.266
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832226
  gflops (eval):  500.335
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832226,500.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.508
  maximum absolute entry in einsum_ir solution: 114.508
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141874
  time (eval):    0.0530525
  gflops (eval):  784.867
  gflops (total): 764.425
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141874,0.0530525,784.867,764.425

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080101
  gflops (total): 519.834
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832576
  gflops (eval):  500.125
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832576,500.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.297
  maximum absolute entry in einsum_ir solution: 116.297
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140714
  time (eval):    0.0528531
  gflops (eval):  787.829
  gflops (total): 767.398
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140714,0.0528531,787.829,767.398

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800853
  gflops (total): 519.936
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.936

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824357
  gflops (eval):  505.111
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824357,505.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.479
  maximum absolute entry in einsum_ir solution: 109.479
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140985
  time (eval):    0.0533369
  gflops (eval):  780.682
  gflops (total): 760.578
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140985,0.0533369,780.682,760.578

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799076
  gflops (total): 521.092
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0815146
  gflops (eval):  510.819
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0815146,510.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.29
  maximum absolute entry in einsum_ir solution: 114.29
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141062
  time (eval):    0.0534468
  gflops (eval):  779.077
  gflops (total): 759.043
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141062,0.0534468,779.077,759.043

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802017
  gflops (total): 519.181
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831388
  gflops (eval):  500.84
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831388,500.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.148
  maximum absolute entry in einsum_ir solution: 115.148
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141567
  time (eval):    0.0527328
  gflops (eval):  789.626
  gflops (total): 768.982
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141567,0.0527328,789.626,768.982

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798586
  gflops (total): 521.411
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832989
  gflops (eval):  499.877
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832989,499.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.92
  maximum absolute entry in einsum_ir solution: 108.92
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140017
  time (eval):    0.0538075
  gflops (eval):  773.854
  gflops (total): 754.228
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140017,0.0538075,773.854,754.228

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798072
  gflops (total): 521.747
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829326
  gflops (eval):  502.084
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829326,502.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.488
  maximum absolute entry in einsum_ir solution: 121.488
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141528
  time (eval):    0.0530408
  gflops (eval):  785.041
  gflops (total): 764.639
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141528,0.0530408,785.041,764.639

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0797659
  gflops (total): 522.018
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,522.018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836514
  gflops (eval):  497.77
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836514,497.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.781
  maximum absolute entry in einsum_ir solution: 107.781
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140747
  time (eval):    0.0535608
  gflops (eval):  777.419
  gflops (total): 757.513
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140747,0.0535608,777.419,757.513

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079992
  gflops (total): 520.542
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832116
  gflops (eval):  500.402
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832116,500.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.957
  maximum absolute entry in einsum_ir solution: 115.957
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140372
  time (eval):    0.0529554
  gflops (eval):  786.307
  gflops (total): 766.003
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140372,0.0529554,786.307,766.003

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.08036
  gflops (total): 518.158
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0822819
  gflops (eval):  506.055
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0822819,506.055,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.469
  maximum absolute entry in einsum_ir solution: 117.469
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141346
  time (eval):    0.052953
  gflops (eval):  786.342
  gflops (total): 765.898
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141346,0.052953,786.342,765.898

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801498
  gflops (total): 519.517
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823603
  gflops (eval):  505.573
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823603,505.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.479
  maximum absolute entry in einsum_ir solution: 109.479
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141653
  time (eval):    0.0529664
  gflops (eval):  786.143
  gflops (total): 765.666
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141653,0.0529664,786.143,765.666

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798011
  gflops (total): 521.787
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828145
  gflops (eval):  502.801
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828145,502.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.808
  maximum absolute entry in einsum_ir solution: 106.808
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142755
  time (eval):    0.052967
  gflops (eval):  786.134
  gflops (total): 765.503
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142755,0.052967,786.134,765.503

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799625
  gflops (total): 520.734
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831132
  gflops (eval):  500.994
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831132,500.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.029
  maximum absolute entry in einsum_ir solution: 110.029
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142577
  time (eval):    0.0535639
  gflops (eval):  777.375
  gflops (total): 757.219
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142577,0.0535639,777.375,757.219

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802242
  gflops (total): 519.035
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830373
  gflops (eval):  501.452
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830373,501.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.246
  maximum absolute entry in einsum_ir solution: 111.246
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141821
  time (eval):    0.0529691
  gflops (eval):  786.103
  gflops (total): 765.604
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141821,0.0529691,786.103,765.604

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801189
  gflops (total): 519.717
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.717

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835737
  gflops (eval):  498.233
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835737,498.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.704
  maximum absolute entry in einsum_ir solution: 108.704
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141072
  time (eval):    0.0535937
  gflops (eval):  776.942
  gflops (total): 757.016
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141072,0.0535937,776.942,757.016

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800798
  gflops (total): 519.971
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825838
  gflops (eval):  504.205
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825838,504.205,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.56
  maximum absolute entry in einsum_ir solution: 110.56
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141158
  time (eval):    0.0530896
  gflops (eval):  784.319
  gflops (total): 764.005
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141158,0.0530896,784.319,764.005

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799931
  gflops (total): 520.535
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0822036
  gflops (eval):  506.537
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0822036,506.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.547
  maximum absolute entry in einsum_ir solution: 111.547
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141052
  time (eval):    0.0525202
  gflops (eval):  792.823
  gflops (total): 772.087
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141052,0.0525202,792.823,772.087

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800284
  gflops (total): 520.305
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826435
  gflops (eval):  503.841
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826435,503.841,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.749
  maximum absolute entry in einsum_ir solution: 117.749
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149288
  time (eval):    0.0529479
  gflops (eval):  786.418
  gflops (total): 764.852
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149288,0.0529479,786.418,764.852

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802852
  gflops (total): 518.641
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828644
  gflops (eval):  502.498
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828644,502.498,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.204
  maximum absolute entry in einsum_ir solution: 117.204
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142337
  time (eval):    0.053541
  gflops (eval):  777.707
  gflops (total): 757.567
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142337,0.053541,777.707,757.567

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799426
  gflops (total): 520.864
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.864

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830117
  gflops (eval):  501.606
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830117,501.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      126.658
  maximum absolute entry in einsum_ir solution: 126.658
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00168825
  time (eval):    0.0535042
  gflops (eval):  778.242
  gflops (total): 754.437
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00168825,0.0535042,778.242,754.437

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802045
  gflops (total): 519.163
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082879
  gflops (eval):  502.409
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082879,502.409,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.001
  maximum absolute entry in einsum_ir solution: 111.001
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141168
  time (eval):    0.0530358
  gflops (eval):  785.115
  gflops (total): 764.759
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141168,0.0530358,785.115,764.759

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.08021
  gflops (total): 519.127
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836443
  gflops (eval):  497.813
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836443,497.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.632
  maximum absolute entry in einsum_ir solution: 115.632
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141855
  time (eval):    0.0529679
  gflops (eval):  786.121
  gflops (total): 765.617
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141855,0.0529679,786.121,765.617

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801214
  gflops (total): 519.702
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836355
  gflops (eval):  497.865
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836355,497.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.349
  maximum absolute entry in einsum_ir solution: 119.349
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141197
  time (eval):    0.0534957
  gflops (eval):  778.365
  gflops (total): 758.349
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141197,0.0534957,778.365,758.349

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802465
  gflops (total): 518.891
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832827
  gflops (eval):  499.974
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832827,499.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.182
  maximum absolute entry in einsum_ir solution: 118.182
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141836
  time (eval):    0.0534617
  gflops (eval):  778.86
  gflops (total): 758.731
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141836,0.0534617,778.86,758.731

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801935
  gflops (total): 519.234
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823361
  gflops (eval):  505.722
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823361,505.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.865
  maximum absolute entry in einsum_ir solution: 107.865
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142344
  time (eval):    0.0526441
  gflops (eval):  790.957
  gflops (total): 770.134
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142344,0.0526441,790.957,770.134

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799822
  gflops (total): 520.606
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0822646
  gflops (eval):  506.162
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0822646,506.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.569
  maximum absolute entry in einsum_ir solution: 122.569
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140174
  time (eval):    0.0532657
  gflops (eval):  781.726
  gflops (total): 761.682
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140174,0.0532657,781.726,761.682

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801085
  gflops (total): 519.785
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824118
  gflops (eval):  505.257
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824118,505.257,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.493
  maximum absolute entry in einsum_ir solution: 111.493
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00152484
  time (eval):    0.0530196
  gflops (eval):  785.355
  gflops (total): 763.399
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00152484,0.0530196,785.355,763.399

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0804142
  gflops (total): 517.809
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834194
  gflops (eval):  499.155
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834194,499.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.276
  maximum absolute entry in einsum_ir solution: 112.276
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141598
  time (eval):    0.0533457
  gflops (eval):  780.554
  gflops (total): 760.371
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141598,0.0533457,780.554,760.371

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800098
  gflops (total): 520.426
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830914
  gflops (eval):  501.125
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830914,501.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.745
  maximum absolute entry in einsum_ir solution: 110.745
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139962
  time (eval):    0.0536911
  gflops (eval):  775.533
  gflops (total): 755.83
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139962,0.0536911,775.533,755.83

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800489
  gflops (total): 520.172
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823739
  gflops (eval):  505.49
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823739,505.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.463
  maximum absolute entry in einsum_ir solution: 116.463
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014471
  time (eval):    0.0534507
  gflops (eval):  779.02
  gflops (total): 758.485
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014471,0.0534507,779.02,758.485

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801749
  gflops (total): 519.354
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828436
  gflops (eval):  502.624
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828436,502.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.015
  maximum absolute entry in einsum_ir solution: 118.015
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142223
  time (eval):    0.052949
  gflops (eval):  786.402
  gflops (total): 765.831
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142223,0.052949,786.402,765.831

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0832663
  gflops (total): 500.072
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,500.072

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827303
  gflops (eval):  503.313
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827303,503.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.948
  maximum absolute entry in einsum_ir solution: 110.948
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141361
  time (eval):    0.0529852
  gflops (eval):  785.865
  gflops (total): 765.444
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141361,0.0529852,785.865,765.444

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0793704
  gflops (total): 524.619
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,524.619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827338
  gflops (eval):  503.291
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827338,503.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.451
  maximum absolute entry in einsum_ir solution: 119.451
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140817
  time (eval):    0.0530805
  gflops (eval):  784.454
  gflops (total): 764.181
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140817,0.0530805,784.454,764.181

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799022
  gflops (total): 521.127
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829688
  gflops (eval):  501.866
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829688,501.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.364
  maximum absolute entry in einsum_ir solution: 113.364
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014139
  time (eval):    0.0530337
  gflops (eval):  785.146
  gflops (total): 764.757
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014139,0.0530337,785.146,764.757

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800282
  gflops (total): 520.306
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0821807
  gflops (eval):  506.679
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0821807,506.679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.901
  maximum absolute entry in einsum_ir solution: 116.901
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140794
  time (eval):    0.0532545
  gflops (eval):  781.891
  gflops (total): 761.751
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140794,0.0532545,781.891,761.751

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799548
  gflops (total): 520.784
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824092
  gflops (eval):  505.274
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824092,505.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.074
  maximum absolute entry in einsum_ir solution: 109.074
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147998
  time (eval):    0.0525342
  gflops (eval):  792.611
  gflops (total): 770.894
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147998,0.0525342,792.611,770.894

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802504
  gflops (total): 518.866
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831266
  gflops (eval):  500.913
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831266,500.913,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.1
  maximum absolute entry in einsum_ir solution: 116.1
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142143
  time (eval):    0.0529877
  gflops (eval):  785.827
  gflops (total): 765.297
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142143,0.0529877,785.827,765.297

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.08015
  gflops (total): 519.516
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831048
  gflops (eval):  501.044
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831048,501.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.485
  maximum absolute entry in einsum_ir solution: 112.485
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140768
  time (eval):    0.0532017
  gflops (eval):  782.666
  gflops (total): 762.491
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140768,0.0532017,782.666,762.491

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800039
  gflops (total): 520.465
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831123
  gflops (eval):  500.999
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831123,500.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.863
  maximum absolute entry in einsum_ir solution: 112.863
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141668
  time (eval):    0.0528115
  gflops (eval):  788.449
  gflops (total): 767.851
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141668,0.0528115,788.449,767.851

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802614
  gflops (total): 518.795
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082452
  gflops (eval):  505.012
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082452,505.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.935
  maximum absolute entry in einsum_ir solution: 114.935
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141638
  time (eval):    0.0530419
  gflops (eval):  785.025
  gflops (total): 764.607
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141638,0.0530419,785.025,764.607

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800382
  gflops (total): 520.241
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830413
  gflops (eval):  501.427
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830413,501.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.866
  maximum absolute entry in einsum_ir solution: 114.866
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139592
  time (eval):    0.0531437
  gflops (eval):  783.52
  gflops (total): 763.467
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139592,0.0531437,783.52,763.467

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798351
  gflops (total): 521.565
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.565

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824254
  gflops (eval):  505.174
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824254,505.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.695
  maximum absolute entry in einsum_ir solution: 110.695
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014088
  time (eval):    0.0532002
  gflops (eval):  782.688
  gflops (total): 762.496
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014088,0.0532002,782.688,762.496

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0797319
  gflops (total): 522.24
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,522.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0817587
  gflops (eval):  509.294
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0817587,509.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.8
  maximum absolute entry in einsum_ir solution: 111.8
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00152135
  time (eval):    0.0531935
  gflops (eval):  782.787
  gflops (total): 761.021
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00152135,0.0531935,782.787,761.021

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801275
  gflops (total): 519.662
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829083
  gflops (eval):  502.232
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829083,502.232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.325
  maximum absolute entry in einsum_ir solution: 113.325
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00169728
  time (eval):    0.0530309
  gflops (eval):  785.187
  gflops (total): 760.836
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00169728,0.0530309,785.187,760.836

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0796723
  gflops (total): 522.631
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,522.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0820521
  gflops (eval):  507.473
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0820521,507.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.275
  maximum absolute entry in einsum_ir solution: 114.275
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140498
  time (eval):    0.0532948
  gflops (eval):  781.299
  gflops (total): 761.231
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140498,0.0532948,781.299,761.231

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801248
  gflops (total): 519.679
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829577
  gflops (eval):  501.933
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829577,501.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.351
  maximum absolute entry in einsum_ir solution: 113.351
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140099
  time (eval):    0.0529722
  gflops (eval):  786.057
  gflops (total): 765.804
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140099,0.0529722,786.057,765.804

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799562
  gflops (total): 520.775
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823543
  gflops (eval):  505.61
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823543,505.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.633
  maximum absolute entry in einsum_ir solution: 116.633
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140947
  time (eval):    0.0529467
  gflops (eval):  786.436
  gflops (total): 766.043
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140947,0.0529467,786.436,766.043

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798968
  gflops (total): 521.162
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823537
  gflops (eval):  505.614
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823537,505.614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.145
  maximum absolute entry in einsum_ir solution: 114.145
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141482
  time (eval):    0.0532162
  gflops (eval):  782.454
  gflops (total): 762.19
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141482,0.0532162,782.454,762.19

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801782
  gflops (total): 519.333
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828424
  gflops (eval):  502.631
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828424,502.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.062
  maximum absolute entry in einsum_ir solution: 113.062
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014118
  time (eval):    0.0531664
  gflops (eval):  783.187
  gflops (total): 762.928
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014118,0.0531664,783.187,762.928

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798901
  gflops (total): 521.206
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830853
  gflops (eval):  501.162
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830853,501.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.52
  maximum absolute entry in einsum_ir solution: 112.52
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141061
  time (eval):    0.0527247
  gflops (eval):  789.747
  gflops (total): 769.168
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141061,0.0527247,789.747,769.168

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799429
  gflops (total): 520.862
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082558
  gflops (eval):  504.363
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082558,504.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.233
  maximum absolute entry in einsum_ir solution: 118.233
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141942
  time (eval):    0.0530665
  gflops (eval):  784.66
  gflops (total): 764.219
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141942,0.0530665,784.66,764.219

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800237
  gflops (total): 520.336
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0822166
  gflops (eval):  506.457
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0822166,506.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.14
  maximum absolute entry in einsum_ir solution: 115.14
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140968
  time (eval):    0.053325
  gflops (eval):  780.856
  gflops (total): 760.745
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140968,0.053325,780.856,760.745

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801405
  gflops (total): 519.577
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823557
  gflops (eval):  505.602
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823557,505.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.797
  maximum absolute entry in einsum_ir solution: 114.797
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140203
  time (eval):    0.0528136
  gflops (eval):  788.418
  gflops (total): 768.029
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140203,0.0528136,788.418,768.029

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799709
  gflops (total): 520.679
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0816903
  gflops (eval):  509.72
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0816903,509.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.15
  maximum absolute entry in einsum_ir solution: 114.15
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0017106
  time (eval):    0.0532033
  gflops (eval):  782.643
  gflops (total): 758.263
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0017106,0.0532033,782.643,758.263

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801877
  gflops (total): 519.272
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833225
  gflops (eval):  499.735
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833225,499.735,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.412
  maximum absolute entry in einsum_ir solution: 112.412
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0013929
  time (eval):    0.0528765
  gflops (eval):  787.479
  gflops (total): 767.268
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0013929,0.0528765,787.479,767.268

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799167
  gflops (total): 521.032
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836225
  gflops (eval):  497.943
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836225,497.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.603
  maximum absolute entry in einsum_ir solution: 115.603
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142327
  time (eval):    0.0530141
  gflops (eval):  785.436
  gflops (total): 764.901
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142327,0.0530141,785.436,764.901

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799072
  gflops (total): 521.094
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827753
  gflops (eval):  503.039
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827753,503.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.257
  maximum absolute entry in einsum_ir solution: 111.257
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141667
  time (eval):    0.0527238
  gflops (eval):  789.76
  gflops (total): 769.095
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141667,0.0527238,789.76,769.095

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800141
  gflops (total): 520.398
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826128
  gflops (eval):  504.028
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826128,504.028,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.879
  maximum absolute entry in einsum_ir solution: 116.879
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141638
  time (eval):    0.0528064
  gflops (eval):  788.526
  gflops (total): 767.928
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141638,0.0528064,788.526,767.928

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800914
  gflops (total): 519.896
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830427
  gflops (eval):  501.419
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830427,501.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.525
  maximum absolute entry in einsum_ir solution: 110.525
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00168133
  time (eval):    0.0531134
  gflops (eval):  783.968
  gflops (total): 759.912
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00168133,0.0531134,783.968,759.912

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0802598
  gflops (total): 518.805
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829532
  gflops (eval):  501.96
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829532,501.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.901
  maximum absolute entry in einsum_ir solution: 116.901
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141458
  time (eval):    0.0531387
  gflops (eval):  783.595
  gflops (total): 763.276
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141458,0.0531387,783.595,763.276

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.080341
  gflops (total): 518.28
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,518.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829779
  gflops (eval):  501.811
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829779,501.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.847
  maximum absolute entry in einsum_ir solution: 110.847
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141041
  time (eval):    0.0531996
  gflops (eval):  782.698
  gflops (total): 762.483
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141041,0.0531996,782.698,762.483

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799078
  gflops (total): 521.09
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826643
  gflops (eval):  503.714
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826643,503.714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.115
  maximum absolute entry in einsum_ir solution: 115.115
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141876
  time (eval):    0.0530101
  gflops (eval):  785.496
  gflops (total): 765.021
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141876,0.0530101,785.496,765.021

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0797881
  gflops (total): 521.872
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825312
  gflops (eval):  504.527
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825312,504.527,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.947
  maximum absolute entry in einsum_ir solution: 109.947
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140951
  time (eval):    0.0532236
  gflops (eval):  782.345
  gflops (total): 762.161
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140951,0.0532236,782.345,762.161

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800224
  gflops (total): 520.344
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827262
  gflops (eval):  503.337
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827262,503.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.817
  maximum absolute entry in einsum_ir solution: 116.817
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147227
  time (eval):    0.0529299
  gflops (eval):  786.686
  gflops (total): 765.396
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147227,0.0529299,786.686,765.396

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800517
  gflops (total): 520.154
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829262
  gflops (eval):  502.123
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829262,502.123,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.961
  maximum absolute entry in einsum_ir solution: 115.961
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142822
  time (eval):    0.0530007
  gflops (eval):  785.635
  gflops (total): 765.02
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142822,0.0530007,785.635,765.02

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0805071
  gflops (total): 517.211
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,517.211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832183
  gflops (eval):  500.361
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832183,500.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.449
  maximum absolute entry in einsum_ir solution: 111.449
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146283
  time (eval):    0.0531369
  gflops (eval):  783.621
  gflops (total): 762.626
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146283,0.0531369,783.621,762.626

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.079957
  gflops (total): 520.77
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0820088
  gflops (eval):  507.741
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0820088,507.741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.496
  maximum absolute entry in einsum_ir solution: 115.496
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141629
  time (eval):    0.0533333
  gflops (eval):  780.735
  gflops (total): 760.539
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141629,0.0533333,780.735,760.539

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0799997
  gflops (total): 520.492
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,520.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834243
  gflops (eval):  499.125
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834243,499.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.637
  maximum absolute entry in einsum_ir solution: 115.637
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140854
  time (eval):    0.053066
  gflops (eval):  784.668
  gflops (total): 764.379
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140854,0.053066,784.668,764.379

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0800821
  gflops (total): 519.956
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829714
  gflops (eval):  501.85
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829714,501.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.161
  maximum absolute entry in einsum_ir solution: 109.161
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141517
  time (eval):    0.0530424
  gflops (eval):  785.017
  gflops (total): 764.617
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141517,0.0530424,785.017,764.617

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0801538
  gflops (total): 519.491
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,519.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835261
  gflops (eval):  498.517
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835261,498.517,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.661
  maximum absolute entry in einsum_ir solution: 113.661
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014249
  time (eval):    0.0534464
  gflops (eval):  779.083
  gflops (total): 758.852
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014249,0.0534464,779.083,758.852

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0798936
  gflops (total): 521.183
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,521.183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826357
  gflops (eval):  503.889
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826357,503.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.46
  maximum absolute entry in einsum_ir solution: 117.46
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136583
  time (eval):    0.042477
  gflops (eval):  980.25
  gflops (total): 949.712
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136583,0.042477,980.25,949.712

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108497
  gflops (total): 383.773
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832292
  gflops (eval):  500.282
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832292,500.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.439
  maximum absolute entry in einsum_ir solution: 111.439
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138385
  time (eval):    0.0421518
  gflops (eval):  987.811
  gflops (total): 956.412
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138385,0.0421518,987.811,956.412

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108311
  gflops (total): 384.43
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825219
  gflops (eval):  504.57
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825219,504.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.288
  maximum absolute entry in einsum_ir solution: 114.288
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136915
  time (eval):    0.0423268
  gflops (eval):  983.727
  gflops (total): 952.903
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136915,0.0423268,983.727,952.903

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108898
  gflops (total): 382.359
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823102
  gflops (eval):  505.867
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823102,505.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.914
  maximum absolute entry in einsum_ir solution: 114.914
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136452
  time (eval):    0.04245
  gflops (eval):  980.872
  gflops (total): 950.324
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136452,0.04245,980.872,950.324

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108495
  gflops (total): 383.778
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832411
  gflops (eval):  500.21
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832411,500.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.746
  maximum absolute entry in einsum_ir solution: 114.746
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137543
  time (eval):    0.0424295
  gflops (eval):  981.347
  gflops (total): 950.534
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137543,0.0424295,981.347,950.534

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108811
  gflops (total): 382.664
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829203
  gflops (eval):  502.145
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829203,502.145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.928
  maximum absolute entry in einsum_ir solution: 113.928
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138
  time (eval):    0.0435365
  gflops (eval):  956.393
  gflops (total): 927.009
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138,0.0435365,956.393,927.009

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108452
  gflops (total): 383.929
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827708
  gflops (eval):  503.052
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827708,503.052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.538
  maximum absolute entry in einsum_ir solution: 109.538
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138006
  time (eval):    0.0425713
  gflops (eval):  978.078
  gflops (total): 947.366
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138006,0.0425713,978.078,947.366

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110196
  gflops (total): 377.856
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,377.856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083539
  gflops (eval):  498.426
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083539,498.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.884
  maximum absolute entry in einsum_ir solution: 110.884
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136674
  time (eval):    0.042435
  gflops (eval):  981.22
  gflops (total): 950.603
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136674,0.042435,981.22,950.603

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108497
  gflops (total): 383.773
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0820099
  gflops (eval):  507.72
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0820099,507.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.801
  maximum absolute entry in einsum_ir solution: 111.801
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137729
  time (eval):    0.0422799
  gflops (eval):  984.818
  gflops (total): 953.749
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137729,0.0422799,984.818,953.749

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108586
  gflops (total): 383.455
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835837
  gflops (eval):  498.16
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835837,498.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.363
  maximum absolute entry in einsum_ir solution: 106.363
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137112
  time (eval):    0.0431655
  gflops (eval):  964.614
  gflops (total): 934.917
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137112,0.0431655,964.614,934.917

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108717
  gflops (total): 382.996
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826749
  gflops (eval):  503.636
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826749,503.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.511
  maximum absolute entry in einsum_ir solution: 109.511
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138448
  time (eval):    0.0423755
  gflops (eval):  982.598
  gflops (total): 951.51
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138448,0.0423755,982.598,951.51

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108618
  gflops (total): 383.342
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831971
  gflops (eval):  500.475
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831971,500.475,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.549
  maximum absolute entry in einsum_ir solution: 114.549
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00141906
  time (eval):    0.043142
  gflops (eval):  965.139
  gflops (total): 934.404
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00141906,0.043142,965.139,934.404

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108744
  gflops (total): 382.901
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083153
  gflops (eval):  500.74
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083153,500.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.455
  maximum absolute entry in einsum_ir solution: 109.455
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00142639
  time (eval):    0.0427161
  gflops (eval):  974.762
  gflops (total): 943.264
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00142639,0.0427161,974.762,943.264

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.107676
  gflops (total): 386.696
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,386.696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830827
  gflops (eval):  501.164
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830827,501.164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.543
  maximum absolute entry in einsum_ir solution: 112.543
  maximum element-wise difference:              4.19617e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137786
  time (eval):    0.0428139
  gflops (eval):  972.534
  gflops (total): 942.212
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137786,0.0428139,972.534,942.212

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108676
  gflops (total): 383.139
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0838847
  gflops (eval):  496.373
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0838847,496.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.284
  maximum absolute entry in einsum_ir solution: 108.284
  maximum element-wise difference:              5.91278e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00140791
  time (eval):    0.0426974
  gflops (eval):  975.188
  gflops (total): 944.059
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00140791,0.0426974,975.188,944.059

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108036
  gflops (total): 385.41
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.082779
  gflops (eval):  503.002
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.082779,503.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.673
  maximum absolute entry in einsum_ir solution: 109.673
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00141435
  time (eval):    0.0423336
  gflops (eval):  983.57
  gflops (total): 951.772
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00141435,0.0423336,983.57,951.772

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108571
  gflops (total): 383.509
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826319
  gflops (eval):  503.898
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826319,503.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.372
  maximum absolute entry in einsum_ir solution: 114.372
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136556
  time (eval):    0.0424531
  gflops (eval):  980.801
  gflops (total): 950.236
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136556,0.0424531,980.801,950.236

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108877
  gflops (total): 382.43
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831294
  gflops (eval):  500.882
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831294,500.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.885
  maximum absolute entry in einsum_ir solution: 122.885
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00164535
  time (eval):    0.0424038
  gflops (eval):  981.941
  gflops (total): 945.263
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00164535,0.0424038,981.941,945.263

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108503
  gflops (total): 383.751
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829229
  gflops (eval):  502.13
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829229,502.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.142
  maximum absolute entry in einsum_ir solution: 112.142
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137229
  time (eval):    0.0427869
  gflops (eval):  973.15
  gflops (total): 942.908
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137229,0.0427869,973.15,942.908

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108315
  gflops (total): 384.415
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832324
  gflops (eval):  500.262
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832324,500.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.216
  maximum absolute entry in einsum_ir solution: 109.216
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138325
  time (eval):    0.0424999
  gflops (eval):  979.72
  gflops (total): 948.838
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138325,0.0424999,979.72,948.838

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108792
  gflops (total): 382.732
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0821471
  gflops (eval):  506.872
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0821471,506.872,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.004
  maximum absolute entry in einsum_ir solution: 120.004
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00162352
  time (eval):    0.0422812
  gflops (eval):  984.788
  gflops (total): 948.372
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00162352,0.0422812,984.788,948.372

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108361
  gflops (total): 384.252
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835344
  gflops (eval):  498.454
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835344,498.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.319
  maximum absolute entry in einsum_ir solution: 109.319
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136734
  time (eval):    0.0426905
  gflops (eval):  975.346
  gflops (total): 945.076
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136734,0.0426905,975.346,945.076

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108314
  gflops (total): 384.421
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831571
  gflops (eval):  500.715
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831571,500.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.704
  maximum absolute entry in einsum_ir solution: 116.704
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013654
  time (eval):    0.0425194
  gflops (eval):  979.272
  gflops (total): 948.803
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013654,0.0425194,979.272,948.803

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110015
  gflops (total): 378.476
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832831
  gflops (eval):  499.958
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832831,499.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.375
  maximum absolute entry in einsum_ir solution: 110.375
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136459
  time (eval):    0.0429486
  gflops (eval):  969.485
  gflops (total): 939.631
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136459,0.0429486,969.485,939.631

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10868
  gflops (total): 383.126
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0820053
  gflops (eval):  507.748
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0820053,507.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.576
  maximum absolute entry in einsum_ir solution: 115.576
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137552
  time (eval):    0.0426644
  gflops (eval):  975.943
  gflops (total): 945.461
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137552,0.0426644,975.943,945.461

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108461
  gflops (total): 383.898
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825675
  gflops (eval):  504.291
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825675,504.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      128.146
  maximum absolute entry in einsum_ir solution: 128.146
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138095
  time (eval):    0.0423525
  gflops (eval):  983.131
  gflops (total): 952.087
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138095,0.0423525,983.131,952.087

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109011
  gflops (total): 381.96
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835767
  gflops (eval):  498.202
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835767,498.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.675
  maximum absolute entry in einsum_ir solution: 108.675
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136779
  time (eval):    0.0428867
  gflops (eval):  970.885
  gflops (total): 940.877
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136779,0.0428867,970.885,940.877

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108485
  gflops (total): 383.814
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833536
  gflops (eval):  499.535
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833536,499.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.36
  maximum absolute entry in einsum_ir solution: 112.36
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135911
  time (eval):    0.0424612
  gflops (eval):  980.614
  gflops (total): 950.2
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135911,0.0424612,980.614,950.2

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108126
  gflops (total): 385.087
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826879
  gflops (eval):  503.557
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826879,503.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      123.84
  maximum absolute entry in einsum_ir solution: 123.84
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00139685
  time (eval):    0.0427034
  gflops (eval):  975.053
  gflops (total): 944.169
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00139685,0.0427034,975.053,944.169

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108561
  gflops (total): 383.546
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824961
  gflops (eval):  504.727
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824961,504.727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.665
  maximum absolute entry in einsum_ir solution: 116.665
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137821
  time (eval):    0.0437486
  gflops (eval):  951.756
  gflops (total): 922.689
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137821,0.0437486,951.756,922.689

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110144
  gflops (total): 378.033
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833157
  gflops (eval):  499.762
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833157,499.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.275
  maximum absolute entry in einsum_ir solution: 112.275
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144012
  time (eval):    0.0425437
  gflops (eval):  978.713
  gflops (total): 946.668
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144012,0.0425437,978.713,946.668

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108191
  gflops (total): 384.857
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831668
  gflops (eval):  500.657
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831668,500.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.92
  maximum absolute entry in einsum_ir solution: 108.92
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137975
  time (eval):    0.0426866
  gflops (eval):  975.435
  gflops (total): 944.894
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137975,0.0426866,975.435,944.894

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108743
  gflops (total): 382.904
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837109
  gflops (eval):  497.403
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837109,497.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.807
  maximum absolute entry in einsum_ir solution: 117.807
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00164805
  time (eval):    0.043051
  gflops (eval):  967.179
  gflops (total): 931.519
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00164805,0.043051,967.179,931.519

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108195
  gflops (total): 384.843
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0822295
  gflops (eval):  506.364
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0822295,506.364,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.421
  maximum absolute entry in einsum_ir solution: 115.421
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137273
  time (eval):    0.0427556
  gflops (eval):  973.862
  gflops (total): 943.568
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137273,0.0427556,973.862,943.568

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108825
  gflops (total): 382.614
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824852
  gflops (eval):  504.794
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824852,504.794,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.105
  maximum absolute entry in einsum_ir solution: 111.105
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137315
  time (eval):    0.0422357
  gflops (eval):  985.85
  gflops (total): 954.807
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137315,0.0422357,985.85,954.807

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109928
  gflops (total): 378.777
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.08341
  gflops (eval):  499.197
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.08341,499.197,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.538
  maximum absolute entry in einsum_ir solution: 112.538
  maximum element-wise difference:              4.86374e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135795
  time (eval):    0.0431517
  gflops (eval):  964.922
  gflops (total): 935.483
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135795,0.0431517,964.922,935.483

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108715
  gflops (total): 383.002
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829254
  gflops (eval):  502.115
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829254,502.115,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.381
  maximum absolute entry in einsum_ir solution: 111.381
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138298
  time (eval):    0.042713
  gflops (eval):  974.833
  gflops (total): 944.259
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138298,0.042713,974.833,944.259

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108714
  gflops (total): 383.006
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083647
  gflops (eval):  497.782
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083647,497.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.685
  maximum absolute entry in einsum_ir solution: 115.685
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138444
  time (eval):    0.04232
  gflops (eval):  983.886
  gflops (total): 952.719
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138444,0.04232,983.886,952.719

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110006
  gflops (total): 378.506
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,378.506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828728
  gflops (eval):  502.433
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828728,502.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.314
  maximum absolute entry in einsum_ir solution: 113.314
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135563
  time (eval):    0.0428779
  gflops (eval):  971.083
  gflops (total): 941.322
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135563,0.0428779,971.083,941.322

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109626
  gflops (total): 379.818
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,379.818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825469
  gflops (eval):  504.417
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825469,504.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.92
  maximum absolute entry in einsum_ir solution: 120.92
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00142219
  time (eval):    0.0424035
  gflops (eval):  981.948
  gflops (total): 950.083
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00142219,0.0424035,981.948,950.083

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108906
  gflops (total): 382.33
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829883
  gflops (eval):  501.734
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829883,501.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.563
  maximum absolute entry in einsum_ir solution: 115.563
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137943
  time (eval):    0.0427338
  gflops (eval):  974.357
  gflops (total): 943.889
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137943,0.0427338,974.357,943.889

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108516
  gflops (total): 383.704
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.704

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830886
  gflops (eval):  501.128
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830886,501.128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.656
  maximum absolute entry in einsum_ir solution: 110.656
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136986
  time (eval):    0.0427019
  gflops (eval):  975.085
  gflops (total): 944.777
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136986,0.0427019,975.085,944.777

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110451
  gflops (total): 376.983
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,376.983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828848
  gflops (eval):  502.361
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828848,502.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.189
  maximum absolute entry in einsum_ir solution: 114.189
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137277
  time (eval):    0.0428302
  gflops (eval):  972.166
  gflops (total): 941.974
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137277,0.0428302,972.166,941.974

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108293
  gflops (total): 384.495
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831951
  gflops (eval):  500.487
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831951,500.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.843
  maximum absolute entry in einsum_ir solution: 109.843
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136776
  time (eval):    0.0421774
  gflops (eval):  987.212
  gflops (total): 956.204
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136776,0.0421774,987.212,956.204

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108405
  gflops (total): 384.097
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831752
  gflops (eval):  500.606
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831752,500.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.274
  maximum absolute entry in einsum_ir solution: 114.274
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136816
  time (eval):    0.0422844
  gflops (eval):  984.715
  gflops (total): 953.852
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136816,0.0422844,984.715,953.852

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110158
  gflops (total): 377.986
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,377.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836678
  gflops (eval):  497.659
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836678,497.659,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.092
  maximum absolute entry in einsum_ir solution: 113.092
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137618
  time (eval):    0.0426051
  gflops (eval):  977.303
  gflops (total): 946.723
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137618,0.0426051,977.303,946.723

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108102
  gflops (total): 385.175
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837935
  gflops (eval):  496.912
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837935,496.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.142
  maximum absolute entry in einsum_ir solution: 117.142
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00152872
  time (eval):    0.0424046
  gflops (eval):  981.922
  gflops (total): 947.754
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00152872,0.0424046,981.922,947.754

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10865
  gflops (total): 383.231
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831053
  gflops (eval):  501.027
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831053,501.027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.486
  maximum absolute entry in einsum_ir solution: 109.486
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138278
  time (eval):    0.042686
  gflops (eval):  975.45
  gflops (total): 944.843
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138278,0.042686,975.45,944.843

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108395
  gflops (total): 384.132
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833159
  gflops (eval):  499.761
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833159,499.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.67
  maximum absolute entry in einsum_ir solution: 106.67
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137799
  time (eval):    0.042698
  gflops (eval):  975.175
  gflops (total): 944.688
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137799,0.042698,975.175,944.688

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108659
  gflops (total): 383.2
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836431
  gflops (eval):  497.806
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836431,497.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.175
  maximum absolute entry in einsum_ir solution: 109.175
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137454
  time (eval):    0.0425966
  gflops (eval):  977.498
  gflops (total): 946.941
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137454,0.0425966,977.498,946.941

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108411
  gflops (total): 384.074
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837786
  gflops (eval):  497.001
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837786,497.001,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.134
  maximum absolute entry in einsum_ir solution: 113.134
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143711
  time (eval):    0.0422422
  gflops (eval):  985.697
  gflops (total): 953.266
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143711,0.0422422,985.697,953.266

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10886
  gflops (total): 382.493
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830705
  gflops (eval):  501.238
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830705,501.238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.479
  maximum absolute entry in einsum_ir solution: 118.479
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138655
  time (eval):    0.042695
  gflops (eval):  975.245
  gflops (total): 944.569
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138655,0.042695,975.245,944.569

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108362
  gflops (total): 384.251
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829042
  gflops (eval):  502.243
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829042,502.243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.422
  maximum absolute entry in einsum_ir solution: 115.422
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00139006
  time (eval):    0.0427323
  gflops (eval):  974.394
  gflops (total): 943.696
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00139006,0.0427323,974.394,943.696

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108397
  gflops (total): 384.124
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826905
  gflops (eval):  503.541
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826905,503.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.934
  maximum absolute entry in einsum_ir solution: 119.934
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136255
  time (eval):    0.0428361
  gflops (eval):  972.032
  gflops (total): 942.066
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136255,0.0428361,972.032,942.066

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108946
  gflops (total): 382.19
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834502
  gflops (eval):  498.957
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834502,498.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.735
  maximum absolute entry in einsum_ir solution: 114.735
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137593
  time (eval):    0.0423522
  gflops (eval):  983.138
  gflops (total): 952.203
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137593,0.0423522,983.138,952.203

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108525
  gflops (total): 383.673
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831693
  gflops (eval):  500.642
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831693,500.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.403
  maximum absolute entry in einsum_ir solution: 112.403
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137617
  time (eval):    0.0424833
  gflops (eval):  980.104
  gflops (total): 949.352
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137617,0.0424833,980.104,949.352

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108604
  gflops (total): 383.392
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829608
  gflops (eval):  501.9
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829608,501.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.701
  maximum absolute entry in einsum_ir solution: 106.701
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00140673
  time (eval):    0.0425169
  gflops (eval):  979.33
  gflops (total): 947.965
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00140673,0.0425169,979.33,947.965

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108809
  gflops (total): 382.669
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831231
  gflops (eval):  500.92
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831231,500.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.008
  maximum absolute entry in einsum_ir solution: 110.008
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138259
  time (eval):    0.0427204
  gflops (eval):  974.664
  gflops (total): 944.109
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138259,0.0427204,974.664,944.109

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108466
  gflops (total): 383.879
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0822895
  gflops (eval):  505.995
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0822895,505.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.372
  maximum absolute entry in einsum_ir solution: 122.372
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013784
  time (eval):    0.0423061
  gflops (eval):  984.208
  gflops (total): 953.153
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013784,0.0423061,984.208,953.153

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108551
  gflops (total): 383.579
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830967
  gflops (eval):  501.079
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830967,501.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.033
  maximum absolute entry in einsum_ir solution: 109.033
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137884
  time (eval):    0.0428776
  gflops (eval):  971.09
  gflops (total): 940.835
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137884,0.0428776,971.09,940.835

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108652
  gflops (total): 383.222
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.222

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830632
  gflops (eval):  501.281
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830632,501.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.109
  maximum absolute entry in einsum_ir solution: 113.109
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00140239
  time (eval):    0.0423737
  gflops (eval):  982.638
  gflops (total): 951.159
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00140239,0.0423737,982.638,951.159

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108335
  gflops (total): 384.345
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.345

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828324
  gflops (eval):  502.678
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828324,502.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.927
  maximum absolute entry in einsum_ir solution: 106.927
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137091
  time (eval):    0.0425053
  gflops (eval):  979.597
  gflops (total): 948.99
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137091,0.0425053,979.597,948.99

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110473
  gflops (total): 376.906
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,376.906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836637
  gflops (eval):  497.683
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836637,497.683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.834
  maximum absolute entry in einsum_ir solution: 108.834
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143067
  time (eval):    0.0427046
  gflops (eval):  975.024
  gflops (total): 943.418
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143067,0.0427046,975.024,943.418

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110497
  gflops (total): 376.826
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,376.826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827695
  gflops (eval):  503.06
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827695,503.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.419
  maximum absolute entry in einsum_ir solution: 107.419
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137217
  time (eval):    0.0426317
  gflops (eval):  976.692
  gflops (total): 946.236
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137217,0.0426317,976.692,946.236

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108358
  gflops (total): 384.265
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831409
  gflops (eval):  500.813
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831409,500.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.388
  maximum absolute entry in einsum_ir solution: 112.388
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135481
  time (eval):    0.0428151
  gflops (eval):  972.508
  gflops (total): 942.678
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135481,0.0428151,972.508,942.678

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110333
  gflops (total): 377.384
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,377.384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.08237
  gflops (eval):  505.5
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.08237,505.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.968
  maximum absolute entry in einsum_ir solution: 115.968
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138389
  time (eval):    0.0426231
  gflops (eval):  976.889
  gflops (total): 946.169
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138389,0.0426231,976.889,946.169

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.107762
  gflops (total): 386.39
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,386.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834955
  gflops (eval):  498.686
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834955,498.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.644
  maximum absolute entry in einsum_ir solution: 119.644
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137851
  time (eval):    0.0423704
  gflops (eval):  982.714
  gflops (total): 951.749
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137851,0.0423704,982.714,951.749

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108544
  gflops (total): 383.606
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836702
  gflops (eval):  497.645
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836702,497.645,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.855
  maximum absolute entry in einsum_ir solution: 105.855
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013851
  time (eval):    0.0430262
  gflops (eval):  967.737
  gflops (total): 937.555
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013851,0.0430262,967.737,937.555

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108238
  gflops (total): 384.69
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834946
  gflops (eval):  498.692
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834946,498.692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.533
  maximum absolute entry in einsum_ir solution: 116.533
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136162
  time (eval):    0.0421952
  gflops (eval):  986.795
  gflops (total): 955.947
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136162,0.0421952,986.795,955.947

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108694
  gflops (total): 383.075
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827588
  gflops (eval):  503.125
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827588,503.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.943
  maximum absolute entry in einsum_ir solution: 115.943
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137324
  time (eval):    0.0433087
  gflops (eval):  961.425
  gflops (total): 931.877
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137324,0.0433087,961.425,931.877

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108686
  gflops (total): 383.105
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827711
  gflops (eval):  503.051
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827711,503.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.066
  maximum absolute entry in einsum_ir solution: 110.066
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138121
  time (eval):    0.0424884
  gflops (eval):  979.985
  gflops (total): 949.131
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138121,0.0424884,979.985,949.131

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108919
  gflops (total): 382.283
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834273
  gflops (eval):  499.094
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834273,499.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.894
  maximum absolute entry in einsum_ir solution: 107.894
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136597
  time (eval):    0.0427605
  gflops (eval):  973.75
  gflops (total): 943.607
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136597,0.0427605,973.75,943.607

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108846
  gflops (total): 382.54
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823127
  gflops (eval):  505.852
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823127,505.852,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.583
  maximum absolute entry in einsum_ir solution: 119.583
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137554
  time (eval):    0.0424451
  gflops (eval):  980.985
  gflops (total): 950.192
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137554,0.0424451,980.985,950.192

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108302
  gflops (total): 384.461
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832591
  gflops (eval):  500.102
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832591,500.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.267
  maximum absolute entry in einsum_ir solution: 124.267
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136866
  time (eval):    0.0430576
  gflops (eval):  967.03
  gflops (total): 937.239
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136866,0.0430576,967.03,937.239

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108039
  gflops (total): 385.399
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,385.399

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.082928
  gflops (eval):  502.098
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.082928,502.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.17
  maximum absolute entry in einsum_ir solution: 119.17
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013761
  time (eval):    0.0429537
  gflops (eval):  969.371
  gflops (total): 939.279
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013761,0.0429537,969.371,939.279

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108679
  gflops (total): 383.129
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831124
  gflops (eval):  500.985
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831124,500.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.265
  maximum absolute entry in einsum_ir solution: 113.265
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137826
  time (eval):    0.0424514
  gflops (eval):  980.84
  gflops (total): 949.997
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137826,0.0424514,980.84,949.997

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108685
  gflops (total): 383.109
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0821724
  gflops (eval):  506.716
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0821724,506.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.445
  maximum absolute entry in einsum_ir solution: 117.445
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137912
  time (eval):    0.0426814
  gflops (eval):  975.554
  gflops (total): 945.018
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137912,0.0426814,975.554,945.018

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108166
  gflops (total): 384.945
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830835
  gflops (eval):  501.159
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830835,501.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.995
  maximum absolute entry in einsum_ir solution: 107.995
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00140334
  time (eval):    0.0423766
  gflops (eval):  982.57
  gflops (total): 951.075
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00140334,0.0423766,982.57,951.075

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108731
  gflops (total): 382.944
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830814
  gflops (eval):  501.172
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830814,501.172,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.098
  maximum absolute entry in einsum_ir solution: 114.098
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137074
  time (eval):    0.0427885
  gflops (eval):  973.113
  gflops (total): 942.906
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137074,0.0427885,973.113,942.906

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109139
  gflops (total): 381.512
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824668
  gflops (eval):  504.907
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824668,504.907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      129.4
  maximum absolute entry in einsum_ir solution: 129.4
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138057
  time (eval):    0.0423086
  gflops (eval):  984.151
  gflops (total): 953.052
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138057,0.0423086,984.151,953.052

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.110227
  gflops (total): 377.749
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,377.749

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.082689
  gflops (eval):  503.55
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.082689,503.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.955
  maximum absolute entry in einsum_ir solution: 120.955
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136652
  time (eval):    0.0429688
  gflops (eval):  969.029
  gflops (total): 939.161
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136652,0.0429688,969.029,939.161

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108848
  gflops (total): 382.534
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825219
  gflops (eval):  504.57
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825219,504.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.355
  maximum absolute entry in einsum_ir solution: 107.355
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138757
  time (eval):    0.042455
  gflops (eval):  980.758
  gflops (total): 949.718
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138757,0.042455,980.758,949.718

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109519
  gflops (total): 380.192
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,380.192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833813
  gflops (eval):  499.369
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833813,499.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.609
  maximum absolute entry in einsum_ir solution: 114.609
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136756
  time (eval):    0.0426533
  gflops (eval):  976.196
  gflops (total): 945.87
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136756,0.0426533,976.196,945.87

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108325
  gflops (total): 384.381
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830778
  gflops (eval):  501.193
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830778,501.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.723
  maximum absolute entry in einsum_ir solution: 110.723
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136903
  time (eval):    0.0428654
  gflops (eval):  971.367
  gflops (total): 941.304
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136903,0.0428654,971.367,941.304

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108742
  gflops (total): 382.907
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830931
  gflops (eval):  501.101
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830931,501.101,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.878
  maximum absolute entry in einsum_ir solution: 109.878
  maximum element-wise difference:              4.19617e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138328
  time (eval):    0.0423706
  gflops (eval):  982.71
  gflops (total): 951.642
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138328,0.0423706,982.71,951.642

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108448
  gflops (total): 383.946
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0822658
  gflops (eval):  506.14
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0822658,506.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.492
  maximum absolute entry in einsum_ir solution: 111.492
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137132
  time (eval):    0.0426055
  gflops (eval):  977.293
  gflops (total): 946.819
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137132,0.0426055,977.293,946.819

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108628
  gflops (total): 383.309
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.309

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829359
  gflops (eval):  502.051
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829359,502.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.084
  maximum absolute entry in einsum_ir solution: 114.084
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137216
  time (eval):    0.0425408
  gflops (eval):  978.779
  gflops (total): 948.195
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137216,0.0425408,978.779,948.195

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108607
  gflops (total): 383.383
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836034
  gflops (eval):  498.042
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836034,498.042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      132.433
  maximum absolute entry in einsum_ir solution: 132.433
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00165441
  time (eval):    0.0428207
  gflops (eval):  972.38
  gflops (total): 936.209
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00165441,0.0428207,972.38,936.209

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108219
  gflops (total): 384.757
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828918
  gflops (eval):  502.318
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828918,502.318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.462
  maximum absolute entry in einsum_ir solution: 108.462
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137995
  time (eval):    0.0423535
  gflops (eval):  983.107
  gflops (total): 952.086
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137995,0.0423535,983.107,952.086

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108227
  gflops (total): 384.728
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834283
  gflops (eval):  499.087
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834283,499.087,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.989
  maximum absolute entry in einsum_ir solution: 109.989
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013801
  time (eval):    0.0425936
  gflops (eval):  977.566
  gflops (total): 946.886
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013801,0.0425936,977.566,946.886

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108684
  gflops (total): 383.112
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823692
  gflops (eval):  505.505
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823692,505.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.434
  maximum absolute entry in einsum_ir solution: 115.434
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137877
  time (eval):    0.0423122
  gflops (eval):  984.066
  gflops (total): 953.011
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137877,0.0423122,984.066,953.011

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108739
  gflops (total): 382.916
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,382.916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830968
  gflops (eval):  501.079
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830968,501.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.164
  maximum absolute entry in einsum_ir solution: 105.164
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00145787
  time (eval):    0.0421363
  gflops (eval):  988.174
  gflops (total): 955.128
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00145787,0.0421363,988.174,955.128

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109049
  gflops (total): 381.829
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0822669
  gflops (eval):  506.133
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0822669,506.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.217
  maximum absolute entry in einsum_ir solution: 114.217
  maximum element-wise difference:              4.3869e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137276
  time (eval):    0.0427869
  gflops (eval):  973.148
  gflops (total): 942.897
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137276,0.0427869,973.148,942.897

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108164
  gflops (total): 384.953
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834331
  gflops (eval):  499.059
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834331,499.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.105
  maximum absolute entry in einsum_ir solution: 108.105
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138093
  time (eval):    0.042714
  gflops (eval):  974.81
  gflops (total): 944.282
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138093,0.042714,974.81,944.282

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108514
  gflops (total): 383.713
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829963
  gflops (eval):  501.685
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829963,501.685,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.897
  maximum absolute entry in einsum_ir solution: 116.897
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00142097
  time (eval):    0.0423331
  gflops (eval):  983.581
  gflops (total): 951.638
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00142097,0.0423331,983.581,951.638

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108428
  gflops (total): 384.017
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825055
  gflops (eval):  504.67
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825055,504.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.988
  maximum absolute entry in einsum_ir solution: 111.988
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013799
  time (eval):    0.0425466
  gflops (eval):  978.647
  gflops (total): 947.903
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013799,0.0425466,978.647,947.903

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108376
  gflops (total): 384.2
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823835
  gflops (eval):  505.417
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823835,505.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.895
  maximum absolute entry in einsum_ir solution: 107.895
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136621
  time (eval):    0.0426265
  gflops (eval):  976.812
  gflops (total): 946.477
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136621,0.0426265,976.812,946.477

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.10842
  gflops (total): 384.044
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827414
  gflops (eval):  503.231
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827414,503.231,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.852
  maximum absolute entry in einsum_ir solution: 113.852
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138938
  time (eval):    0.0424594
  gflops (eval):  980.656
  gflops (total): 949.583
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138938,0.0424594,980.656,949.583

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.109039
  gflops (total): 381.863
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,381.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083944
  gflops (eval):  496.021
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083944,496.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.952
  maximum absolute entry in einsum_ir solution: 108.952
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00141824
  time (eval):    0.0423458
  gflops (eval):  983.287
  gflops (total): 951.422
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00141824,0.0423458,983.287,951.422

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108681
  gflops (total): 383.12
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,383.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829423
  gflops (eval):  502.012
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829423,502.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.914
  maximum absolute entry in einsum_ir solution: 107.914
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137411
  time (eval):    0.042126
  gflops (eval):  988.416
  gflops (total): 957.194
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137411,0.042126,988.416,957.194

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.108252
  gflops (total): 384.641
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,384.641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830212
  gflops (eval):  501.535
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830212,501.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.021
  maximum absolute entry in einsum_ir solution: 115.021
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00136816
  time (eval):    0.889551
  gflops (eval):  855.075
  gflops (total): 853.762
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00136816,0.889551,855.075,853.762

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.79072
  gflops (total): 961.95
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78591
  gflops (eval):  967.837
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78591,967.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.572
  maximum absolute entry in einsum_ir solution: 481.572
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138437
  time (eval):    0.875886
  gflops (eval):  868.415
  gflops (total): 867.045
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138437,0.875886,868.415,867.045

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791652
  gflops (total): 960.817
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78539
  gflops (eval):  968.477
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78539,968.477,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.843
  maximum absolute entry in einsum_ir solution: 471.843
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143973
  time (eval):    0.894441
  gflops (eval):  850.4
  gflops (total): 849.033
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143973,0.894441,850.4,849.033

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788645
  gflops (total): 964.481
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78383
  gflops (eval):  970.406
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78383,970.406,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.407
  maximum absolute entry in einsum_ir solution: 470.407
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013946
  time (eval):    0.890276
  gflops (eval):  854.379
  gflops (total): 853.042
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013946,0.890276,854.379,853.042

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786887
  gflops (total): 966.636
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.782745
  gflops (eval):  971.75
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.782745,971.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.689
  maximum absolute entry in einsum_ir solution: 508.689
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014033
  time (eval):    0.891672
  gflops (eval):  853.041
  gflops (total): 851.701
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014033,0.891672,853.041,851.701

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789087
  gflops (total): 963.94
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785906
  gflops (eval):  967.842
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785906,967.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.347
  maximum absolute entry in einsum_ir solution: 498.346
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137759
  time (eval):    0.890336
  gflops (eval):  854.321
  gflops (total): 853.001
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137759,0.890336,854.321,853.001

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791958
  gflops (total): 960.445
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786193
  gflops (eval):  967.489
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786193,967.489,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.217
  maximum absolute entry in einsum_ir solution: 497.217
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138785
  time (eval):    0.883282
  gflops (eval):  861.143
  gflops (total): 859.792
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138785,0.883282,861.143,859.792

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789152
  gflops (total): 963.86
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784402
  gflops (eval):  969.697
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784402,969.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.841
  maximum absolute entry in einsum_ir solution: 492.841
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014314
  time (eval):    0.890826
  gflops (eval):  853.851
  gflops (total): 852.481
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014314,0.890826,853.851,852.481

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78831
  gflops (total): 964.891
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788266
  gflops (eval):  964.945
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788266,964.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.152
  maximum absolute entry in einsum_ir solution: 504.152
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013885
  time (eval):    0.894351
  gflops (eval):  850.486
  gflops (total): 849.167
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013885,0.894351,850.486,849.167

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786453
  gflops (total): 967.168
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785023
  gflops (eval):  968.93
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785023,968.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.812
  maximum absolute entry in einsum_ir solution: 486.812
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139298
  time (eval):    0.882369
  gflops (eval):  862.035
  gflops (total): 860.676
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139298,0.882369,862.035,860.676

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790088
  gflops (total): 962.719
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785455
  gflops (eval):  968.398
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785455,968.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.403
  maximum absolute entry in einsum_ir solution: 509.402
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139012
  time (eval):    0.871424
  gflops (eval):  872.862
  gflops (total): 871.471
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139012,0.871424,872.862,871.471

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787498
  gflops (total): 965.885
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784369
  gflops (eval):  969.738
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784369,969.738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.538
  maximum absolute entry in einsum_ir solution: 486.538
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00136956
  time (eval):    0.895398
  gflops (eval):  849.491
  gflops (total): 848.194
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00136956,0.895398,849.491,848.194

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.798674
  gflops (total): 952.37
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,952.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790511
  gflops (eval):  962.204
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790511,962.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.596
  maximum absolute entry in einsum_ir solution: 465.596
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137944
  time (eval):    0.899642
  gflops (eval):  845.483
  gflops (total): 844.189
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137944,0.899642,845.483,844.189

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788232
  gflops (total): 964.986
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.781143
  gflops (eval):  973.743
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.781143,973.743,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.385
  maximum absolute entry in einsum_ir solution: 487.385
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138362
  time (eval):    0.889066
  gflops (eval):  855.541
  gflops (total): 854.211
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138362,0.889066,855.541,854.211

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788054
  gflops (total): 965.204
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785515
  gflops (eval):  968.324
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785515,968.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.37
  maximum absolute entry in einsum_ir solution: 498.37
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138563
  time (eval):    0.892061
  gflops (eval):  852.669
  gflops (total): 851.347
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138563,0.892061,852.669,851.347

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790152
  gflops (total): 962.641
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790506
  gflops (eval):  962.21
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790506,962.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.385
  maximum absolute entry in einsum_ir solution: 492.385
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144297
  time (eval):    0.898649
  gflops (eval):  846.418
  gflops (total): 845.061
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144297,0.898649,846.418,845.061

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793371
  gflops (total): 958.735
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787771
  gflops (eval):  965.551
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787771,965.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.07
  maximum absolute entry in einsum_ir solution: 530.07
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00161479
  time (eval):    0.905592
  gflops (eval):  839.928
  gflops (total): 838.433
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00161479,0.905592,839.928,838.433

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785564
  gflops (total): 968.263
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.263

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78551
  gflops (eval):  968.33
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78551,968.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.545
  maximum absolute entry in einsum_ir solution: 478.545
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138367
  time (eval):    0.876704
  gflops (eval):  867.604
  gflops (total): 866.237
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138367,0.876704,867.604,866.237

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791184
  gflops (total): 961.386
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784472
  gflops (eval):  969.611
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784472,969.611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.568
  maximum absolute entry in einsum_ir solution: 485.568
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00135578
  time (eval):    0.880803
  gflops (eval):  863.567
  gflops (total): 862.24
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00135578,0.880803,863.567,862.24

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788508
  gflops (total): 964.648
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784466
  gflops (eval):  969.618
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784466,969.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.829
  maximum absolute entry in einsum_ir solution: 500.829
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138762
  time (eval):    0.897207
  gflops (eval):  847.778
  gflops (total): 846.469
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138762,0.897207,847.778,846.469

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790648
  gflops (total): 962.037
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785089
  gflops (eval):  968.849
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785089,968.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.094
  maximum absolute entry in einsum_ir solution: 537.094
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00147029
  time (eval):    0.877778
  gflops (eval):  866.543
  gflops (total): 865.094
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00147029,0.877778,866.543,865.094

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787147
  gflops (total): 966.316
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784006
  gflops (eval):  970.188
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784006,970.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.658
  maximum absolute entry in einsum_ir solution: 497.658
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138389
  time (eval):    0.899569
  gflops (eval):  845.553
  gflops (total): 844.254
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138389,0.899569,845.553,844.254

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792774
  gflops (total): 959.457
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788377
  gflops (eval):  964.808
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788377,964.808,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.005
  maximum absolute entry in einsum_ir solution: 467.005
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137705
  time (eval):    0.891529
  gflops (eval):  853.178
  gflops (total): 851.862
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137705,0.891529,853.178,851.862

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785764
  gflops (total): 968.017
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784895
  gflops (eval):  969.088
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784895,969.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.824
  maximum absolute entry in einsum_ir solution: 497.824
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014249
  time (eval):    0.89339
  gflops (eval):  851.401
  gflops (total): 850.045
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014249,0.89339,851.401,850.045

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787131
  gflops (total): 966.335
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.335

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78538
  gflops (eval):  968.49
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78538,968.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.215
  maximum absolute entry in einsum_ir solution: 491.215
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140064
  time (eval):    0.889885
  gflops (eval):  854.753
  gflops (total): 853.41
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140064,0.889885,854.753,853.41

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787562
  gflops (total): 965.806
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786919
  gflops (eval):  966.596
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786919,966.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.574
  maximum absolute entry in einsum_ir solution: 477.574
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013894
  time (eval):    0.907148
  gflops (eval):  838.488
  gflops (total): 837.206
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013894,0.907148,838.488,837.206

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787331
  gflops (total): 966.09
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788001
  gflops (eval):  965.269
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788001,965.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.914
  maximum absolute entry in einsum_ir solution: 484.914
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138705
  time (eval):    0.876487
  gflops (eval):  867.82
  gflops (total): 866.449
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138705,0.876487,867.82,866.449

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787728
  gflops (total): 965.603
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.782133
  gflops (eval):  972.51
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.782133,972.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.096
  maximum absolute entry in einsum_ir solution: 540.096
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139163
  time (eval):    0.882832
  gflops (eval):  861.583
  gflops (total): 860.227
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139163,0.882832,861.583,860.227

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787662
  gflops (total): 965.684
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78843
  gflops (eval):  964.743
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78843,964.743,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.05
  maximum absolute entry in einsum_ir solution: 472.05
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138348
  time (eval):    0.895495
  gflops (eval):  849.399
  gflops (total): 848.089
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138348,0.895495,849.399,848.089

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786331
  gflops (total): 967.319
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78529
  gflops (eval):  968.601
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78529,968.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.349
  maximum absolute entry in einsum_ir solution: 480.349
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139218
  time (eval):    0.888854
  gflops (eval):  855.746
  gflops (total): 854.407
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139218,0.888854,855.746,854.407

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.79049
  gflops (total): 962.23
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788316
  gflops (eval):  964.883
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788316,964.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.891
  maximum absolute entry in einsum_ir solution: 479.891
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139364
  time (eval):    0.900862
  gflops (eval):  844.339
  gflops (total): 843.035
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139364,0.900862,844.339,843.035

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78713
  gflops (total): 966.337
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784966
  gflops (eval):  969.001
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784966,969.001,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.495
  maximum absolute entry in einsum_ir solution: 461.495
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142486
  time (eval):    0.891057
  gflops (eval):  853.63
  gflops (total): 852.267
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142486,0.891057,853.63,852.267

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792927
  gflops (total): 959.272
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791807
  gflops (eval):  960.629
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791807,960.629,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.577
  maximum absolute entry in einsum_ir solution: 486.577
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013696
  time (eval):    0.903145
  gflops (eval):  842.204
  gflops (total): 840.929
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013696,0.903145,842.204,840.929

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78763
  gflops (total): 965.724
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784298
  gflops (eval):  969.826
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784298,969.826,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.456
  maximum absolute entry in einsum_ir solution: 484.456
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138832
  time (eval):    0.905682
  gflops (eval):  839.845
  gflops (total): 838.56
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138832,0.905682,839.845,838.56

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787881
  gflops (total): 965.416
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784565
  gflops (eval):  969.496
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784565,969.496,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.961
  maximum absolute entry in einsum_ir solution: 481.961
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138507
  time (eval):    0.883153
  gflops (eval):  861.27
  gflops (total): 859.921
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138507,0.883153,861.27,859.921

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787005
  gflops (total): 966.49
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785186
  gflops (eval):  968.729
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785186,968.729,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.74
  maximum absolute entry in einsum_ir solution: 483.74
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137941
  time (eval):    0.891708
  gflops (eval):  853.006
  gflops (total): 851.689
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137941,0.891708,853.006,851.689

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787514
  gflops (total): 965.866
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784041
  gflops (eval):  970.144
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784041,970.144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.016
  maximum absolute entry in einsum_ir solution: 492.016
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138427
  time (eval):    0.898451
  gflops (eval):  846.605
  gflops (total): 845.303
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138427,0.898451,846.605,845.303

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78755
  gflops (total): 965.821
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785323
  gflops (eval):  968.56
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785323,968.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.482
  maximum absolute entry in einsum_ir solution: 477.482
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138262
  time (eval):    0.879376
  gflops (eval):  864.968
  gflops (total): 863.611
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138262,0.879376,864.968,863.611

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786911
  gflops (total): 966.605
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784054
  gflops (eval):  970.128
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784054,970.128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.938
  maximum absolute entry in einsum_ir solution: 488.938
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144267
  time (eval):    0.889485
  gflops (eval):  855.138
  gflops (total): 853.754
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144267,0.889485,855.138,853.754

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788064
  gflops (total): 965.191
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784584
  gflops (eval):  969.472
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784584,969.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.313
  maximum absolute entry in einsum_ir solution: 514.313
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138098
  time (eval):    0.871895
  gflops (eval):  872.39
  gflops (total): 871.01
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138098,0.871895,872.39,871.01

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78747
  gflops (total): 965.92
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789573
  gflops (eval):  963.346
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789573,963.346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.797
  maximum absolute entry in einsum_ir solution: 480.797
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00134769
  time (eval):    0.899908
  gflops (eval):  845.234
  gflops (total): 843.97
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00134769,0.899908,845.234,843.97

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790765
  gflops (total): 961.895
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785774
  gflops (eval):  968.004
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785774,968.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.006
  maximum absolute entry in einsum_ir solution: 457.006
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139664
  time (eval):    0.878049
  gflops (eval):  866.276
  gflops (total): 864.9
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139664,0.878049,866.276,864.9

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791004
  gflops (total): 961.605
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78628
  gflops (eval):  967.382
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78628,967.382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.174
  maximum absolute entry in einsum_ir solution: 510.174
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138368
  time (eval):    0.872178
  gflops (eval):  872.107
  gflops (total): 870.726
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138368,0.872178,872.107,870.726

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791563
  gflops (total): 960.925
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785058
  gflops (eval):  968.887
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785058,968.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.839
  maximum absolute entry in einsum_ir solution: 493.839
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138333
  time (eval):    0.914443
  gflops (eval):  831.799
  gflops (total): 830.543
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138333,0.914443,831.799,830.543

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792957
  gflops (total): 959.235
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784979
  gflops (eval):  968.985
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784979,968.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.341
  maximum absolute entry in einsum_ir solution: 502.341
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140197
  time (eval):    0.888029
  gflops (eval):  856.54
  gflops (total): 855.19
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140197,0.888029,856.54,855.19

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787732
  gflops (total): 965.598
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790827
  gflops (eval):  961.819
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790827,961.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.414
  maximum absolute entry in einsum_ir solution: 476.414
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138433
  time (eval):    0.884756
  gflops (eval):  859.709
  gflops (total): 858.366
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138433,0.884756,859.709,858.366

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788542
  gflops (total): 964.606
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791829
  gflops (eval):  960.602
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791829,960.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.953
  maximum absolute entry in einsum_ir solution: 489.953
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137368
  time (eval):    0.906374
  gflops (eval):  839.204
  gflops (total): 837.934
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137368,0.906374,839.204,837.934

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790627
  gflops (total): 962.062
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784079
  gflops (eval):  970.097
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784079,970.097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.704
  maximum absolute entry in einsum_ir solution: 481.704
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138951
  time (eval):    0.876335
  gflops (eval):  867.97
  gflops (total): 866.596
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138951,0.876335,867.97,866.596

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788939
  gflops (total): 964.122
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783727
  gflops (eval):  970.533
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783727,970.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.724
  maximum absolute entry in einsum_ir solution: 482.724
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137993
  time (eval):    0.893235
  gflops (eval):  851.548
  gflops (total): 850.235
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137993,0.893235,851.548,850.235

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788501
  gflops (total): 964.656
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785313
  gflops (eval):  968.573
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785313,968.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.035
  maximum absolute entry in einsum_ir solution: 515.036
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141813
  time (eval):    0.906358
  gflops (eval):  839.219
  gflops (total): 837.908
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141813,0.906358,839.219,837.908

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78802
  gflops (total): 965.245
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785043
  gflops (eval):  968.906
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785043,968.906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.307
  maximum absolute entry in einsum_ir solution: 483.307
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139156
  time (eval):    0.885721
  gflops (eval):  858.772
  gflops (total): 857.425
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139156,0.885721,858.772,857.425

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788567
  gflops (total): 964.575
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785423
  gflops (eval):  968.437
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785423,968.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.829
  maximum absolute entry in einsum_ir solution: 482.829
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140628
  time (eval):    0.902741
  gflops (eval):  842.581
  gflops (total): 841.271
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140628,0.902741,842.581,841.271

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785156
  gflops (total): 968.766
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784936
  gflops (eval):  969.038
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784936,969.038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.365
  maximum absolute entry in einsum_ir solution: 468.365
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141834
  time (eval):    0.88376
  gflops (eval):  860.677
  gflops (total): 859.298
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141834,0.88376,860.677,859.298

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791895
  gflops (total): 960.522
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,960.522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790318
  gflops (eval):  962.439
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790318,962.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      576.775
  maximum absolute entry in einsum_ir solution: 576.775
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137432
  time (eval):    0.87252
  gflops (eval):  871.765
  gflops (total): 870.394
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137432,0.87252,871.765,870.394

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786951
  gflops (total): 966.557
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785639
  gflops (eval):  968.17
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785639,968.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.054
  maximum absolute entry in einsum_ir solution: 508.054
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139987
  time (eval):    0.891531
  gflops (eval):  853.176
  gflops (total): 851.839
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139987,0.891531,853.176,851.839

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785931
  gflops (total): 967.811
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784993
  gflops (eval):  968.968
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784993,968.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.326
  maximum absolute entry in einsum_ir solution: 513.326
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141748
  time (eval):    0.905566
  gflops (eval):  839.953
  gflops (total): 838.64
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141748,0.905566,839.953,838.64

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787171
  gflops (total): 966.286
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790665
  gflops (eval):  962.016
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790665,962.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.765
  maximum absolute entry in einsum_ir solution: 465.765
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139347
  time (eval):    0.877616
  gflops (eval):  866.704
  gflops (total): 865.33
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139347,0.877616,866.704,865.33

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789038
  gflops (total): 964
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785947
  gflops (eval):  967.791
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785947,967.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.718
  maximum absolute entry in einsum_ir solution: 494.718
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140369
  time (eval):    0.88862
  gflops (eval):  855.971
  gflops (total): 854.621
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140369,0.88862,855.971,854.621

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793103
  gflops (total): 959.059
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784777
  gflops (eval):  969.234
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784777,969.234,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.063
  maximum absolute entry in einsum_ir solution: 470.063
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138253
  time (eval):    0.902647
  gflops (eval):  842.669
  gflops (total): 841.38
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138253,0.902647,842.669,841.38

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787609
  gflops (total): 965.749
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.749

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789917
  gflops (eval):  962.927
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789917,962.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.552
  maximum absolute entry in einsum_ir solution: 497.552
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013841
  time (eval):    0.899105
  gflops (eval):  845.988
  gflops (total): 844.688
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013841,0.899105,845.988,844.688

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788311
  gflops (total): 964.889
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788037
  gflops (eval):  965.225
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788037,965.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475
  maximum absolute entry in einsum_ir solution: 475
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138872
  time (eval):    0.885863
  gflops (eval):  858.635
  gflops (total): 857.291
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138872,0.885863,858.635,857.291

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787986
  gflops (total): 965.287
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.287

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787764
  gflops (eval):  965.559
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787764,965.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.042
  maximum absolute entry in einsum_ir solution: 487.042
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137862
  time (eval):    0.886137
  gflops (eval):  858.369
  gflops (total): 857.035
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137862,0.886137,858.369,857.035

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792991
  gflops (total): 959.194
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.194

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785934
  gflops (eval):  967.807
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785934,967.807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.027
  maximum absolute entry in einsum_ir solution: 458.027
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137288
  time (eval):    0.897605
  gflops (eval):  847.402
  gflops (total): 846.108
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137288,0.897605,847.402,846.108

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792431
  gflops (total): 959.872
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787297
  gflops (eval):  966.132
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787297,966.132,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.434
  maximum absolute entry in einsum_ir solution: 495.434
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138943
  time (eval):    0.892564
  gflops (eval):  852.189
  gflops (total): 850.864
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138943,0.892564,852.189,850.864

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78901
  gflops (total): 964.034
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.782653
  gflops (eval):  971.865
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.782653,971.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.679
  maximum absolute entry in einsum_ir solution: 494.679
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138468
  time (eval):    0.888726
  gflops (eval):  855.869
  gflops (total): 854.538
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138468,0.888726,855.869,854.538

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792951
  gflops (total): 959.243
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.243

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785438
  gflops (eval):  968.418
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785438,968.418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.147
  maximum absolute entry in einsum_ir solution: 490.147
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137808
  time (eval):    0.880611
  gflops (eval):  863.756
  gflops (total): 862.406
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137808,0.880611,863.756,862.406

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788527
  gflops (total): 964.625
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.625

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791198
  gflops (eval):  961.369
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791198,961.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.572
  maximum absolute entry in einsum_ir solution: 477.572
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137705
  time (eval):    0.926606
  gflops (eval):  820.88
  gflops (total): 819.662
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137705,0.926606,820.88,819.662

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793282
  gflops (total): 958.842
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785328
  gflops (eval):  968.555
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785328,968.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.136
  maximum absolute entry in einsum_ir solution: 533.136
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138396
  time (eval):    0.902892
  gflops (eval):  842.44
  gflops (total): 841.151
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138396,0.902892,842.44,841.151

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787641
  gflops (total): 965.71
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784466
  gflops (eval):  969.618
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784466,969.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.393
  maximum absolute entry in einsum_ir solution: 541.392
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00167015
  time (eval):    0.885614
  gflops (eval):  858.876
  gflops (total): 857.26
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00167015,0.885614,858.876,857.26

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787505
  gflops (total): 965.877
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788254
  gflops (eval):  964.958
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788254,964.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.014
  maximum absolute entry in einsum_ir solution: 491.014
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138802
  time (eval):    0.884247
  gflops (eval):  860.204
  gflops (total): 858.856
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138802,0.884247,860.204,858.856

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789093
  gflops (total): 963.933
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790799
  gflops (eval):  961.854
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790799,961.854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.171
  maximum absolute entry in einsum_ir solution: 495.171
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00136607
  time (eval):    0.912513
  gflops (eval):  833.558
  gflops (total): 832.312
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00136607,0.912513,833.558,832.312

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788982
  gflops (total): 964.069
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.069

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790318
  gflops (eval):  962.438
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790318,962.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.056
  maximum absolute entry in einsum_ir solution: 475.056
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137246
  time (eval):    0.876424
  gflops (eval):  867.882
  gflops (total): 866.525
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137246,0.876424,867.882,866.525

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786704
  gflops (total): 966.86
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784252
  gflops (eval):  969.883
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784252,969.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.095
  maximum absolute entry in einsum_ir solution: 499.095
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138533
  time (eval):    0.887305
  gflops (eval):  857.24
  gflops (total): 855.903
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138533,0.887305,857.24,855.903

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787532
  gflops (total): 965.844
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.844

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786067
  gflops (eval):  967.644
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786067,967.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.044
  maximum absolute entry in einsum_ir solution: 477.044
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143168
  time (eval):    0.890534
  gflops (eval):  854.131
  gflops (total): 852.76
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143168,0.890534,854.131,852.76

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785725
  gflops (total): 968.064
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785563
  gflops (eval):  968.265
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785563,968.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.446
  maximum absolute entry in einsum_ir solution: 483.446
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142055
  time (eval):    0.887846
  gflops (eval):  856.716
  gflops (total): 855.348
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142055,0.887846,856.716,855.348

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786922
  gflops (total): 966.593
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786776
  gflops (eval):  966.772
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786776,966.772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.479
  maximum absolute entry in einsum_ir solution: 510.479
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138603
  time (eval):    0.883545
  gflops (eval):  860.888
  gflops (total): 859.539
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138603,0.883545,860.888,859.539

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78896
  gflops (total): 964.096
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790712
  gflops (eval):  961.959
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790712,961.959,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.979
  maximum absolute entry in einsum_ir solution: 486.979
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137876
  time (eval):    0.886005
  gflops (eval):  858.497
  gflops (total): 857.163
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137876,0.886005,858.497,857.163

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790522
  gflops (total): 962.19
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785837
  gflops (eval):  967.927
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785837,967.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.705
  maximum absolute entry in einsum_ir solution: 483.705
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00150592
  time (eval):    0.895618
  gflops (eval):  849.283
  gflops (total): 847.857
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00150592,0.895618,849.283,847.857

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786075
  gflops (total): 967.634
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784981
  gflops (eval):  968.982
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784981,968.982,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.189
  maximum absolute entry in einsum_ir solution: 484.189
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138833
  time (eval):    0.871934
  gflops (eval):  872.351
  gflops (total): 870.964
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138833,0.871934,872.351,870.964

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786848
  gflops (total): 966.683
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789141
  gflops (eval):  963.874
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789141,963.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.447
  maximum absolute entry in einsum_ir solution: 496.447
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00148978
  time (eval):    0.901223
  gflops (eval):  844.001
  gflops (total): 842.608
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00148978,0.901223,844.001,842.608

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791461
  gflops (total): 961.049
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789542
  gflops (eval):  963.384
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789542,963.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.498
  maximum absolute entry in einsum_ir solution: 490.498
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139303
  time (eval):    0.882667
  gflops (eval):  861.743
  gflops (total): 860.386
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139303,0.882667,861.743,860.386

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789609
  gflops (total): 963.303
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78554
  gflops (eval):  968.293
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78554,968.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.12
  maximum absolute entry in einsum_ir solution: 486.119
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138875
  time (eval):    0.896896
  gflops (eval):  848.072
  gflops (total): 846.761
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138875,0.896896,848.072,846.761

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787909
  gflops (total): 965.381
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.782782
  gflops (eval):  971.704
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.782782,971.704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.606
  maximum absolute entry in einsum_ir solution: 467.606
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137082
  time (eval):    0.886035
  gflops (eval):  858.468
  gflops (total): 857.141
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137082,0.886035,858.468,857.141

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785547
  gflops (total): 968.284
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784951
  gflops (eval):  969.019
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784951,969.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.05
  maximum absolute entry in einsum_ir solution: 510.05
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013717
  time (eval):    0.894045
  gflops (eval):  850.777
  gflops (total): 849.473
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013717,0.894045,850.777,849.473

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78607
  gflops (total): 967.639
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785355
  gflops (eval):  968.521
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785355,968.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.365
  maximum absolute entry in einsum_ir solution: 469.366
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014486
  time (eval):    0.884959
  gflops (eval):  859.512
  gflops (total): 858.107
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014486,0.884959,859.512,858.107

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793338
  gflops (total): 958.776
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786719
  gflops (eval):  966.841
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786719,966.841,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.556
  maximum absolute entry in einsum_ir solution: 470.555
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138369
  time (eval):    0.890522
  gflops (eval):  854.142
  gflops (total): 852.817
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138369,0.890522,854.142,852.817

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787621
  gflops (total): 965.734
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787886
  gflops (eval):  965.409
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787886,965.409,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.321
  maximum absolute entry in einsum_ir solution: 462.321
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137747
  time (eval):    0.876746
  gflops (eval):  867.563
  gflops (total): 866.202
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137747,0.876746,867.563,866.202

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788492
  gflops (total): 964.667
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785405
  gflops (eval):  968.459
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785405,968.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.577
  maximum absolute entry in einsum_ir solution: 471.577
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137576
  time (eval):    0.904237
  gflops (eval):  841.187
  gflops (total): 839.909
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137576,0.904237,841.187,839.909

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.784182
  gflops (total): 969.969
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,969.969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78585
  gflops (eval):  967.911
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78585,967.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.588
  maximum absolute entry in einsum_ir solution: 508.588
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013904
  time (eval):    0.899082
  gflops (eval):  846.01
  gflops (total): 844.704
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013904,0.899082,846.01,844.704

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789215
  gflops (total): 963.784
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786521
  gflops (eval):  967.085
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786521,967.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.2
  maximum absolute entry in einsum_ir solution: 473.2
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00145321
  time (eval):    0.901794
  gflops (eval):  843.466
  gflops (total): 842.109
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00145321,0.901794,843.466,842.109

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785471
  gflops (total): 968.378
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786947
  gflops (eval):  966.561
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786947,966.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.079
  maximum absolute entry in einsum_ir solution: 501.079
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.001396
  time (eval):    0.891272
  gflops (eval):  853.423
  gflops (total): 852.089
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.001396,0.891272,853.423,852.089

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788311
  gflops (total): 964.889
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789724
  gflops (eval):  963.163
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789724,963.163,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.619
  maximum absolute entry in einsum_ir solution: 469.62
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144022
  time (eval):    0.88575
  gflops (eval):  858.744
  gflops (total): 857.35
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144022,0.88575,858.744,857.35

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787607
  gflops (total): 965.751
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787326
  gflops (eval):  966.097
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787326,966.097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.001
  maximum absolute entry in einsum_ir solution: 477.001
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013743
  time (eval):    0.897993
  gflops (eval):  847.036
  gflops (total): 845.742
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013743,0.897993,847.036,845.742

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787279
  gflops (total): 966.154
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78977
  gflops (eval):  963.106
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78977,963.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.499
  maximum absolute entry in einsum_ir solution: 492.499
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00145035
  time (eval):    0.885341
  gflops (eval):  859.141
  gflops (total): 857.736
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00145035,0.885341,859.141,857.736

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793211
  gflops (total): 958.929
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78521
  gflops (eval):  968.7
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78521,968.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.62
  maximum absolute entry in einsum_ir solution: 484.62
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137914
  time (eval):    0.900177
  gflops (eval):  844.981
  gflops (total): 843.688
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137914,0.900177,844.981,843.688

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788468
  gflops (total): 964.697
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787612
  gflops (eval):  965.745
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787612,965.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.503
  maximum absolute entry in einsum_ir solution: 481.503
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139134
  time (eval):    0.90517
  gflops (eval):  840.32
  gflops (total): 839.031
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139134,0.90517,840.32,839.031

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789366
  gflops (total): 963.599
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785736
  gflops (eval):  968.051
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785736,968.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.514
  maximum absolute entry in einsum_ir solution: 486.514
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0015165
  time (eval):    0.887291
  gflops (eval):  857.253
  gflops (total): 855.79
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0015165,0.887291,857.253,855.79

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792703
  gflops (total): 959.544
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791112
  gflops (eval):  961.473
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791112,961.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.931
  maximum absolute entry in einsum_ir solution: 519.931
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138168
  time (eval):    0.896474
  gflops (eval):  848.472
  gflops (total): 847.166
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138168,0.896474,848.472,847.166

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787911
  gflops (total): 965.379
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785339
  gflops (eval):  968.54
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785339,968.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.703
  maximum absolute entry in einsum_ir solution: 468.703
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144344
  time (eval):    0.888113
  gflops (eval):  856.459
  gflops (total): 855.069
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144344,0.888113,856.459,855.069

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786962
  gflops (total): 966.543
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784991
  gflops (eval):  968.97
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784991,968.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.486
  maximum absolute entry in einsum_ir solution: 478.486
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138554
  time (eval):    0.89894
  gflops (eval):  846.144
  gflops (total): 844.841
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138554,0.89894,846.144,844.841

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786294
  gflops (total): 967.365
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785728
  gflops (eval):  968.061
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785728,968.061,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.191
  maximum absolute entry in einsum_ir solution: 501.191
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00136271
  time (eval):    0.933191
  gflops (eval):  983.314
  gflops (total): 981.88
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00136271,0.933191,983.314,981.88

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997469
  gflops (total): 919.948
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944806
  gflops (eval):  971.226
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944806,971.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.112
  maximum absolute entry in einsum_ir solution: 510.113
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138407
  time (eval):    0.934401
  gflops (eval):  982.041
  gflops (total): 980.588
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138407,0.934401,982.041,980.588

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998582
  gflops (total): 918.923
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944418
  gflops (eval):  971.625
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944418,971.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.56
  maximum absolute entry in einsum_ir solution: 535.56
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137831
  time (eval):    0.933812
  gflops (eval):  982.66
  gflops (total): 981.212
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137831,0.933812,982.66,981.212

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997189
  gflops (total): 920.206
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942261
  gflops (eval):  973.849
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942261,973.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.265
  maximum absolute entry in einsum_ir solution: 520.265
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138064
  time (eval):    0.939554
  gflops (eval):  976.654
  gflops (total): 975.221
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138064,0.939554,976.654,975.221

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999795
  gflops (total): 917.808
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944615
  gflops (eval):  971.422
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944615,971.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.482
  maximum absolute entry in einsum_ir solution: 502.482
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146785
  time (eval):    0.944124
  gflops (eval):  971.927
  gflops (total): 970.418
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146785,0.944124,971.927,970.418

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996454
  gflops (total): 920.885
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944788
  gflops (eval):  971.244
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944788,971.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.227
  maximum absolute entry in einsum_ir solution: 504.227
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138876
  time (eval):    0.933467
  gflops (eval):  983.024
  gflops (total): 981.563
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138876,0.933467,983.024,981.563

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999576
  gflops (total): 918.009
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943769
  gflops (eval):  972.293
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943769,972.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.32
  maximum absolute entry in einsum_ir solution: 493.32
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138899
  time (eval):    0.933006
  gflops (eval):  983.508
  gflops (total): 982.046
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138899,0.933006,983.508,982.046

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996032
  gflops (total): 921.275
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.275

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943625
  gflops (eval):  972.441
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943625,972.441,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.342
  maximum absolute entry in einsum_ir solution: 514.342
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00155885
  time (eval):    0.941975
  gflops (eval):  974.144
  gflops (total): 972.534
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00155885,0.941975,974.144,972.534

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997902
  gflops (total): 919.549
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945068
  gflops (eval):  970.957
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945068,970.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.69
  maximum absolute entry in einsum_ir solution: 504.69
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137223
  time (eval):    0.933487
  gflops (eval):  983.001
  gflops (total): 981.559
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137223,0.933487,983.001,981.559

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997842
  gflops (total): 919.604
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94506
  gflops (eval):  970.964
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94506,970.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.788
  maximum absolute entry in einsum_ir solution: 505.788
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147532
  time (eval):    0.945365
  gflops (eval):  970.651
  gflops (total): 969.139
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147532,0.945365,970.651,969.139

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997154
  gflops (total): 920.238
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944341
  gflops (eval):  971.704
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944341,971.704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.653
  maximum absolute entry in einsum_ir solution: 542.653
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00141706
  time (eval):    0.932598
  gflops (eval):  983.939
  gflops (total): 982.447
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00141706,0.932598,983.939,982.447

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996708
  gflops (total): 920.65
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945364
  gflops (eval):  970.653
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945364,970.653,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.888
  maximum absolute entry in einsum_ir solution: 506.888
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00147706
  time (eval):    0.933475
  gflops (eval):  983.015
  gflops (total): 981.462
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00147706,0.933475,983.015,981.462

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00083
  gflops (total): 916.855
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94353
  gflops (eval):  972.539
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94353,972.539,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.013
  maximum absolute entry in einsum_ir solution: 543.013
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139058
  time (eval):    0.933754
  gflops (eval):  982.721
  gflops (total): 981.26
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139058,0.933754,982.721,981.26

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997922
  gflops (total): 919.531
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94376
  gflops (eval):  972.302
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94376,972.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.847
  maximum absolute entry in einsum_ir solution: 515.847
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138983
  time (eval):    0.933711
  gflops (eval):  982.766
  gflops (total): 981.306
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138983,0.933711,982.766,981.306

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999537
  gflops (total): 918.044
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944841
  gflops (eval):  971.19
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944841,971.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.959
  maximum absolute entry in einsum_ir solution: 507.959
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00144378
  time (eval):    0.966277
  gflops (eval):  949.645
  gflops (total): 948.228
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00144378,0.966277,949.645,948.228

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999395
  gflops (total): 918.175
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945253
  gflops (eval):  970.767
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945253,970.767,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.725
  maximum absolute entry in einsum_ir solution: 494.725
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139742
  time (eval):    0.948425
  gflops (eval):  967.52
  gflops (total): 966.096
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139742,0.948425,967.52,966.096

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997718
  gflops (total): 919.718
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943672
  gflops (eval):  972.392
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943672,972.392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.726
  maximum absolute entry in einsum_ir solution: 496.726
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138744
  time (eval):    0.936128
  gflops (eval):  980.228
  gflops (total): 978.778
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138744,0.936128,980.228,978.778

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999749
  gflops (total): 917.85
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942978
  gflops (eval):  973.108
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942978,973.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.703
  maximum absolute entry in einsum_ir solution: 496.703
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140551
  time (eval):    0.938376
  gflops (eval):  977.88
  gflops (total): 976.418
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140551,0.938376,977.88,976.418

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99947
  gflops (total): 918.106
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945279
  gflops (eval):  970.74
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945279,970.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.071
  maximum absolute entry in einsum_ir solution: 540.071
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139048
  time (eval):    0.940231
  gflops (eval):  975.951
  gflops (total): 974.51
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139048,0.940231,975.951,974.51

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998383
  gflops (total): 919.106
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945271
  gflops (eval):  970.748
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945271,970.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.412
  maximum absolute entry in einsum_ir solution: 532.412
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00144432
  time (eval):    0.934055
  gflops (eval):  982.405
  gflops (total): 980.888
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00144432,0.934055,982.405,980.888

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997473
  gflops (total): 919.945
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946111
  gflops (eval):  969.885
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946111,969.885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.525
  maximum absolute entry in einsum_ir solution: 484.525
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0013839
  time (eval):    0.937999
  gflops (eval):  978.274
  gflops (total): 976.832
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0013839,0.937999,978.274,976.832

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999747
  gflops (total): 917.852
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944929
  gflops (eval):  971.099
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944929,971.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      562.066
  maximum absolute entry in einsum_ir solution: 562.066
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139578
  time (eval):    0.95049
  gflops (eval):  965.418
  gflops (total): 964.002
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139578,0.95049,965.418,964.002

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998167
  gflops (total): 919.304
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945512
  gflops (eval):  970.5
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945512,970.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.132
  maximum absolute entry in einsum_ir solution: 506.132
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138814
  time (eval):    0.932874
  gflops (eval):  983.647
  gflops (total): 982.186
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138814,0.932874,983.647,982.186

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998319
  gflops (total): 919.165
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944913
  gflops (eval):  971.116
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944913,971.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.587
  maximum absolute entry in einsum_ir solution: 497.587
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138916
  time (eval):    0.933809
  gflops (eval):  982.663
  gflops (total): 981.204
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138916,0.933809,982.663,981.204

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998756
  gflops (total): 918.762
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942325
  gflops (eval):  973.783
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942325,973.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.138
  maximum absolute entry in einsum_ir solution: 509.138
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139842
  time (eval):    0.936709
  gflops (eval):  979.621
  gflops (total): 978.161
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139842,0.936709,979.621,978.161

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997397
  gflops (total): 920.015
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942846
  gflops (eval):  973.244
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942846,973.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.427
  maximum absolute entry in einsum_ir solution: 496.427
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139648
  time (eval):    0.934877
  gflops (eval):  981.54
  gflops (total): 980.076
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139648,0.934877,981.54,980.076

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997735
  gflops (total): 919.703
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94156
  gflops (eval):  974.573
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94156,974.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.701
  maximum absolute entry in einsum_ir solution: 503.702
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140034
  time (eval):    0.942693
  gflops (eval):  973.402
  gflops (total): 971.958
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140034,0.942693,973.402,971.958

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998465
  gflops (total): 919.03
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944398
  gflops (eval):  971.645
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944398,971.645,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.75
  maximum absolute entry in einsum_ir solution: 510.75
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138262
  time (eval):    0.93347
  gflops (eval):  983.019
  gflops (total): 981.566
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138262,0.93347,983.019,981.566

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996881
  gflops (total): 920.49
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942098
  gflops (eval):  974.017
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942098,974.017,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.236
  maximum absolute entry in einsum_ir solution: 487.236
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139891
  time (eval):    0.940162
  gflops (eval):  976.023
  gflops (total): 974.573
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139891,0.940162,976.023,974.573

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996685
  gflops (total): 920.671
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941845
  gflops (eval):  974.279
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941845,974.279,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.284
  maximum absolute entry in einsum_ir solution: 515.284
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00136773
  time (eval):    0.94608
  gflops (eval):  969.918
  gflops (total): 968.517
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00136773,0.94608,969.918,968.517

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999741
  gflops (total): 917.857
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943679
  gflops (eval):  972.385
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943679,972.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.761
  maximum absolute entry in einsum_ir solution: 497.761
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138416
  time (eval):    0.933593
  gflops (eval):  982.891
  gflops (total): 981.436
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138416,0.933593,982.891,981.436

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99894
  gflops (total): 918.594
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943421
  gflops (eval):  972.651
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943421,972.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.077
  maximum absolute entry in einsum_ir solution: 505.077
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00170709
  time (eval):    0.94318
  gflops (eval):  972.9
  gflops (total): 971.142
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00170709,0.94318,972.9,971.142

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998813
  gflops (total): 918.71
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944596
  gflops (eval):  971.441
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944596,971.441,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.194
  maximum absolute entry in einsum_ir solution: 504.194
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139086
  time (eval):    0.941114
  gflops (eval):  975.036
  gflops (total): 973.597
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139086,0.941114,975.036,973.597

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999616
  gflops (total): 917.972
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94426
  gflops (eval):  971.787
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94426,971.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.483
  maximum absolute entry in einsum_ir solution: 496.483
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139006
  time (eval):    0.932971
  gflops (eval):  983.545
  gflops (total): 982.082
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139006,0.932971,983.545,982.082

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996364
  gflops (total): 920.968
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942688
  gflops (eval):  973.408
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942688,973.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.209
  maximum absolute entry in einsum_ir solution: 499.209
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139033
  time (eval):    0.933887
  gflops (eval):  982.581
  gflops (total): 981.12
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139033,0.933887,982.581,981.12

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999508
  gflops (total): 918.071
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943197
  gflops (eval):  972.883
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943197,972.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.87
  maximum absolute entry in einsum_ir solution: 503.87
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139126
  time (eval):    0.933292
  gflops (eval):  983.208
  gflops (total): 981.744
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139126,0.933292,983.208,981.744

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998143
  gflops (total): 919.327
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943853
  gflops (eval):  972.206
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943853,972.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.724
  maximum absolute entry in einsum_ir solution: 532.724
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137778
  time (eval):    0.943131
  gflops (eval):  972.95
  gflops (total): 971.531
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137778,0.943131,972.95,971.531

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999118
  gflops (total): 918.429
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941952
  gflops (eval):  974.168
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941952,974.168,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.773
  maximum absolute entry in einsum_ir solution: 532.773
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00153029
  time (eval):    0.933299
  gflops (eval):  983.2
  gflops (total): 981.591
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00153029,0.933299,983.2,981.591

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99735
  gflops (total): 920.058
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943705
  gflops (eval):  972.359
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943705,972.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.888
  maximum absolute entry in einsum_ir solution: 531.888
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00142011
  time (eval):    0.943491
  gflops (eval):  972.579
  gflops (total): 971.117
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00142011,0.943491,972.579,971.117

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997801
  gflops (total): 919.642
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945062
  gflops (eval):  970.962
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945062,970.962,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.303
  maximum absolute entry in einsum_ir solution: 496.303
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145458
  time (eval):    0.933048
  gflops (eval):  983.464
  gflops (total): 981.934
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145458,0.933048,983.464,981.934

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997179
  gflops (total): 920.216
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941415
  gflops (eval):  974.724
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941415,974.724,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.842
  maximum absolute entry in einsum_ir solution: 538.842
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00144979
  time (eval):    0.939746
  gflops (eval):  976.455
  gflops (total): 974.951
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00144979,0.939746,976.455,974.951

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999893
  gflops (total): 917.718
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943792
  gflops (eval):  972.269
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943792,972.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.183
  maximum absolute entry in einsum_ir solution: 538.183
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138886
  time (eval):    0.940318
  gflops (eval):  975.861
  gflops (total): 974.422
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138886,0.940318,975.861,974.422

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996298
  gflops (total): 921.03
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942966
  gflops (eval):  973.121
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942966,973.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.888
  maximum absolute entry in einsum_ir solution: 542.888
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139865
  time (eval):    0.945517
  gflops (eval):  970.495
  gflops (total): 969.061
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139865,0.945517,970.495,969.061

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997419
  gflops (total): 919.994
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944757
  gflops (eval):  971.275
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944757,971.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.606
  maximum absolute entry in einsum_ir solution: 558.606
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0013858
  time (eval):    0.937351
  gflops (eval):  978.95
  gflops (total): 977.504
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0013858,0.937351,978.95,977.504

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00048
  gflops (total): 917.182
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942749
  gflops (eval):  973.345
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942749,973.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.623
  maximum absolute entry in einsum_ir solution: 508.623
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139197
  time (eval):    0.935051
  gflops (eval):  981.358
  gflops (total): 979.899
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139197,0.935051,981.358,979.899

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997543
  gflops (total): 919.88
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945235
  gflops (eval):  970.785
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945235,970.785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      571.615
  maximum absolute entry in einsum_ir solution: 571.615
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0015044
  time (eval):    0.933862
  gflops (eval):  982.607
  gflops (total): 981.027
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0015044,0.933862,982.607,981.027

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99734
  gflops (total): 920.067
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942453
  gflops (eval):  973.651
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942453,973.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.215
  maximum absolute entry in einsum_ir solution: 514.215
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139451
  time (eval):    0.933918
  gflops (eval):  982.549
  gflops (total): 981.084
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139451,0.933918,982.549,981.084

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00105
  gflops (total): 916.662
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946095
  gflops (eval):  969.902
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946095,969.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.257
  maximum absolute entry in einsum_ir solution: 530.257
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138593
  time (eval):    0.933954
  gflops (eval):  982.51
  gflops (total): 981.055
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138593,0.933954,982.51,981.055

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999301
  gflops (total): 918.261
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945879
  gflops (eval):  970.124
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945879,970.124,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.408
  maximum absolute entry in einsum_ir solution: 501.408
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139207
  time (eval):    0.943938
  gflops (eval):  972.118
  gflops (total): 970.687
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139207,0.943938,972.118,970.687

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998895
  gflops (total): 918.635
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944616
  gflops (eval):  971.421
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944616,971.421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.391
  maximum absolute entry in einsum_ir solution: 505.391
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138926
  time (eval):    0.941192
  gflops (eval):  974.955
  gflops (total): 973.518
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138926,0.941192,974.955,973.518

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00004
  gflops (total): 917.587
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.95927
  gflops (eval):  956.581
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.95927,956.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.563
  maximum absolute entry in einsum_ir solution: 522.563
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138404
  time (eval):    0.938163
  gflops (eval):  978.103
  gflops (total): 976.662
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138404,0.938163,978.103,976.662

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99683
  gflops (total): 920.537
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94287
  gflops (eval):  973.22
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94287,973.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.011
  maximum absolute entry in einsum_ir solution: 508.011
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00143422
  time (eval):    0.944622
  gflops (eval):  971.415
  gflops (total): 969.942
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00143422,0.944622,971.415,969.942

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999737
  gflops (total): 917.861
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944445
  gflops (eval):  971.597
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944445,971.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.558
  maximum absolute entry in einsum_ir solution: 537.558
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137109
  time (eval):    0.932637
  gflops (eval):  983.898
  gflops (total): 982.454
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137109,0.932637,983.898,982.454

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.995828
  gflops (total): 921.464
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.464

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941959
  gflops (eval):  974.161
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941959,974.161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.262
  maximum absolute entry in einsum_ir solution: 520.261
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138555
  time (eval):    0.938305
  gflops (eval):  977.954
  gflops (total): 976.512
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138555,0.938305,977.954,976.512

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998001
  gflops (total): 919.457
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943176
  gflops (eval):  972.904
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943176,972.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.395
  maximum absolute entry in einsum_ir solution: 510.395
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140239
  time (eval):    0.941009
  gflops (eval):  975.145
  gflops (total): 973.694
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140239,0.941009,975.145,973.694

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996403
  gflops (total): 920.932
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.940763
  gflops (eval):  975.4
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.940763,975.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.14
  maximum absolute entry in einsum_ir solution: 525.14
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00135871
  time (eval):    0.933883
  gflops (eval):  982.585
  gflops (total): 981.158
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00135871,0.933883,982.585,981.158

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997909
  gflops (total): 919.542
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942946
  gflops (eval):  973.141
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942946,973.141,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.063
  maximum absolute entry in einsum_ir solution: 491.063
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00135972
  time (eval):    0.933559
  gflops (eval):  982.926
  gflops (total): 981.496
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00135972,0.933559,982.926,981.496

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998926
  gflops (total): 918.607
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944545
  gflops (eval):  971.494
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944545,971.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.911
  maximum absolute entry in einsum_ir solution: 541.911
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138422
  time (eval):    0.934584
  gflops (eval):  981.849
  gflops (total): 980.397
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138422,0.934584,981.849,980.397

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998099
  gflops (total): 919.367
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944916
  gflops (eval):  971.113
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944916,971.113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.254
  maximum absolute entry in einsum_ir solution: 523.254
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138379
  time (eval):    0.93363
  gflops (eval):  982.851
  gflops (total): 981.396
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138379,0.93363,982.851,981.396

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998963
  gflops (total): 918.572
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944186
  gflops (eval):  971.863
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944186,971.863,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.566
  maximum absolute entry in einsum_ir solution: 516.566
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139221
  time (eval):    0.945918
  gflops (eval):  970.084
  gflops (total): 968.658
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139221,0.945918,970.084,968.658

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997471
  gflops (total): 919.946
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944928
  gflops (eval):  971.1
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944928,971.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.488
  maximum absolute entry in einsum_ir solution: 490.488
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139079
  time (eval):    0.940969
  gflops (eval):  975.186
  gflops (total): 973.747
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139079,0.940969,975.186,973.747

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.9969
  gflops (total): 920.473
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943121
  gflops (eval):  972.961
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943121,972.961,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.016
  maximum absolute entry in einsum_ir solution: 495.016
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0013779
  time (eval):    0.940888
  gflops (eval):  975.27
  gflops (total): 973.844
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0013779,0.940888,975.27,973.844

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997808
  gflops (total): 919.635
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942397
  gflops (eval):  973.708
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942397,973.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.551
  maximum absolute entry in einsum_ir solution: 501.551
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139138
  time (eval):    0.938752
  gflops (eval):  977.489
  gflops (total): 976.042
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139138,0.938752,977.489,976.042

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999219
  gflops (total): 918.337
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944634
  gflops (eval):  971.402
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944634,971.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.617
  maximum absolute entry in einsum_ir solution: 541.617
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139572
  time (eval):    0.944028
  gflops (eval):  972.026
  gflops (total): 970.591
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139572,0.944028,972.026,970.591

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999979
  gflops (total): 917.638
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.638

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945232
  gflops (eval):  970.788
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945232,970.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.575
  maximum absolute entry in einsum_ir solution: 532.575
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137831
  time (eval):    0.935119
  gflops (eval):  981.287
  gflops (total): 979.843
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137831,0.935119,981.287,979.843

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00056
  gflops (total): 917.102
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943229
  gflops (eval):  972.849
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943229,972.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.971
  maximum absolute entry in einsum_ir solution: 536.971
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00135172
  time (eval):    0.940961
  gflops (eval):  975.194
  gflops (total): 973.795
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00135172,0.940961,975.194,973.795

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999044
  gflops (total): 918.498
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943615
  gflops (eval):  972.451
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943615,972.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.906
  maximum absolute entry in einsum_ir solution: 531.906
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139748
  time (eval):    0.933282
  gflops (eval):  983.218
  gflops (total): 981.748
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139748,0.933282,983.218,981.748

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00073
  gflops (total): 916.952
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945677
  gflops (eval):  970.331
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945677,970.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.396
  maximum absolute entry in einsum_ir solution: 514.396
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138674
  time (eval):    0.933417
  gflops (eval):  983.076
  gflops (total): 981.618
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138674,0.933417,983.076,981.618

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997191
  gflops (total): 920.205
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943518
  gflops (eval):  972.551
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943518,972.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.265
  maximum absolute entry in einsum_ir solution: 531.265
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00158214
  time (eval):    0.933504
  gflops (eval):  982.984
  gflops (total): 981.321
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00158214,0.933504,982.984,981.321

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997969
  gflops (total): 919.487
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.9402
  gflops (eval):  975.984
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.9402,975.984,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.511
  maximum absolute entry in einsum_ir solution: 523.511
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139289
  time (eval):    0.935127
  gflops (eval):  981.278
  gflops (total): 979.818
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139289,0.935127,981.278,979.818

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996537
  gflops (total): 920.808
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943692
  gflops (eval):  972.372
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943692,972.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.609
  maximum absolute entry in einsum_ir solution: 498.609
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137936
  time (eval):    0.933718
  gflops (eval):  982.758
  gflops (total): 981.309
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137936,0.933718,982.758,981.309

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998818
  gflops (total): 918.705
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94393
  gflops (eval):  972.127
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94393,972.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.123
  maximum absolute entry in einsum_ir solution: 503.122
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138826
  time (eval):    0.941076
  gflops (eval):  975.075
  gflops (total): 973.639
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138826,0.941076,975.075,973.639

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997164
  gflops (total): 920.229
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942257
  gflops (eval):  973.853
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942257,973.853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.674
  maximum absolute entry in einsum_ir solution: 504.674
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137878
  time (eval):    0.933819
  gflops (eval):  982.653
  gflops (total): 981.204
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137878,0.933819,982.653,981.204

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996983
  gflops (total): 920.397
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943936
  gflops (eval):  972.121
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943936,972.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.707
  maximum absolute entry in einsum_ir solution: 507.707
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00197595
  time (eval):    0.941841
  gflops (eval):  974.283
  gflops (total): 972.243
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00197595,0.941841,974.283,972.243

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.995541
  gflops (total): 921.73
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942492
  gflops (eval):  973.61
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942492,973.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.292
  maximum absolute entry in einsum_ir solution: 507.292
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00155082
  time (eval):    0.942927
  gflops (eval):  973.161
  gflops (total): 971.563
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00155082,0.942927,973.161,971.563

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.995548
  gflops (total): 921.723
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942932
  gflops (eval):  973.155
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942932,973.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.013
  maximum absolute entry in einsum_ir solution: 490.013
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137543
  time (eval):    0.937476
  gflops (eval):  978.819
  gflops (total): 977.385
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137543,0.937476,978.819,977.385

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997624
  gflops (total): 919.805
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942847
  gflops (eval):  973.244
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942847,973.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.982
  maximum absolute entry in einsum_ir solution: 546.982
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.001416
  time (eval):    0.952549
  gflops (eval):  963.331
  gflops (total): 961.901
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.001416,0.952549,963.331,961.901

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00032
  gflops (total): 917.326
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.949055
  gflops (eval):  966.877
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.949055,966.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.349
  maximum absolute entry in einsum_ir solution: 512.349
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138195
  time (eval):    0.943704
  gflops (eval):  972.36
  gflops (total): 970.938
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138195,0.943704,972.36,970.938

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997396
  gflops (total): 920.015
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943117
  gflops (eval):  972.965
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943117,972.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.213
  maximum absolute entry in einsum_ir solution: 484.213
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140193
  time (eval):    0.933329
  gflops (eval):  983.169
  gflops (total): 981.694
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140193,0.933329,983.169,981.694

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997911
  gflops (total): 919.54
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94253
  gflops (eval):  973.57
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94253,973.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.084
  maximum absolute entry in einsum_ir solution: 501.084
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139452
  time (eval):    0.933755
  gflops (eval):  982.72
  gflops (total): 981.255
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139452,0.933755,982.72,981.255

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00039
  gflops (total): 917.259
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944009
  gflops (eval):  972.045
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944009,972.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.385
  maximum absolute entry in einsum_ir solution: 499.385
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00168301
  time (eval):    0.934578
  gflops (eval):  981.854
  gflops (total): 980.089
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00168301,0.934578,981.854,980.089

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997236
  gflops (total): 920.163
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945285
  gflops (eval):  970.734
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945285,970.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.589
  maximum absolute entry in einsum_ir solution: 522.589
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00141322
  time (eval):    0.933847
  gflops (eval):  982.623
  gflops (total): 981.139
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00141322,0.933847,982.623,981.139

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00799
  gflops (total): 910.346
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,910.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943963
  gflops (eval):  972.093
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943963,972.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.298
  maximum absolute entry in einsum_ir solution: 514.298
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0015656
  time (eval):    0.940425
  gflops (eval):  975.75
  gflops (total): 974.129
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0015656,0.940425,975.75,974.129

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997252
  gflops (total): 920.148
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943271
  gflops (eval):  972.805
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943271,972.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.281
  maximum absolute entry in einsum_ir solution: 524.281
  maximum element-wise difference:              0.000427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138204
  time (eval):    0.945708
  gflops (eval):  970.299
  gflops (total): 968.883
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138204,0.945708,970.299,968.883

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998115
  gflops (total): 919.353
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.353

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94365
  gflops (eval):  972.415
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94365,972.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.711
  maximum absolute entry in einsum_ir solution: 511.712
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.001385
  time (eval):    0.933014
  gflops (eval):  983.5
  gflops (total): 982.042
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.001385,0.933014,983.5,982.042

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.994921
  gflops (total): 922.304
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,922.304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943773
  gflops (eval):  972.288
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943773,972.288,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.639
  maximum absolute entry in einsum_ir solution: 503.639
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137713
  time (eval):    0.942318
  gflops (eval):  973.79
  gflops (total): 972.369
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137713,0.942318,973.79,972.369

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999019
  gflops (total): 918.521
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943031
  gflops (eval):  973.054
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943031,973.054,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.211
  maximum absolute entry in einsum_ir solution: 493.21
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00142757
  time (eval):    0.944562
  gflops (eval):  971.477
  gflops (total): 970.01
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00142757,0.944562,971.477,970.01

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997607
  gflops (total): 919.82
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944459
  gflops (eval):  971.582
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944459,971.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.105
  maximum absolute entry in einsum_ir solution: 512.105
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138673
  time (eval):    0.933722
  gflops (eval):  982.755
  gflops (total): 981.298
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138673,0.933722,982.755,981.298

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997485
  gflops (total): 919.933
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943609
  gflops (eval):  972.457
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943609,972.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.633
  maximum absolute entry in einsum_ir solution: 507.633
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139776
  time (eval):    0.944138
  gflops (eval):  971.913
  gflops (total): 970.476
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139776,0.944138,971.913,970.476

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997624
  gflops (total): 919.805
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943033
  gflops (eval):  973.051
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943033,973.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.062
  maximum absolute entry in einsum_ir solution: 510.062
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140476
  time (eval):    0.934011
  gflops (eval):  982.45
  gflops (total): 980.975
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140476,0.934011,982.45,980.975

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997246
  gflops (total): 920.153
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945732
  gflops (eval):  970.275
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945732,970.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.495
  maximum absolute entry in einsum_ir solution: 513.495
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138728
  time (eval):    0.933505
  gflops (eval):  982.983
  gflops (total): 981.524
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138728,0.933505,982.983,981.524

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997999
  gflops (total): 919.459
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944937
  gflops (eval):  971.091
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944937,971.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      571.135
  maximum absolute entry in einsum_ir solution: 571.136
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014045
  time (eval):    0.939898
  gflops (eval):  976.297
  gflops (total): 974.84
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014045,0.939898,976.297,974.84

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998038
  gflops (total): 919.423
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94351
  gflops (eval):  972.56
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94351,972.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.654
  maximum absolute entry in einsum_ir solution: 499.654
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138478
  time (eval):    0.933362
  gflops (eval):  983.134
  gflops (total): 981.677
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138478,0.933362,983.134,981.677

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997118
  gflops (total): 920.271
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.271

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941595
  gflops (eval):  974.537
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941595,974.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.815
  maximum absolute entry in einsum_ir solution: 515.815
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137756
  time (eval):    0.937199
  gflops (eval):  979.108
  gflops (total): 977.671
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137756,0.937199,979.108,977.671

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997323
  gflops (total): 920.082
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942713
  gflops (eval):  973.381
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942713,973.381,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.752
  maximum absolute entry in einsum_ir solution: 496.752
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138705
  time (eval):    0.943032
  gflops (eval):  973.053
  gflops (total): 971.624
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138705,0.943032,973.053,971.624

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996266
  gflops (total): 921.059
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943886
  gflops (eval):  972.172
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943886,972.172,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.745
  maximum absolute entry in einsum_ir solution: 507.745
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138262
  time (eval):    0.933029
  gflops (eval):  983.485
  gflops (total): 982.029
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138262,0.933029,983.485,982.029

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99591
  gflops (total): 921.388
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943433
  gflops (eval):  972.639
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943433,972.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.564
  maximum absolute entry in einsum_ir solution: 527.564
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138172
  time (eval):    0.940884
  gflops (eval):  975.274
  gflops (total): 973.844
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138172,0.940884,975.274,973.844

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997889
  gflops (total): 919.56
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942333
  gflops (eval):  973.775
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942333,973.775,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.318
  maximum absolute entry in einsum_ir solution: 524.319
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137542
  time (eval):    1.02153
  gflops (eval):  898.278
  gflops (total): 897.07
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137542,1.02153,898.278,897.07

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.996329
  gflops (total): 921.001
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,921.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943769
  gflops (eval):  972.293
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943769,972.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.261
  maximum absolute entry in einsum_ir solution: 542.261
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00150684
  time (eval):    0.933168
  gflops (eval):  983.338
  gflops (total): 981.752
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00150684,0.933168,983.338,981.752

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997544
  gflops (total): 919.879
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944353
  gflops (eval):  971.691
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944353,971.691,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.108
  maximum absolute entry in einsum_ir solution: 510.108
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138544
  time (eval):    0.93624
  gflops (eval):  980.112
  gflops (total): 978.664
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138544,0.93624,980.112,978.664

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997275
  gflops (total): 920.127
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,920.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941601
  gflops (eval):  974.532
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941601,974.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.628
  maximum absolute entry in einsum_ir solution: 508.628
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137998
  time (eval):    1.1357
  gflops (eval):  923.413
  gflops (total): 922.292
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137998,1.1357,923.413,922.292

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14605
  gflops (total): 915.07
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06865
  gflops (eval):  981.349
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06865,981.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.405
  maximum absolute entry in einsum_ir solution: 529.405
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137996
  time (eval):    1.14132
  gflops (eval):  918.865
  gflops (total): 917.755
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137996,1.14132,918.865,917.755

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14751
  gflops (total): 913.909
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07603
  gflops (eval):  974.612
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07603,974.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.724
  maximum absolute entry in einsum_ir solution: 551.724
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138203
  time (eval):    1.1292
  gflops (eval):  928.727
  gflops (total): 927.592
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138203,1.1292,928.727,927.592

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14591
  gflops (total): 915.178
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07245
  gflops (eval):  977.868
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07245,977.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.681
  maximum absolute entry in einsum_ir solution: 550.681
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013838
  time (eval):    1.12938
  gflops (eval):  928.577
  gflops (total): 927.441
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013838,1.12938,928.577,927.441

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14724
  gflops (total): 914.125
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07014
  gflops (eval):  979.985
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07014,979.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      574.631
  maximum absolute entry in einsum_ir solution: 574.631
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00141107
  time (eval):    1.13386
  gflops (eval):  924.906
  gflops (total): 923.756
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00141107,1.13386,924.906,923.756

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1463
  gflops (total): 914.873
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0682
  gflops (eval):  981.764
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0682,981.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.329
  maximum absolute entry in einsum_ir solution: 551.329
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137595
  time (eval):    1.13358
  gflops (eval):  925.137
  gflops (total): 924.016
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137595,1.13358,925.137,924.016

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1472
  gflops (total): 914.15
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07172
  gflops (eval):  978.533
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07172,978.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.628
  maximum absolute entry in einsum_ir solution: 540.627
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00182406
  time (eval):    1.13421
  gflops (eval):  924.62
  gflops (total): 923.135
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00182406,1.13421,924.62,923.135

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14972
  gflops (total): 912.147
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07595
  gflops (eval):  974.685
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07595,974.685,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.997
  maximum absolute entry in einsum_ir solution: 526.997
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137388
  time (eval):    1.13048
  gflops (eval):  927.676
  gflops (total): 926.549
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137388,1.13048,927.676,926.549

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1526
  gflops (total): 909.873
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,909.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07718
  gflops (eval):  973.58
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07718,973.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.834
  maximum absolute entry in einsum_ir solution: 560.834
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.001425
  time (eval):    1.13512
  gflops (eval):  923.884
  gflops (total): 922.725
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.001425,1.13512,923.884,922.725

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14888
  gflops (total): 912.82
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07817
  gflops (eval):  972.684
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07817,972.684,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.062
  maximum absolute entry in einsum_ir solution: 529.062
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00136941
  time (eval):    1.13132
  gflops (eval):  926.987
  gflops (total): 925.867
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00136941,1.13132,926.987,925.867

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14889
  gflops (total): 912.805
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07822
  gflops (eval):  972.639
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07822,972.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.898
  maximum absolute entry in einsum_ir solution: 531.898
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00136582
  time (eval):    1.13876
  gflops (eval):  920.931
  gflops (total): 919.827
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00136582,1.13876,920.931,919.827

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14857
  gflops (total): 913.06
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07068
  gflops (eval):  979.483
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07068,979.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.325
  maximum absolute entry in einsum_ir solution: 526.325
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00166665
  time (eval):    1.13628
  gflops (eval):  922.938
  gflops (total): 921.586
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00166665,1.13628,922.938,921.586

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14805
  gflops (total): 913.478
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07101
  gflops (eval):  979.186
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07101,979.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      571.396
  maximum absolute entry in einsum_ir solution: 571.396
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137331
  time (eval):    1.13543
  gflops (eval):  923.628
  gflops (total): 922.512
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137331,1.13543,923.628,922.512

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15024
  gflops (total): 911.734
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07499
  gflops (eval):  975.557
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07499,975.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.09
  maximum absolute entry in einsum_ir solution: 547.09
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138563
  time (eval):    1.13609
  gflops (eval):  923.094
  gflops (total): 921.969
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138563,1.13609,923.094,921.969

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14675
  gflops (total): 914.509
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07865
  gflops (eval):  972.25
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07865,972.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.086
  maximum absolute entry in einsum_ir solution: 533.086
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138408
  time (eval):    1.13877
  gflops (eval):  920.921
  gflops (total): 919.803
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138408,1.13877,920.921,919.803

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1467
  gflops (total): 914.548
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0734
  gflops (eval):  977.006
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0734,977.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.548
  maximum absolute entry in einsum_ir solution: 530.548
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138299
  time (eval):    1.13166
  gflops (eval):  926.707
  gflops (total): 925.576
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138299,1.13166,926.707,925.576

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14625
  gflops (total): 914.909
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07659
  gflops (eval):  974.108
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07659,974.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.409
  maximum absolute entry in einsum_ir solution: 556.409
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00140643
  time (eval):    1.13631
  gflops (eval):  922.91
  gflops (total): 921.769
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00140643,1.13631,922.91,921.769

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14479
  gflops (total): 916.075
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,916.075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07764
  gflops (eval):  973.157
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07764,973.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.909
  maximum absolute entry in einsum_ir solution: 554.909
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138859
  time (eval):    1.13441
  gflops (eval):  924.456
  gflops (total): 923.326
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138859,1.13441,924.456,923.326

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1467
  gflops (total): 914.554
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07893
  gflops (eval):  971.993
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07893,971.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      557.779
  maximum absolute entry in einsum_ir solution: 557.779
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137964
  time (eval):    1.1245
  gflops (eval):  932.604
  gflops (total): 931.461
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137964,1.1245,932.604,931.461

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14872
  gflops (total): 912.944
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07548
  gflops (eval):  975.11
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07548,975.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.542
  maximum absolute entry in einsum_ir solution: 537.542
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00188486
  time (eval):    1.13188
  gflops (eval):  926.525
  gflops (total): 924.985
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00188486,1.13188,926.525,924.985

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14661
  gflops (total): 914.623
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07454
  gflops (eval):  975.97
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07454,975.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.549
  maximum absolute entry in einsum_ir solution: 531.549
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013852
  time (eval):    1.14645
  gflops (eval):  914.748
  gflops (total): 913.644
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013852,1.14645,914.748,913.644

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14833
  gflops (total): 913.257
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07624
  gflops (eval):  974.422
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07624,974.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.071
  maximum absolute entry in einsum_ir solution: 542.071
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00136206
  time (eval):    1.13116
  gflops (eval):  927.113
  gflops (total): 925.998
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00136206,1.13116,927.113,925.998

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14849
  gflops (total): 913.125
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07291
  gflops (eval):  977.454
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07291,977.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      564.582
  maximum absolute entry in einsum_ir solution: 564.582
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00160782
  time (eval):    1.13056
  gflops (eval):  927.607
  gflops (total): 926.29
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00160782,1.13056,927.607,926.29

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14871
  gflops (total): 912.951
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07699
  gflops (eval):  973.747
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07699,973.747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.442
  maximum absolute entry in einsum_ir solution: 549.442
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013751
  time (eval):    1.13583
  gflops (eval):  923.307
  gflops (total): 922.191
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013751,1.13583,923.307,922.191

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14667
  gflops (total): 914.574
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07267
  gflops (eval):  977.672
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07267,977.672,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.389
  maximum absolute entry in einsum_ir solution: 553.389
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138585
  time (eval):    1.13087
  gflops (eval):  927.35
  gflops (total): 926.215
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138585,1.13087,927.35,926.215

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14683
  gflops (total): 914.448
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0792
  gflops (eval):  971.752
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0792,971.752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      577.745
  maximum absolute entry in einsum_ir solution: 577.745
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00143581
  time (eval):    1.13415
  gflops (eval):  924.673
  gflops (total): 923.504
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00143581,1.13415,924.673,923.504

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14772
  gflops (total): 913.738
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06838
  gflops (eval):  981.596
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06838,981.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.454
  maximum absolute entry in einsum_ir solution: 556.454
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137825
  time (eval):    1.13449
  gflops (eval):  924.398
  gflops (total): 923.277
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137825,1.13449,924.398,923.277

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14496
  gflops (total): 915.941
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07332
  gflops (eval):  977.073
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07332,977.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      576.069
  maximum absolute entry in einsum_ir solution: 576.069
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137089
  time (eval):    1.13269
  gflops (eval):  925.862
  gflops (total): 924.742
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137089,1.13269,925.862,924.742

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15228
  gflops (total): 910.124
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06985
  gflops (eval):  980.248
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06985,980.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      568.317
  maximum absolute entry in einsum_ir solution: 568.317
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138219
  time (eval):    1.13255
  gflops (eval):  925.974
  gflops (total): 924.845
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138219,1.13255,925.974,924.845

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14654
  gflops (total): 914.677
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07374
  gflops (eval):  976.698
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07374,976.698,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.501
  maximum absolute entry in einsum_ir solution: 545.501
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013844
  time (eval):    1.13468
  gflops (eval):  924.237
  gflops (total): 923.111
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013844,1.13468,924.237,923.111

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14907
  gflops (total): 912.664
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07025
  gflops (eval):  979.882
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07025,979.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      586.507
  maximum absolute entry in einsum_ir solution: 586.507
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137732
  time (eval):    1.13473
  gflops (eval):  924.202
  gflops (total): 923.082
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137732,1.13473,924.202,923.082

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14758
  gflops (total): 913.85
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08046
  gflops (eval):  970.619
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08046,970.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.61
  maximum absolute entry in einsum_ir solution: 537.61
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138569
  time (eval):    1.14091
  gflops (eval):  919.196
  gflops (total): 918.081
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138569,1.14091,919.196,918.081

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14769
  gflops (total): 913.765
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07337
  gflops (eval):  977.032
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07337,977.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.734
  maximum absolute entry in einsum_ir solution: 521.734
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137405
  time (eval):    1.13561
  gflops (eval):  923.482
  gflops (total): 922.366
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137405,1.13561,923.482,922.366

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14803
  gflops (total): 913.49
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07039
  gflops (eval):  979.752
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07039,979.752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.331
  maximum absolute entry in einsum_ir solution: 530.33
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00136642
  time (eval):    1.13476
  gflops (eval):  924.177
  gflops (total): 923.066
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00136642,1.13476,924.177,923.066

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14785
  gflops (total): 913.633
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07889
  gflops (eval):  972.033
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07889,972.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.921
  maximum absolute entry in einsum_ir solution: 561.921
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137879
  time (eval):    1.12936
  gflops (eval):  928.591
  gflops (total): 927.459
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137879,1.12936,928.591,927.459

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14612
  gflops (total): 915.012
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0769
  gflops (eval):  973.831
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0769,973.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.392
  maximum absolute entry in einsum_ir solution: 549.392
  maximum element-wise difference:              0.000427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00153763
  time (eval):    1.13378
  gflops (eval):  924.972
  gflops (total): 923.72
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00153763,1.13378,924.972,923.72

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14729
  gflops (total): 914.08
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07792
  gflops (eval):  972.909
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07792,972.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.026
  maximum absolute entry in einsum_ir solution: 529.026
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00136481
  time (eval):    1.12304
  gflops (eval):  933.815
  gflops (total): 932.682
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00136481,1.12304,933.815,932.682

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14657
  gflops (total): 914.655
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07473
  gflops (eval):  975.792
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07473,975.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      587.766
  maximum absolute entry in einsum_ir solution: 587.766
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00141926
  time (eval):    1.13209
  gflops (eval):  926.351
  gflops (total): 925.192
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00141926,1.13209,926.351,925.192

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14564
  gflops (total): 915.399
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.399

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07619
  gflops (eval):  974.47
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07619,974.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      584.107
  maximum absolute entry in einsum_ir solution: 584.107
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00142694
  time (eval):    1.1325
  gflops (eval):  926.017
  gflops (total): 924.852
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00142694,1.1325,926.017,924.852

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14637
  gflops (total): 914.813
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07376
  gflops (eval):  976.677
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07376,976.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.39
  maximum absolute entry in einsum_ir solution: 558.39
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00135586
  time (eval):    1.13431
  gflops (eval):  924.538
  gflops (total): 923.434
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00135586,1.13431,924.538,923.434

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1467
  gflops (total): 914.554
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07487
  gflops (eval):  975.663
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07487,975.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.496
  maximum absolute entry in einsum_ir solution: 548.496
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138039
  time (eval):    1.13339
  gflops (eval):  925.294
  gflops (total): 924.168
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138039,1.13339,925.294,924.168

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14638
  gflops (total): 914.809
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0773
  gflops (eval):  973.465
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0773,973.465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.107
  maximum absolute entry in einsum_ir solution: 549.107
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00164536
  time (eval):    1.13211
  gflops (eval):  926.341
  gflops (total): 924.997
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00164536,1.13211,926.341,924.997

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14936
  gflops (total): 912.435
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06881
  gflops (eval):  981.203
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06881,981.203,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      592.159
  maximum absolute entry in einsum_ir solution: 592.159
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139227
  time (eval):    1.12558
  gflops (eval):  931.708
  gflops (total): 930.557
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139227,1.12558,931.708,930.557

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14615
  gflops (total): 914.991
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07007
  gflops (eval):  980.047
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07007,980.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.744
  maximum absolute entry in einsum_ir solution: 552.744
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00136737
  time (eval):    1.14388
  gflops (eval):  916.804
  gflops (total): 915.709
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00136737,1.14388,916.804,915.709

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14709
  gflops (total): 914.241
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07055
  gflops (eval):  979.608
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07055,979.608,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.264
  maximum absolute entry in einsum_ir solution: 529.264
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137689
  time (eval):    1.13022
  gflops (eval):  927.89
  gflops (total): 926.761
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137689,1.13022,927.89,926.761

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14366
  gflops (total): 916.979
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,916.979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07028
  gflops (eval):  979.85
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07028,979.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.863
  maximum absolute entry in einsum_ir solution: 538.863
  maximum element-wise difference:              0.000427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138777
  time (eval):    1.1358
  gflops (eval):  923.33
  gflops (total): 922.203
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138777,1.1358,923.33,922.203

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14697
  gflops (total): 914.338
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.338

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07403
  gflops (eval):  976.435
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07403,976.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.647
  maximum absolute entry in einsum_ir solution: 548.647
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00140809
  time (eval):    1.13156
  gflops (eval):  926.787
  gflops (total): 925.635
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00140809,1.13156,926.787,925.635

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14614
  gflops (total): 915.001
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07479
  gflops (eval):  975.74
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07479,975.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.669
  maximum absolute entry in einsum_ir solution: 536.67
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00140434
  time (eval):    1.13638
  gflops (eval):  922.856
  gflops (total): 921.717
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00140434,1.13638,922.856,921.717

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1478
  gflops (total): 913.673
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07615
  gflops (eval):  974.512
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07615,974.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.608
  maximum absolute entry in einsum_ir solution: 528.608
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138095
  time (eval):    1.14042
  gflops (eval):  919.591
  gflops (total): 918.479
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138095,1.14042,919.591,918.479

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14789
  gflops (total): 913.602
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.602

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07415
  gflops (eval):  976.322
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07415,976.322,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.003
  maximum absolute entry in einsum_ir solution: 527.003
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013848
  time (eval):    1.13639
  gflops (eval):  922.845
  gflops (total): 921.722
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013848,1.13639,922.845,921.722

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14624
  gflops (total): 914.915
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07771
  gflops (eval):  973.092
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07771,973.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      574.119
  maximum absolute entry in einsum_ir solution: 574.119
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00135607
  time (eval):    1.13637
  gflops (eval):  922.867
  gflops (total): 921.767
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00135607,1.13637,922.867,921.767

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14614
  gflops (total): 915.002
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07322
  gflops (eval):  977.169
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07322,977.169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.427
  maximum absolute entry in einsum_ir solution: 554.427
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137988
  time (eval):    1.13587
  gflops (eval):  923.268
  gflops (total): 922.147
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137988,1.13587,923.268,922.147

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1488
  gflops (total): 912.876
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07829
  gflops (eval):  972.577
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07829,972.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.229
  maximum absolute entry in einsum_ir solution: 548.228
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137495
  time (eval):    1.13486
  gflops (eval):  924.094
  gflops (total): 922.976
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137495,1.13486,924.094,922.976

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14733
  gflops (total): 914.053
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07525
  gflops (eval):  975.319
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07525,975.319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.69
  maximum absolute entry in einsum_ir solution: 549.69
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013766
  time (eval):    1.13204
  gflops (eval):  926.399
  gflops (total): 925.273
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013766,1.13204,926.399,925.273

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1486
  gflops (total): 913.035
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08222
  gflops (eval):  969.039
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08222,969.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.991
  maximum absolute entry in einsum_ir solution: 533.991
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013873
  time (eval):    1.13409
  gflops (eval):  924.721
  gflops (total): 923.591
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013873,1.13409,924.721,923.591

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14776
  gflops (total): 913.706
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07514
  gflops (eval):  975.425
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07514,975.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.735
  maximum absolute entry in einsum_ir solution: 541.735
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138041
  time (eval):    1.13297
  gflops (eval):  925.633
  gflops (total): 924.507
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138041,1.13297,925.633,924.507

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14751
  gflops (total): 913.902
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07515
  gflops (eval):  975.416
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07515,975.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.46
  maximum absolute entry in einsum_ir solution: 556.46
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137799
  time (eval):    1.13524
  gflops (eval):  923.783
  gflops (total): 922.663
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137799,1.13524,923.783,922.663

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15086
  gflops (total): 911.248
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07296
  gflops (eval):  977.403
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07296,977.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.088
  maximum absolute entry in einsum_ir solution: 540.088
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137961
  time (eval):    1.13627
  gflops (eval):  922.947
  gflops (total): 921.828
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137961,1.13627,922.947,921.828

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14657
  gflops (total): 914.651
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07988
  gflops (eval):  971.142
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07988,971.142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.043
  maximum absolute entry in einsum_ir solution: 560.043
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137136
  time (eval):    1.13663
  gflops (eval):  922.654
  gflops (total): 921.543
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137136,1.13663,922.654,921.543

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14707
  gflops (total): 914.256
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.256

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06973
  gflops (eval):  980.352
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06973,980.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      583.492
  maximum absolute entry in einsum_ir solution: 583.492
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138012
  time (eval):    1.1356
  gflops (eval):  923.489
  gflops (total): 922.368
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138012,1.1356,923.489,922.368

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14475
  gflops (total): 916.107
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,916.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07208
  gflops (eval):  978.206
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07208,978.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.025
  maximum absolute entry in einsum_ir solution: 525.026
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00141937
  time (eval):    1.13231
  gflops (eval):  926.175
  gflops (total): 925.015
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00141937,1.13231,926.175,925.015

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14623
  gflops (total): 914.925
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0741
  gflops (eval):  976.364
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0741,976.364,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.263
  maximum absolute entry in einsum_ir solution: 542.263
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0015024
  time (eval):    1.13986
  gflops (eval):  920.04
  gflops (total): 918.829
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0015024,1.13986,920.04,918.829

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14633
  gflops (total): 914.845
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.845

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06885
  gflops (eval):  981.161
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06885,981.161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.482
  maximum absolute entry in einsum_ir solution: 545.482
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139084
  time (eval):    1.13472
  gflops (eval):  924.206
  gflops (total): 923.075
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139084,1.13472,924.206,923.075

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14838
  gflops (total): 913.212
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.212

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07269
  gflops (eval):  977.649
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07269,977.649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.988
  maximum absolute entry in einsum_ir solution: 537.988
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146163
  time (eval):    1.13826
  gflops (eval):  921.332
  gflops (total): 920.151
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146163,1.13826,921.332,920.151

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14689
  gflops (total): 914.399
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.399

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08031
  gflops (eval):  970.752
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08031,970.752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.832
  maximum absolute entry in einsum_ir solution: 550.832
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013794
  time (eval):    1.13759
  gflops (eval):  921.878
  gflops (total): 920.762
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013794,1.13759,921.878,920.762

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15325
  gflops (total): 909.358
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,909.358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07835
  gflops (eval):  972.519
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07835,972.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.252
  maximum absolute entry in einsum_ir solution: 540.252
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138147
  time (eval):    1.13557
  gflops (eval):  923.518
  gflops (total): 922.396
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138147,1.13557,923.518,922.396

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14736
  gflops (total): 914.023
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.023

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07747
  gflops (eval):  973.313
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07747,973.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.018
  maximum absolute entry in einsum_ir solution: 542.018
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0019011
  time (eval):    1.13735
  gflops (eval):  922.072
  gflops (total): 920.533
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0019011,1.13735,922.072,920.533

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.16487
  gflops (total): 900.282
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,900.282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07062
  gflops (eval):  979.539
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07062,979.539,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.964
  maximum absolute entry in einsum_ir solution: 540.964
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138178
  time (eval):    1.13501
  gflops (eval):  923.969
  gflops (total): 922.846
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138178,1.13501,923.969,922.846

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14673
  gflops (total): 914.531
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07149
  gflops (eval):  978.749
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07149,978.749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      584.021
  maximum absolute entry in einsum_ir solution: 584.02
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139241
  time (eval):    1.14011
  gflops (eval):  919.841
  gflops (total): 918.719
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139241,1.14011,919.841,918.719

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14663
  gflops (total): 914.607
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07501
  gflops (eval):  975.545
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07501,975.545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.345
  maximum absolute entry in einsum_ir solution: 529.345
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138266
  time (eval):    1.1322
  gflops (eval):  926.263
  gflops (total): 925.133
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138266,1.1322,926.263,925.133

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14424
  gflops (total): 916.52
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,916.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07882
  gflops (eval):  972.097
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07882,972.097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.692
  maximum absolute entry in einsum_ir solution: 531.692
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139394
  time (eval):    1.13725
  gflops (eval):  922.154
  gflops (total): 921.025
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139394,1.13725,922.154,921.025

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14626
  gflops (total): 914.9
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07008
  gflops (eval):  980.032
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07008,980.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.235
  maximum absolute entry in einsum_ir solution: 523.235
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138946
  time (eval):    1.12798
  gflops (eval):  929.732
  gflops (total): 928.588
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138946,1.12798,929.732,928.588

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14556
  gflops (total): 915.458
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07751
  gflops (eval):  973.277
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07751,973.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      571.273
  maximum absolute entry in einsum_ir solution: 571.273
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138904
  time (eval):    1.13468
  gflops (eval):  924.238
  gflops (total): 923.108
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138904,1.13468,924.238,923.108

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14798
  gflops (total): 913.532
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0762
  gflops (eval):  974.466
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0762,974.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.203
  maximum absolute entry in einsum_ir solution: 529.203
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013643
  time (eval):    1.13402
  gflops (eval):  924.78
  gflops (total): 923.668
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013643,1.13402,924.78,923.668

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14711
  gflops (total): 914.226
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07234
  gflops (eval):  977.974
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07234,977.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.674
  maximum absolute entry in einsum_ir solution: 542.674
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137476
  time (eval):    1.13447
  gflops (eval):  924.407
  gflops (total): 923.288
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137476,1.13447,924.407,923.288

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14747
  gflops (total): 913.938
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07658
  gflops (eval):  974.122
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07658,974.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      575.029
  maximum absolute entry in einsum_ir solution: 575.029
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138094
  time (eval):    1.13776
  gflops (eval):  921.735
  gflops (total): 920.618
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138094,1.13776,921.735,920.618

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14584
  gflops (total): 915.241
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07337
  gflops (eval):  977.033
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07337,977.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.582
  maximum absolute entry in einsum_ir solution: 532.582
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137956
  time (eval):    1.13327
  gflops (eval):  925.39
  gflops (total): 924.265
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137956,1.13327,925.39,924.265

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14725
  gflops (total): 914.111
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07666
  gflops (eval):  974.042
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07666,974.042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.5
  maximum absolute entry in einsum_ir solution: 558.5
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00165888
  time (eval):    1.1377
  gflops (eval):  921.783
  gflops (total): 920.441
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00165888,1.1377,921.783,920.441

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14751
  gflops (total): 913.903
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.903

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07685
  gflops (eval):  973.873
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07685,973.873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.566
  maximum absolute entry in einsum_ir solution: 546.566
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00156098
  time (eval):    1.13496
  gflops (eval):  924.01
  gflops (total): 922.741
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00156098,1.13496,924.01,922.741

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14539
  gflops (total): 915.599
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07175
  gflops (eval):  978.505
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07175,978.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      576.152
  maximum absolute entry in einsum_ir solution: 576.152
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00141307
  time (eval):    1.13571
  gflops (eval):  923.405
  gflops (total): 922.257
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00141307,1.13571,923.405,922.257

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14605
  gflops (total): 915.068
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07406
  gflops (eval):  976.4
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07406,976.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.598
  maximum absolute entry in einsum_ir solution: 551.598
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139846
  time (eval):    1.14771
  gflops (eval):  913.747
  gflops (total): 912.635
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139846,1.14771,913.747,912.635

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14679
  gflops (total): 914.481
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07999
  gflops (eval):  971.046
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07999,971.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.543
  maximum absolute entry in einsum_ir solution: 542.543
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00150464
  time (eval):    1.13283
  gflops (eval):  925.749
  gflops (total): 924.521
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00150464,1.13283,925.749,924.521

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14849
  gflops (total): 913.129
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07958
  gflops (eval):  971.413
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07958,971.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.599
  maximum absolute entry in einsum_ir solution: 533.599
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138203
  time (eval):    1.13392
  gflops (eval):  924.855
  gflops (total): 923.729
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138203,1.13392,924.855,923.729

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14804
  gflops (total): 913.482
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07918
  gflops (eval):  971.768
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07918,971.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.717
  maximum absolute entry in einsum_ir solution: 540.717
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138022
  time (eval):    1.1388
  gflops (eval):  920.893
  gflops (total): 919.778
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138022,1.1388,920.893,919.778

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14615
  gflops (total): 914.992
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.992

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07401
  gflops (eval):  976.445
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07401,976.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.779
  maximum absolute entry in einsum_ir solution: 530.779
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138543
  time (eval):    1.13248
  gflops (eval):  926.037
  gflops (total): 924.905
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138543,1.13248,926.037,924.905

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14982
  gflops (total): 912.071
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07772
  gflops (eval):  973.091
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07772,973.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.826
  maximum absolute entry in einsum_ir solution: 528.826
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138012
  time (eval):    1.13347
  gflops (eval):  925.226
  gflops (total): 924.101
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138012,1.13347,925.226,924.101

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14854
  gflops (total): 913.086
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07662
  gflops (eval):  974.079
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07662,974.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.076
  maximum absolute entry in einsum_ir solution: 525.076
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138397
  time (eval):    1.1359
  gflops (eval):  923.246
  gflops (total): 922.122
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138397,1.1359,923.246,922.122

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14625
  gflops (total): 914.91
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07781
  gflops (eval):  973.01
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07781,973.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.554
  maximum absolute entry in einsum_ir solution: 547.554
  maximum element-wise difference:              0.000350952
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138622
  time (eval):    1.13313
  gflops (eval):  925.502
  gflops (total): 924.371
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138622,1.13313,925.502,924.371

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14845
  gflops (total): 913.155
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07183
  gflops (eval):  978.439
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07183,978.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      585.486
  maximum absolute entry in einsum_ir solution: 585.486
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00141192
  time (eval):    1.1387
  gflops (eval):  920.978
  gflops (total): 919.837
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00141192,1.1387,920.978,919.837

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14858
  gflops (total): 913.057
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07908
  gflops (eval):  971.864
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07908,971.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.281
  maximum absolute entry in einsum_ir solution: 556.282
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013831
  time (eval):    1.14133
  gflops (eval):  918.858
  gflops (total): 917.746
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013831,1.14133,918.858,917.746

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15093
  gflops (total): 911.188
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07829
  gflops (eval):  972.569
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07829,972.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.307
  maximum absolute entry in einsum_ir solution: 541.307
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137866
  time (eval):    1.13317
  gflops (eval):  925.469
  gflops (total): 924.345
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137866,1.13317,925.469,924.345

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14803
  gflops (total): 913.492
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07765
  gflops (eval):  973.151
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07765,973.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.423
  maximum absolute entry in einsum_ir solution: 531.423
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138228
  time (eval):    1.13394
  gflops (eval):  924.841
  gflops (total): 923.715
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138228,1.13394,924.841,923.715

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15351
  gflops (total): 909.155
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,909.155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08422
  gflops (eval):  967.251
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08422,967.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.759
  maximum absolute entry in einsum_ir solution: 538.759
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00163973
  time (eval):    1.132
  gflops (eval):  926.424
  gflops (total): 925.084
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00163973,1.132,926.424,925.084

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14684
  gflops (total): 914.444
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07308
  gflops (eval):  977.299
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07308,977.299,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      569.672
  maximum absolute entry in einsum_ir solution: 569.672
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00140706
  time (eval):    1.1346
  gflops (eval):  924.301
  gflops (total): 923.156
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00140706,1.1346,924.301,923.156

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14594
  gflops (total): 915.16
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07446
  gflops (eval):  976.036
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07446,976.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      557.966
  maximum absolute entry in einsum_ir solution: 557.966
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139404
  time (eval):    1.13614
  gflops (eval):  923.055
  gflops (total): 921.924
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139404,1.13614,923.055,921.924

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14454
  gflops (total): 916.279
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,916.279

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07128
  gflops (eval):  978.934
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07128,978.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.721
  maximum absolute entry in einsum_ir solution: 527.721
  maximum element-wise difference:              0.00038147
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013657
  time (eval):    1.13854
  gflops (eval):  921.105
  gflops (total): 920.001
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013657,1.13854,921.105,920.001

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15076
  gflops (total): 911.328
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06931
  gflops (eval):  980.742
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06931,980.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.048
  maximum absolute entry in einsum_ir solution: 531.048
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138139
  time (eval):    1.13599
  gflops (eval):  923.17
  gflops (total): 922.049
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138139,1.13599,923.17,922.049

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14896
  gflops (total): 912.753
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07219
  gflops (eval):  978.108
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07219,978.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.224
  maximum absolute entry in einsum_ir solution: 546.224
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137988
  time (eval):    1.13685
  gflops (eval):  922.477
  gflops (total): 921.358
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137988,1.13685,922.477,921.358

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15501
  gflops (total): 907.974
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,907.974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07479
  gflops (eval):  975.742
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07479,975.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.37
  maximum absolute entry in einsum_ir solution: 548.37
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137065
  time (eval):    1.13357
  gflops (eval):  925.142
  gflops (total): 924.025
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137065,1.13357,925.142,924.025

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14733
  gflops (total): 914.052
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06962
  gflops (eval):  980.458
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06962,980.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      599.879
  maximum absolute entry in einsum_ir solution: 599.879
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00143793
  time (eval):    1.1353
  gflops (eval):  923.735
  gflops (total): 922.567
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00143793,1.1353,923.735,922.567

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14835
  gflops (total): 913.235
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07659
  gflops (eval):  974.109
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07659,974.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.546
  maximum absolute entry in einsum_ir solution: 537.546
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013744
  time (eval):    0.918023
  gflops (eval):  999.552
  gflops (total): 998.057
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013744,0.918023,999.552,998.057

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05437
  gflops (total): 870.292
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948437
  gflops (eval):  967.499
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948437,967.499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.979
  maximum absolute entry in einsum_ir solution: 506.979
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139611
  time (eval):    0.916683
  gflops (eval):  1001.01
  gflops (total): 999.49
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139611,0.916683,1001.01,999.49

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05498
  gflops (total): 869.789
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949386
  gflops (eval):  966.532
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949386,966.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.648
  maximum absolute entry in einsum_ir solution: 506.648
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138544
  time (eval):    0.917468
  gflops (eval):  1000.16
  gflops (total): 998.648
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138544,0.917468,1000.16,998.648

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05414
  gflops (total): 870.484
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.484

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949175
  gflops (eval):  966.746
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949175,966.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.583
  maximum absolute entry in einsum_ir solution: 475.583
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138486
  time (eval):    0.923639
  gflops (eval):  993.474
  gflops (total): 991.987
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138486,0.923639,993.474,991.987

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05412
  gflops (total): 870.503
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.952472
  gflops (eval):  963.4
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.952472,963.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.144
  maximum absolute entry in einsum_ir solution: 504.144
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137864
  time (eval):    0.917985
  gflops (eval):  999.593
  gflops (total): 998.094
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137864,0.917985,999.593,998.094

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05416
  gflops (total): 870.463
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949352
  gflops (eval):  966.566
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949352,966.566,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.081
  maximum absolute entry in einsum_ir solution: 464.081
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138289
  time (eval):    0.916519
  gflops (eval):  1001.19
  gflops (total): 999.684
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138289,0.916519,1001.19,999.684

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05154
  gflops (total): 872.636
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948401
  gflops (eval):  967.535
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948401,967.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.175
  maximum absolute entry in einsum_ir solution: 474.175
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139508
  time (eval):    0.919446
  gflops (eval):  998.005
  gflops (total): 996.493
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139508,0.919446,998.005,996.493

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0466
  gflops (total): 876.751
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,876.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942873
  gflops (eval):  973.207
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942873,973.207,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.99
  maximum absolute entry in einsum_ir solution: 466.99
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138028
  time (eval):    0.926578
  gflops (eval):  990.323
  gflops (total): 988.85
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138028,0.926578,990.323,988.85

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05341
  gflops (total): 871.09
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94776
  gflops (eval):  968.19
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94776,968.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.073
  maximum absolute entry in einsum_ir solution: 484.073
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144935
  time (eval):    0.926817
  gflops (eval):  990.068
  gflops (total): 988.522
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144935,0.926817,990.068,988.522

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05786
  gflops (total): 867.426
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951691
  gflops (eval):  964.191
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951691,964.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.052
  maximum absolute entry in einsum_ir solution: 480.052
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013911
  time (eval):    0.922951
  gflops (eval):  994.214
  gflops (total): 992.718
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013911,0.922951,994.214,992.718

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05208
  gflops (total): 872.185
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945298
  gflops (eval):  970.711
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945298,970.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.946
  maximum absolute entry in einsum_ir solution: 471.946
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136757
  time (eval):    0.917223
  gflops (eval):  1000.42
  gflops (total): 998.934
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136757,0.917223,1000.42,998.934

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0528
  gflops (total): 871.592
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949477
  gflops (eval):  966.439
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949477,966.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.785
  maximum absolute entry in einsum_ir solution: 463.785
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141066
  time (eval):    0.924866
  gflops (eval):  992.156
  gflops (total): 990.645
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141066,0.924866,992.156,990.645

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0528
  gflops (total): 871.59
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946692
  gflops (eval):  969.282
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946692,969.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.509
  maximum absolute entry in einsum_ir solution: 485.509
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00150057
  time (eval):    0.927289
  gflops (eval):  989.564
  gflops (total): 987.965
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00150057,0.927289,989.564,987.965

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05369
  gflops (total): 870.856
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.9441
  gflops (eval):  971.943
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.9441,971.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.216
  maximum absolute entry in einsum_ir solution: 464.216
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138913
  time (eval):    0.917832
  gflops (eval):  999.76
  gflops (total): 998.249
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138913,0.917832,999.76,998.249

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05099
  gflops (total): 873.09
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945608
  gflops (eval):  970.393
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945608,970.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.321
  maximum absolute entry in einsum_ir solution: 473.321
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136795
  time (eval):    0.926025
  gflops (eval):  990.915
  gflops (total): 989.453
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136795,0.926025,990.915,989.453

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05424
  gflops (total): 870.4
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.95062
  gflops (eval):  965.277
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.95062,965.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.979
  maximum absolute entry in einsum_ir solution: 493.979
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136086
  time (eval):    0.927824
  gflops (eval):  988.993
  gflops (total): 987.544
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136086,0.927824,988.993,987.544

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05558
  gflops (total): 869.299
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949064
  gflops (eval):  966.859
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949064,966.859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.542
  maximum absolute entry in einsum_ir solution: 481.542
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138557
  time (eval):    0.917256
  gflops (eval):  1000.39
  gflops (total): 998.879
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138557,0.917256,1000.39,998.879

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05319
  gflops (total): 871.266
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949429
  gflops (eval):  966.488
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949429,966.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.346
  maximum absolute entry in einsum_ir solution: 468.346
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138377
  time (eval):    0.923158
  gflops (eval):  993.992
  gflops (total): 992.504
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138377,0.923158,993.992,992.504

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05152
  gflops (total): 872.656
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947157
  gflops (eval):  968.806
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947157,968.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.253
  maximum absolute entry in einsum_ir solution: 507.253
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138531
  time (eval):    0.917532
  gflops (eval):  1000.09
  gflops (total): 998.579
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138531,0.917532,1000.09,998.579

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04964
  gflops (total): 874.218
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947806
  gflops (eval):  968.143
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947806,968.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.38
  maximum absolute entry in einsum_ir solution: 482.38
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139019
  time (eval):    0.917509
  gflops (eval):  1000.11
  gflops (total): 998.598
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139019,0.917509,1000.11,998.598

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05531
  gflops (total): 869.521
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947073
  gflops (eval):  968.892
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947073,968.892,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.758
  maximum absolute entry in einsum_ir solution: 471.758
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137738
  time (eval):    0.917664
  gflops (eval):  999.942
  gflops (total): 998.444
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137738,0.917664,999.942,998.444

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05238
  gflops (total): 871.936
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.936

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94831
  gflops (eval):  967.628
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94831,967.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.489
  maximum absolute entry in einsum_ir solution: 507.489
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138562
  time (eval):    0.920206
  gflops (eval):  997.18
  gflops (total): 995.681
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138562,0.920206,997.18,995.681

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0505
  gflops (total): 873.503
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947395
  gflops (eval):  968.562
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947395,968.562,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.364
  maximum absolute entry in einsum_ir solution: 467.364
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138457
  time (eval):    0.917669
  gflops (eval):  999.937
  gflops (total): 998.431
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138457,0.917669,999.937,998.431

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0553
  gflops (total): 869.525
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.952681
  gflops (eval):  963.189
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.952681,963.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.486
  maximum absolute entry in einsum_ir solution: 472.486
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138111
  time (eval):    0.9173
  gflops (eval):  1000.34
  gflops (total): 998.836
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138111,0.9173,1000.34,998.836

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05438
  gflops (total): 870.284
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950592
  gflops (eval):  965.305
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950592,965.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.404
  maximum absolute entry in einsum_ir solution: 486.404
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137764
  time (eval):    0.918285
  gflops (eval):  999.267
  gflops (total): 997.77
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137764,0.918285,999.267,997.77

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0531
  gflops (total): 871.346
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948481
  gflops (eval):  967.454
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948481,967.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.235
  maximum absolute entry in einsum_ir solution: 493.235
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00167069
  time (eval):    0.917861
  gflops (eval):  999.729
  gflops (total): 997.912
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00167069,0.917861,999.729,997.912

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05579
  gflops (total): 869.125
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945056
  gflops (eval):  970.96
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945056,970.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.14
  maximum absolute entry in einsum_ir solution: 494.14
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143844
  time (eval):    0.926126
  gflops (eval):  990.807
  gflops (total): 989.27
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143844,0.926126,990.807,989.27

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05366
  gflops (total): 870.883
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944826
  gflops (eval):  971.196
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944826,971.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.286
  maximum absolute entry in einsum_ir solution: 480.286
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137676
  time (eval):    0.917403
  gflops (eval):  1000.23
  gflops (total): 998.728
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137676,0.917403,1000.23,998.728

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05279
  gflops (total): 871.603
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948673
  gflops (eval):  967.258
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948673,967.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.37
  maximum absolute entry in einsum_ir solution: 466.37
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139088
  time (eval):    0.91741
  gflops (eval):  1000.22
  gflops (total): 998.705
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139088,0.91741,1000.22,998.705

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05503
  gflops (total): 869.746
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949993
  gflops (eval):  965.914
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949993,965.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.709
  maximum absolute entry in einsum_ir solution: 464.709
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143012
  time (eval):    0.925333
  gflops (eval):  991.656
  gflops (total): 990.125
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143012,0.925333,991.656,990.125

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05305
  gflops (total): 871.384
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949008
  gflops (eval):  966.917
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949008,966.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.607
  maximum absolute entry in einsum_ir solution: 519.606
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137379
  time (eval):    0.9172
  gflops (eval):  1000.45
  gflops (total): 998.952
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137379,0.9172,1000.45,998.952

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05344
  gflops (total): 871.066
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94941
  gflops (eval):  966.507
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94941,966.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.891
  maximum absolute entry in einsum_ir solution: 496.891
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138737
  time (eval):    0.91712
  gflops (eval):  1000.54
  gflops (total): 999.024
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138737,0.91712,1000.54,999.024

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05126
  gflops (total): 872.868
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950638
  gflops (eval):  965.259
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950638,965.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.098
  maximum absolute entry in einsum_ir solution: 493.098
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138568
  time (eval):    0.916747
  gflops (eval):  1000.94
  gflops (total): 999.432
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138568,0.916747,1000.94,999.432

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04976
  gflops (total): 874.117
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.117

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.939409
  gflops (eval):  976.796
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.939409,976.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.052
  maximum absolute entry in einsum_ir solution: 483.052
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138177
  time (eval):    0.917008
  gflops (eval):  1000.66
  gflops (total): 999.153
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138177,0.917008,1000.66,999.153

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05639
  gflops (total): 868.626
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948386
  gflops (eval):  967.55
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948386,967.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.492
  maximum absolute entry in einsum_ir solution: 484.492
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138411
  time (eval):    0.917696
  gflops (eval):  999.908
  gflops (total): 998.403
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138411,0.917696,999.908,998.403

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05656
  gflops (total): 868.487
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.95053
  gflops (eval):  965.369
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.95053,965.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.786
  maximum absolute entry in einsum_ir solution: 483.786
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138368
  time (eval):    0.922446
  gflops (eval):  994.76
  gflops (total): 993.27
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138368,0.922446,994.76,993.27

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05593
  gflops (total): 869.007
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948011
  gflops (eval):  967.933
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948011,967.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.094
  maximum absolute entry in einsum_ir solution: 497.094
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139144
  time (eval):    0.927245
  gflops (eval):  989.611
  gflops (total): 988.128
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139144,0.927245,989.611,988.128

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04983
  gflops (total): 874.055
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950049
  gflops (eval):  965.857
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950049,965.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.425
  maximum absolute entry in einsum_ir solution: 475.425
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138389
  time (eval):    0.930438
  gflops (eval):  986.215
  gflops (total): 984.75
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138389,0.930438,986.215,984.75

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04931
  gflops (total): 874.489
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942871
  gflops (eval):  973.21
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942871,973.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.368
  maximum absolute entry in einsum_ir solution: 471.368
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013666
  time (eval):    0.917484
  gflops (eval):  1000.14
  gflops (total): 998.652
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013666,0.917484,1000.14,998.652

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05268
  gflops (total): 871.691
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943065
  gflops (eval):  973.009
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943065,973.009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.703
  maximum absolute entry in einsum_ir solution: 464.703
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138877
  time (eval):    0.923667
  gflops (eval):  993.444
  gflops (total): 991.952
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138877,0.923667,993.444,991.952

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0497
  gflops (total): 874.165
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942861
  gflops (eval):  973.22
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942861,973.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.7
  maximum absolute entry in einsum_ir solution: 467.7
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139111
  time (eval):    0.925548
  gflops (eval):  991.425
  gflops (total): 989.937
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139111,0.925548,991.425,989.937

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05633
  gflops (total): 868.682
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.682

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949173
  gflops (eval):  966.748
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949173,966.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.183
  maximum absolute entry in einsum_ir solution: 482.183
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138562
  time (eval):    0.923838
  gflops (eval):  993.26
  gflops (total): 991.772
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138562,0.923838,993.26,991.772

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05422
  gflops (total): 870.421
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948306
  gflops (eval):  967.633
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948306,967.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.67
  maximum absolute entry in einsum_ir solution: 468.67
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137415
  time (eval):    0.920036
  gflops (eval):  997.364
  gflops (total): 995.877
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137415,0.920036,997.364,995.877

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05047
  gflops (total): 873.527
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949683
  gflops (eval):  966.229
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949683,966.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.292
  maximum absolute entry in einsum_ir solution: 468.292
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136876
  time (eval):    0.925489
  gflops (eval):  991.488
  gflops (total): 990.024
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136876,0.925489,991.488,990.024

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05448
  gflops (total): 870.203
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947149
  gflops (eval):  968.815
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947149,968.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.995
  maximum absolute entry in einsum_ir solution: 494.995
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137581
  time (eval):    0.91782
  gflops (eval):  999.773
  gflops (total): 998.277
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137581,0.91782,999.773,998.277

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05054
  gflops (total): 873.468
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947986
  gflops (eval):  967.959
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947986,967.959,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.663
  maximum absolute entry in einsum_ir solution: 481.663
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140685
  time (eval):    0.918352
  gflops (eval):  999.193
  gflops (total): 997.665
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140685,0.918352,999.193,997.665

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05184
  gflops (total): 872.389
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947299
  gflops (eval):  968.66
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947299,968.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.144
  maximum absolute entry in einsum_ir solution: 496.144
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00142889
  time (eval):    0.917516
  gflops (eval):  1000.1
  gflops (total): 998.549
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00142889,0.917516,1000.1,998.549

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0472
  gflops (total): 876.253
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,876.253

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942314
  gflops (eval):  973.785
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942314,973.785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.746
  maximum absolute entry in einsum_ir solution: 462.746
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138546
  time (eval):    0.929228
  gflops (eval):  987.499
  gflops (total): 986.029
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138546,0.929228,987.499,986.029

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0547
  gflops (total): 870.022
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945503
  gflops (eval):  970.5
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945503,970.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.641
  maximum absolute entry in einsum_ir solution: 461.641
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137562
  time (eval):    0.918982
  gflops (eval):  998.509
  gflops (total): 997.017
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137562,0.918982,998.509,997.017

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05134
  gflops (total): 872.801
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949802
  gflops (eval):  966.108
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949802,966.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.993
  maximum absolute entry in einsum_ir solution: 472.993
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137128
  time (eval):    0.925307
  gflops (eval):  991.683
  gflops (total): 990.216
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137128,0.925307,991.683,990.216

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05356
  gflops (total): 870.966
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94853
  gflops (eval):  967.404
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94853,967.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.675
  maximum absolute entry in einsum_ir solution: 481.675
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136644
  time (eval):    0.931218
  gflops (eval):  985.388
  gflops (total): 983.945
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136644,0.931218,985.388,983.945

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04965
  gflops (total): 874.211
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946603
  gflops (eval):  969.373
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946603,969.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.7
  maximum absolute entry in einsum_ir solution: 473.699
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143289
  time (eval):    0.917508
  gflops (eval):  1000.11
  gflops (total): 998.553
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143289,0.917508,1000.11,998.553

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0518
  gflops (total): 872.419
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948638
  gflops (eval):  967.294
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948638,967.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.076
  maximum absolute entry in einsum_ir solution: 475.076
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013811
  time (eval):    0.921333
  gflops (eval):  995.961
  gflops (total): 994.47
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013811,0.921333,995.961,994.47

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05285
  gflops (total): 871.549
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944463
  gflops (eval):  971.57
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944463,971.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.605
  maximum absolute entry in einsum_ir solution: 462.605
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137458
  time (eval):    0.9236
  gflops (eval):  993.516
  gflops (total): 992.039
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137458,0.9236,993.516,992.039

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05855
  gflops (total): 866.861
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,866.861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946181
  gflops (eval):  969.805
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946181,969.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.227
  maximum absolute entry in einsum_ir solution: 457.227
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138285
  time (eval):    0.917453
  gflops (eval):  1000.17
  gflops (total): 998.667
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138285,0.917453,1000.17,998.667

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05244
  gflops (total): 871.886
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946816
  gflops (eval):  969.155
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946816,969.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      460.831
  maximum absolute entry in einsum_ir solution: 460.831
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138913
  time (eval):    0.918535
  gflops (eval):  998.994
  gflops (total): 997.486
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138913,0.918535,998.994,997.486

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04571
  gflops (total): 877.498
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,877.498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94856
  gflops (eval):  967.373
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94856,967.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.187
  maximum absolute entry in einsum_ir solution: 489.187
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00148103
  time (eval):    0.928357
  gflops (eval):  988.426
  gflops (total): 986.851
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00148103,0.928357,988.426,986.851

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05583
  gflops (total): 869.087
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949349
  gflops (eval):  966.569
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949349,966.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.465
  maximum absolute entry in einsum_ir solution: 490.465
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139044
  time (eval):    0.917286
  gflops (eval):  1000.36
  gflops (total): 998.841
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139044,0.917286,1000.36,998.841

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05413
  gflops (total): 870.492
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949001
  gflops (eval):  966.924
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949001,966.924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.899
  maximum absolute entry in einsum_ir solution: 500.899
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138702
  time (eval):    0.91767
  gflops (eval):  999.936
  gflops (total): 998.427
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138702,0.91767,999.936,998.427

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04891
  gflops (total): 874.82
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942059
  gflops (eval):  974.049
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942059,974.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.36
  maximum absolute entry in einsum_ir solution: 478.36
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138785
  time (eval):    0.916634
  gflops (eval):  1001.07
  gflops (total): 999.553
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138785,0.916634,1001.07,999.553

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04355
  gflops (total): 879.32
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,879.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947536
  gflops (eval):  968.419
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947536,968.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.843
  maximum absolute entry in einsum_ir solution: 481.843
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138345
  time (eval):    0.918666
  gflops (eval):  998.852
  gflops (total): 997.35
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138345,0.918666,998.852,997.35

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05669
  gflops (total): 868.384
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951303
  gflops (eval):  964.583
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951303,964.583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.368
  maximum absolute entry in einsum_ir solution: 468.368
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138925
  time (eval):    0.916439
  gflops (eval):  1001.28
  gflops (total): 999.764
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138925,0.916439,1001.28,999.764

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05595
  gflops (total): 868.989
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949689
  gflops (eval):  966.223
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949689,966.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.744
  maximum absolute entry in einsum_ir solution: 466.744
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139365
  time (eval):    0.922328
  gflops (eval):  994.886
  gflops (total): 993.385
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139365,0.922328,994.886,993.385

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05207
  gflops (total): 872.197
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949348
  gflops (eval):  966.57
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949348,966.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.297
  maximum absolute entry in einsum_ir solution: 459.297
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140383
  time (eval):    0.925963
  gflops (eval):  990.981
  gflops (total): 989.481
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140383,0.925963,990.981,989.481

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04994
  gflops (total): 873.962
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941854
  gflops (eval):  974.261
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941854,974.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.222
  maximum absolute entry in einsum_ir solution: 531.222
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00190516
  time (eval):    0.922012
  gflops (eval):  995.228
  gflops (total): 993.175
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00190516,0.922012,995.228,993.175

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05274
  gflops (total): 871.64
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947844
  gflops (eval):  968.104
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947844,968.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.363
  maximum absolute entry in einsum_ir solution: 474.363
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137926
  time (eval):    0.922729
  gflops (eval):  994.454
  gflops (total): 992.969
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137926,0.922729,994.454,992.969

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0463
  gflops (total): 877.008
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,877.008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.940776
  gflops (eval):  975.377
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.940776,975.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.623
  maximum absolute entry in einsum_ir solution: 501.623
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138933
  time (eval):    0.920608
  gflops (eval):  996.745
  gflops (total): 995.243
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138933,0.920608,996.745,995.243

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05584
  gflops (total): 869.083
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.083

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944205
  gflops (eval):  971.835
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944205,971.835,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.892
  maximum absolute entry in einsum_ir solution: 528.892
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139259
  time (eval):    0.926931
  gflops (eval):  989.946
  gflops (total): 988.461
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139259,0.926931,989.946,988.461

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05455
  gflops (total): 870.149
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.149

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947843
  gflops (eval):  968.104
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947843,968.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.185
  maximum absolute entry in einsum_ir solution: 470.185
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139748
  time (eval):    0.917538
  gflops (eval):  1000.08
  gflops (total): 998.56
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139748,0.917538,1000.08,998.56

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05183
  gflops (total): 872.398
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947368
  gflops (eval):  968.591
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947368,968.591,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.873
  maximum absolute entry in einsum_ir solution: 477.873
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138943
  time (eval):    0.921595
  gflops (eval):  995.678
  gflops (total): 994.179
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138943,0.921595,995.678,994.179

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04953
  gflops (total): 874.306
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942806
  gflops (eval):  973.277
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942806,973.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.719
  maximum absolute entry in einsum_ir solution: 512.719
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00142376
  time (eval):    0.917658
  gflops (eval):  999.949
  gflops (total): 998.4
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00142376,0.917658,999.949,998.4

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05431
  gflops (total): 870.341
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943793
  gflops (eval):  972.26
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943793,972.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.424
  maximum absolute entry in einsum_ir solution: 477.424
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138507
  time (eval):    0.917454
  gflops (eval):  1000.17
  gflops (total): 998.664
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138507,0.917454,1000.17,998.664

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0622
  gflops (total): 863.878
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,863.878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943901
  gflops (eval):  972.148
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943901,972.148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.489
  maximum absolute entry in einsum_ir solution: 480.489
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00135721
  time (eval):    0.916678
  gflops (eval):  1001.02
  gflops (total): 999.539
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00135721,0.916678,1001.02,999.539

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05402
  gflops (total): 870.585
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948616
  gflops (eval):  967.316
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948616,967.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.432
  maximum absolute entry in einsum_ir solution: 467.432
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137236
  time (eval):    0.917231
  gflops (eval):  1000.41
  gflops (total): 998.92
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137236,0.917231,1000.41,998.92

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0527
  gflops (total): 871.674
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947456
  gflops (eval):  968.5
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947456,968.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.081
  maximum absolute entry in einsum_ir solution: 480.081
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141268
  time (eval):    0.917381
  gflops (eval):  1000.25
  gflops (total): 998.714
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141268,0.917381,1000.25,998.714

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04758
  gflops (total): 875.931
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943183
  gflops (eval):  972.889
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943183,972.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.114
  maximum absolute entry in einsum_ir solution: 480.114
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137895
  time (eval):    0.922537
  gflops (eval):  994.661
  gflops (total): 993.176
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137895,0.922537,994.661,993.176

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05821
  gflops (total): 867.138
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949543
  gflops (eval):  966.371
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949543,966.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.267
  maximum absolute entry in einsum_ir solution: 481.267
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139153
  time (eval):    0.92896
  gflops (eval):  987.783
  gflops (total): 986.306
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139153,0.92896,987.783,986.306

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05534
  gflops (total): 869.495
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945119
  gflops (eval):  970.895
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945119,970.895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.194
  maximum absolute entry in einsum_ir solution: 476.194
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136503
  time (eval):    0.916912
  gflops (eval):  1000.76
  gflops (total): 999.275
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136503,0.916912,1000.76,999.275

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05767
  gflops (total): 867.581
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94828
  gflops (eval):  967.659
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94828,967.659,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.626
  maximum absolute entry in einsum_ir solution: 484.626
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139924
  time (eval):    0.920639
  gflops (eval):  996.712
  gflops (total): 995.199
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139924,0.920639,996.712,995.199

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04754
  gflops (total): 875.966
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94828
  gflops (eval):  967.658
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94828,967.658,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.75
  maximum absolute entry in einsum_ir solution: 503.75
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143661
  time (eval):    0.923748
  gflops (eval):  993.357
  gflops (total): 991.815
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143661,0.923748,993.357,991.815

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04902
  gflops (total): 874.731
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949979
  gflops (eval):  965.928
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949979,965.928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.793
  maximum absolute entry in einsum_ir solution: 466.793
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00169191
  time (eval):    0.927394
  gflops (eval):  989.451
  gflops (total): 987.649
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00169191,0.927394,989.451,987.649

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0581
  gflops (total): 867.225
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948732
  gflops (eval):  967.197
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948732,967.197,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.975
  maximum absolute entry in einsum_ir solution: 509.976
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139896
  time (eval):    0.918814
  gflops (eval):  998.692
  gflops (total): 997.173
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139896,0.918814,998.692,997.173

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05417
  gflops (total): 870.459
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949763
  gflops (eval):  966.148
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949763,966.148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.264
  maximum absolute entry in einsum_ir solution: 487.264
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138439
  time (eval):    0.917317
  gflops (eval):  1000.32
  gflops (total): 998.814
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138439,0.917317,1000.32,998.814

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05521
  gflops (total): 869.6
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949577
  gflops (eval):  966.338
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949577,966.338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.218
  maximum absolute entry in einsum_ir solution: 484.218
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137055
  time (eval):    0.922977
  gflops (eval):  994.187
  gflops (total): 992.713
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137055,0.922977,994.187,992.713

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05084
  gflops (total): 873.221
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947502
  gflops (eval):  968.454
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947502,968.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.709
  maximum absolute entry in einsum_ir solution: 467.709
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137779
  time (eval):    0.927375
  gflops (eval):  989.472
  gflops (total): 988.004
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137779,0.927375,989.472,988.004

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05145
  gflops (total): 872.707
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948813
  gflops (eval):  967.115
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948813,967.115,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.459
  maximum absolute entry in einsum_ir solution: 474.459
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136868
  time (eval):    0.917109
  gflops (eval):  1000.55
  gflops (total): 999.057
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136868,0.917109,1000.55,999.057

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05027
  gflops (total): 873.69
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947097
  gflops (eval):  968.867
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947097,968.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.421
  maximum absolute entry in einsum_ir solution: 509.421
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138281
  time (eval):    0.91927
  gflops (eval):  998.196
  gflops (total): 996.697
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138281,0.91927,998.196,996.697

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05695
  gflops (total): 868.173
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948625
  gflops (eval):  967.307
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948625,967.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.398
  maximum absolute entry in einsum_ir solution: 489.398
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0015816
  time (eval):    0.926327
  gflops (eval):  990.592
  gflops (total): 988.903
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0015816,0.926327,990.592,988.903

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04918
  gflops (total): 874.601
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.601

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948613
  gflops (eval):  967.319
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948613,967.319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.113
  maximum absolute entry in einsum_ir solution: 472.113
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137692
  time (eval):    0.917629
  gflops (eval):  999.981
  gflops (total): 998.483
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137692,0.917629,999.981,998.483

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04562
  gflops (total): 877.576
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,877.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949016
  gflops (eval):  966.909
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949016,966.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.321
  maximum absolute entry in einsum_ir solution: 492.321
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141233
  time (eval):    0.917162
  gflops (eval):  1000.49
  gflops (total): 998.952
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141233,0.917162,1000.49,998.952

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05462
  gflops (total): 870.087
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948104
  gflops (eval):  967.838
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948104,967.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.631
  maximum absolute entry in einsum_ir solution: 501.631
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.001393
  time (eval):    0.919518
  gflops (eval):  997.927
  gflops (total): 996.417
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.001393,0.919518,997.927,996.417

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0517
  gflops (total): 872.499
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.499

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950128
  gflops (eval):  965.776
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950128,965.776,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.776
  maximum absolute entry in einsum_ir solution: 495.776
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139393
  time (eval):    0.924383
  gflops (eval):  992.674
  gflops (total): 991.18
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139393,0.924383,992.674,991.18

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05471
  gflops (total): 870.014
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949865
  gflops (eval):  966.044
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949865,966.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.097
  maximum absolute entry in einsum_ir solution: 474.097
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137131
  time (eval):    0.927256
  gflops (eval):  989.599
  gflops (total): 988.138
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137131,0.927256,989.599,988.138

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04927
  gflops (total): 874.528
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941058
  gflops (eval):  975.084
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941058,975.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.139
  maximum absolute entry in einsum_ir solution: 478.139
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140934
  time (eval):    0.917029
  gflops (eval):  1000.63
  gflops (total): 999.099
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140934,0.917029,1000.63,999.099

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05277
  gflops (total): 871.613
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945555
  gflops (eval):  970.448
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945555,970.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.475
  maximum absolute entry in einsum_ir solution: 466.475
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138383
  time (eval):    0.919504
  gflops (eval):  997.942
  gflops (total): 996.442
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138383,0.919504,997.942,996.442

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0556
  gflops (total): 869.279
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.279

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948209
  gflops (eval):  967.731
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948209,967.731,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.964
  maximum absolute entry in einsum_ir solution: 476.963
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137824
  time (eval):    0.926479
  gflops (eval):  990.429
  gflops (total): 988.958
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137824,0.926479,990.429,988.958

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04889
  gflops (total): 874.842
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949525
  gflops (eval):  966.39
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949525,966.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.261
  maximum absolute entry in einsum_ir solution: 468.261
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140741
  time (eval):    0.917511
  gflops (eval):  1000.11
  gflops (total): 998.578
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140741,0.917511,1000.11,998.578

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05068
  gflops (total): 873.352
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948006
  gflops (eval):  967.938
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948006,967.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.349
  maximum absolute entry in einsum_ir solution: 458.349
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138036
  time (eval):    0.920974
  gflops (eval):  996.349
  gflops (total): 994.858
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138036,0.920974,996.349,994.858

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04974
  gflops (total): 874.136
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943057
  gflops (eval):  973.018
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943057,973.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.599
  maximum absolute entry in einsum_ir solution: 488.599
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138395
  time (eval):    0.926814
  gflops (eval):  990.071
  gflops (total): 988.595
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138395,0.926814,990.071,988.595

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04473
  gflops (total): 878.326
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,878.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944242
  gflops (eval):  971.797
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944242,971.797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.05
  maximum absolute entry in einsum_ir solution: 478.049
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140934
  time (eval):    0.917697
  gflops (eval):  999.907
  gflops (total): 998.374
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140934,0.917697,999.907,998.374

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05441
  gflops (total): 870.259
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949422
  gflops (eval):  966.495
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949422,966.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.168
  maximum absolute entry in einsum_ir solution: 482.168
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
