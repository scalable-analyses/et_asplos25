parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0017856
  time (eval):    0.000411641
  gflops (eval):  732.786
  gflops (total): 137.283
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0017856,0.000411641,732.786,137.283

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00358311
  gflops (total): 84.1851
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,84.1851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138207
  gflops (eval):  218.255
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138207,218.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3481.06
  maximum absolute entry in einsum_ir solution: 3481.06
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00160434
  time (eval):    0.000412332
  gflops (eval):  731.558
  gflops (total): 149.576
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00160434,0.000412332,731.558,149.576

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342937
  gflops (total): 87.9593
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013977
  gflops (eval):  215.815
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013977,215.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3311.41
  maximum absolute entry in einsum_ir solution: 3311.41
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180341
  time (eval):    0.000422101
  gflops (eval):  714.627
  gflops (total): 135.539
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180341,0.000422101,714.627,135.539

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345006
  gflops (total): 87.4318
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.4318

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00141416
  gflops (eval):  213.303
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00141416,213.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3520.05
  maximum absolute entry in einsum_ir solution: 3520.05
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176484
  time (eval):    0.000415271
  gflops (eval):  726.381
  gflops (total): 138.362
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176484,0.000415271,726.381,138.362

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342962
  gflops (total): 87.9529
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138132
  gflops (eval):  218.374
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138132,218.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3142.06
  maximum absolute entry in einsum_ir solution: 3142.07
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00177521
  time (eval):    0.000418601
  gflops (eval):  720.602
  gflops (total): 137.498
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00177521,0.000418601,720.602,137.498

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00348148
  gflops (total): 86.6428
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.6428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139603
  gflops (eval):  216.073
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139603,216.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3208.23
  maximum absolute entry in einsum_ir solution: 3208.23
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175236
  time (eval):    0.000414641
  gflops (eval):  727.484
  gflops (total): 139.199
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175236,0.000414641,727.484,139.199

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347056
  gflops (total): 86.9154
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.9154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139059
  gflops (eval):  216.918
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139059,216.918,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3540.13
  maximum absolute entry in einsum_ir solution: 3540.13
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00177967
  time (eval):    0.000413031
  gflops (eval):  730.32
  gflops (total): 137.568
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00177967,0.000413031,730.32,137.568

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00354446
  gflops (total): 85.1033
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.1033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138997
  gflops (eval):  217.015
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138997,217.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3232.11
  maximum absolute entry in einsum_ir solution: 3232.1
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176078
  time (eval):    0.000415721
  gflops (eval):  725.594
  gflops (total): 138.591
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176078,0.000415721,725.594,138.591

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345803
  gflops (total): 87.2303
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.2303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138047
  gflops (eval):  218.509
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138047,218.509,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3201.39
  maximum absolute entry in einsum_ir solution: 3201.39
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00145463
  time (eval):    0.000412011
  gflops (eval):  732.128
  gflops (total): 161.598
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00145463,0.000412011,732.128,161.598

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345502
  gflops (total): 87.3063
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.3063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138162
  gflops (eval):  218.327
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138162,218.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3825.97
  maximum absolute entry in einsum_ir solution: 3825.97
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00179341
  time (eval):    0.000415012
  gflops (eval):  726.834
  gflops (total): 136.588
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00179341,0.000415012,726.834,136.588

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00343281
  gflops (total): 87.8712
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.8712

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138392
  gflops (eval):  217.964
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138392,217.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3152.09
  maximum absolute entry in einsum_ir solution: 3152.09
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00147978
  time (eval):    0.00043923
  gflops (eval):  686.758
  gflops (total): 157.188
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00147978,0.00043923,686.758,157.188

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00349034
  gflops (total): 86.4229
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.4229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140329
  gflops (eval):  214.956
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140329,214.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3279.64
  maximum absolute entry in einsum_ir solution: 3279.64
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178407
  time (eval):    0.000421371
  gflops (eval):  715.865
  gflops (total): 136.773
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178407,0.000421371,715.865,136.773

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346851
  gflops (total): 86.9668
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.9668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140087
  gflops (eval):  215.327
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140087,215.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3521.86
  maximum absolute entry in einsum_ir solution: 3521.86
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00174762
  time (eval):    0.000417462
  gflops (eval):  722.568
  gflops (total): 139.322
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00174762,0.000417462,722.568,139.322

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00344607
  gflops (total): 87.5331
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.5331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139618
  gflops (eval):  216.05
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139618,216.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3097.55
  maximum absolute entry in einsum_ir solution: 3097.55
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00174862
  time (eval):    0.000414901
  gflops (eval):  727.028
  gflops (total): 139.423
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00174862,0.000414901,727.028,139.423

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00348438
  gflops (total): 86.5707
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.5707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139522
  gflops (eval):  216.199
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139522,216.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3307.25
  maximum absolute entry in einsum_ir solution: 3307.25
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00174545
  time (eval):    0.000417401
  gflops (eval):  722.674
  gflops (total): 139.466
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00174545,0.000417401,722.674,139.466

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345362
  gflops (total): 87.3417
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.3417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139302
  gflops (eval):  216.54
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139302,216.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3512.58
  maximum absolute entry in einsum_ir solution: 3512.58
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00147085
  time (eval):    0.000410511
  gflops (eval):  734.803
  gflops (total): 160.333
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00147085,0.000410511,734.803,160.333

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00352765
  gflops (total): 85.5088
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.5088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00143035
  gflops (eval):  210.889
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00143035,210.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3137.9
  maximum absolute entry in einsum_ir solution: 3137.9
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00147317
  time (eval):    0.000417441
  gflops (eval):  722.605
  gflops (total): 159.549
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00147317,0.000417441,722.605,159.549

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0034623
  gflops (total): 87.1227
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.1227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140543
  gflops (eval):  214.628
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140543,214.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3495.68
  maximum absolute entry in einsum_ir solution: 3495.68
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180421
  time (eval):    0.000422421
  gflops (eval):  714.086
  gflops (total): 135.471
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180421,0.000422421,714.086,135.471

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0034988
  gflops (total): 86.2139
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.2139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00141049
  gflops (eval):  213.858
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00141049,213.858,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3172.03
  maximum absolute entry in einsum_ir solution: 3172.03
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00144555
  time (eval):    0.000415601
  gflops (eval):  725.804
  gflops (total): 162.074
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00144555,0.000415601,725.804,162.074

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0034625
  gflops (total): 87.1177
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.1177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00137994
  gflops (eval):  218.592
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00137994,218.592,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3027.85
  maximum absolute entry in einsum_ir solution: 3027.85
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00182354
  time (eval):    0.000412431
  gflops (eval):  731.382
  gflops (total): 134.905
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00182354,0.000412431,731.382,134.905

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00350443
  gflops (total): 86.0754
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.0754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00141644
  gflops (eval):  212.96
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00141644,212.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3338.63
  maximum absolute entry in einsum_ir solution: 3338.63
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0017591
  time (eval):    0.000415321
  gflops (eval):  726.293
  gflops (total): 138.724
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0017591,0.000415321,726.293,138.724

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00349525
  gflops (total): 86.3015
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.3015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140704
  gflops (eval):  214.382
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140704,214.382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3670.39
  maximum absolute entry in einsum_ir solution: 3670.39
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00146672
  time (eval):    0.000416531
  gflops (eval):  724.183
  gflops (total): 160.172
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00146672,0.000416531,724.183,160.172

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347497
  gflops (total): 86.8051
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.8051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0012953
  gflops (eval):  232.876
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0012953,232.876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3756.77
  maximum absolute entry in einsum_ir solution: 3756.77
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176525
  time (eval):    0.000413001
  gflops (eval):  730.373
  gflops (total): 138.48
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176525,0.000413001,730.373,138.48

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00350822
  gflops (total): 85.9822
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.9822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139111
  gflops (eval):  216.838
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139111,216.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3160.49
  maximum absolute entry in einsum_ir solution: 3160.49
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00209845
  time (eval):    0.000423081
  gflops (eval):  712.972
  gflops (total): 119.627
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00209845,0.000423081,712.972,119.627

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00343156
  gflops (total): 87.9032
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140576
  gflops (eval):  214.578
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140576,214.578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3991.94
  maximum absolute entry in einsum_ir solution: 3991.94
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180354
  time (eval):    0.000497079
  gflops (eval):  606.835
  gflops (total): 131.115
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180354,0.000497079,606.835,131.115

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00354191
  gflops (total): 85.1643
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.1643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140657
  gflops (eval):  214.454
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140657,214.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3433.16
  maximum absolute entry in einsum_ir solution: 3433.16
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175768
  time (eval):    0.000416651
  gflops (eval):  723.975
  gflops (total): 138.73
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175768,0.000416651,723.975,138.73

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342182
  gflops (total): 88.1534
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,88.1534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00137009
  gflops (eval):  220.164
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00137009,220.164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3097.04
  maximum absolute entry in einsum_ir solution: 3097.04
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00179644
  time (eval):    0.000415801
  gflops (eval):  725.455
  gflops (total): 136.352
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00179644,0.000415801,725.455,136.352

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346545
  gflops (total): 87.0435
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.0435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013943
  gflops (eval):  216.341
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013943,216.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3327.6
  maximum absolute entry in einsum_ir solution: 3327.6
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0017344
  time (eval):    0.000411622
  gflops (eval):  732.82
  gflops (total): 140.56
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0017344,0.000411622,732.82,140.56

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00348397
  gflops (total): 86.5809
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.5809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138182
  gflops (eval):  218.295
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138182,218.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3760.4
  maximum absolute entry in einsum_ir solution: 3760.4
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00183836
  time (eval):    0.000420571
  gflops (eval):  717.227
  gflops (total): 133.534
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00183836,0.000420571,717.227,133.534

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342864
  gflops (total): 87.9781
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138074
  gflops (eval):  218.466
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138074,218.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3120.21
  maximum absolute entry in einsum_ir solution: 3120.21
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00163981
  time (eval):    0.000416301
  gflops (eval):  724.583
  gflops (total): 146.707
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00163981,0.000416301,724.583,146.707

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346054
  gflops (total): 87.167
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00141759
  gflops (eval):  212.787
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00141759,212.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3868.56
  maximum absolute entry in einsum_ir solution: 3868.56
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180897
  time (eval):    0.000420871
  gflops (eval):  716.716
  gflops (total): 135.276
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180897,0.000420871,716.716,135.276

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00351919
  gflops (total): 85.7144
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.7144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138771
  gflops (eval):  217.369
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138771,217.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3127.65
  maximum absolute entry in einsum_ir solution: 3127.65
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176892
  time (eval):    0.000413111
  gflops (eval):  730.179
  gflops (total): 138.24
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176892,0.000413111,730.179,138.24

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0034431
  gflops (total): 87.6086
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.6086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140356
  gflops (eval):  214.914
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140356,214.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3105.37
  maximum absolute entry in einsum_ir solution: 3105.37
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00155935
  time (eval):    0.000409381
  gflops (eval):  736.831
  gflops (total): 153.218
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00155935,0.000409381,736.831,153.218

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346968
  gflops (total): 86.9374
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.9374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140268
  gflops (eval):  215.049
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140268,215.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3959.78
  maximum absolute entry in einsum_ir solution: 3959.78
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176036
  time (eval):    0.000423951
  gflops (eval):  711.509
  gflops (total): 138.096
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176036,0.000423951,711.509,138.096

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00349094
  gflops (total): 86.408
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.408

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139975
  gflops (eval):  215.499
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139975,215.499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3454.75
  maximum absolute entry in einsum_ir solution: 3454.75
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180796
  time (eval):    0.000418621
  gflops (eval):  720.568
  gflops (total): 135.474
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180796,0.000418621,720.568,135.474

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345885
  gflops (total): 87.2096
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.2096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138695
  gflops (eval):  217.488
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138695,217.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3344.64
  maximum absolute entry in einsum_ir solution: 3344.64
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00173545
  time (eval):    0.000416641
  gflops (eval):  723.992
  gflops (total): 140.163
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00173545,0.000416641,723.992,140.163

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345491
  gflops (total): 87.3091
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.3091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013969
  gflops (eval):  215.939
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013969,215.939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3655.03
  maximum absolute entry in einsum_ir solution: 3655.03
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00179137
  time (eval):    0.000411092
  gflops (eval):  733.765
  gflops (total): 136.958
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00179137,0.000411092,733.765,136.958

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00353323
  gflops (total): 85.3738
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.3738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00142111
  gflops (eval):  212.26
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00142111,212.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2948.08
  maximum absolute entry in einsum_ir solution: 2948.08
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176251
  time (eval):    0.000415371
  gflops (eval):  726.206
  gflops (total): 138.504
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176251,0.000415371,726.206,138.504

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342643
  gflops (total): 88.0348
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,88.0348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139108
  gflops (eval):  216.842
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139108,216.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3388.46
  maximum absolute entry in einsum_ir solution: 3388.46
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176341
  time (eval):    0.000421491
  gflops (eval):  715.661
  gflops (total): 138.059
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176341,0.000421491,715.661,138.059

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00348415
  gflops (total): 86.5764
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.5764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00142739
  gflops (eval):  211.326
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00142739,211.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2846.96
  maximum absolute entry in einsum_ir solution: 2846.96
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00179537
  time (eval):    0.000413522
  gflops (eval):  729.453
  gflops (total): 136.559
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00179537,0.000413522,729.453,136.559

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00344899
  gflops (total): 87.459
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013807
  gflops (eval):  218.472
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013807,218.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4213.41
  maximum absolute entry in einsum_ir solution: 4213.41
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176296
  time (eval):    0.000411671
  gflops (eval):  732.733
  gflops (total): 138.711
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176296,0.000411671,732.733,138.711

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345905
  gflops (total): 87.2046
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.2046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139331
  gflops (eval):  216.495
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139331,216.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3642.9
  maximum absolute entry in einsum_ir solution: 3642.9
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00177666
  time (eval):    0.000414402
  gflops (eval):  727.904
  gflops (total): 137.67
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00177666,0.000414402,727.904,137.67

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342945
  gflops (total): 87.9572
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139419
  gflops (eval):  216.358
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139419,216.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3634.3
  maximum absolute entry in einsum_ir solution: 3634.31
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180013
  time (eval):    0.000419981
  gflops (eval):  718.234
  gflops (total): 135.869
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180013,0.000419981,718.234,135.869

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345981
  gflops (total): 87.1855
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.1855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013863
  gflops (eval):  217.59
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013863,217.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3155.69
  maximum absolute entry in einsum_ir solution: 3155.69
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00163222
  time (eval):    0.000414421
  gflops (eval):  727.87
  gflops (total): 147.385
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00163222,0.000414421,727.87,147.385

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346681
  gflops (total): 87.0094
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.0094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139315
  gflops (eval):  216.52
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139315,216.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3148.88
  maximum absolute entry in einsum_ir solution: 3148.88
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00177253
  time (eval):    0.000416951
  gflops (eval):  723.454
  gflops (total): 137.77
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00177253,0.000416951,723.454,137.77

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00344183
  gflops (total): 87.6409
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.6409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138961
  gflops (eval):  217.071
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138961,217.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3105.21
  maximum absolute entry in einsum_ir solution: 3105.21
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175477
  time (eval):    0.000417551
  gflops (eval):  722.414
  gflops (total): 138.858
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175477,0.000417551,722.414,138.858

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345735
  gflops (total): 87.2475
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.2475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139524
  gflops (eval):  216.195
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139524,216.195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3124.86
  maximum absolute entry in einsum_ir solution: 3124.86
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175328
  time (eval):    0.000412902
  gflops (eval):  730.548
  gflops (total): 139.252
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175328,0.000412902,730.548,139.252

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347482
  gflops (total): 86.8088
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.8088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00137921
  gflops (eval):  218.708
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00137921,218.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3252.88
  maximum absolute entry in einsum_ir solution: 3252.88
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180298
  time (eval):    0.000413061
  gflops (eval):  730.267
  gflops (total): 136.119
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180298,0.000413061,730.267,136.119

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0034642
  gflops (total): 87.075
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139116
  gflops (eval):  216.83
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139116,216.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3662.34
  maximum absolute entry in einsum_ir solution: 3662.34
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178516
  time (eval):    0.000420211
  gflops (eval):  717.841
  gflops (total): 136.777
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178516,0.000420211,717.841,136.777

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346166
  gflops (total): 87.1388
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.1388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138615
  gflops (eval):  217.614
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138615,217.614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3008.11
  maximum absolute entry in einsum_ir solution: 3008.11
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00160914
  time (eval):    0.000414441
  gflops (eval):  727.835
  gflops (total): 149.065
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00160914,0.000414441,727.835,149.065

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0034493
  gflops (total): 87.4511
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.4511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139455
  gflops (eval):  216.303
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139455,216.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3290.58
  maximum absolute entry in einsum_ir solution: 3290.58
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00174819
  time (eval):    0.000415021
  gflops (eval):  726.818
  gflops (total): 139.443
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00174819,0.000415021,726.818,139.443

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345301
  gflops (total): 87.3571
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.3571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138831
  gflops (eval):  217.275
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138831,217.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3505
  maximum absolute entry in einsum_ir solution: 3505
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178047
  time (eval):    0.000411591
  gflops (eval):  732.875
  gflops (total): 137.608
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178047,0.000411591,732.875,137.608

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00350826
  gflops (total): 85.9814
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.9814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140853
  gflops (eval):  214.156
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140853,214.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2951.28
  maximum absolute entry in einsum_ir solution: 2951.28
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00146353
  time (eval):    0.000412311
  gflops (eval):  731.595
  gflops (total): 160.805
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00146353,0.000412311,731.595,160.805

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345677
  gflops (total): 87.2621
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.2621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00128254
  gflops (eval):  235.193
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00128254,235.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3385.55
  maximum absolute entry in einsum_ir solution: 3385.55
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00183587
  time (eval):    0.000418721
  gflops (eval):  720.396
  gflops (total): 133.791
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00183587,0.000418721,720.396,133.791

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346592
  gflops (total): 87.0317
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.0317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139708
  gflops (eval):  215.911
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139708,215.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3256.12
  maximum absolute entry in einsum_ir solution: 3256.12
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176492
  time (eval):    0.000441661
  gflops (eval):  682.978
  gflops (total): 136.702
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176492,0.000441661,682.978,136.702

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00341978
  gflops (total): 88.206
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,88.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138934
  gflops (eval):  217.114
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138934,217.114,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3254.98
  maximum absolute entry in einsum_ir solution: 3254.98
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175058
  time (eval):    0.000411071
  gflops (eval):  733.802
  gflops (total): 139.544
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175058,0.000411071,733.802,139.544

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00344744
  gflops (total): 87.4983
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.4983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138913
  gflops (eval):  217.146
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138913,217.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3065.44
  maximum absolute entry in einsum_ir solution: 3065.44
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00174401
  time (eval):    0.000416442
  gflops (eval):  724.338
  gflops (total): 139.621
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00174401,0.000416442,724.338,139.621

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00343626
  gflops (total): 87.783
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.783

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138722
  gflops (eval):  217.445
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138722,217.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3317.46
  maximum absolute entry in einsum_ir solution: 3317.46
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00174756
  time (eval):    0.000411412
  gflops (eval):  733.194
  gflops (total): 139.717
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00174756,0.000411412,733.194,139.717

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00351274
  gflops (total): 85.8718
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.8718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138843
  gflops (eval):  217.256
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138843,217.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3002.98
  maximum absolute entry in einsum_ir solution: 3002.98
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0017877
  time (eval):    0.00046667
  gflops (eval):  646.377
  gflops (total): 133.804
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0017877,0.00046667,646.377,133.804

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345124
  gflops (total): 87.4019
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.4019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138153
  gflops (eval):  218.341
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138153,218.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3377.6
  maximum absolute entry in einsum_ir solution: 3377.6
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176604
  time (eval):    0.000414411
  gflops (eval):  727.888
  gflops (total): 138.34
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176604,0.000414411,727.888,138.34

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342241
  gflops (total): 88.1382
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,88.1382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140309
  gflops (eval):  214.986
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140309,214.986,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2988.71
  maximum absolute entry in einsum_ir solution: 2988.71
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178732
  time (eval):    0.000567728
  gflops (eval):  531.319
  gflops (total): 128.084
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178732,0.000567728,531.319,128.084

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00344868
  gflops (total): 87.4668
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.4668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138969
  gflops (eval):  217.059
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138969,217.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3730.02
  maximum absolute entry in einsum_ir solution: 3730.02
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00229679
  time (eval):    0.000417351
  gflops (eval):  722.76
  gflops (total): 111.138
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00229679,0.000417351,722.76,111.138

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345235
  gflops (total): 87.3739
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.3739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0014074
  gflops (eval):  214.328
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0014074,214.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3588.86
  maximum absolute entry in einsum_ir solution: 3588.86
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00179073
  time (eval):    0.000413671
  gflops (eval):  729.19
  gflops (total): 136.837
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00179073,0.000413671,729.19,136.837

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00344914
  gflops (total): 87.4552
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.4552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139526
  gflops (eval):  216.193
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139526,216.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3448.09
  maximum absolute entry in einsum_ir solution: 3448.09
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176948
  time (eval):    0.000418531
  gflops (eval):  720.723
  gflops (total): 137.862
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176948,0.000418531,720.723,137.862

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342949
  gflops (total): 87.9562
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139191
  gflops (eval):  216.713
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139191,216.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3337.64
  maximum absolute entry in einsum_ir solution: 3337.64
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00181112
  time (eval):    0.000439591
  gflops (eval):  686.194
  gflops (total): 134.022
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00181112,0.000439591,686.194,134.022

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00348945
  gflops (total): 86.4449
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.4449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00141032
  gflops (eval):  213.884
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00141032,213.884,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3519.06
  maximum absolute entry in einsum_ir solution: 3519.06
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175552
  time (eval):    0.000410651
  gflops (eval):  734.553
  gflops (total): 139.252
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175552,0.000410651,734.553,139.252

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342994
  gflops (total): 87.9447
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139808
  gflops (eval):  215.756
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139808,215.756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3251.66
  maximum absolute entry in einsum_ir solution: 3251.66
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00208473
  time (eval):    0.000416191
  gflops (eval):  724.775
  gflops (total): 120.614
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00208473,0.000416191,724.775,120.614

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00343158
  gflops (total): 87.9027
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138089
  gflops (eval):  218.442
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138089,218.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3006.12
  maximum absolute entry in einsum_ir solution: 3006.12
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178635
  time (eval):    0.000581808
  gflops (eval):  518.461
  gflops (total): 127.375
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178635,0.000581808,518.461,127.375

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347595
  gflops (total): 86.7806
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.7806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00127714
  gflops (eval):  236.187
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00127714,236.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3162.95
  maximum absolute entry in einsum_ir solution: 3162.95
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00147052
  time (eval):    0.000425921
  gflops (eval):  708.218
  gflops (total): 159.059
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00147052,0.000425921,708.218,159.059

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347916
  gflops (total): 86.7005
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.7005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140384
  gflops (eval):  214.871
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140384,214.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3182.1
  maximum absolute entry in einsum_ir solution: 3182.1
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0014813
  time (eval):    0.000419161
  gflops (eval):  719.639
  gflops (total): 158.722
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0014813,0.000419161,719.639,158.722

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347592
  gflops (total): 86.7814
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.7814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139093
  gflops (eval):  216.865
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139093,216.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2942.97
  maximum absolute entry in einsum_ir solution: 2942.97
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176449
  time (eval):    0.000423191
  gflops (eval):  712.786
  gflops (total): 137.883
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176449,0.000423191,712.786,137.883

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347599
  gflops (total): 86.7796
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.7796

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140857
  gflops (eval):  214.15
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140857,214.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3470.07
  maximum absolute entry in einsum_ir solution: 3470.07
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00185858
  time (eval):    0.000436801
  gflops (eval):  690.577
  gflops (total): 131.414
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00185858,0.000436801,690.577,131.414

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345974
  gflops (total): 87.1872
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.1872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139793
  gflops (eval):  215.78
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139793,215.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3975.86
  maximum absolute entry in einsum_ir solution: 3975.86
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178066
  time (eval):    0.000410871
  gflops (eval):  734.159
  gflops (total): 137.641
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178066,0.000410871,734.159,137.641

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347738
  gflops (total): 86.7449
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.7449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139056
  gflops (eval):  216.923
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139056,216.923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4258.1
  maximum absolute entry in einsum_ir solution: 4258.1
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178974
  time (eval):    0.000417841
  gflops (eval):  721.913
  gflops (total): 136.64
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178974,0.000417841,721.913,136.64

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346352
  gflops (total): 87.0921
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.0921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138323
  gflops (eval):  218.073
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138323,218.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3970.32
  maximum absolute entry in einsum_ir solution: 3970.32
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176222
  time (eval):    0.000410841
  gflops (eval):  734.213
  gflops (total): 138.811
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176222,0.000410841,734.213,138.811

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345318
  gflops (total): 87.3528
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.3528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00137606
  gflops (eval):  219.209
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00137606,219.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3166.96
  maximum absolute entry in einsum_ir solution: 3166.96
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00179105
  time (eval):    0.000431031
  gflops (eval):  699.822
  gflops (total): 135.749
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00179105,0.000431031,699.822,135.749

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0034574
  gflops (total): 87.2462
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.2462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00142235
  gflops (eval):  212.075
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00142235,212.075,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3064.87
  maximum absolute entry in einsum_ir solution: 3064.87
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180743
  time (eval):    0.000412461
  gflops (eval):  731.329
  gflops (total): 135.883
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180743,0.000412461,731.329,135.883

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00344815
  gflops (total): 87.4802
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.4802

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138985
  gflops (eval):  217.034
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138985,217.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3304.02
  maximum absolute entry in einsum_ir solution: 3304.02
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00179382
  time (eval):    0.000413121
  gflops (eval):  730.161
  gflops (total): 136.68
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00179382,0.000413121,730.161,136.68

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00348198
  gflops (total): 86.6304
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.6304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140067
  gflops (eval):  215.358
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140067,215.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3337.87
  maximum absolute entry in einsum_ir solution: 3337.87
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00177104
  time (eval):    0.000417791
  gflops (eval):  721.999
  gflops (total): 137.811
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00177104,0.000417791,721.999,137.811

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346784
  gflops (total): 86.9836
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.9836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138252
  gflops (eval):  218.185
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138252,218.185,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3343.24
  maximum absolute entry in einsum_ir solution: 3343.24
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180209
  time (eval):    0.000415831
  gflops (eval):  725.402
  gflops (total): 136.003
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180209,0.000415831,725.402,136.003

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00354804
  gflops (total): 85.0174
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.0174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00129462
  gflops (eval):  232.998
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00129462,232.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2964.83
  maximum absolute entry in einsum_ir solution: 2964.83
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00162803
  time (eval):    0.000416541
  gflops (eval):  724.166
  gflops (total): 147.535
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00162803,0.000416541,724.166,147.535

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00348684
  gflops (total): 86.5096
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.5096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139446
  gflops (eval):  216.317
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139446,216.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3131.21
  maximum absolute entry in einsum_ir solution: 3131.21
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178528
  time (eval):    0.000411501
  gflops (eval):  733.035
  gflops (total): 137.312
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178528,0.000411501,733.035,137.312

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00350498
  gflops (total): 86.0619
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.0619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013978
  gflops (eval):  215.8
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013978,215.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3765.27
  maximum absolute entry in einsum_ir solution: 3765.27
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00146402
  time (eval):    0.000422051
  gflops (eval):  714.712
  gflops (total): 159.933
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00146402,0.000422051,714.712,159.933

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00346766
  gflops (total): 86.9881
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.9881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013924
  gflops (eval):  216.637
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013924,216.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3088.53
  maximum absolute entry in einsum_ir solution: 3088.53
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00146572
  time (eval):    0.000421111
  gflops (eval):  716.307
  gflops (total): 159.869
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00146572,0.000421111,716.307,159.869

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00342792
  gflops (total): 87.9965
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138849
  gflops (eval):  217.247
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138849,217.247,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3187.25
  maximum absolute entry in einsum_ir solution: 3187.25
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00149419
  time (eval):    0.000426761
  gflops (eval):  706.824
  gflops (total): 157.029
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00149419,0.000426761,706.824,157.029

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347563
  gflops (total): 86.7886
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.7886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013982
  gflops (eval):  215.738
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013982,215.738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3906.29
  maximum absolute entry in einsum_ir solution: 3906.29
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175449
  time (eval):    0.000418201
  gflops (eval):  721.291
  gflops (total): 138.834
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175449,0.000418201,721.291,138.834

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00350213
  gflops (total): 86.1319
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.1319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138032
  gflops (eval):  218.532
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138032,218.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3590.27
  maximum absolute entry in einsum_ir solution: 3590.27
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00185642
  time (eval):    0.000413931
  gflops (eval):  728.732
  gflops (total): 132.863
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00185642,0.000413931,728.732,132.863

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00352671
  gflops (total): 85.5316
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.5316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.001387
  gflops (eval):  217.48
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.001387,217.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3241.31
  maximum absolute entry in einsum_ir solution: 3241.31
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175029
  time (eval):    0.000408941
  gflops (eval):  737.624
  gflops (total): 139.7
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175029,0.000408941,737.624,139.7

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00349156
  gflops (total): 86.3927
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.3927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139973
  gflops (eval):  215.502
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139973,215.502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3139.78
  maximum absolute entry in einsum_ir solution: 3139.78
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0017852
  time (eval):    0.000415761
  gflops (eval):  725.525
  gflops (total): 137.051
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0017852,0.000415761,725.525,137.051

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00354309
  gflops (total): 85.1362
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.1362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00130043
  gflops (eval):  231.957
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00130043,231.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3579.73
  maximum absolute entry in einsum_ir solution: 3579.73
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00145745
  time (eval):    0.000421321
  gflops (eval):  715.95
  gflops (total): 160.554
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00145745,0.000421321,715.95,160.554

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0034242
  gflops (total): 88.0921
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,88.0921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139089
  gflops (eval):  216.872
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139089,216.872,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3124.62
  maximum absolute entry in einsum_ir solution: 3124.62
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00173079
  time (eval):    0.000417651
  gflops (eval):  722.241
  gflops (total): 140.402
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00173079,0.000417651,722.241,140.402

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347927
  gflops (total): 86.6978
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.6978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139012
  gflops (eval):  216.992
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139012,216.992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3271.6
  maximum absolute entry in einsum_ir solution: 3271.6
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00146879
  time (eval):    0.000412261
  gflops (eval):  731.684
  gflops (total): 160.36
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00146879,0.000412261,731.684,160.36

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00347401
  gflops (total): 86.8291
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.8291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140563
  gflops (eval):  214.598
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140563,214.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3001.24
  maximum absolute entry in einsum_ir solution: 3001.24
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178847
  time (eval):    0.000418431
  gflops (eval):  720.895
  gflops (total): 136.682
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178847,0.000418431,720.895,136.682

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00349781
  gflops (total): 86.2383
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.2383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138974
  gflops (eval):  217.051
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138974,217.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3432.43
  maximum absolute entry in einsum_ir solution: 3432.43
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00180562
  time (eval):    0.000410011
  gflops (eval):  735.699
  gflops (total): 136.144
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00180562,0.000410011,735.699,136.144

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345215
  gflops (total): 87.3789
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.3789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00140701
  gflops (eval):  214.387
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00140701,214.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3550.8
  maximum absolute entry in einsum_ir solution: 3550.8
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00178967
  time (eval):    0.000435521
  gflops (eval):  692.607
  gflops (total): 135.559
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00178967,0.000435521,692.607,135.559

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00351528
  gflops (total): 85.8095
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.8095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00139184
  gflops (eval):  216.724
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00139184,216.724,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3645.69
  maximum absolute entry in einsum_ir solution: 3645.69
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00145423
  time (eval):    0.000417421
  gflops (eval):  722.639
  gflops (total): 161.165
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00145423,0.000417421,722.639,161.165

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00349919
  gflops (total): 86.2043
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.2043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0013913
  gflops (eval):  216.808
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0013913,216.808,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3319.82
  maximum absolute entry in einsum_ir solution: 3319.81
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00175747
  time (eval):    0.000419251
  gflops (eval):  719.485
  gflops (total): 138.577
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00175747,0.000419251,719.485,138.577

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00350174
  gflops (total): 86.1415
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.1415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138832
  gflops (eval):  217.273
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138832,217.273,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3549.92
  maximum absolute entry in einsum_ir solution: 3549.92
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00146932
  time (eval):    0.000410542
  gflops (eval):  734.748
  gflops (total): 160.461
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00146932,0.000410542,734.748,160.461

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00351164
  gflops (total): 85.8984
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.8984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00137687
  gflops (eval):  219.08
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00137687,219.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3803.61
  maximum absolute entry in einsum_ir solution: 3803.61
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00176902
  time (eval):    0.000415701
  gflops (eval):  725.629
  gflops (total): 138.07
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00176902,0.000415701,725.629,138.07

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00349022
  gflops (total): 86.4258
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.4258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00138193
  gflops (eval):  218.278
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00138193,218.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3082.12
  maximum absolute entry in einsum_ir solution: 3082.12
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00148467
  time (eval):    0.000415211
  gflops (eval):  726.486
  gflops (total): 158.77
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00148467,0.000415211,726.486,158.77

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00345958
  gflops (total): 87.1913
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.1913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00137563
  gflops (eval):  219.278
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00137563,219.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3368.73
  maximum absolute entry in einsum_ir solution: 3368.73
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
