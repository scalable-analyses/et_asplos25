parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171807
  time (eval):    0.00206829
  gflops (eval):  754.924
  gflops (total): 412.375
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171807,0.00206829,754.924,412.375

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00609466
  gflops (total): 256.192
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,256.192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00287796
  gflops (eval):  542.537
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00287796,542.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.67971e+08
  maximum absolute entry in einsum_ir solution: 8.67971e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00174974
  time (eval):    0.00211249
  gflops (eval):  739.129
  gflops (total): 404.275
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00174974,0.00211249,739.129,404.275

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00606421
  gflops (total): 257.478
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,257.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00284798
  gflops (eval):  548.248
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00284798,548.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.69931e+08
  maximum absolute entry in einsum_ir solution: 7.69931e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00176287
  time (eval):    0.00209482
  gflops (eval):  745.363
  gflops (total): 404.75
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00176287,0.00209482,745.363,404.75

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00437649
  gflops (total): 356.77
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,356.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0023199
  gflops (eval):  673.045
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0023199,673.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.12609e+08
  maximum absolute entry in einsum_ir solution: 7.12609e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00175787
  time (eval):    0.00207481
  gflops (eval):  752.552
  gflops (total): 407.391
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00175787,0.00207481,752.552,407.391

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0043341
  gflops (total): 360.259
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,360.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00274325
  gflops (eval):  569.18
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00274325,569.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.99813e+08
  maximum absolute entry in einsum_ir solution: 6.99813e+08
  maximum element-wise difference:              583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00141691
  time (eval):    0.00209808
  gflops (eval):  744.205
  gflops (total): 444.212
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00141691,0.00209808,744.205,444.212

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00644466
  gflops (total): 242.278
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,242.278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0028414
  gflops (eval):  549.517
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0028414,549.517,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.24582e+08
  maximum absolute entry in einsum_ir solution: 7.24582e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171927
  time (eval):    0.00206065
  gflops (eval):  757.723
  gflops (total): 413.077
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171927,0.00206065,757.723,413.077

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00602178
  gflops (total): 259.292
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,259.292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00272936
  gflops (eval):  572.077
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00272936,572.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.14635e+08
  maximum absolute entry in einsum_ir solution: 8.14635e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144076
  time (eval):    0.00213025
  gflops (eval):  732.967
  gflops (total): 437.244
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144076,0.00213025,732.967,437.244

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00615986
  gflops (total): 253.48
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,253.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00284964
  gflops (eval):  547.929
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00284964,547.929,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.30681e+08
  maximum absolute entry in einsum_ir solution: 7.30681e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00146007
  time (eval):    0.0020945
  gflops (eval):  745.477
  gflops (total): 439.266
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00146007,0.0020945,745.477,439.266

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00464062
  gflops (total): 336.463
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,336.463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00242388
  gflops (eval):  644.174
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00242388,644.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.11933e+08
  maximum absolute entry in einsum_ir solution: 8.11933e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0015417
  time (eval):    0.00208056
  gflops (eval):  750.472
  gflops (total): 431.057
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0015417,0.00208056,750.472,431.057

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00645951
  gflops (total): 241.721
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00282052
  gflops (eval):  553.585
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00282052,553.585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.42892e+08
  maximum absolute entry in einsum_ir solution: 7.42892e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00192741
  time (eval):    0.0021167
  gflops (eval):  737.659
  gflops (total): 386.093
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00192741,0.0021167,737.659,386.093

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00466209
  gflops (total): 334.914
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,334.914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00242849
  gflops (eval):  642.95
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00242849,642.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.81553e+08
  maximum absolute entry in einsum_ir solution: 7.81553e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00140376
  time (eval):    0.00210726
  gflops (eval):  740.963
  gflops (total): 444.714
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00140376,0.00210726,740.963,444.714

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00639467
  gflops (total): 244.172
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,244.172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00290748
  gflops (eval):  537.029
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00290748,537.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.27193e+08
  maximum absolute entry in einsum_ir solution: 7.27193e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00176373
  time (eval):    0.00208309
  gflops (eval):  749.561
  gflops (total): 405.895
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00176373,0.00208309,749.561,405.895

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00638734
  gflops (total): 244.452
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,244.452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00285384
  gflops (eval):  547.122
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00285384,547.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.66939e+08
  maximum absolute entry in einsum_ir solution: 7.66939e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00155921
  time (eval):    0.00203601
  gflops (eval):  766.893
  gflops (total): 434.299
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00155921,0.00203601,766.893,434.299

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00655617
  gflops (total): 238.157
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,238.157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00304691
  gflops (eval):  512.454
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00304691,512.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.02833e+08
  maximum absolute entry in einsum_ir solution: 7.02833e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171787
  time (eval):    0.00210006
  gflops (eval):  743.504
  gflops (total): 408.966
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171787,0.00210006,743.504,408.966

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00435483
  gflops (total): 358.544
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,358.544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231787
  gflops (eval):  673.637
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231787,673.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.33486e+08
  maximum absolute entry in einsum_ir solution: 8.33486e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.001731
  time (eval):    0.00210813
  gflops (eval):  740.658
  gflops (total): 406.707
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.001731,0.00210813,740.658,406.707

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00634647
  gflops (total): 246.027
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,246.027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00285732
  gflops (eval):  546.456
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00285732,546.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.89723e+08
  maximum absolute entry in einsum_ir solution: 7.89723e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00177265
  time (eval):    0.00207217
  gflops (eval):  753.511
  gflops (total): 406.105
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00177265,0.00207217,753.511,406.105

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00612756
  gflops (total): 254.816
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,254.816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00277318
  gflops (eval):  563.037
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00277318,563.037,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.46754e+08
  maximum absolute entry in einsum_ir solution: 7.46754e+08
  maximum element-wise difference:              424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0016096
  time (eval):    0.00206205
  gflops (eval):  757.209
  gflops (total): 425.259
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0016096,0.00206205,757.209,425.259

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00430989
  gflops (total): 362.283
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,362.283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00239984
  gflops (eval):  650.626
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00239984,650.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.74435e+08
  maximum absolute entry in einsum_ir solution: 6.74434e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00153591
  time (eval):    0.00210466
  gflops (eval):  741.879
  gflops (total): 428.889
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00153591,0.00210466,741.879,428.889

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00424144
  gflops (total): 368.129
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,368.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00271261
  gflops (eval):  575.609
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00271261,575.609,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.30615e+08
  maximum absolute entry in einsum_ir solution: 7.30615e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00180453
  time (eval):    0.00208263
  gflops (eval):  749.726
  gflops (total): 401.681
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00180453,0.00208263,749.726,401.681

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00632135
  gflops (total): 247.004
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,247.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00281074
  gflops (eval):  555.512
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00281074,555.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.32448e+08
  maximum absolute entry in einsum_ir solution: 7.32448e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00141615
  time (eval):    0.00208002
  gflops (eval):  750.667
  gflops (total): 446.603
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00141615,0.00208002,750.667,446.603

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00622455
  gflops (total): 250.845
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,250.845

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00286211
  gflops (eval):  545.541
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00286211,545.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.79555e+08
  maximum absolute entry in einsum_ir solution: 8.79555e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00154225
  time (eval):    0.00213122
  gflops (eval):  732.633
  gflops (total): 425.048
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00154225,0.00213122,732.633,425.048

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00430882
  gflops (total): 362.373
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,362.373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00275201
  gflops (eval):  567.367
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00275201,567.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.67346e+08
  maximum absolute entry in einsum_ir solution: 7.67346e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171257
  time (eval):    0.00209764
  gflops (eval):  744.361
  gflops (total): 409.795
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171257,0.00209764,744.361,409.795

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00635263
  gflops (total): 245.788
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,245.788

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00288001
  gflops (eval):  542.151
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00288001,542.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.94157e+08
  maximum absolute entry in einsum_ir solution: 6.94157e+08
  maximum element-wise difference:              560
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142682
  time (eval):    0.00208756
  gflops (eval):  747.956
  gflops (total): 444.289
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142682,0.00208756,747.956,444.289

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00621074
  gflops (total): 251.403
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,251.403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00280378
  gflops (eval):  556.89
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00280378,556.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.2946e+08
  maximum absolute entry in einsum_ir solution: 7.2946e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00172039
  time (eval):    0.0020833
  gflops (eval):  749.485
  gflops (total): 410.496
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00172039,0.0020833,749.485,410.496

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00433834
  gflops (total): 359.907
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,359.907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232892
  gflops (eval):  670.438
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232892,670.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43166e+08
  maximum absolute entry in einsum_ir solution: 7.43166e+08
  maximum element-wise difference:              428
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00176349
  time (eval):    0.00209158
  gflops (eval):  746.518
  gflops (total): 405.025
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00176349,0.00209158,746.518,405.025

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00433057
  gflops (total): 360.553
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,360.553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00230547
  gflops (eval):  677.259
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00230547,677.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.68898e+08
  maximum absolute entry in einsum_ir solution: 7.68898e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171386
  time (eval):    0.00208144
  gflops (eval):  750.155
  gflops (total): 411.403
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171386,0.00208144,750.155,411.403

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00632906
  gflops (total): 246.703
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,246.703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00288336
  gflops (eval):  541.521
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00288336,541.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.66427e+08
  maximum absolute entry in einsum_ir solution: 8.66427e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014333
  time (eval):    0.00210606
  gflops (eval):  741.385
  gflops (total): 441.153
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014333,0.00210606,741.385,441.153

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0042817
  gflops (total): 364.668
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,364.668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231471
  gflops (eval):  674.554
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231471,674.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.89014e+08
  maximum absolute entry in einsum_ir solution: 7.89014e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00168483
  time (eval):    0.00210295
  gflops (eval):  742.482
  gflops (total): 412.221
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00168483,0.00210295,742.482,412.221

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0064067
  gflops (total): 243.714
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,243.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00286476
  gflops (eval):  545.037
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00286476,545.037,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.12268e+08
  maximum absolute entry in einsum_ir solution: 8.12268e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00173058
  time (eval):    0.00209206
  gflops (eval):  746.346
  gflops (total): 408.461
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00173058,0.00209206,746.346,408.461

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00435408
  gflops (total): 358.606
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,358.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0023039
  gflops (eval):  677.72
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0023039,677.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.81802e+08
  maximum absolute entry in einsum_ir solution: 6.81802e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00157415
  time (eval):    0.00210191
  gflops (eval):  742.849
  gflops (total): 424.749
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00157415,0.00210191,742.849,424.749

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00441293
  gflops (total): 353.824
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,353.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232461
  gflops (eval):  671.682
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232461,671.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.68252e+08
  maximum absolute entry in einsum_ir solution: 7.68252e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171211
  time (eval):    0.00206812
  gflops (eval):  754.986
  gflops (total): 413.043
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171211,0.00206812,754.986,413.043

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00434844
  gflops (total): 359.071
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,359.071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0023228
  gflops (eval):  672.206
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0023228,672.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.84548e+08
  maximum absolute entry in einsum_ir solution: 6.84548e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00176161
  time (eval):    0.00207214
  gflops (eval):  753.522
  gflops (total): 407.277
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00176161,0.00207214,753.522,407.277

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00641033
  gflops (total): 243.576
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,243.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00290084
  gflops (eval):  538.258
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00290084,538.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.6226e+08
  maximum absolute entry in einsum_ir solution: 8.6226e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143117
  time (eval):    0.00208615
  gflops (eval):  748.461
  gflops (total): 443.918
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143117,0.00208615,748.461,443.918

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0043445
  gflops (total): 359.397
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,359.397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232471
  gflops (eval):  671.653
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232471,671.653,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.40116e+08
  maximum absolute entry in einsum_ir solution: 7.40115e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00156123
  time (eval):    0.00206476
  gflops (eval):  756.215
  gflops (total): 430.614
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00156123,0.00206476,756.215,430.614

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00438956
  gflops (total): 355.708
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,355.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232366
  gflops (eval):  671.959
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232366,671.959,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.81118e+08
  maximum absolute entry in einsum_ir solution: 7.81118e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014955
  time (eval):    0.00212132
  gflops (eval):  736.052
  gflops (total): 431.706
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014955,0.00212132,736.052,431.706

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00430415
  gflops (total): 362.766
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,362.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231294
  gflops (eval):  675.071
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231294,675.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.20867e+08
  maximum absolute entry in einsum_ir solution: 7.20867e+08
  maximum element-wise difference:              412
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00169391
  time (eval):    0.00210514
  gflops (eval):  741.709
  gflops (total): 410.998
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00169391,0.00210514,741.709,410.998

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00637547
  gflops (total): 244.907
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,244.907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00288805
  gflops (eval):  540.642
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00288805,540.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.60782e+08
  maximum absolute entry in einsum_ir solution: 7.60782e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00159582
  time (eval):    0.00209637
  gflops (eval):  744.812
  gflops (total): 422.893
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00159582,0.00209637,744.812,422.893

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00647753
  gflops (total): 241.049
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00289612
  gflops (eval):  539.135
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00289612,539.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.29244e+08
  maximum absolute entry in einsum_ir solution: 7.29244e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00167016
  time (eval):    0.00213902
  gflops (eval):  729.962
  gflops (total): 409.905
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00167016,0.00213902,729.962,409.905

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00637425
  gflops (total): 244.954
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,244.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00281751
  gflops (eval):  554.177
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00281751,554.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.91777e+08
  maximum absolute entry in einsum_ir solution: 7.91777e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145539
  time (eval):    0.00207767
  gflops (eval):  751.516
  gflops (total): 441.94
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145539,0.00207767,751.516,441.94

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00614538
  gflops (total): 254.077
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,254.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00279094
  gflops (eval):  559.453
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00279094,559.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.62935e+08
  maximum absolute entry in einsum_ir solution: 8.62935e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00170059
  time (eval):    0.0020767
  gflops (eval):  751.867
  gflops (total): 413.366
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00170059,0.0020767,751.867,413.366

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00639477
  gflops (total): 244.168
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,244.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0028638
  gflops (eval):  545.219
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0028638,545.219,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.81192e+08
  maximum absolute entry in einsum_ir solution: 7.81192e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00159624
  time (eval):    0.00210907
  gflops (eval):  740.327
  gflops (total): 421.396
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00159624,0.00210907,740.327,421.396

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00654714
  gflops (total): 238.486
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,238.486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00290235
  gflops (eval):  537.978
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00290235,537.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.56408e+08
  maximum absolute entry in einsum_ir solution: 8.56408e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00173168
  time (eval):    0.00206334
  gflops (eval):  756.735
  gflops (total): 411.434
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00173168,0.00206334,756.735,411.434

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00658378
  gflops (total): 237.159
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,237.159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00288027
  gflops (eval):  542.102
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00288027,542.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.73698e+08
  maximum absolute entry in einsum_ir solution: 7.73698e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00162356
  time (eval):    0.00207371
  gflops (eval):  752.951
  gflops (total): 422.312
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00162356,0.00207371,752.951,422.312

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00441356
  gflops (total): 353.773
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,353.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231284
  gflops (eval):  675.1
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231284,675.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.73206e+08
  maximum absolute entry in einsum_ir solution: 7.73206e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0016145
  time (eval):    0.00208443
  gflops (eval):  749.078
  gflops (total): 422.123
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0016145,0.00208443,749.078,422.123

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00439303
  gflops (total): 355.427
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,355.427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00271591
  gflops (eval):  574.909
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00271591,574.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.15407e+08
  maximum absolute entry in einsum_ir solution: 7.15407e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00173348
  time (eval):    0.00209843
  gflops (eval):  744.082
  gflops (total): 407.473
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00173348,0.00209843,744.082,407.473

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00444332
  gflops (total): 351.404
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,351.404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00233258
  gflops (eval):  669.387
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00233258,669.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.2575e+08
  maximum absolute entry in einsum_ir solution: 7.2575e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00206372
  time (eval):    0.0020609
  gflops (eval):  757.631
  gflops (total): 378.556
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00206372,0.0020609,757.631,378.556

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00618337
  gflops (total): 252.516
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,252.516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00277454
  gflops (eval):  562.76
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00277454,562.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.97383e+08
  maximum absolute entry in einsum_ir solution: 7.97383e+08
  maximum element-wise difference:              496
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00172156
  time (eval):    0.0020924
  gflops (eval):  746.226
  gflops (total): 409.391
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00172156,0.0020924,746.226,409.391

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00646775
  gflops (total): 241.413
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00294779
  gflops (eval):  529.686
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00294779,529.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.45676e+08
  maximum absolute entry in einsum_ir solution: 7.45676e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00154123
  time (eval):    0.00211383
  gflops (eval):  738.66
  gflops (total): 427.189
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00154123,0.00211383,738.66,427.189

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00655747
  gflops (total): 238.11
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,238.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00286084
  gflops (eval):  545.784
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00286084,545.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.5554e+08
  maximum absolute entry in einsum_ir solution: 7.5554e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00159506
  time (eval):    0.00211069
  gflops (eval):  739.759
  gflops (total): 421.346
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00159506,0.00211069,739.759,421.346

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00660279
  gflops (total): 236.476
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,236.476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00289982
  gflops (eval):  538.447
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00289982,538.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.45337e+08
  maximum absolute entry in einsum_ir solution: 7.45337e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00175158
  time (eval):    0.00210618
  gflops (eval):  741.343
  gflops (total): 404.743
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00175158,0.00210618,741.343,404.743

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00623311
  gflops (total): 250.501
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,250.501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00284223
  gflops (eval):  549.357
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00284223,549.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.64816e+08
  maximum absolute entry in einsum_ir solution: 7.64816e+08
  maximum element-wise difference:              392
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171762
  time (eval):    0.00220207
  gflops (eval):  709.061
  gflops (total): 398.348
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171762,0.00220207,709.061,398.348

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00632832
  gflops (total): 246.732
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,246.732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0029236
  gflops (eval):  534.068
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0029236,534.068,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.06818e+08
  maximum absolute entry in einsum_ir solution: 7.06817e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171383
  time (eval):    0.00209512
  gflops (eval):  745.257
  gflops (total): 409.929
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171383,0.00209512,745.257,409.929

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0067164
  gflops (total): 232.476
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,232.476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00287587
  gflops (eval):  542.931
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00287587,542.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.57766e+08
  maximum absolute entry in einsum_ir solution: 8.57766e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00158752
  time (eval):    0.00212101
  gflops (eval):  736.16
  gflops (total): 421.03
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00158752,0.00212101,736.16,421.03

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00440399
  gflops (total): 354.542
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,354.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232656
  gflops (eval):  671.119
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232656,671.119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43147e+08
  maximum absolute entry in einsum_ir solution: 7.43147e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00180008
  time (eval):    0.00209967
  gflops (eval):  743.642
  gflops (total): 400.385
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00180008,0.00209967,743.642,400.385

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00655678
  gflops (total): 238.135
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,238.135

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00286739
  gflops (eval):  544.537
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00286739,544.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.52534e+08
  maximum absolute entry in einsum_ir solution: 7.52534e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00173741
  time (eval):    0.00210893
  gflops (eval):  740.377
  gflops (total): 405.944
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00173741,0.00210893,740.377,405.944

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00658558
  gflops (total): 237.094
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,237.094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0029042
  gflops (eval):  537.635
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0029042,537.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.50997e+08
  maximum absolute entry in einsum_ir solution: 7.50997e+08
  maximum element-wise difference:              472
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00148419
  time (eval):    0.00210099
  gflops (eval):  743.175
  gflops (total): 435.515
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00148419,0.00210099,743.175,435.515

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00444852
  gflops (total): 350.993
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,350.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232482
  gflops (eval):  671.621
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232482,671.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43459e+08
  maximum absolute entry in einsum_ir solution: 7.43459e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00170921
  time (eval):    0.00210429
  gflops (eval):  742.009
  gflops (total): 409.441
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00170921,0.00210429,742.009,409.441

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00673708
  gflops (total): 231.762
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,231.762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00290707
  gflops (eval):  537.105
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00290707,537.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.33854e+08
  maximum absolute entry in einsum_ir solution: 7.33855e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145103
  time (eval):    0.00208345
  gflops (eval):  749.431
  gflops (total): 441.763
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145103,0.00208345,749.431,441.763

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00651745
  gflops (total): 239.572
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00294474
  gflops (eval):  530.234
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00294474,530.234,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.12001e+08
  maximum absolute entry in einsum_ir solution: 7.12001e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00170944
  time (eval):    0.00209745
  gflops (eval):  744.429
  gflops (total): 410.151
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00170944,0.00209745,744.429,410.151

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00476452
  gflops (total): 327.714
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,327.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00241701
  gflops (eval):  646.004
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00241701,646.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.39443e+08
  maximum absolute entry in einsum_ir solution: 8.39443e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142081
  time (eval):    0.00209731
  gflops (eval):  744.478
  gflops (total): 443.817
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142081,0.00209731,744.478,443.817

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00646355
  gflops (total): 241.57
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00287152
  gflops (eval):  543.753
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00287152,543.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.99829e+08
  maximum absolute entry in einsum_ir solution: 7.99829e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00165386
  time (eval):    0.00205284
  gflops (eval):  760.606
  gflops (total): 421.238
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00165386,0.00205284,760.606,421.238

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00648054
  gflops (total): 240.937
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,240.937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00293093
  gflops (eval):  532.732
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00293093,532.732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.7749e+08
  maximum absolute entry in einsum_ir solution: 8.7749e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00168257
  time (eval):    0.00207608
  gflops (eval):  752.091
  gflops (total): 415.416
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00168257,0.00207608,752.091,415.416

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00641609
  gflops (total): 243.357
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,243.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00292058
  gflops (eval):  534.62
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00292058,534.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.05666e+08
  maximum absolute entry in einsum_ir solution: 7.05666e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0017945
  time (eval):    0.00209448
  gflops (eval):  745.484
  gflops (total): 401.493
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0017945,0.00209448,745.484,401.493

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00440853
  gflops (total): 354.177
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,354.177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231257
  gflops (eval):  675.179
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231257,675.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.35678e+08
  maximum absolute entry in einsum_ir solution: 7.35678e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142557
  time (eval):    0.00207046
  gflops (eval):  754.133
  gflops (total): 446.621
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142557,0.00207046,754.133,446.621

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00654087
  gflops (total): 238.715
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,238.715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00291195
  gflops (eval):  536.204
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00291195,536.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.24231e+08
  maximum absolute entry in einsum_ir solution: 7.24231e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142452
  time (eval):    0.00209425
  gflops (eval):  745.566
  gflops (total): 443.735
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142452,0.00209425,745.566,443.735

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00440947
  gflops (total): 354.102
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,354.102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00234871
  gflops (eval):  664.791
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00234871,664.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.22464e+08
  maximum absolute entry in einsum_ir solution: 7.22464e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142744
  time (eval):    0.00209609
  gflops (eval):  744.912
  gflops (total): 443.135
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142744,0.00209609,744.912,443.135

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00435406
  gflops (total): 358.608
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,358.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231908
  gflops (eval):  673.284
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231908,673.284,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.71782e+08
  maximum absolute entry in einsum_ir solution: 8.71782e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143217
  time (eval):    0.00209432
  gflops (eval):  745.541
  gflops (total): 442.764
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143217,0.00209432,745.541,442.764

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00450637
  gflops (total): 346.487
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,346.487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232441
  gflops (eval):  671.74
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232441,671.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.00156e+08
  maximum absolute entry in einsum_ir solution: 7.00157e+08
  maximum element-wise difference:              424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014676
  time (eval):    0.00212774
  gflops (eval):  733.832
  gflops (total): 434.285
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014676,0.00212774,733.832,434.285

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00436711
  gflops (total): 357.536
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,357.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232514
  gflops (eval):  671.529
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232514,671.529,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.59357e+08
  maximum absolute entry in einsum_ir solution: 8.59357e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0020268
  time (eval):    0.00211495
  gflops (eval):  738.269
  gflops (total): 376.991
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0020268,0.00211495,738.269,376.991

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0061809
  gflops (total): 252.617
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,252.617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00280616
  gflops (eval):  556.419
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00280616,556.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.55863e+08
  maximum absolute entry in einsum_ir solution: 7.55863e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00176505
  time (eval):    0.00209993
  gflops (eval):  743.55
  gflops (total): 403.986
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00176505,0.00209993,743.55,403.986

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00464752
  gflops (total): 335.964
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,335.964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00242148
  gflops (eval):  644.813
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00242148,644.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.4675e+08
  maximum absolute entry in einsum_ir solution: 7.4675e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00170886
  time (eval):    0.00208545
  gflops (eval):  748.712
  gflops (total): 411.511
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00170886,0.00208545,748.712,411.511

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00442095
  gflops (total): 353.182
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,353.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00233108
  gflops (eval):  669.817
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00233108,669.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.16013e+08
  maximum absolute entry in einsum_ir solution: 8.16013e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00187091
  time (eval):    0.00206079
  gflops (eval):  757.671
  gflops (total): 397.131
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00187091,0.00206079,757.671,397.131

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00656409
  gflops (total): 237.87
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,237.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00290949
  gflops (eval):  536.657
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00290949,536.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.30525e+08
  maximum absolute entry in einsum_ir solution: 7.30525e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00175613
  time (eval):    0.00210034
  gflops (eval):  743.404
  gflops (total): 404.878
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00175613,0.00210034,743.404,404.878

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0064991
  gflops (total): 240.249
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,240.249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00289148
  gflops (eval):  540
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00289148,540,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.46783e+08
  maximum absolute entry in einsum_ir solution: 7.46783e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00178195
  time (eval):    0.00208749
  gflops (eval):  747.981
  gflops (total): 403.521
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00178195,0.00208749,747.981,403.521

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00643209
  gflops (total): 242.752
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,242.752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00286685
  gflops (eval):  544.639
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00286685,544.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.19326e+08
  maximum absolute entry in einsum_ir solution: 7.19325e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00155502
  time (eval):    0.00212497
  gflops (eval):  734.788
  gflops (total): 424.295
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00155502,0.00212497,734.788,424.295

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00651612
  gflops (total): 239.621
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00289482
  gflops (eval):  539.378
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00289482,539.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.4198e+08
  maximum absolute entry in einsum_ir solution: 7.4198e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00141424
  time (eval):    0.00210161
  gflops (eval):  742.955
  gflops (total): 444.103
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00141424,0.00210161,742.955,444.103

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00657511
  gflops (total): 237.472
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,237.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00289276
  gflops (eval):  539.762
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00289276,539.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.96545e+08
  maximum absolute entry in einsum_ir solution: 8.96545e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00172278
  time (eval):    0.00212455
  gflops (eval):  734.933
  gflops (total): 405.84
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00172278,0.00212455,734.933,405.84

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00629749
  gflops (total): 247.94
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,247.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00282763
  gflops (eval):  552.194
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00282763,552.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.00019e+08
  maximum absolute entry in einsum_ir solution: 8.00019e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171228
  time (eval):    0.00209287
  gflops (eval):  746.058
  gflops (total): 410.339
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171228,0.00209287,746.058,410.339

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00623742
  gflops (total): 250.328
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,250.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00285591
  gflops (eval):  546.725
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00285591,546.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.45703e+08
  maximum absolute entry in einsum_ir solution: 8.45703e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00158906
  time (eval):    0.00209525
  gflops (eval):  745.211
  gflops (total): 423.798
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00158906,0.00209525,745.211,423.798

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0044429
  gflops (total): 351.437
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,351.437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00234156
  gflops (eval):  666.82
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00234156,666.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.42928e+08
  maximum absolute entry in einsum_ir solution: 8.42928e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171049
  time (eval):    0.00207379
  gflops (eval):  752.922
  gflops (total): 412.602
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171049,0.00207379,752.922,412.602

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00650648
  gflops (total): 239.976
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00291634
  gflops (eval):  535.397
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00291634,535.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.02786e+08
  maximum absolute entry in einsum_ir solution: 8.02786e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143061
  time (eval):    0.002064
  gflops (eval):  756.493
  gflops (total): 446.803
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143061,0.002064,756.493,446.803

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00457557
  gflops (total): 341.247
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,341.247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231035
  gflops (eval):  675.828
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231035,675.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.98963e+08
  maximum absolute entry in einsum_ir solution: 7.98964e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00169809
  time (eval):    0.00210832
  gflops (eval):  740.591
  gflops (total): 410.203
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00169809,0.00210832,740.591,410.203

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00710796
  gflops (total): 219.669
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,219.669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00312086
  gflops (eval):  500.312
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00312086,500.312,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.17778e+08
  maximum absolute entry in einsum_ir solution: 8.17778e+08
  maximum element-wise difference:              396
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0017503
  time (eval):    0.00209845
  gflops (eval):  744.074
  gflops (total): 405.69
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0017503,0.00209845,744.074,405.69

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00648444
  gflops (total): 240.792
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,240.792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00290848
  gflops (eval):  536.844
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00290848,536.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.78872e+08
  maximum absolute entry in einsum_ir solution: 7.78872e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00160977
  time (eval):    0.00207838
  gflops (eval):  751.259
  gflops (total): 423.356
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00160977,0.00207838,751.259,423.356

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00454225
  gflops (total): 343.751
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,343.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00233383
  gflops (eval):  669.029
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00233383,669.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.45109e+08
  maximum absolute entry in einsum_ir solution: 8.45109e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00172543
  time (eval):    0.00212602
  gflops (eval):  734.425
  gflops (total): 405.406
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00172543,0.00212602,734.425,405.406

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00652202
  gflops (total): 239.405
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00288523
  gflops (eval):  541.17
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00288523,541.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      9.13361e+08
  maximum absolute entry in einsum_ir solution: 9.13361e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0017618
  time (eval):    0.00210694
  gflops (eval):  741.076
  gflops (total): 403.594
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0017618,0.00210694,741.076,403.594

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00656943
  gflops (total): 237.677
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,237.677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0028743
  gflops (eval):  543.228
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0028743,543.228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43155e+08
  maximum absolute entry in einsum_ir solution: 7.43156e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00172855
  time (eval):    0.00205739
  gflops (eval):  758.923
  gflops (total): 412.421
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00172855,0.00205739,758.923,412.421

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00442746
  gflops (total): 352.663
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,352.663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00234087
  gflops (eval):  667.016
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00234087,667.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.92405e+08
  maximum absolute entry in einsum_ir solution: 7.92405e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00174569
  time (eval):    0.00209033
  gflops (eval):  746.964
  gflops (total): 407.036
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00174569,0.00209033,746.964,407.036

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00660868
  gflops (total): 236.265
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,236.265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0028893
  gflops (eval):  540.408
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0028893,540.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.87793e+08
  maximum absolute entry in einsum_ir solution: 8.87794e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00165907
  time (eval):    0.00210297
  gflops (eval):  742.474
  gflops (total): 415.041
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00165907,0.00210297,742.474,415.041

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0044399
  gflops (total): 351.675
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,351.675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00232653
  gflops (eval):  671.13
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00232653,671.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.88801e+08
  maximum absolute entry in einsum_ir solution: 6.88801e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00174464
  time (eval):    0.00210484
  gflops (eval):  741.815
  gflops (total): 405.613
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00174464,0.00210484,741.815,405.613

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0064294
  gflops (total): 242.853
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,242.853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00283239
  gflops (eval):  551.265
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00283239,551.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.46676e+08
  maximum absolute entry in einsum_ir solution: 7.46676e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00173804
  time (eval):    0.00209251
  gflops (eval):  746.186
  gflops (total): 407.618
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00173804,0.00209251,746.186,407.618

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00436283
  gflops (total): 357.887
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,357.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231478
  gflops (eval):  674.536
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231478,674.536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.11957e+08
  maximum absolute entry in einsum_ir solution: 8.11957e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00170974
  time (eval):    0.00207275
  gflops (eval):  753.3
  gflops (total): 412.797
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00170974,0.00207275,753.3,412.797

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00634916
  gflops (total): 245.922
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,245.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00279632
  gflops (eval):  558.376
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00279632,558.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.47181e+08
  maximum absolute entry in einsum_ir solution: 7.47182e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00174753
  time (eval):    0.00208048
  gflops (eval):  750.501
  gflops (total): 407.888
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00174753,0.00208048,750.501,407.888

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00445276
  gflops (total): 350.659
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,350.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00233368
  gflops (eval):  669.071
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00233368,669.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.68062e+08
  maximum absolute entry in einsum_ir solution: 7.68062e+08
  maximum element-wise difference:              472
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00175919
  time (eval):    0.00207543
  gflops (eval):  752.327
  gflops (total): 407.185
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00175919,0.00207543,752.327,407.185

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00646631
  gflops (total): 241.467
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00296437
  gflops (eval):  526.722
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00296437,526.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.95753e+08
  maximum absolute entry in einsum_ir solution: 7.95753e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00196278
  time (eval):    0.00212547
  gflops (eval):  734.615
  gflops (total): 381.924
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00196278,0.00212547,734.615,381.924

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00646427
  gflops (total): 241.543
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00293366
  gflops (eval):  532.236
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00293366,532.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.3588e+08
  maximum absolute entry in einsum_ir solution: 7.35881e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0017119
  time (eval):    0.00207923
  gflops (eval):  750.952
  gflops (total): 411.856
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0017119,0.00207923,750.952,411.856

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00440758
  gflops (total): 354.253
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,354.253

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00231583
  gflops (eval):  674.229
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00231583,674.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.76782e+08
  maximum absolute entry in einsum_ir solution: 7.76782e+08
  maximum element-wise difference:              440
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00157157
  time (eval):    0.00210377
  gflops (eval):  742.193
  gflops (total): 424.832
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00157157,0.00210377,742.193,424.832

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00441282
  gflops (total): 353.833
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,353.833

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00233497
  gflops (eval):  668.702
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00233497,668.702,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.88452e+08
  maximum absolute entry in einsum_ir solution: 8.88452e+08
  maximum element-wise difference:              388
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00172083
  time (eval):    0.00208118
  gflops (eval):  750.248
  gflops (total): 410.678
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00172083,0.00208118,750.248,410.678

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00663775
  gflops (total): 235.23
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,235.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00288731
  gflops (eval):  540.78
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00288731,540.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.26339e+08
  maximum absolute entry in einsum_ir solution: 7.26339e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0017347
  time (eval):    0.00208625
  gflops (eval):  748.425
  gflops (total): 408.643
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0017347,0.00208625,748.425,408.643

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00646606
  gflops (total): 241.476
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00287838
  gflops (eval):  542.458
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00287838,542.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.68744e+08
  maximum absolute entry in einsum_ir solution: 7.68744e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00177057
  time (eval):    0.0020745
  gflops (eval):  752.664
  gflops (total): 406.078
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00177057,0.0020745,752.664,406.078

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00673723
  gflops (total): 231.757
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,231.757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00290474
  gflops (eval):  537.535
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00290474,537.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.79054e+08
  maximum absolute entry in einsum_ir solution: 7.79055e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
